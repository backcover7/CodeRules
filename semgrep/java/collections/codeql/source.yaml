rules:
  - id: ${node} 
    options:
      symbolic_propagation: true
    pattern-either:
      - pattern-either:        # remote
        - pattern: com.rabbitmq.client.impl.Frame.fromBodyFragment(...). ... .getInputStream(...)
        - pattern: (com.rabbitmq.client.impl.Frame $A).getInputStream(...)
      - pattern-either:        # remote
        - pattern: com.rabbitmq.client.impl.Frame.fromBodyFragment(...). ... .getPayload(...)
        - pattern: (com.rabbitmq.client.impl.Frame $A).getPayload(...)
      - pattern-either:        # remote
        - pattern: (com.rabbitmq.client.impl.AMQChannel $A).getConnection(...). ... .readFrame(...)
        - pattern: (com.rabbitmq.client.impl.nio.SocketChannelFrameHandlerState $A).getConnection(...). ... .readFrame(...)
        - pattern: (com.rabbitmq.client.impl.AMQConnection $A).getFrameHandler(...). ... .readFrame(...)
        - pattern: (com.rabbitmq.client.impl.SocketFrameHandlerFactory $A).create(...). ... .readFrame(...)
        - pattern: (com.rabbitmq.client.impl.FrameHandlerFactory $A).create(...). ... .readFrame(...)
        - pattern: (com.rabbitmq.client.impl.nio.SocketChannelFrameHandler $A).getState(...). ... .readFrame(...)
        - pattern: (com.rabbitmq.client.impl.recovery.AutorecoveringConnection $A).getDelegate(...). ... .readFrame(...)
        - pattern: (com.rabbitmq.client.impl.FrameHandler $A).readFrame(...)
        - pattern: (com.rabbitmq.client.impl.nio.SocketChannelFrameHandlerFactory $A).create(...). ... .readFrame(...)
      - pattern-either:        # remote
        - pattern: (com.rabbitmq.client.impl.ChannelManager $A).createChannel(...). ... .getContentBody(...)
        - pattern: (com.rabbitmq.client.impl.recovery.AutorecoveringConnection $A).createChannel(...). ... .getContentBody(...)
        - pattern: (com.rabbitmq.client.impl.recovery.RecordedEntity $A).getDelegateChannel(...). ... .getContentBody(...)
        - pattern: (com.rabbitmq.client.impl.recovery.AutorecoveringChannel $A).rpc(...). ... .getContentBody(...)
        - pattern: (com.rabbitmq.client.impl.recovery.AutorecoveringChannel $A).getConnection(...). ... .getContentBody(...)
        - pattern: (com.rabbitmq.client.Channel $A).getConnection(...). ... .getContentBody(...)
        - pattern: (com.rabbitmq.client.Connection $A).createChannel(...). ... .getContentBody(...)
        - pattern: (com.rabbitmq.client.impl.ChannelN $A).getConnection(...). ... .getContentBody(...)
        - pattern: (com.rabbitmq.client.impl.ChannelN $A).rpc(...). ... .getContentBody(...)
        - pattern: (com.rabbitmq.client.impl.recovery.RecordedEntity $A).getChannel(...). ... .getContentBody(...)
        - pattern: (com.rabbitmq.client.impl.nio.SocketChannelFrameHandlerState $A).getConnection(...). ... .getContentBody(...)
        - pattern: (com.rabbitmq.client.impl.AMQConnection $A).createChannel(...). ... .getContentBody(...)
        - pattern: (com.rabbitmq.client.impl.nio.SocketChannelFrameHandler $A).getState(...). ... .getContentBody(...)
        - pattern: (com.rabbitmq.client.RpcServer $A).getChannel(...). ... .getContentBody(...)
        - pattern: (com.rabbitmq.client.RpcClient $A).getChannel(...). ... .getContentBody(...)
        - pattern: (com.rabbitmq.client.Channel $A).rpc(...). ... .getContentBody(...)
        - pattern: (com.rabbitmq.client.ConnectionFactory $A).newConnection(...). ... .getContentBody(...)
        - pattern: (com.rabbitmq.client.impl.AMQChannel $A).getConnection(...). ... .getContentBody(...)
        - pattern: (com.rabbitmq.client.impl.ChannelManager $A).getChannel(...). ... .getContentBody(...)
        - pattern: (com.rabbitmq.client.DefaultConsumer $A).getChannel(...). ... .getContentBody(...)
        - pattern: (com.rabbitmq.client.Command $A).getContentBody(...)
        - pattern: (com.rabbitmq.client.impl.recovery.AutorecoveringChannel $A).getDelegate(...). ... .getContentBody(...)
        - pattern: (com.rabbitmq.client.impl.recovery.AutorecoveringConnection $A).getDelegate(...). ... .getContentBody(...)
        - pattern: (com.rabbitmq.client.ConnectionFactory $A).clone(...). ... .getContentBody(...)
      - pattern-either:        # remote
        - pattern: (com.rabbitmq.client.Channel $A).rpc(...). ... .getContentHeader(...)
        - pattern: (com.rabbitmq.client.ConnectionFactory $A).newConnection(...). ... .getContentHeader(...)
        - pattern: (com.rabbitmq.client.DefaultConsumer $A).getChannel(...). ... .getContentHeader(...)
        - pattern: (com.rabbitmq.client.impl.recovery.AutorecoveringConnection $A).getDelegate(...). ... .getContentHeader(...)
        - pattern: (com.rabbitmq.client.impl.ChannelN $A).getConnection(...). ... .getContentHeader(...)
        - pattern: (com.rabbitmq.client.RpcServer $A).getChannel(...). ... .getContentHeader(...)
        - pattern: (com.rabbitmq.client.impl.recovery.AutorecoveringChannel $A).getConnection(...). ... .getContentHeader(...)
        - pattern: (com.rabbitmq.client.impl.recovery.AutorecoveringChannel $A).getDelegate(...). ... .getContentHeader(...)
        - pattern: (com.rabbitmq.client.impl.recovery.RecordedEntity $A).getDelegateChannel(...). ... .getContentHeader(...)
        - pattern: (com.rabbitmq.client.RpcClient $A).getChannel(...). ... .getContentHeader(...)
        - pattern: (com.rabbitmq.client.Command $A).getContentHeader(...)
        - pattern: (com.rabbitmq.client.impl.nio.SocketChannelFrameHandler $A).getState(...). ... .getContentHeader(...)
        - pattern: (com.rabbitmq.client.ConnectionFactory $A).clone(...). ... .getContentHeader(...)
        - pattern: (com.rabbitmq.client.impl.AMQConnection $A).createChannel(...). ... .getContentHeader(...)
        - pattern: (com.rabbitmq.client.impl.recovery.AutorecoveringChannel $A).rpc(...). ... .getContentHeader(...)
        - pattern: (com.rabbitmq.client.impl.AMQChannel $A).getConnection(...). ... .getContentHeader(...)
        - pattern: (com.rabbitmq.client.impl.recovery.AutorecoveringConnection $A).createChannel(...). ... .getContentHeader(...)
        - pattern: (com.rabbitmq.client.impl.ChannelManager $A).getChannel(...). ... .getContentHeader(...)
        - pattern: (com.rabbitmq.client.Channel $A).getConnection(...). ... .getContentHeader(...)
        - pattern: (com.rabbitmq.client.impl.ChannelN $A).rpc(...). ... .getContentHeader(...)
        - pattern: (com.rabbitmq.client.impl.ChannelManager $A).createChannel(...). ... .getContentHeader(...)
        - pattern: (com.rabbitmq.client.impl.recovery.RecordedEntity $A).getChannel(...). ... .getContentHeader(...)
        - pattern: (com.rabbitmq.client.impl.nio.SocketChannelFrameHandlerState $A).getConnection(...). ... .getContentHeader(...)
        - pattern: (com.rabbitmq.client.Connection $A).createChannel(...). ... .getContentHeader(...)
      - pattern-either:        # remote
        - pattern: (com.rabbitmq.client.impl.recovery.AutorecoveringChannel $A).getDefaultConsumer(...). ... .handleDelivery(...)
        - pattern: (com.rabbitmq.client.impl.nio.SocketChannelFrameHandler $A).getState(...). ... .handleDelivery(...)
        - pattern: (com.rabbitmq.client.impl.recovery.AutorecoveringChannel $A).getDelegate(...). ... .handleDelivery(...)
        - pattern: (com.rabbitmq.client.impl.recovery.AutorecoveringConnection $A).getDelegate(...). ... .handleDelivery(...)
        - pattern: (com.rabbitmq.client.impl.ChannelManager $A).getChannel(...). ... .handleDelivery(...)
        - pattern: (com.rabbitmq.client.RpcClient $A).getConsumer(...). ... .handleDelivery(...)
        - pattern: (com.rabbitmq.client.impl.ChannelN.3 $A).transformReply(...). ... .handleDelivery(...)
        - pattern: (com.rabbitmq.client.Consumer $A).handleDelivery(...)
        - pattern: (com.rabbitmq.client.impl.recovery.RecordedEntity $A).getChannel(...). ... .handleDelivery(...)
        - pattern: (com.rabbitmq.client.impl.AMQConnection $A).createChannel(...). ... .handleDelivery(...)
        - pattern: (com.rabbitmq.client.Connection $A).createChannel(...). ... .handleDelivery(...)
        - pattern: (com.rabbitmq.client.Channel $A).getConnection(...). ... .handleDelivery(...)
        - pattern: (com.rabbitmq.client.impl.ChannelManager $A).createChannel(...). ... .handleDelivery(...)
        - pattern: (com.rabbitmq.client.impl.recovery.RecordedEntity $A).getDelegateChannel(...). ... .handleDelivery(...)
        - pattern: (com.rabbitmq.client.impl.nio.SocketChannelFrameHandlerState $A).getConnection(...). ... .handleDelivery(...)
        - pattern: (com.rabbitmq.client.impl.recovery.AutorecoveringConnection $A).createChannel(...). ... .handleDelivery(...)
        - pattern: (com.rabbitmq.client.impl.ChannelN $A).getConnection(...). ... .handleDelivery(...)
        - pattern: (com.rabbitmq.client.ConnectionFactory $A).newConnection(...). ... .handleDelivery(...)
        - pattern: (com.rabbitmq.client.impl.recovery.AutorecoveringChannel $A).getConnection(...). ... .handleDelivery(...)
        - pattern: (com.rabbitmq.client.ConnectionFactory $A).clone(...). ... .handleDelivery(...)
        - pattern: (com.rabbitmq.client.RpcClient $A).getChannel(...). ... .handleDelivery(...)
        - pattern: (com.rabbitmq.client.DefaultConsumer $A).getChannel(...). ... .handleDelivery(...)
        - pattern: (com.rabbitmq.client.impl.AMQChannel $A).getConnection(...). ... .handleDelivery(...)
        - pattern: (com.rabbitmq.client.Channel $A).getDefaultConsumer(...). ... .handleDelivery(...)
        - pattern: (com.rabbitmq.client.impl.ChannelN $A).getDefaultConsumer(...). ... .handleDelivery(...)
        - pattern: (com.rabbitmq.client.RpcServer $A).getChannel(...). ... .handleDelivery(...)
      - pattern: (com.rabbitmq.client.QueueingConsumer $A).nextDelivery(...)        # remote
      - pattern: (com.rabbitmq.client.RpcClient $A).doCall(...)        # remote
      - pattern: (com.rabbitmq.client.RpcClient $A).mapCall(...)        # remote
      - pattern: (com.rabbitmq.client.RpcClient $A).primitiveCall(...)        # remote
      - pattern: (com.rabbitmq.client.RpcClient $A).responseCall(...)        # remote
      - pattern: (com.rabbitmq.client.RpcClient $A).stringCall(...)        # remote
      - pattern: (com.rabbitmq.client.RpcServer $A).handleCall(...)        # remote
      - pattern: (com.rabbitmq.client.RpcServer $A).handleCast(...)        # remote
      - pattern: (com.rabbitmq.client.RpcServer $A).postprocessReplyProperties(...)        # remote
      - pattern: (com.rabbitmq.client.RpcServer $A).preprocessReplyProperties(...)        # remote
      - pattern: (com.rabbitmq.client.StringRpcServer $A).handleStringCall(...)        # remote
      - pattern-either:        # remote
        - pattern: (com.sun.faces.context.FacesContextImpl $A).getExternalContext(...). ... .getRequestCookieMap(...)
        - pattern: (com.sun.faces.context.ExternalContextFactoryImpl $A).getExternalContext(...). ... .getRequestCookieMap(...)
        - pattern: (jakarta.faces.event.FacesEvent $A).getFacesContext(...). ... .getRequestCookieMap(...)
        - pattern: (jakarta.faces.context.ExternalContextFactory $A).getWrapped(...). ... .getRequestCookieMap(...)
        - pattern: com.sun.faces.config.InitFacesContext.getInstance(...). ... .getRequestCookieMap(...)
        - pattern: (com.sun.faces.component.visit.FullVisitContext $A).getFacesContext(...). ... .getRequestCookieMap(...)
        - pattern: (com.sun.faces.facelets.component.UIRepeat.IndexedEvent $A).getTarget(...). ... .getRequestCookieMap(...)
        - pattern: (jakarta.faces.view.facelets.FaceletContext $A).getFacesContext(...). ... .getRequestCookieMap(...)
        - pattern: jakarta.faces.context.FacesContext.getCurrentInstance(...). ... .getRequestCookieMap(...)
        - pattern: (jakarta.faces.context.ExternalContext $A).getRequestCookieMap(...)
        - pattern: (com.sun.faces.facelets.el.LegacyELContext $A).getFacesContext(...). ... .getRequestCookieMap(...)
        - pattern: (com.sun.faces.component.search.SearchExpressionContextImpl $A).getFacesContext(...). ... .getRequestCookieMap(...)
        - pattern: (jakarta.faces.context.FacesContext $A).getExternalContext(...). ... .getRequestCookieMap(...)
        - pattern: (jakarta.faces.context.FacesContextWrapper $A).getExternalContext(...). ... .getRequestCookieMap(...)
        - pattern: (jakarta.faces.context.ExternalContextWrapper $A).getWrapped(...). ... .getRequestCookieMap(...)
        - pattern: (jakarta.faces.ServletContextFacesContextFactory $A).getFacesContext(...). ... .getRequestCookieMap(...)
        - pattern: (jakarta.faces.component.WrapperEvent $A).getFacesEvent(...). ... .getRequestCookieMap(...)
        - pattern: (com.sun.faces.config.InitFacesContext $A).getExternalContext(...). ... .getRequestCookieMap(...)
        - pattern: (jakarta.faces.context.ExternalContextFactory $A).getExternalContext(...). ... .getRequestCookieMap(...)
        - pattern: (com.sun.faces.context.FacesContextFactoryImpl $A).getFacesContext(...). ... .getRequestCookieMap(...)
      - pattern-either:        # remote
        - pattern: (jakarta.faces.context.ExternalContextWrapper $A).getWrapped(...). ... .getRequestHeaderMap(...)
        - pattern: (jakarta.faces.ServletContextFacesContextFactory $A).getFacesContext(...). ... .getRequestHeaderMap(...)
        - pattern: (jakarta.faces.context.ExternalContext $A).getRequestHeaderMap(...)
        - pattern: (com.sun.faces.context.ExternalContextFactoryImpl $A).getExternalContext(...). ... .getRequestHeaderMap(...)
        - pattern: (com.sun.faces.component.visit.FullVisitContext $A).getFacesContext(...). ... .getRequestHeaderMap(...)
        - pattern: (com.sun.faces.component.search.SearchExpressionContextImpl $A).getFacesContext(...). ... .getRequestHeaderMap(...)
        - pattern: (com.sun.faces.facelets.component.UIRepeat.IndexedEvent $A).getTarget(...). ... .getRequestHeaderMap(...)
        - pattern: (jakarta.faces.view.facelets.FaceletContext $A).getFacesContext(...). ... .getRequestHeaderMap(...)
        - pattern: jakarta.faces.context.FacesContext.getCurrentInstance(...). ... .getRequestHeaderMap(...)
        - pattern: (jakarta.faces.context.FacesContext $A).getExternalContext(...). ... .getRequestHeaderMap(...)
        - pattern: (com.sun.faces.context.FacesContextImpl $A).getExternalContext(...). ... .getRequestHeaderMap(...)
        - pattern: (jakarta.faces.context.ExternalContextFactory $A).getWrapped(...). ... .getRequestHeaderMap(...)
        - pattern: (jakarta.faces.event.FacesEvent $A).getFacesContext(...). ... .getRequestHeaderMap(...)
        - pattern: (jakarta.faces.context.ExternalContextFactory $A).getExternalContext(...). ... .getRequestHeaderMap(...)
        - pattern: (jakarta.faces.context.FacesContextWrapper $A).getExternalContext(...). ... .getRequestHeaderMap(...)
        - pattern: (com.sun.faces.context.FacesContextFactoryImpl $A).getFacesContext(...). ... .getRequestHeaderMap(...)
        - pattern: com.sun.faces.config.InitFacesContext.getInstance(...). ... .getRequestHeaderMap(...)
        - pattern: (com.sun.faces.facelets.el.LegacyELContext $A).getFacesContext(...). ... .getRequestHeaderMap(...)
        - pattern: (com.sun.faces.config.InitFacesContext $A).getExternalContext(...). ... .getRequestHeaderMap(...)
        - pattern: (jakarta.faces.component.WrapperEvent $A).getFacesEvent(...). ... .getRequestHeaderMap(...)
