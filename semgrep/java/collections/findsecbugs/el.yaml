rules:
  - id: ${node} 
    options:
      symbolic_propagation: true
    pattern-either:
      - pattern-either:
        - pattern: (javax.faces.context.FacesContext $A).getApplication(...). ... .createValueExpression(...)
        - pattern: (org.springframework.web.context.support.WebApplicationContextUtils.FacesDependencyRegistrar.1 $A).getObject(...). ... .createValueExpression(...)
        - pattern: (javax.faces.application.Application $A).getExpressionFactory(...). ... .createValueExpression(...)
        - pattern: (javax.faces.context.FacesContextWrapper $A).getApplication(...). ... .createValueExpression(...)
        - pattern: (javax.faces.context.ExceptionHandlerWrapper $A).getWrapped(...). ... .createValueExpression(...)
        - pattern: (javax.faces.event.PostConstructApplicationEvent $A).getApplication(...). ... .createValueExpression(...)
        - pattern: (javax.faces.component.UIViewAction.InstrumentedFacesContext $A).disableRenderResponseControl(...). ... .createValueExpression(...)
        - pattern: (javax.el.Util.CacheValue $A).getExpressionFactory(...). ... .createValueExpression(...)
        - pattern: (javax.faces.event.ExceptionQueuedEventContext $A).getContext(...). ... .createValueExpression(...)
        - pattern: javax.faces.context.FacesContext.getCurrentInstance(...). ... .createValueExpression(...)
        - pattern: (javax.faces.component.visit.VisitContext $A).getFacesContext(...). ... .createValueExpression(...)
        - pattern: javax.faces.component.behavior.ClientBehaviorContext.createClientBehaviorContext(...). ... .createValueExpression(...)
        - pattern: (javax.faces.component.UIViewAction.InstrumentedFacesContext $A).clearViewRoot(...). ... .createValueExpression(...)
        - pattern: javax.faces.component.visit.VisitContext.createVisitContext(...). ... .createValueExpression(...)
        - pattern: (javax.faces.application.ApplicationFactory $A).getWrapped(...). ... .createValueExpression(...)
        - pattern: (javax.faces.event.PreDestroyApplicationEvent $A).getApplication(...). ... .createValueExpression(...)
        - pattern: (javax.faces.context.ExceptionHandler $A).getHandledExceptionQueuedEvent(...). ... .createValueExpression(...)
        - pattern: (javax.faces.context.FacesContext $A).getExceptionHandler(...). ... .createValueExpression(...)
        - pattern: (javax.faces.context.FacesContextFactory $A).getWrapped(...). ... .createValueExpression(...)
        - pattern: (javax.faces.webapp.PreJsf2ExceptionHandlerFactory $A).getExceptionHandler(...). ... .createValueExpression(...)
        - pattern: (javax.faces.component.UIViewAction.InstrumentedFacesContext $A).getWrapped(...). ... .createValueExpression(...)
        - pattern: (javax.faces.context.FacesContextWrapper $A).getWrapped(...). ... .createValueExpression(...)
        - pattern: (javax.faces.component.behavior.ClientBehaviorContext $A).getFacesContext(...). ... .createValueExpression(...)
        - pattern: (javax.faces.context.FacesContextFactory $A).getFacesContext(...). ... .createValueExpression(...)
        - pattern: (javax.faces.application.ApplicationWrapper $A).getWrapped(...). ... .createValueExpression(...)
        - pattern: (javax.el.ExpressionFactory $A).createValueExpression(...)
        - pattern: (javax.faces.component.UIViewAction.InstrumentedFacesContext $A).pushViewIntoRequestMap(...). ... .createValueExpression(...)
        - pattern: (javax.faces.event.ExceptionQueuedEvent $A).getContext(...). ... .createValueExpression(...)
        - pattern: (javax.faces.webapp.PreJsf2ExceptionHandlerFactory.PreJsf2ExceptionHandler $A).getHandledExceptionQueuedEvent(...). ... .createValueExpression(...)
        - pattern: (javax.faces.context.ExceptionHandlerFactory $A).getExceptionHandler(...). ... .createValueExpression(...)
        - pattern: javax.el.ExpressionFactory.newInstance(...). ... .createValueExpression(...)
        - pattern: (javax.faces.component.UIViewAction.InstrumentedFacesContext $A).clearPostback(...). ... .createValueExpression(...)
        - pattern: (javax.faces.context.ExceptionHandlerWrapper $A).getHandledExceptionQueuedEvent(...). ... .createValueExpression(...)
        - pattern: (javax.faces.application.ApplicationFactory $A).getApplication(...). ... .createValueExpression(...)
        - pattern: (javax.faces.context.FacesContextWrapper $A).getExceptionHandler(...). ... .createValueExpression(...)
        - pattern: (javax.faces.context.ExceptionHandlerFactory $A).getWrapped(...). ... .createValueExpression(...)
      - pattern-either:
        - pattern: (javax.faces.context.FacesContext $A).getApplication(...). ... .createMethodExpression(...)
        - pattern: (javax.faces.context.ExceptionHandlerWrapper $A).getWrapped(...). ... .createMethodExpression(...)
        - pattern: (javax.faces.component.UIViewAction.InstrumentedFacesContext $A).clearViewRoot(...). ... .createMethodExpression(...)
        - pattern: (javax.faces.component.visit.VisitContext $A).getFacesContext(...). ... .createMethodExpression(...)
        - pattern: (javax.faces.context.FacesContextFactory $A).getWrapped(...). ... .createMethodExpression(...)
        - pattern: (javax.faces.context.ExceptionHandlerFactory $A).getExceptionHandler(...). ... .createMethodExpression(...)
        - pattern: (javax.faces.component.UIViewAction.InstrumentedFacesContext $A).getWrapped(...). ... .createMethodExpression(...)
        - pattern: javax.faces.component.visit.VisitContext.createVisitContext(...). ... .createMethodExpression(...)
        - pattern: (javax.faces.application.Application $A).getExpressionFactory(...). ... .createMethodExpression(...)
        - pattern: (javax.faces.event.ExceptionQueuedEventContext $A).getContext(...). ... .createMethodExpression(...)
        - pattern: javax.faces.component.behavior.ClientBehaviorContext.createClientBehaviorContext(...). ... .createMethodExpression(...)
        - pattern: (javax.faces.context.FacesContextWrapper $A).getWrapped(...). ... .createMethodExpression(...)
        - pattern: (javax.faces.component.UIViewAction.InstrumentedFacesContext $A).clearPostback(...). ... .createMethodExpression(...)
        - pattern: (javax.faces.context.ExceptionHandler $A).getHandledExceptionQueuedEvent(...). ... .createMethodExpression(...)
        - pattern: (javax.faces.context.FacesContext $A).getExceptionHandler(...). ... .createMethodExpression(...)
        - pattern: (javax.faces.application.ApplicationFactory $A).getApplication(...). ... .createMethodExpression(...)
        - pattern: (javax.faces.component.UIViewAction.InstrumentedFacesContext $A).pushViewIntoRequestMap(...). ... .createMethodExpression(...)
        - pattern: (org.springframework.web.context.support.WebApplicationContextUtils.FacesDependencyRegistrar.1 $A).getObject(...). ... .createMethodExpression(...)
        - pattern: (javax.faces.webapp.PreJsf2ExceptionHandlerFactory.PreJsf2ExceptionHandler $A).getHandledExceptionQueuedEvent(...). ... .createMethodExpression(...)
        - pattern: (javax.faces.context.ExceptionHandlerWrapper $A).getHandledExceptionQueuedEvent(...). ... .createMethodExpression(...)
        - pattern: (javax.faces.event.PostConstructApplicationEvent $A).getApplication(...). ... .createMethodExpression(...)
        - pattern: (javax.faces.webapp.PreJsf2ExceptionHandlerFactory $A).getExceptionHandler(...). ... .createMethodExpression(...)
        - pattern: (javax.faces.context.FacesContextFactory $A).getFacesContext(...). ... .createMethodExpression(...)
        - pattern: (javax.faces.application.ApplicationWrapper $A).getWrapped(...). ... .createMethodExpression(...)
        - pattern: javax.faces.context.FacesContext.getCurrentInstance(...). ... .createMethodExpression(...)
        - pattern: (javax.faces.context.ExceptionHandlerFactory $A).getWrapped(...). ... .createMethodExpression(...)
        - pattern: (javax.faces.event.ExceptionQueuedEvent $A).getContext(...). ... .createMethodExpression(...)
        - pattern: (javax.faces.component.UIViewAction.InstrumentedFacesContext $A).disableRenderResponseControl(...). ... .createMethodExpression(...)
        - pattern: (javax.el.Util.CacheValue $A).getExpressionFactory(...). ... .createMethodExpression(...)
        - pattern: (javax.faces.event.PreDestroyApplicationEvent $A).getApplication(...). ... .createMethodExpression(...)
        - pattern: (javax.faces.context.FacesContextWrapper $A).getExceptionHandler(...). ... .createMethodExpression(...)
        - pattern: (javax.faces.application.ApplicationFactory $A).getWrapped(...). ... .createMethodExpression(...)
        - pattern: (javax.faces.component.behavior.ClientBehaviorContext $A).getFacesContext(...). ... .createMethodExpression(...)
        - pattern: (javax.el.ExpressionFactory $A).createMethodExpression(...)
        - pattern: javax.el.ExpressionFactory.newInstance(...). ... .createMethodExpression(...)
        - pattern: (javax.faces.context.FacesContextWrapper $A).getApplication(...). ... .createMethodExpression(...)
    message: Semgrep found a match of method in ${node} csv
    languages: [java]
    severity: WARNING