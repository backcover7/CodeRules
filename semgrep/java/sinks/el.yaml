rules:
  - id: el
    options:
      symbolic_propagation: true
    pattern-either:
      - pattern: (org.apache.commons.jxpath.JXPathContext $CTX).getValue(...)     # CVE-2022-41852
      - pattern: org.apache.commons.jxpath.JXPathContext.newContext(...). ... .getValue(...)
      - patterns:
        - pattern-either:
          - pattern: ($CLS $JE).$METHOD(...)
          - pattern: ($CLSENGINE $JENGIN).createExpression($D, ...).$METHOD(...)
        - metavariable-regex:
            metavariable: $CLS
            regex: org.apache.commons.jexl(2|3).(Expression|JexlExpression)
        - metavariable-regex:
            metavariable: $CLSENGINE
            regex: org.apache.commons.jexl(2|3).JexlEngine
        - metavariable-regex:
            metavariable: $METHOD
            regex: ^(evaluate|callable)$
      - patterns:
        - pattern-either:
          - pattern: ($CLS $JE).$METHOD(...)
          - pattern: ($CLSENGINE $JENGIN).createScript($D, ...).$METHOD(...)
        - metavariable-regex:
            metavariable: $CLS
            regex: org.apache.commons.jexl(2|3).(Script|JexlScript)
        - metavariable-regex:
            metavariable: $CLSENGINE
            regex: org.apache.commons.jexl(2|3).JexlEngine
        - metavariable-regex:
            metavariable: $METHOD
            regex: ^(execute|callable)$
      - patterns:
        - pattern-either:
          - pattern: ($CLS $JE).$METHOD(...)
          - pattern: ($CLSENGINE $JENGIN).$CREATE($D, ...).$METHOD(...)
        - metavariable-regex:
            metavariable: $CLS
            regex: ^(org.apache.commons.jexl(2|3).(UnifiedJEXL|JxltEngine).(Template|Expression))$
        - metavariable-regex:
            metavariable: $CLSENGINE
            regex: org.apache.commons.jexl(2|3).JxltEngine
        - metavariable-regex:
            metavariable: $CREATE
            regex: ^create(Expression|Template)$
        - metavariable-regex:
            metavariable: $METHOD
            regex: ^(evaluate|prepare)$
      - pattern: (javax.script.CompiledScript $CS).eval(...)
      - pattern: (javax.script.Compilable $ENG).compile($D, ...).eval(...)
      - pattern: ((javax.script.Compilable) $ENG).compile($D, ...).eval(...)
      - pattern: (javax.script.ScriptEngine $SE).eval(...)
      - pattern: (javax.script.ScriptEngineManager $SEM).getEngineByName(...).eval(...)
      - pattern: (javax.script.ScriptEngineManager $SEM).getEngineByExtension(...).eval(...)
      - pattern: (javax.script.ScriptEngineManager $SEM).getEngineByMimeType(...).eval(...)
      - pattern: (javax.script.ScriptEngineFactory $FACT).getProgram(...)
      - pattern: (javax.script.ScriptEngineFactory $FACT).getMethodCallSyntax(...)
      - pattern: (javax.script.ScriptEngineFactory $FACT).getScriptEngine(...).eval(...)
      - pattern: (jdk.nashorn.api.scripting.NashornScriptEngineFactory $FACT).getProgram(...)
      - pattern: (jdk.nashorn.api.scripting.NashornScriptEngineFactory $FACT).getMethodCallSyntax(...)
      - pattern: (jdk.nashorn.api.scripting.NashornScriptEngineFactory $FACT).getScriptEngine(...).eval(...)
      - patterns:
        - pattern: org.mvel2.MVEL.$METHOD($D, ...)
        - metavariable-regex:
            metavariable: $METHOD
            regex: eval|executeExpression|evalToBoolean|evalToString|executeAllExpression|executeSetExpression
      - pattern: (bsh.Interpreter $BS).eval(...)
      - pattern: (org.springframework.scripting.bsh.BshScriptEvaluator $BS).evaluate(...)
      - pattern: (javax.el.jakarta.el.ValueExpression $EL).getValue(...)
      - pattern: (javax.el.jakarta.el.ValueExpression $EL).setValue(...)
      - pattern: (javax.el.jakarta.el.MethodExpression $EL).invoke(...)
      - pattern: (javax.el.jakarta.el.LambdaExpression $EL).invoke(...)
      - patterns:
        - pattern: (javax.el.jakarta.el.ELProcessor $EL).$METHOD(...)
        - metavariable-regex:
            metavariable: $METHOD
            regex: eval|getValue|setValue|setVariable
      - pattern: (jdk.jshell.JShell $JS).eval(...)
      - pattern: (jdk.jshell.SourceCodeAnalysis $SCA).wrappers(...)
      - patterns:
        - pattern: (org.python.util.PythonInterpreter $PI).$METHOD(...)
        - metavariable-regex:
            metavariable: $METHOD
            regex: (exec|run).*|eval|compile
      - pattern: (org.python.core.BytecodeLoader $BL).makeClass(...)
      - pattern: (org.python.core.BytecodeLoader $BL).makeCode(...)
      - patterns:
        - pattern: (org.python.core.Py $PY).$METHOD(...)
        - metavariable-regex:
            metavariable: $METHOD
            regex: (compile).*
      - patterns:
        - pattern: (org.mozilla.javascript.Context $CTX).$METHOD(...)
        - metavariable-regex:
            metavariable: $METHOD
            regex: evaluateString|evaluateReader|compileFunction|compileReader|compileString
      - pattern: (org.mozilla.javascript.optimizer.ClassCompiler $CC).compileToClassFiles(...)
      - pattern: (org.mozilla.javascript.GeneratedClassLoader $GC).defineClass(...)    
    message: Semgrep found a match
    languages:
      - java
    severity: WARNING
    metadata:
      references:
        - https://sourcegraph.com/github.com/github/codeql@main/-/tree/java/ql/src/Security/CWE/CWE-094
        - https://sourcegraph.com/github.com/github/codeql@main/-/tree/java/ql/src/experimental/Security/CWE/CWE-094