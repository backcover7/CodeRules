rules:
  - id: deser
    options:
      symbolic_propagation: true
    pattern-either:
      - pattern: new java.io.ObjectInputStream($D, ...).readObject(...)
      - pattern: new java.io.ObjectInputStream($D, ...).readUnshared(...)
      - pattern: new java.io.ObjectInputStream($D, ...).readArray(...)
      - patterns:
        - pattern: class $CLS implements $INTERFACE {...}
        - metavariable-regex:
            metavariable: $INTERFACE
            regex: java.io.Serializable|java.lang.reflect.InvocationHandler
        - pattern-inside:
          - pattern-either:
            - pattern: readObject(...) {...}
            - pattern: readUnshared(...) {...}
            - pattern: readArray(...) {...}
            - pattern: readResolve(...) {...}
      - patterns:
        - pattern: |
            interface $INTERFACE extends Remote {
              $RETURNTYPE $METHOD($CLASS $PARAM) throws RemoteException;
            }
        - metavariable-regex:
            metavariable: $CLASS
            regex: (?!int|boolean|short|long|byte|char|float|double)
      - patterns:
        - pattern: |
            interface $INTERFACE extends Remote {
              $RETURNTYPE $METHOD(Object $PARAM) throws RemoteException;
            }
      - patterns:
        - pattern-inside: |
            public class $JMS_LISTENER implements javax.jms.MessageListener {
              ...
              public void onMessage(javax.jms.Message $JMS_MSG) {
                  ...
              }
            }
        - pattern-either:
            - pattern-inside: $X = javax.jms.$Y.getObject(...);
            - pattern-inside: $X = ($Z) javax.jms.$Y.getObject(...);
    message: Semgrep found a match
    languages:
      - java
    severity: WARNING
    metadata:
      source-rule-url: https://sourcegraph.com/github.com/github/codeql/-/blob/java/ql/lib/semmle/code/java/security/UnsafeDeserializationQuery.qll