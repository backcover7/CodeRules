<?xml version="1.0" encoding="UTF-8"?>
<RulePack xmlns:mask="xmlns://www.fortifysoftware.com/schema/mask" xmlns="xmlns://www.fortifysoftware.com/schema/rules">
    <RulePackID>38854944-BE80-4EA7-A54F-690548123C2A</RulePackID>
    <SKU>RUL13178</SKU>
    <Name><![CDATA[Fortify Secure Coding Rules, Core, Apex]]></Name>
    <Activated>true</Activated>
    <Version>2022.3.0.0008</Version>
    <Language>apex</Language>
    <Description><![CDATA[Provides coverage of security relevant core language APIs for Apex and Visualforce.]]></Description>
    <Locale>en</Locale>
    <Rules version="3.2" minimumSCA="18.10">
        <Notes><![CDATA[

        (C) Copyright 2017 - 2022 Micro Focus                                
        The information contained herein is subject to change without notice.
        The only warranties for Micro Focus products and services are set    
        forth in the express warranty statements accompanying such products  
        and services. Nothing herein should be construed as constituting an  
        additional warranty. Micro Focus shall not be liable for technical   
        or editorial errors or omissions contained herein.                   
        
        ]]></Notes>
        <RuleDefinitions>
            <DataflowSourceRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Visualforce Core</Group>
                    <Group name="inputsource">Web</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>e7b00cbb-5c29-4b58-b22d-7a9ad3f9a1bd</RuleID>
                <TaintFlags>+WEB,+XSS</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern caseInsensitive="true">vfstd</Pattern>
                    </NamespaceName>
                    <ClassName>
                        <Pattern caseInsensitive="true">apexchart|apexcolumn|apexdatalist|apexdatatable|apexinput|apexinputcheckbox|apexinputfield|apexinputhidden|apexinputsecret|apexinputtext|apexinputtextarea|apexoutputlink|apexselectcheckboxes|apexselectlist|apexselectoption|apexselectradio</Pattern>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">get_data|get_value|get_assignto</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <OutArguments>return</OutArguments>
            </DataflowSourceRule>
            <DataflowSourceRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                    <Group name="inputsource">System Information</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>bc028bde-0899-452d-92fb-d06ba0f539ed</RuleID>
                <TaintFlags>+SYSTEMINFO</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">UserInfo</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">get(DefaultCurrency|Language|Locale|UserType|OrganizationId|ProfileId|SessionId|UserId|UserRoleId)</Pattern>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <OutArguments>return</OutArguments>
            </DataflowSourceRule>
            <DataflowSourceRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                    <Group name="inputsource">Web</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>49F2D206-42CA-4CD8-8690-F5C70CB39215</RuleID>
                <TaintFlags>+WEB,+XSS</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">UserInfo</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">get(FirstName|LastName|Name|OrganizationName|UserEmail|UserName|SessionId)</Pattern>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <OutArguments>return</OutArguments>
            </DataflowSourceRule>
            <DataflowSourceRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Database</Group>
                    <Group name="inputsource">System Information</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>85ed079d-bc49-4d2f-b447-e41ae79543a2</RuleID>
                <TaintFlags>+SYSTEMINFO,+EXCEPTIONINFO</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">Database</Value>
                    </NamespaceName>
                    <ClassName>
                        <Pattern caseInsensitive="true">(Delete|UnDelete|Merge|Save|Upsert|EmptyRecycleBin)Result</Pattern>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">getErrors</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <OutArguments>return</OutArguments>
            </DataflowSourceRule>
            <DataflowSourceRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex DataSource</Group>
                    <Group name="inputsource">Database</Group>
                    <Group name="audience">medium,broad</Group>
                </MetaInfo>
                <RuleID>0c6b2ec7-97f0-4258-bee5-bb05bff49f87</RuleID>
                <TaintFlags>+DATABASE,+XSS</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">DataSource</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Connection</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">query|search</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <OutArguments>return</OutArguments>
            </DataflowSourceRule>
            <DataflowSourceRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex DataSource</Group>
                    <Group name="inputsource">System Information</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>03d33b76-626d-4bf5-8a1b-6fa3b7bd6b0d</RuleID>
                <TaintFlags>+SYSTEMINFO</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">DataSource</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Connection</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">sync</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <OutArguments>return</OutArguments>
            </DataflowSourceRule>
            <DataflowSourceRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                    <Group name="inputsource">Database</Group>
                    <Group name="audience">medium,broad</Group>
                </MetaInfo>
                <RuleID>2b3b839e-027e-4884-aee9-58e4f23ee30a</RuleID>
                <TaintFlags>+XSS,+DATABASE</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Database</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">query|getQueryLocator</Pattern>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <OutArguments>return</OutArguments>
            </DataflowSourceRule>
            <DataflowSourceRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                    <Group name="inputsource">Database</Group>
                    <Group name="audience">medium,broad</Group>
                </MetaInfo>
                <RuleID>10f9abe7-72c2-469e-98c0-fe60ff4f378a</RuleID>
                <TaintFlags>+XSS,+DATABASE</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Search</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">query|find|suggest</Pattern>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <OutArguments>return</OutArguments>
            </DataflowSourceRule>
            <DataflowSourceRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                    <Group name="inputsource">Web</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>91cafa38-b8db-45b7-adb6-1a38139210c0</RuleID>
                <TaintFlags>+WEB,+XSS</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">PageReference</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">getParameters|getCookies|getHeaders|getContent|getUrl</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <OutArguments>return</OutArguments>
            </DataflowSourceRule>
            <DataflowSourceRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                    <Group name="inputsource">Web</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>01cbca05-da5d-497d-8c06-9e4e7d45d821</RuleID>
                <TaintFlags>+WEB,+XSS</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">HTTPRequest</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">getBody|getBodyAsBlob|getBodyDocument|getCompressed|getEndpoint|getHeader|getMethod</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <OutArguments>return</OutArguments>
            </DataflowSourceRule>
            <DataflowSourceRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Core</Group>
                    <Group name="inputsource">Database</Group>
                    <Group name="audience">medium,broad</Group>
                </MetaInfo>
                <RuleID>1fec72db-cd3a-4fee-a9a6-398c21d911d8</RuleID>
                <TaintFlags>+XSS,+DATABASE</TaintFlags>
                <FunctionIdentifier>
                    <FunctionName>
                        <Value caseInsensitive="true">_soql_select</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <OutArguments>return</OutArguments>
            </DataflowSourceRule>
            <DataflowSourceRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Core</Group>
                    <Group name="inputsource">System Information</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>86610f60-b0d3-41b6-88a0-17ea14023e38</RuleID>
                <TaintFlags>+SYSTEMINFO</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>.*</Pattern>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">TextFunctions</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">_getSessionId</Value>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <OutArguments>return</OutArguments>
            </DataflowSourceRule>
            <DataflowSourceRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Core</Group>
                    <Group name="inputsource">Web</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>80D4AFD9-C5B2-4135-9862-8C0367C10B5E</RuleID>
                <TaintFlags>+WEB,+XSS</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>.*</Pattern>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">TextFunctions</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">_getSessionId</Value>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <OutArguments>return</OutArguments>
            </DataflowSourceRule>
            <DataflowSourceRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                    <Group name="inputsource">Web</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>6f70ee3d-5d15-4ba5-96e0-be7388302641</RuleID>
                <TaintFlags>+WEB,+XSS</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">HTTPResponse</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">get.*</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <OutArguments>return</OutArguments>
            </DataflowSourceRule>
            <DataflowSourceRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                    <Group name="inputsource">Web</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>bbd53c43-1099-4df9-8a77-7abd875b2d1f</RuleID>
                <TaintFlags>+WEB,+XSS</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">SelectOption</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">get.*</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <OutArguments>return</OutArguments>
            </DataflowSourceRule>
            <DataflowEntryPointRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Visualforce Core</Group>
                </MetaInfo>
                <RuleID>a7bba94d-0b39-4b62-a9e0-d27221142cfa</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern caseInsensitive="true">.*</Pattern>
                    </NamespaceName>
                    <ClassName>
                        <Pattern caseInsensitive="true">.*_pageclass</Pattern>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">globalFlow</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
            </DataflowEntryPointRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>4dfd14ba-f8d0-41ac-bee7-3f8687d5ebd9</RuleID>
                <TaintFlags>+VALIDATED_SOQL_INJECTION,+VALIDATED_SOSL_INJECTION</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">String</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">escapeSingleQuotes</Value>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>a842b68d-5aab-4f24-8e0e-84763b3e8733</RuleID>
                <Notes><![CDATA[
                   To the best of my knowledge, the Object class is something that Luxoft built in -- 
                   it actually doesn't exist in the official API.
               ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Pattern caseInsensitive="true">Object|sObject</Pattern>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">clone|deepClone</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this,0,1,2,3,4,5</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>5f4be1ac-5832-47c4-9004-fc35fba1664e</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Pattern caseInsensitive="true">Object|sObject</Pattern>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">toString</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>0c7de47a-d8e6-4f99-a5b6-f87e142a0197</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Blob</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">toPdf</Value>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>dd0f85a6-27f4-42e7-bf6a-dbe5a65f03f1</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Blob</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">valueOf</Value>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>4bbd90c5-b9f7-4b37-a97d-645e17f4f252</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Boolean</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">valueOf</Value>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>cada3907-5e6e-444b-8ea0-eaf8593f301c</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Cookie</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">init^</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0...</InArguments>
                <OutArguments>this</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>080f9d04-f232-4eab-8552-94c66c302b16</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Cookie</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">get(Domain|Name|Path|Value)</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>414c49ba-bee5-4907-977a-65a3aefb5603</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Date</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">add(Days|Months|Years)</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this,0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>a4ad8cb5-4d46-4fc9-97fb-39bce2d58846</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Date</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">day(OfYear)?|format|month|year</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>251ceaa3-2af0-4645-a4b8-fd3bb520a2b7</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Date</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">newInstance</Value>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0,1,2</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>0037d2c2-0b02-439f-a1ad-b38217571db1</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Date</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">parse</Value>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>5f4b8821-e5ff-497e-801a-5247749b155e</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Date</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">valueOf</Value>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>a107aa4f-8fce-49de-a1c5-ad5deb1b7dd7</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Datetime</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">add(Days|Hours|Minutes|Months|Seconds|Years)</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this,0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>53bc7059-9a71-463b-bc07-cb201ac090ed</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Datetime</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">date(GMT)?|day(Gmt|OfYear|OfYearGmt)?</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>d9d6d951-27ae-4c86-b1af-e63c403a3dd0</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Datetime</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">format(Gmt)?</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this,0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>d8dab6ed-b9da-4b11-b859-3717644d276e</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Datetime</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">formatLong|getTime|hour(Gmt)?|millisecond(Gmt)?|minute(Gmt)?|month(Gmt)?|second(Gmt)?|time(Gmt)?|year(Gmt)?</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>550e157c-d29f-4614-929d-ef0db77d132f</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Datetime</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">newInstance(Gmt)?</Pattern>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0-5</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>d2b6cd3f-84ff-4a5f-b0c3-d84a37178ff1</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Datetime</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">parse</Value>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>030bebd1-c4de-44aa-bbe7-7a0244cdf36e</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Datetime</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">valueOf</Value>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>8ec740b6-1b45-40ea-b4fe-d231e1f46615</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Decimal</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">abs|doubleValue|format|intValue|longValue|round|stripTrailing|toPlainString</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>6b94db71-33b7-41a4-9a4b-2518e5aa8760</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Decimal</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">divide</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this,0,1,2</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>22186369-56e8-4eaf-b820-80a4ae791aac</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Decimal</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">pow</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this,0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>6064918c-3d48-462c-9455-9ccd6930b149</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Decimal</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">valueOf</Value>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>2bc807bb-c841-4b81-8603-ecfc6301d5f1</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Double</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">format|intValue|longValue|round</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>390a6ffe-3274-4a48-bed6-4cd1e4279a48</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Double</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">valueOf</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>b4116243-d625-49b1-a034-476bf376903b</RuleID>
                <TaintFlags>+WEAKCRYPTO,-BASE64_ENCODED,-NO_NEW_LINE</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">EncodingUtil</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">base64Decode</Value>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>2ce5f1cd-3c3e-444e-a845-2ac7f2b24516</RuleID>
                <TaintFlags>+BASE64_ENCODED,+NO_NEW_LINE</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">EncodingUtil</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">base64Encode</Value>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>ed64a7ae-da1b-46a3-8718-36976a48cce3</RuleID>
                <TaintFlags>-NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">EncodingUtil</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">convertFromHex</Value>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>6519c367-c196-4056-8265-f33f07dd4ba4</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">EncodingUtil</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">convertToHex</Value>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>f209e38a-fbfa-4f85-bcde-ed3f21522a7e</RuleID>
                <TaintFlags>-VALIDATED_CROSS_SITE_SCRIPTING_REFLECTED,-VALIDATED_CROSS_SITE_SCRIPTING_PERSISTENT,-VALIDATED_CROSS_SITE_SCRIPTING_DOM,-POORVALIDATION,-URL_ENCODE,-NO_NEW_LINE</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">EncodingUtil</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">urlDecode</Pattern>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>ed05e340-0776-4b1d-af78-f67d1e2feb04</RuleID>
                <TaintFlags>+POORVALIDATION,+VALIDATED_CROSS_SITE_SCRIPTING_REFLECTED,+VALIDATED_CROSS_SITE_SCRIPTING_PERSISTENT,+VALIDATED_CROSS_SITE_SCRIPTING_DOM,+URL_ENCODE,+NO_NEW_LINE</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">EncodingUtil</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">urlEncode</Pattern>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>80149826-c95c-4cef-bffc-8030ab748988</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Id</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">valueOf</Value>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>19aa6357-bef9-431b-b731-77ce357fa6bf</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Integer</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">format</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>625ab6a5-2f4d-41e4-9e00-71d246154f73</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Integer</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">valueOf</Value>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>56872a6b-94f1-4a72-97c4-c85b55a8d75f</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Long</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">format</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>7f9a56c5-20da-4d9d-a75e-d760df44712c</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Long</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">intValue</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>9b229d9e-b4ab-4fa4-a83a-20cc700036a0</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Long</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">valueOf</Value>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>5ea08e19-ce22-4428-9bb6-b8452f24b91e</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Math</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">abs|acos|asin|atan|atan2|cbrt|ceil|cos|cosh|exp|floor|log|log10|max|min|mod|pow|rint|round|rountToLong|signum|sin|sinh|sqrt|tan|tanh</Pattern>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0...</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>a79eff43-4bc7-4bf2-ac18-56b96bfcf671</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Pattern</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">compile</Value>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>a58686a5-16eb-4897-83af-37bcaf2671a1</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Pattern</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">matcher</Value>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>f534003c-883d-4b78-bcc8-093ca1e0004b</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Pattern</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">pattern</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>0c5069d8-85cb-41d9-af97-323b8eaf3087</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Pattern</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">quote</Value>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>2c40aa37-bff3-4e49-a8aa-11291af11327</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Pattern</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">split</Value>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>50547651-ba1e-42f9-8e42-57a17acc392d</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Matcher</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">group</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>36a6d1d1-6172-4d6c-829f-47bebd99d1b8</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Matcher</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">pattern</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>6d327fe8-4a9b-4102-ae2c-e7c063487610</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Matcher</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">quoteReplacement</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this,0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>cfb06187-5ce1-4e5f-9ec2-4ddaef544d17</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Matcher</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">region</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>a58e7fbb-fafd-428a-92a6-9ab389064504</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Matcher</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">replaceFirst</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this,0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>81d521cf-273e-4299-ad4c-8a467ce8048e</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Matcher</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">replaceAll</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this,0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>e33d4083-41a3-4b57-bea7-9f7b07825720</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Matcher</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">replaceFirst</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this,0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>a1b1a56e-c342-44ea-9243-cfe33e62ba1f</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Matcher</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">useAnchoringBounds</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this,0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>e592ce2c-542f-4176-a051-d0207e8eba48</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Matcher</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">usePattern</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this,0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>d3bfb41d-8291-495b-9da9-3ee8bdbe6d47</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Matcher</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">useTransparentBounds</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this,0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>6987858f-66d1-4f07-9df6-d6809c1eae6b</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">String</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">format|join</Pattern>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0,1</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>5bb778bf-9f96-4d94-be83-a92ef38a63d7</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">String</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">replace|replaceAll|replaceFirst</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this,0,1</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>f5d6dd0e-3a07-4d3b-8b92-79d775cdc4d3</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">String</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">repeat</Value>
                    </FunctionName>
                    <Parameters>
                        <WildCard min="1" max="1"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>10C1CD4E-33C1-47E1-8C1D-C19525762139</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">String</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">repeat</Value>
                    </FunctionName>
                    <Parameters>
                        <WildCard min="2" max="2"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>a3c1a622-aac5-42e9-9b10-7fe24ccf9b07</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">String</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">getCommonPrefix</Value>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>c14070b1-b138-46ae-867e-afdc0fbf675a</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">String</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">valueOf|valueOfGmt</Pattern>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>34953e84-d5ab-40ab-ab9d-d1ebe9491e29</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">String</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">abbreviate|capitalize|center|difference|getChars|left|leftPad|mid|normalizeSpace|remove|removeEnd|removeEndIgnoreCase|removeStart|removeStartIgnoreCase|repeat|replace|replaceAll|replaceFirst|reverse|right|rightPad|split|split|splitByCharacterType|splitByCharacterTypeCamelCase|substring|substring|substringAfter|substringAfterLast|substringBefore|substringBeforeLast|substringBetween|substringBetween|swapCase|toLowerCase|toLowerCase|toUpperCase|toUpperCase|trim|uncapitalize|valueOf</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>79B0486D-19DC-433C-BE84-1C3BA4242F70</RuleID>
                <TaintFlags>+CSV_ENCODE</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">String</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">escapeCsv</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>C550ABCC-24FC-493F-BF32-DBC6FAFE48AD</RuleID>
                <TaintFlags>-CSV_ENCODE</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">String</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">unescapeCsv</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>4F8F8AEF-A5FF-4D21-A7D2-14E2653F1788</RuleID>
                <TaintFlags>+UNICODE_ENCODE</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">String</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">escapeUnicode</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>7DC5773B-1D79-4B13-AE6D-4F65C3DD167C</RuleID>
                <TaintFlags>-UNICODE_ENCODE</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">String</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">unescapeUnicode</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>53B901A1-8D70-4F03-9BDB-E3EBFD68CD60</RuleID>
                <TaintFlags>+JS_ENCODE,+NO_NEW_LINE,+POORVALIDATION,+VALIDATED_CROSS_SITE_SCRIPTING_REFLECTED,+VALIDATED_CROSS_SITE_SCRIPTING_PERSISTENT,+VALIDATED_CROSS_SITE_SCRIPTING_DOM</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">String</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">escapeEcmaScript</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>43ECC4BF-9DF1-4947-A2A8-8A91540072F4</RuleID>
                <TaintFlags>-JS_ENCODE,-NO_NEW_LINE,-POORVALIDATION,-VALIDATED_CROSS_SITE_SCRIPTING_REFLECTED,-VALIDATED_CROSS_SITE_SCRIPTING_PERSISTENT,-VALIDATED_CROSS_SITE_SCRIPTING_DOM</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">String</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">unescapeEcmaScript</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>01E8B807-DFCD-4069-9C03-CAC458774047</RuleID>
                <TaintFlags>+JAVA_ENCODE,+NO_NEW_LINE,+POORVALIDATION,+VALIDATED_CROSS_SITE_SCRIPTING_REFLECTED,+VALIDATED_CROSS_SITE_SCRIPTING_PERSISTENT,+VALIDATED_CROSS_SITE_SCRIPTING_DOM</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">String</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">escapeJava</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>46FE894F-1F3B-4D52-94BF-B1CB81DE434D</RuleID>
                <TaintFlags>-JAVA_ENCODE,-NO_NEW_LINE,+POORVALIDATION,-VALIDATED_CROSS_SITE_SCRIPTING_REFLECTED,-VALIDATED_CROSS_SITE_SCRIPTING_PERSISTENT,-VALIDATED_CROSS_SITE_SCRIPTING_DOM</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">String</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">unescapeJava</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>D273A2AA-24D0-4CBA-AE48-DC4F2788C441</RuleID>
                <TaintFlags>+NO_NEW_LINE</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">String</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">deleteWhitespace</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>14a613be-adf0-43e2-ab6c-b5009f12771a</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">String</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">charAt</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>f5d9b0fd-0b7d-4385-8203-ee1c8a3ef421</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">String</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">fromCharArray</Value>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>df6f1eb7-787b-4b49-8ead-c8d1b63cd5b7</RuleID>
                <TaintFlags>+POORVALIDATION,+VALIDATED_CROSS_SITE_SCRIPTING_REFLECTED,+VALIDATED_CROSS_SITE_SCRIPTING_PERSISTENT,+VALIDATED_CROSS_SITE_SCRIPTING_DOM,+HTML_ENCODE</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">String</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">escapeHtml3|escapeHtml4</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>4ccef512-6681-400d-aa6d-0a6e91a77798</RuleID>
                <TaintFlags>+POORVALIDATION,+VALIDATED_CROSS_SITE_SCRIPTING_REFLECTED,+VALIDATED_CROSS_SITE_SCRIPTING_PERSISTENT,+VALIDATED_CROSS_SITE_SCRIPTING_DOM,+XML_ENCODE</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">String</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">escapeXml</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>afc23148-96ce-4b83-bc45-070b5a6453fa</RuleID>
                <TaintFlags>-POORVALIDATION,-VALIDATED_CROSS_SITE_SCRIPTING_REFLECTED,-VALIDATED_CROSS_SITE_SCRIPTING_PERSISTENT,-VALIDATED_CROSS_SITE_SCRIPTING_DOM,-HTML_ENCODE</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">String</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">unescapeHtml3|unescapeHtml4</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>1780070e-9bf2-4bd5-b1ad-dc9024f7c4f3</RuleID>
                <TaintFlags>-POORVALIDATION,-VALIDATED_CROSS_SITE_SCRIPTING_REFLECTED,-VALIDATED_CROSS_SITE_SCRIPTING_PERSISTENT,-VALIDATED_CROSS_SITE_SCRIPTING_DOM,-XML_ENCODE</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">String</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">unescapeXml</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>2ba1e786-543e-4159-89a2-96a812dac8b1</RuleID>
                <TaintFlags>+POORVALIDATION,+VALIDATED_CROSS_SITE_SCRIPTING_REFLECTED,+VALIDATED_CROSS_SITE_SCRIPTING_PERSISTENT,+VALIDATED_CROSS_SITE_SCRIPTING_DOM</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">String</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">stripHtmlTags</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>fdf4c985-0e19-40d5-881d-0b7f73d4cdd1</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Time</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">addHours</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this,0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>b99364e1-7866-4fd2-a944-f4769ee904bc</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Time</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">addMilliseconds</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this,0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>31e21bcc-1705-4478-8979-ae53edb71267</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Time</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">addMinutes</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this,0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>1f624017-1f06-4b5a-a742-b935507dd910</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Time</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">addSeconds</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this,0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>2bebdc5f-013c-4f26-b2f4-dd0619535c95</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Time</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">hour</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>68f6061f-fca0-4199-87f7-e772e5195fa6</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Time</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">millisecond</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>133bc3be-14f2-4ed0-bbd1-979100040045</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Time</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">minute</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>a703d79d-b576-430b-ab1d-8aacaec0df5e</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Time</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">newInstance</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>47699c82-c655-4ef7-be0a-0c8d73cb300d</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Time</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">second</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>f934d9e9-3c52-44f8-94aa-6b333ace753b</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Url</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">init^</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0...</InArguments>
                <OutArguments>this</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>ad928345-e27c-4281-8763-07ceb57fc07b</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Url</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">get(Authority|CurrentRequestUrl|File|Host|Path|Query|Ref|SalesforceBaseUrl|UserInfo)|toExternalForm</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>6259a9bc-00c2-46c0-9364-8349e37808f5</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Url</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">get(DefaultPort|Port)</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>606d27dd-7819-4b16-8ce3-d05b381f7b94</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">List</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">init^</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>this</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>fe361cf1-5931-40f2-940e-88c8441ea1b2</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">List</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">add|addAll</Pattern>
                    </FunctionName>
                    <Parameters>
                        <WildCard min="1" max="1"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>this</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>7fedc0c2-c3c6-4870-9213-71b680c4f00b</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">List</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">sort</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>9ba72146-d83b-4941-b918-55c03473fbd2</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">List</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">iterator</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>3eb887de-5086-463e-b73d-30f51582d29e</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">iterator</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">next</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>add99121-3efa-4b4a-8826-1c2f05b587dd</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Map</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">init^</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>this</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>b5015e2f-eb76-416f-ad9c-13c649f034f6</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Map</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">putAll</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>this</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>7fe6c267-3c18-48b3-834d-d55483d2f479</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Set</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">init^</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>this</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>5d265b12-84aa-46bc-b3d4-093eb7bcdeca</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Set</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">add|addAll</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>this</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>53579845-12c0-41fa-ac37-f2e4f9dc9452</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Database</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">convertLead</Value>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0...</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Database</Group>
                </MetaInfo>
                <RuleID>2a41d1ba-f672-454a-acbc-280f73f879f2</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">Database</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">QueryLocator</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">getQuery|iterator</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Database</Group>
                </MetaInfo>
                <RuleID>aad8dbdf-480e-4478-b3db-2afdff73e802</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">Database</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">QueryLocatorIterator</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">next</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Database</Group>
                </MetaInfo>
                <RuleID>fd445901-eaf4-4e56-848d-42264c221504</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">Database</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">LeadConvert</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">getAccountId|getContactId|getConvertedStatus|getLeadID|getOpportunityName|getOwnerID</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Database</Group>
                </MetaInfo>
                <RuleID>5b610104-9886-4d61-8b8a-a7f74be67016</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">Database</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">LeadConvert</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">setAccountId|setConvertedStatus|setDoNotCreateOpportunity|setLeadId|setOpportunityName|setOverwriteLeadSource|setOwnerId|setSendNotificationEmail</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>this</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Database</Group>
                </MetaInfo>
                <RuleID>c4099ff3-77dc-410c-b0ec-b6417df6c318</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">Database</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Error</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">getFields|getMessage</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Database</Group>
                </MetaInfo>
                <RuleID>0EDA4A2A-02AC-45B7-8D8E-92A3707069C9</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">Database</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Error</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">getStatusCode</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>4e22661e-c01a-4784-83ba-b7b298dd3643</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">PageReference</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">init^</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>this</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex DataSource</Group>
                </MetaInfo>
                <RuleID>17E0CEAC-5AFC-4E7D-A087-EFA14FAF69C6</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">DataSource</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Table</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">get_(columns|description|labelPlural|labelSingular|name|nameColumn)_property</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex DataSource</Group>
                </MetaInfo>
                <RuleID>84737D6A-AD26-442D-A1B7-8E2B6A9B1ACC</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">DataSource</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Column</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">get_(description|label|name|type)_property</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex DataSource</Group>
                </MetaInfo>
                <RuleID>15a79f7b-fd42-4d13-8a6b-4638f861d12b</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">DataSource</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">QueryUtils</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">applyLimitAndOffset</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>1</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex DataSource</Group>
                </MetaInfo>
                <RuleID>28a6a2f3-5b6c-4df8-b962-7a556faaeead</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">DataSource</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">QueryUtils</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">filter</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>1</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex DataSource</Group>
                </MetaInfo>
                <RuleID>c9280f0b-040a-464c-93b3-97d815b9c80e</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">DataSource</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">QueryUtils</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">process</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>1</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex DataSource</Group>
                </MetaInfo>
                <RuleID>24b2e9c2-377a-4580-9b1e-37257e872c16</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">DataSource</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">QueryUtils</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">sort</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>1</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex DataSource</Group>
                </MetaInfo>
                <RuleID>9005d177-b997-44ff-9e60-f97429036da6</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">DataSource</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">SearchContext</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">init^</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>4</InArguments>
                <OutArguments>this</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex DataSource</Group>
                </MetaInfo>
                <RuleID>592655c9-826d-4b4e-8dbc-e37b69232477</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">DataSource</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">SearchContext</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">get_searchPhrase_property</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex DataSource</Group>
                </MetaInfo>
                <RuleID>1ba1e847-ae48-496c-9a54-40a582565b0a</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">DataSource</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">SearchContext</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">set_searchPhrase_property</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>this</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Search</Group>
                </MetaInfo>
                <RuleID>af14c0a1-0960-4867-bf3d-96ff35d7019e</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">Search</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">KnowledgeSuggestionFilter</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">add(ArticleType|DataCategory)|set(Channel|DataCategories|Language|PublishStatus|ValidationStatus)</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>this</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Search</Group>
                </MetaInfo>
                <RuleID>61b00cb6-2cc5-44a6-bcd6-caf769994808</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">Search</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">QuestionSuggestionFilter</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">add(GroupId|NetworkId|UserId)|set(GroupIds|NetworkIds|TopicId|UserIds)</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>this</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Search</Group>
                </MetaInfo>
                <RuleID>e0961dcc-55ff-4b6e-b8e8-ec02711c62c5</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">Search</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">SearchResult</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">get(SObject|Snippet)</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Search</Group>
                </MetaInfo>
                <RuleID>d6937d0d-1d1c-4723-aeae-1dc0c48d4982</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">Search</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">SearchResults</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">get</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Search</Group>
                </MetaInfo>
                <RuleID>88cc513f-0c70-4b29-b395-7116335e73bc</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">Search</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">SuggestionResult</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">getSObject</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Search</Group>
                </MetaInfo>
                <RuleID>24982E57-EC43-41B8-A5EE-BA3F1951F91B</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">Search</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">SuggestionResults</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">getSuggestionResults</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Core</Group>
                </MetaInfo>
                <RuleID>598405e7-6bed-4763-8127-9368390be488</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>.*</Pattern>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">DatetimeFunctions</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">_date|_dateValue|_dateTimeValue|_day|_month|_year</Pattern>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0...</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Core</Group>
                </MetaInfo>
                <RuleID>11de44c4-5715-4204-bbe5-7a385c646951</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>.*</Pattern>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">InfFunctions</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">_blankValue|_nullValue</Pattern>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0...</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Core</Group>
                </MetaInfo>
                <RuleID>dd0fa4ef-d6bb-4021-a0bc-0952d69d2fac</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>.*</Pattern>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">MathFunctions</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">_abs|_ceiling|_exp|_floor|_ln|_log|_max|_min|_mod|_round|_sqrt</Pattern>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0...</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Core</Group>
                </MetaInfo>
                <RuleID>4e625233-43dc-4266-a412-aef034b1dc76</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>.*</Pattern>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">TextFunctions</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">_caseSafeId</Value>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0...</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Core</Group>
                </MetaInfo>
                <RuleID>25f7cf3b-d948-4733-9e36-75bff7ca8e0d</RuleID>
                <TaintFlags>+POORVALIDATION,+VALIDATED_CROSS_SITE_SCRIPTING_REFLECTED,+VALIDATED_CROSS_SITE_SCRIPTING_PERSISTENT,+VALIDATED_CROSS_SITE_SCRIPTING_DOM,+HTML_ENCODE</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>.*</Pattern>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">TextFunctions</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">_htmlEncode</Value>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0...</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Core</Group>
                </MetaInfo>
                <RuleID>8016a300-7569-4214-bf99-6f5687023fd3</RuleID>
                <TaintFlags>+POORVALIDATION,+VALIDATED_CROSS_SITE_SCRIPTING_REFLECTED,+VALIDATED_CROSS_SITE_SCRIPTING_PERSISTENT,+VALIDATED_CROSS_SITE_SCRIPTING_DOM,+JS_ENCODE,+NO_NEW_LINE</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>.*</Pattern>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">TextFunctions</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">_jsenCode</Value>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0...</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Core</Group>
                </MetaInfo>
                <RuleID>342110f2-7cd1-44d9-91e0-f520eabb8c1c</RuleID>
                <TaintFlags>+POORVALIDATION,+VALIDATED_CROSS_SITE_SCRIPTING_REFLECTED,+VALIDATED_CROSS_SITE_SCRIPTING_PERSISTENT,+VALIDATED_CROSS_SITE_SCRIPTING_DOM,+HTML_ENCODE,+JS_ENCODE,+NO_NEW_LINE</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>.*</Pattern>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">TextFunctions</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">_jsInHtmlEncode</Value>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0...</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Core</Group>
                </MetaInfo>
                <RuleID>df82b5ae-4703-4f00-ac6b-00296032bd22</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>.*</Pattern>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">TextFunctions</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">_left|_lower|_mid|_right</Pattern>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Core</Group>
                </MetaInfo>
                <RuleID>c1779836-d81a-41b7-a410-268535bb0b50</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>.*</Pattern>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">TextFunctions</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">_lPad|_rPad</Pattern>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0,2</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Core</Group>
                </MetaInfo>
                <RuleID>3845599c-4c8f-4e6d-8d7b-e6e0626b03ab</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>.*</Pattern>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">TextFunctions</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">_substitute|_text|_trim|_upper</Pattern>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0...</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Core</Group>
                </MetaInfo>
                <RuleID>82e0181f-a81f-4f2a-8795-329e277bd7e1</RuleID>
                <TaintFlags>+POORVALIDATION,+VALIDATED_CROSS_SITE_SCRIPTING_REFLECTED,+VALIDATED_CROSS_SITE_SCRIPTING_PERSISTENT,+VALIDATED_CROSS_SITE_SCRIPTING_DOM,+URL_ENCODE,+NO_NEW_LINE</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>.*</Pattern>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">TextFunctions</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">_urlencode</Value>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0...</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Core</Group>
                </MetaInfo>
                <RuleID>ae6316ca-b499-4a92-9272-b116ff7c9d4a</RuleID>
                <TaintFlags>+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>.*</Pattern>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">TextFunctions</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">_value</Value>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0...</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Core</Group>
                </MetaInfo>
                <RuleID>3b76a95b-61df-4831-936e-2cc34d64f122</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>.*</Pattern>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">AdvancedFunctions</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">_getRecordIds|_vLookUp</Pattern>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <InArguments>0...</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Visualforce Core</Group>
                </MetaInfo>
                <RuleID>68ceaebc-c34b-4568-a1fc-89c170ef58bf</RuleID>
                <TaintFlags>+APEX_VALIDATION_OFF</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">vfstd</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">ContextFunctions</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">evaluateInAttrFalse</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Core</Group>
                </MetaInfo>
                <RuleID>1ff3e065-a560-43c8-8067-bdcfc448db50</RuleID>
                <FunctionIdentifier>
                    <FunctionName>
                        <Value caseInsensitive="true">_soql_where</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>1</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 89</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.4 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.5 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A6 Injection Flaws</Group>
                    <Group name="altcategoryOWASP2007">A2 Injection Flaws</Group>
                    <Group name="altcategoryOWASP2010">A1 Injection</Group>
                    <Group name="altcategoryOWASP2013">A1 Injection</Group>
                    <Group name="altcategoryOWASP2017">A1 Injection</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 089</Group>
                    <Group name="altcategoryCWETop252019">[6] CWE ID 089</Group>
                    <Group name="altcategoryCWETop252020">[6] CWE ID 089</Group>
                    <Group name="altcategoryCWETop252021">[6] CWE ID 089</Group>
                    <Group name="altcategoryCWETop252022">[3] CWE ID 089</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.6</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.2</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.1</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II</Group>
                    <Group name="altcategoryWASC24+2">SQL Injection</Group>
                    <Group name="altcategoryWASC2.00">SQL Injection (WASC-19)</Group>
                    <Group name="altcategorySANS2010">Insecure Interaction - CWE ID 089</Group>
                    <Group name="altcategorySANSTop252011">Insecure Interaction - CWE ID 089</Group>
                    <Group name="Accuracy">5.0</Group>
                    <Group name="Impact">5.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>4b4fc6ec-b1c9-4043-8400-70b0d2d89c5e</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>SOQL Injection</VulnCategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.soql_injection"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_SOQL_INJECTION"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="NUMBER"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Database</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">query|countQuery|getQueryLocator</Pattern>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 89</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.4 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.5 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A6 Injection Flaws</Group>
                    <Group name="altcategoryOWASP2007">A2 Injection Flaws</Group>
                    <Group name="altcategoryOWASP2010">A1 Injection</Group>
                    <Group name="altcategoryOWASP2013">A1 Injection</Group>
                    <Group name="altcategoryOWASP2017">A1 Injection</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 089</Group>
                    <Group name="altcategoryCWETop252019">[6] CWE ID 089</Group>
                    <Group name="altcategoryCWETop252020">[6] CWE ID 089</Group>
                    <Group name="altcategoryCWETop252021">[6] CWE ID 089</Group>
                    <Group name="altcategoryCWETop252022">[3] CWE ID 089</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.6</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.2</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.1</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II</Group>
                    <Group name="altcategoryWASC24+2">SQL Injection</Group>
                    <Group name="altcategoryWASC2.00">SQL Injection (WASC-19)</Group>
                    <Group name="altcategorySANS2010">Insecure Interaction - CWE ID 089</Group>
                    <Group name="altcategorySANSTop252011">Insecure Interaction - CWE ID 089</Group>
                    <Group name="Accuracy">5.0</Group>
                    <Group name="Impact">5.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>05e4196e-b261-474b-86fc-405ddaec850a</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>SOSL Injection</VulnCategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.sosl_injection"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_SOSL_INJECTION"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="NUMBER"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Search</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">query|find|suggest</Pattern>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex DataSource</Group>
                    <Group name="altcategoryGDPR">Access Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-3 Access Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-3 Access Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000213, CCI-001084, CCI-002165</Group>
                    <Group name="altcategoryCWE">CWE ID 566</Group>
                    <Group name="altcategoryOWASPASVS4.0">4.1.2 General Access Control Design (L1 L2 L3), 4.1.3 General Access Control Design (L1 L2 L3), 4.1.5 General Access Control Design (L1 L2 L3), 4.2.1 Operation Level Access Control (L1 L2 L3), 13.4.2 GraphQL and other Web Service Data Layer Security Requirements (L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A2 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2007">A4 Insecure Direct Object Reference</Group>
                    <Group name="altcategoryOWASP2010">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2013">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2017">A5 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2021">A01 Broken Access Control</Group>
                    <Group name="altcategoryOWASPMobile2014">M5 Poor Authorization and Authentication</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">AC</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.2</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategorySTIG3.1">APP3480.1 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3480.1 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Insufficient Authorization</Group>
                    <Group name="altcategoryWASC2.00">Insufficient Authorization (WASC-02)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 863</Group>
                    <Group name="Accuracy">1.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>23989ff5-0145-45e3-a02c-e772effe8399</RuleID>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Access Control</VulnCategory>
                <VulnSubcategory>Database</VulnSubcategory>
                <DefaultSeverity>2.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.access_control_database"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <Not>
                            <TaintFlagSet taintFlag="VALIDATED_ACCESS_CONTROL_DATABASE"/>
                        </Not>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">DataSource</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">DeleteContext</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">set_(tableSelected|externalIds)_property</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Core</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 79, CWE ID 80</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategorySANSTop252011">Insecure Interaction - CWE ID 079</Group>
                    <Group name="Accuracy">5.0</Group>
                    <Group name="Impact">5.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>84607B39-90B9-43C0-8AA5-0666C7F10802</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Reflected</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.cross_site_scripting_reflected"/>
                <Sink>
                    <InArguments>0...</InArguments>
                    <Conditional>
                        <And>
                            <And>
                                <TaintFlagSet taintFlag="XSS"/>
                                <Or>
                                    <TaintFlagSet taintFlag="WEB"/>
                                    <TaintFlagSet taintFlag="GUI_FORM"/>
                                    <TaintFlagSet taintFlag="FORM"/>
                                    <TaintFlagSet taintFlag="NETWORK"/>
                                </Or>
                            </And>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_REFLECTED"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="POORVALIDATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern caseInsensitive="true">.*</Pattern>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">AdvancedFunctions</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">_linkto|_requireScript</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Core</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 79, CWE ID 80</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategorySANSTop252011">Insecure Interaction - CWE ID 079</Group>
                    <Group name="Accuracy">5.0</Group>
                    <Group name="Impact">5.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>DE3ABB1F-FFE5-48C2-A683-B1F6DFF51131</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Persistent</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.cross_site_scripting_persistent"/>
                <Sink>
                    <InArguments>0...</InArguments>
                    <Conditional>
                        <And>
                            <And>
                                <TaintFlagSet taintFlag="XSS"/>
                                <Or>
                                    <TaintFlagSet taintFlag="DATABASE"/>
                                    <TaintFlagSet taintFlag="LDAP"/>
                                    <TaintFlagSet taintFlag="NAMING"/>
                                    <TaintFlagSet taintFlag="XML"/>
                                    <TaintFlagSet taintFlag="OPEN_XML"/>
                                    <TaintFlagSet taintFlag="JSON"/>
                                    <TaintFlagSet taintFlag="WEBSERVICE"/>
                                </Or>
                            </And>
                            <Not>
                                <TaintFlagSet taintFlag="POORVALIDATION"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_PERSISTENT"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern caseInsensitive="true">.*</Pattern>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">AdvancedFunctions</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">_linkto|_requireScript</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Core</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 82, CWE ID 83, CWE ID 87, CWE ID 692</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 116</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">2.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>B8640826-3E06-4BB6-9707-FE17A117AB92</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Poor Validation</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.cross_site_scripting_poor_validation"/>
                <Sink>
                    <InArguments>0...</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="XSS"/>
                            <TaintFlagSet taintFlag="POORVALIDATION"/>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_POOR_VALIDATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern caseInsensitive="true">.*</Pattern>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">AdvancedFunctions</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">_linkto|_requireScript</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Visualforce Core</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 601</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.1.5 Input Validation Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A1 Unvalidated Input</Group>
                    <Group name="altcategoryOWASP2007">None</Group>
                    <Group name="altcategoryOWASP2010">A10 Unvalidated Redirects and Forwards</Group>
                    <Group name="altcategoryOWASP2013">A10 Unvalidated Redirects and Forwards</Group>
                    <Group name="altcategoryOWASP2017">None</Group>
                    <Group name="altcategoryOWASP2021">None</Group>
                    <Group name="altcategoryOWASPMobile2014">M1 Weak Server Side Controls</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.1</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategoryWASC24+2">Content Spoofing</Group>
                    <Group name="altcategoryWASC2.00">URL Redirector Abuse (WASC-38)</Group>
                    <Group name="altcategorySANS2010">Insecure Interaction - CWE ID 601</Group>
                    <Group name="altcategorySANSTop252011">Insecure Interaction - CWE ID 601</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.5</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Availability</Group>
                    <Group name="ConfidentialityImpact">None</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">Complete</Group>
                    <Group name="RemediationEffort">3.0</Group>
                    <Group name="audience">medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>5ed07fb0-8175-4dab-a967-e22992b3c465</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Frame Spoofing</VulnCategory>
                <DefaultSeverity>2.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.frame_spoofing"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_FRAME_SPOOFING"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="NUMBER"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="RCONCATENATED"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern caseInsensitive="true">vfstd</Pattern>
                    </NamespaceName>
                    <ClassName>
                        <Pattern caseInsensitive="true">apexiframe</Pattern>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">set_src</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Visualforce Core</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 79, CWE ID 80</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategorySANSTop252011">Insecure Interaction - CWE ID 079</Group>
                    <Group name="Accuracy">5.0</Group>
                    <Group name="Impact">5.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>95468dbf-b2f5-4924-b321-5e68b48aa777</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Reflected</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.cross_site_scripting_reflected"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <And>
                                <TaintFlagSet taintFlag="XSS"/>
                                <TaintFlagSet taintFlag="APEX_VALIDATION_OFF"/>
                                <Or>
                                    <TaintFlagSet taintFlag="WEB"/>
                                    <TaintFlagSet taintFlag="GUI_FORM"/>
                                    <TaintFlagSet taintFlag="FORM"/>
                                    <TaintFlagSet taintFlag="NETWORK"/>
                                </Or>
                            </And>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_REFLECTED"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="POORVALIDATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">vfstd</Value>
                    </NamespaceName>
                    <ClassName>
                        <Pattern caseInsensitive="true">ApexChartTips|apexcolumn|apexcommandButton|apexcommandLink|apexdataList|apexdataTable|apeximage|apexincludeScript|apexoutputField|apexoutputLabel|apexoutputLink|apexoutputText|apexInputText|ApexPageBlockTable|ApexPanelBar|ApexRepeat|ApexSelectCheckboxes|ApexSelectList|apexselectOption|apexselectOptions|ApexSelectRadio|apexstylesheet|ApexTabPanel|apexvariable</Pattern>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">set_value|set_valuefield|set_itemvalue|set_footervalue|set_headervalue</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Visualforce Core</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 79, CWE ID 80</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategorySANSTop252011">Insecure Interaction - CWE ID 079</Group>
                    <Group name="Accuracy">5.0</Group>
                    <Group name="Impact">5.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>9ebfeecf-cdad-41a3-a0e5-bd039140c110</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Reflected</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.cross_site_scripting_reflected"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <And>
                                <TaintFlagSet taintFlag="XSS"/>
                                <Or>
                                    <TaintFlagSet taintFlag="WEB"/>
                                    <TaintFlagSet taintFlag="GUI_FORM"/>
                                    <TaintFlagSet taintFlag="FORM"/>
                                    <TaintFlagSet taintFlag="NETWORK"/>
                                </Or>
                            </And>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_REFLECTED"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="POORVALIDATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">vfstd</Value>
                    </NamespaceName>
                    <ClassName>
                        <Pattern caseInsensitive="true">apexincludeScript</Pattern>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">set_value</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Visualforce Core</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 79, CWE ID 80</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategorySANSTop252011">Insecure Interaction - CWE ID 079</Group>
                    <Group name="Accuracy">5.0</Group>
                    <Group name="Impact">5.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>206086a6-103b-44bc-a430-1acad0fd1db3</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Reflected</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.cross_site_scripting_reflected"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <And>
                                <TaintFlagSet taintFlag="XSS"/>
                                <Or>
                                    <TaintFlagSet taintFlag="WEB"/>
                                    <TaintFlagSet taintFlag="GUI_FORM"/>
                                    <TaintFlagSet taintFlag="FORM"/>
                                    <TaintFlagSet taintFlag="NETWORK"/>
                                </Or>
                            </And>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_REFLECTED"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="POORVALIDATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">vfstd</Value>
                    </NamespaceName>
                    <ClassName>
                        <Pattern caseInsensitive="true">ApexParam</Pattern>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">set_value</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Visualforce Core</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 79, CWE ID 80</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategorySANSTop252011">Insecure Interaction - CWE ID 079</Group>
                    <Group name="Accuracy">5.0</Group>
                    <Group name="Impact">5.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>a0bd4813-504f-4d9f-a747-78fc4cbae99a</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Reflected</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.cross_site_scripting_reflected"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <And>
                                <TaintFlagSet taintFlag="XSS"/>
                                <Or>
                                    <TaintFlagSet taintFlag="WEB"/>
                                    <TaintFlagSet taintFlag="GUI_FORM"/>
                                    <TaintFlagSet taintFlag="FORM"/>
                                    <TaintFlagSet taintFlag="NETWORK"/>
                                </Or>
                            </And>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_REFLECTED"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="POORVALIDATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">vfstd</Value>
                    </NamespaceName>
                    <ClassName>
                        <Pattern caseInsensitive="true">apexactionStatus|apexcolumn|apexcommandButton|apexcommandLink|apexdataList|apexdataTable|apexform|apeximage|apexinput|apexinputCheckbox|apexinputField|apexinputFile|apexinputSecret|apexinputText|apexinputTextarea|apexoutputLabel|apexoutputLink|apexoutputPanel|apexpageBlock|apexpageBlockButtons|apexpageBlockSection|apexpageBlockTable|apexpanelGrid|apexselectCheckboxes|apexselectList|apexselectOption|apexselectRadio|apextab|apextabPanel|apextoolbar|apextoolbarGroup</Pattern>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">set_onclick|set_onblclick|set_onkeydown|set_onkeypress|set_onkeyup|set_onmousedown|set_onmousemove|set_onmouseout|set_onmouseover|set_onmouseup|set_onstart|set_onstop</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Visualforce Core</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 79, CWE ID 80</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategorySANSTop252011">Insecure Interaction - CWE ID 079</Group>
                    <Group name="Accuracy">5.0</Group>
                    <Group name="Impact">5.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>5b9aeda9-52c6-46d0-845d-85ac68a60d4c</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Reflected</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.cross_site_scripting_reflected"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <And>
                                <TaintFlagSet taintFlag="XSS"/>
                                <TaintFlagSet taintFlag="APEX_VALIDATION_OFF"/>
                                <Or>
                                    <TaintFlagSet taintFlag="WEB"/>
                                    <TaintFlagSet taintFlag="GUI_FORM"/>
                                    <TaintFlagSet taintFlag="FORM"/>
                                    <TaintFlagSet taintFlag="NETWORK"/>
                                </Or>
                            </And>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_REFLECTED"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="POORVALIDATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">vfstd</Value>
                    </NamespaceName>
                    <ClassName>
                        <Pattern caseInsensitive="true">ApexActionStatus|ApexAreaSeries|ApexAxis|ApexBarSeries|ApexColumn|ApexCommandButton|ApexCommandLink|ApexDataList|ApexDataTable|ApexDetail|ApexEmailPublisher|ApexForm|ApexIframe|ApexImage|ApexInput|ApexInputCheckbox|ApexInputFile|ApexInputSecret|ApexInputText|ApexInputTextarea|ApexLineSeries|ApexLogCallPublisher|ApexMapMarker|ApexMessage|ApexMessages|ApexOutputField|ApexOutputLabel|ApexOutputLink|ApexOutputPanel|ApexOutputText|ApexPage|ApexPageBlock|ApexPageBlockButtons|ApexPageBlockSection|ApexPageBlockTable|ApexPageMessage|ApexPanelGrid|ApexRadarSeries|ApexRelatedList|ApexScatterSeries|ApexSectionHeader|ApexSelectCheckboxes|ApexSelectList|ApexSelectOption|ApexSelectRadio|ApexTab|ApexTabPanel|SupportCaseArticles|SupportPortalPublisher</Pattern>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">set_title</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Visualforce Core</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 79, CWE ID 80</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategorySANSTop252011">Insecure Interaction - CWE ID 079</Group>
                    <Group name="Accuracy">5.0</Group>
                    <Group name="Impact">5.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>65759770-c36a-46aa-810c-966a24fa4ddd</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Reflected</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.cross_site_scripting_reflected"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <And>
                                <TaintFlagSet taintFlag="XSS"/>
                                <Or>
                                    <TaintFlagSet taintFlag="WEB"/>
                                    <TaintFlagSet taintFlag="GUI_FORM"/>
                                    <TaintFlagSet taintFlag="FORM"/>
                                    <TaintFlagSet taintFlag="NETWORK"/>
                                </Or>
                            </And>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_REFLECTED"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="POORVALIDATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">vfstd</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">ContextFunctions</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">evaluateInStyle|evaluateInScript</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Visualforce Core</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 79, CWE ID 80</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategorySANSTop252011">Insecure Interaction - CWE ID 079</Group>
                    <Group name="Accuracy">5.0</Group>
                    <Group name="Impact">5.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>7d1388a8-0af4-4981-9700-bcf6e1d16eaa</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Reflected</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.cross_site_scripting_reflected"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <And>
                                <TaintFlagSet taintFlag="XSS"/>
                                <Or>
                                    <TaintFlagSet taintFlag="WEB"/>
                                    <TaintFlagSet taintFlag="GUI_FORM"/>
                                    <TaintFlagSet taintFlag="FORM"/>
                                    <TaintFlagSet taintFlag="NETWORK"/>
                                </Or>
                            </And>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_REFLECTED"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="POORVALIDATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">vfstd</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">ContextFunctions</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">evaluateInTagFalse</Value>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 79, CWE ID 80</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategorySANSTop252011">Insecure Interaction - CWE ID 079</Group>
                    <Group name="Accuracy">5.0</Group>
                    <Group name="Impact">5.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>2df845a5-b9be-4de4-883e-41bf65c2468c</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Reflected</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.cross_site_scripting_reflected"/>
                <Sink>
                    <InArguments>0,1</InArguments>
                    <Conditional>
                        <And>
                            <And>
                                <TaintFlagSet taintFlag="XSS"/>
                                <Or>
                                    <TaintFlagSet taintFlag="WEB"/>
                                    <TaintFlagSet taintFlag="GUI_FORM"/>
                                    <TaintFlagSet taintFlag="FORM"/>
                                    <TaintFlagSet taintFlag="NETWORK"/>
                                </Or>
                            </And>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_REFLECTED"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="POORVALIDATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">HTTPResponse</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">setBody|setBodyAsBlob</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 79, CWE ID 80</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategorySANSTop252011">Insecure Interaction - CWE ID 079</Group>
                    <Group name="Accuracy">5.0</Group>
                    <Group name="Impact">5.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>6265269b-27a1-4e6d-a6f3-de76bbe352c5</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Reflected</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.cross_site_scripting_reflected"/>
                <Sink>
                    <InArguments>0,1</InArguments>
                    <Conditional>
                        <And>
                            <And>
                                <TaintFlagSet taintFlag="XSS"/>
                                <Or>
                                    <TaintFlagSet taintFlag="WEB"/>
                                    <TaintFlagSet taintFlag="GUI_FORM"/>
                                    <TaintFlagSet taintFlag="FORM"/>
                                    <TaintFlagSet taintFlag="NETWORK"/>
                                </Or>
                            </And>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_REFLECTED"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="POORVALIDATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">SelectOption</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">init^</Value>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 79, CWE ID 80</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategorySANSTop252011">Insecure Interaction - CWE ID 079</Group>
                    <Group name="Accuracy">5.0</Group>
                    <Group name="Impact">5.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>5d8371ca-8fdf-4df4-b97a-66e0ae2b61ca</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Reflected</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.cross_site_scripting_reflected"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <And>
                                <TaintFlagSet taintFlag="XSS"/>
                                <Or>
                                    <TaintFlagSet taintFlag="WEB"/>
                                    <TaintFlagSet taintFlag="GUI_FORM"/>
                                    <TaintFlagSet taintFlag="FORM"/>
                                    <TaintFlagSet taintFlag="NETWORK"/>
                                </Or>
                            </And>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_REFLECTED"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="POORVALIDATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">SelectOption</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">setLabel|setValue</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Visualforce Core</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 79, CWE ID 80</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategorySANSTop252011">Insecure Interaction - CWE ID 079</Group>
                    <Group name="Accuracy">5.0</Group>
                    <Group name="Impact">5.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>4a838ad4-fb9b-4404-934e-9bfaf1922bae</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Persistent</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.cross_site_scripting_persistent"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <And>
                                <TaintFlagSet taintFlag="XSS"/>
                                <TaintFlagSet taintFlag="APEX_VALIDATION_OFF"/>
                                <Or>
                                    <TaintFlagSet taintFlag="DATABASE"/>
                                    <TaintFlagSet taintFlag="LDAP"/>
                                    <TaintFlagSet taintFlag="NAMING"/>
                                    <TaintFlagSet taintFlag="XML"/>
                                    <TaintFlagSet taintFlag="OPEN_XML"/>
                                    <TaintFlagSet taintFlag="JSON"/>
                                    <TaintFlagSet taintFlag="WEBSERVICE"/>
                                </Or>
                            </And>
                            <Not>
                                <TaintFlagSet taintFlag="POORVALIDATION"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_PERSISTENT"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">vfstd</Value>
                    </NamespaceName>
                    <ClassName>
                        <Pattern caseInsensitive="true">ApexChartTips|apexcolumn|apexcommandButton|apexcommandLink|apexdataList|apexdataTable|apeximage|apexincludeScript|apexoutputField|apexoutputLabel|apexoutputLink|apexoutputText|apexInputText|ApexPageBlockTable|ApexPanelBar|ApexRepeat|ApexSelectCheckboxes|ApexSelectList|apexselectOption|apexselectOptions|ApexSelectRadio|apexstylesheet|ApexTabPanel|apexvariable</Pattern>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">set_value|set_valuefield|set_itemvalue|set_footervalue|set_headervalue</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Visualforce Core</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 79, CWE ID 80</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategorySANSTop252011">Insecure Interaction - CWE ID 079</Group>
                    <Group name="Accuracy">5.0</Group>
                    <Group name="Impact">5.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>da0ee74d-4309-49ed-afb0-7170bece9917</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Persistent</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.cross_site_scripting_persistent"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <And>
                                <TaintFlagSet taintFlag="XSS"/>
                                <Or>
                                    <TaintFlagSet taintFlag="DATABASE"/>
                                    <TaintFlagSet taintFlag="LDAP"/>
                                    <TaintFlagSet taintFlag="NAMING"/>
                                    <TaintFlagSet taintFlag="XML"/>
                                    <TaintFlagSet taintFlag="OPEN_XML"/>
                                    <TaintFlagSet taintFlag="JSON"/>
                                    <TaintFlagSet taintFlag="WEBSERVICE"/>
                                </Or>
                            </And>
                            <Not>
                                <TaintFlagSet taintFlag="POORVALIDATION"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_PERSISTENT"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">vfstd</Value>
                    </NamespaceName>
                    <ClassName>
                        <Pattern caseInsensitive="true">apexincludeScript</Pattern>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">set_value</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Visualforce Core</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 79, CWE ID 80</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategorySANSTop252011">Insecure Interaction - CWE ID 079</Group>
                    <Group name="Accuracy">5.0</Group>
                    <Group name="Impact">5.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>a26ddbd6-e256-471e-b944-447d6fc9fa14</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Persistent</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.cross_site_scripting_persistent"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <And>
                                <TaintFlagSet taintFlag="XSS"/>
                                <TaintFlagSet taintFlag="APEX_VALIDATION_OFF"/>
                                <Or>
                                    <TaintFlagSet taintFlag="DATABASE"/>
                                    <TaintFlagSet taintFlag="LDAP"/>
                                    <TaintFlagSet taintFlag="NAMING"/>
                                    <TaintFlagSet taintFlag="XML"/>
                                    <TaintFlagSet taintFlag="OPEN_XML"/>
                                    <TaintFlagSet taintFlag="JSON"/>
                                    <TaintFlagSet taintFlag="WEBSERVICE"/>
                                </Or>
                            </And>
                            <Not>
                                <TaintFlagSet taintFlag="POORVALIDATION"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_PERSISTENT"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">vfstd</Value>
                    </NamespaceName>
                    <ClassName>
                        <Pattern caseInsensitive="true">ApexParam</Pattern>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">set_value</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Visualforce Core</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 79, CWE ID 80</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategorySANSTop252011">Insecure Interaction - CWE ID 079</Group>
                    <Group name="Accuracy">5.0</Group>
                    <Group name="Impact">5.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>a4fa7c46-a569-425a-8405-1687b3e056f6</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Persistent</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.cross_site_scripting_persistent"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <And>
                                <TaintFlagSet taintFlag="XSS"/>
                                <Or>
                                    <TaintFlagSet taintFlag="DATABASE"/>
                                    <TaintFlagSet taintFlag="LDAP"/>
                                    <TaintFlagSet taintFlag="NAMING"/>
                                    <TaintFlagSet taintFlag="XML"/>
                                    <TaintFlagSet taintFlag="OPEN_XML"/>
                                    <TaintFlagSet taintFlag="JSON"/>
                                    <TaintFlagSet taintFlag="WEBSERVICE"/>
                                </Or>
                            </And>
                            <Not>
                                <TaintFlagSet taintFlag="POORVALIDATION"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_PERSISTENT"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">vfstd</Value>
                    </NamespaceName>
                    <ClassName>
                        <Pattern caseInsensitive="true">apexactionStatus|apexcolumn|apexcommandButton|apexcommandLink|apexdataList|apexdataTable|apexform|apeximage|apexinput|apexinputCheckbox|apexinputField|apexinputFile|apexinputSecret|apexinputText|apexinputTextarea|apexoutputLabel|apexoutputLink|apexoutputPanel|apexpageBlock|apexpageBlockButtons|apexpageBlockSection|apexpageBlockTable|apexpanelGrid|apexselectCheckboxes|apexselectList|apexselectOption|apexselectRadio|apextab|apextabPanel|apextoolbar|apextoolbarGroup</Pattern>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">set_onclick|set_onblclick|set_onkeydown|set_onkeypress|set_onkeyup|set_onmousedown|set_onmousemove|set_onmouseout|set_onmouseover|set_onmouseup|set_onstart|set_onstop</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Visualforce Core</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 79, CWE ID 80</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategorySANSTop252011">Insecure Interaction - CWE ID 079</Group>
                    <Group name="Accuracy">5.0</Group>
                    <Group name="Impact">5.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>04deba22-f8bd-4d6d-a9a1-5f77b69a4945</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Persistent</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.cross_site_scripting_persistent"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <And>
                                <TaintFlagSet taintFlag="XSS"/>
                                <TaintFlagSet taintFlag="APEX_VALIDATION_OFF"/>
                                <Or>
                                    <TaintFlagSet taintFlag="DATABASE"/>
                                    <TaintFlagSet taintFlag="LDAP"/>
                                    <TaintFlagSet taintFlag="NAMING"/>
                                    <TaintFlagSet taintFlag="XML"/>
                                    <TaintFlagSet taintFlag="OPEN_XML"/>
                                    <TaintFlagSet taintFlag="JSON"/>
                                    <TaintFlagSet taintFlag="WEBSERVICE"/>
                                </Or>
                            </And>
                            <Not>
                                <TaintFlagSet taintFlag="POORVALIDATION"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_PERSISTENT"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">vfstd</Value>
                    </NamespaceName>
                    <ClassName>
                        <Pattern caseInsensitive="true">ApexActionStatus|ApexAreaSeries|ApexAxis|ApexBarSeries|ApexColumn|ApexCommandButton|ApexCommandLink|ApexDataList|ApexDataTable|ApexDetail|ApexEmailPublisher|ApexForm|ApexIframe|ApexImage|ApexInput|ApexInputCheckbox|ApexInputFile|ApexInputSecret|ApexInputText|ApexInputTextarea|ApexLineSeries|ApexLogCallPublisher|ApexMapMarker|ApexMessage|ApexMessages|ApexOutputField|ApexOutputLabel|ApexOutputLink|ApexOutputPanel|ApexOutputText|ApexPage|ApexPageBlock|ApexPageBlockButtons|ApexPageBlockSection|ApexPageBlockTable|ApexPageMessage|ApexPanelGrid|ApexRadarSeries|ApexRelatedList|ApexScatterSeries|ApexSectionHeader|ApexSelectCheckboxes|ApexSelectList|ApexSelectOption|ApexSelectRadio|ApexTab|ApexTabPanel|SupportCaseArticles|SupportPortalPublisher</Pattern>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">set_title</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Visualforce Core</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 79, CWE ID 80</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategorySANSTop252011">Insecure Interaction - CWE ID 079</Group>
                    <Group name="Accuracy">5.0</Group>
                    <Group name="Impact">5.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>0bbdbff4-40fc-4208-9582-2dc1cd630d7d</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Persistent</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.cross_site_scripting_persistent"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <And>
                                <TaintFlagSet taintFlag="XSS"/>
                                <Or>
                                    <TaintFlagSet taintFlag="DATABASE"/>
                                    <TaintFlagSet taintFlag="LDAP"/>
                                    <TaintFlagSet taintFlag="NAMING"/>
                                    <TaintFlagSet taintFlag="XML"/>
                                    <TaintFlagSet taintFlag="OPEN_XML"/>
                                    <TaintFlagSet taintFlag="JSON"/>
                                    <TaintFlagSet taintFlag="WEBSERVICE"/>
                                </Or>
                            </And>
                            <Not>
                                <TaintFlagSet taintFlag="POORVALIDATION"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_PERSISTENT"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">vfstd</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">ContextFunctions</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">evaluateInStyle|evaluateInScript</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Visualforce Core</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 79, CWE ID 80</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategorySANSTop252011">Insecure Interaction - CWE ID 079</Group>
                    <Group name="Accuracy">5.0</Group>
                    <Group name="Impact">5.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>0f393adc-587f-4599-be68-19566ad9c930</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Persistent</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.cross_site_scripting_persistent"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <And>
                                <TaintFlagSet taintFlag="XSS"/>
                                <Or>
                                    <TaintFlagSet taintFlag="DATABASE"/>
                                    <TaintFlagSet taintFlag="LDAP"/>
                                    <TaintFlagSet taintFlag="NAMING"/>
                                    <TaintFlagSet taintFlag="XML"/>
                                    <TaintFlagSet taintFlag="OPEN_XML"/>
                                    <TaintFlagSet taintFlag="JSON"/>
                                    <TaintFlagSet taintFlag="WEBSERVICE"/>
                                </Or>
                            </And>
                            <Not>
                                <TaintFlagSet taintFlag="POORVALIDATION"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_PERSISTENT"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">vfstd</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">ContextFunctions</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">evaluateInTagFalse</Value>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 79, CWE ID 80</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategorySANSTop252011">Insecure Interaction - CWE ID 079</Group>
                    <Group name="Accuracy">5.0</Group>
                    <Group name="Impact">5.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>c355202c-9546-4db8-99ea-dc9ed07d67e9</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Persistent</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.cross_site_scripting_persistent"/>
                <Sink>
                    <InArguments>0,1</InArguments>
                    <Conditional>
                        <And>
                            <And>
                                <TaintFlagSet taintFlag="XSS"/>
                                <Or>
                                    <TaintFlagSet taintFlag="DATABASE"/>
                                    <TaintFlagSet taintFlag="LDAP"/>
                                    <TaintFlagSet taintFlag="NAMING"/>
                                    <TaintFlagSet taintFlag="XML"/>
                                    <TaintFlagSet taintFlag="OPEN_XML"/>
                                    <TaintFlagSet taintFlag="JSON"/>
                                    <TaintFlagSet taintFlag="WEBSERVICE"/>
                                </Or>
                            </And>
                            <Not>
                                <TaintFlagSet taintFlag="POORVALIDATION"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_PERSISTENT"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">HTTPResponse</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">setBody|setBodyAsBlob</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 79, CWE ID 80</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategorySANSTop252011">Insecure Interaction - CWE ID 079</Group>
                    <Group name="Accuracy">5.0</Group>
                    <Group name="Impact">5.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>455fb527-79bd-458f-8742-31de7c735e8d</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Persistent</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.cross_site_scripting_persistent"/>
                <Sink>
                    <InArguments>0,1</InArguments>
                    <Conditional>
                        <And>
                            <And>
                                <TaintFlagSet taintFlag="XSS"/>
                                <Or>
                                    <TaintFlagSet taintFlag="DATABASE"/>
                                    <TaintFlagSet taintFlag="LDAP"/>
                                    <TaintFlagSet taintFlag="NAMING"/>
                                    <TaintFlagSet taintFlag="XML"/>
                                    <TaintFlagSet taintFlag="OPEN_XML"/>
                                    <TaintFlagSet taintFlag="JSON"/>
                                    <TaintFlagSet taintFlag="WEBSERVICE"/>
                                </Or>
                            </And>
                            <Not>
                                <TaintFlagSet taintFlag="POORVALIDATION"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_PERSISTENT"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">SelectOption</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">init^</Value>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 79, CWE ID 80</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategorySANSTop252011">Insecure Interaction - CWE ID 079</Group>
                    <Group name="Accuracy">5.0</Group>
                    <Group name="Impact">5.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>abda36a9-f256-4076-99f5-26efed8b6653</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Persistent</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.cross_site_scripting_persistent"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <And>
                                <TaintFlagSet taintFlag="XSS"/>
                                <Or>
                                    <TaintFlagSet taintFlag="DATABASE"/>
                                    <TaintFlagSet taintFlag="LDAP"/>
                                    <TaintFlagSet taintFlag="NAMING"/>
                                    <TaintFlagSet taintFlag="XML"/>
                                    <TaintFlagSet taintFlag="OPEN_XML"/>
                                    <TaintFlagSet taintFlag="JSON"/>
                                    <TaintFlagSet taintFlag="WEBSERVICE"/>
                                </Or>
                            </And>
                            <Not>
                                <TaintFlagSet taintFlag="POORVALIDATION"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_PERSISTENT"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">SelectOption</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">setLabel|setValue</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Visualforce Core</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 82, CWE ID 83, CWE ID 87, CWE ID 692</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 116</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">2.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>6f4841c9-25f6-42a3-9296-8c1ac2bbf003</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Poor Validation</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.cross_site_scripting_poor_validation"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="XSS"/>
                            <TaintFlagSet taintFlag="POORVALIDATION"/>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_POOR_VALIDATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">vfstd</Value>
                    </NamespaceName>
                    <ClassName>
                        <Pattern caseInsensitive="true">ApexChartTips|apexcolumn|apexcommandButton|apexcommandLink|apexdataList|apexdataTable|apeximage|apexincludeScript|apexoutputField|apexoutputLabel|apexoutputLink|apexoutputText|apexInputText|ApexPageBlockTable|ApexPanelBar|ApexRepeat|ApexSelectCheckboxes|ApexSelectList|apexselectOption|apexselectOptions|ApexSelectRadio|apexstylesheet|ApexTabPanel|apexvariable</Pattern>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">set_value|set_valuefield|set_itemvalue|set_footervalue|set_headervalue</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Visualforce Core</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 82, CWE ID 83, CWE ID 87, CWE ID 692</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 116</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">2.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>b0268005-13ec-4000-949c-1cc9972c4271</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Poor Validation</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.cross_site_scripting_poor_validation"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="XSS"/>
                            <TaintFlagSet taintFlag="POORVALIDATION"/>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_POOR_VALIDATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">vfstd</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">ApexParam</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">set_value</Value>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Visualforce Core</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 82, CWE ID 83, CWE ID 87, CWE ID 692</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 116</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">2.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>89ec2386-3174-40f4-b03a-8c0fde004350</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Poor Validation</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.cross_site_scripting_poor_validation"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="XSS"/>
                            <TaintFlagSet taintFlag="POORVALIDATION"/>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_POOR_VALIDATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">vfstd</Value>
                    </NamespaceName>
                    <ClassName>
                        <Pattern caseInsensitive="true">apexactionStatus|apexcolumn|apexcommandButton|apexcommandLink|apexdataList|apexdataTable|apexform|apeximage|apexinput|apexinputCheckbox|apexinputField|apexinputFile|apexinputSecret|apexinputText|apexinputTextarea|apexoutputLabel|apexoutputLink|apexoutputPanel|apexpageBlock|apexpageBlockButtons|apexpageBlockSection|apexpageBlockTable|apexpanelGrid|apexselectCheckboxes|apexselectList|apexselectOption|apexselectRadio|apextab|apextabPanel|apextoolbar|apextoolbarGroup</Pattern>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">set_onclick|set_onblclick|set_onkeydown|set_onkeypress|set_onkeyup|set_onmousedown|set_onmousemove|set_onmouseout|set_onmouseover|set_onmouseup|set_onstart|set_onstop</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Visualforce Core</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 82, CWE ID 83, CWE ID 87, CWE ID 692</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 116</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">2.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>c6bf4ef2-34d6-4dbc-a616-dc06a230b2da</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Poor Validation</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.cross_site_scripting_poor_validation"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="XSS"/>
                            <TaintFlagSet taintFlag="POORVALIDATION"/>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_POOR_VALIDATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">vfstd</Value>
                    </NamespaceName>
                    <ClassName>
                        <Pattern caseInsensitive="true">ApexActionStatus|ApexAreaSeries|ApexAxis|ApexBarSeries|ApexColumn|ApexCommandButton|ApexCommandLink|ApexDataList|ApexDataTable|ApexDetail|ApexEmailPublisher|ApexForm|ApexIframe|ApexImage|ApexInput|ApexInputCheckbox|ApexInputFile|ApexInputSecret|ApexInputText|ApexInputTextarea|ApexLineSeries|ApexLogCallPublisher|ApexMapMarker|ApexMessage|ApexMessages|ApexOutputField|ApexOutputLabel|ApexOutputLink|ApexOutputPanel|ApexOutputText|ApexPage|ApexPageBlock|ApexPageBlockButtons|ApexPageBlockSection|ApexPageBlockTable|ApexPageMessage|ApexPanelGrid|ApexRadarSeries|ApexRelatedList|ApexScatterSeries|ApexSectionHeader|ApexSelectCheckboxes|ApexSelectList|ApexSelectOption|ApexSelectRadio|ApexTab|ApexTabPanel|SupportCaseArticles|SupportPortalPublisher</Pattern>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">set_title</Value>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Visualforce Core</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 82, CWE ID 83, CWE ID 87, CWE ID 692</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 116</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">2.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>498d4b8b-89f8-4f09-99cd-be689d883e21</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Poor Validation</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.cross_site_scripting_poor_validation"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="XSS"/>
                            <TaintFlagSet taintFlag="POORVALIDATION"/>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_POOR_VALIDATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">vfstd</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">ContextFunctions</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">evaluateInStyle|evaluateInScript</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Visualforce Core</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 82, CWE ID 83, CWE ID 87, CWE ID 692</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 116</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">2.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>df6a47b6-239d-4c6c-afa3-3147cdc2e9ed</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Poor Validation</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.cross_site_scripting_poor_validation"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="XSS"/>
                            <TaintFlagSet taintFlag="POORVALIDATION"/>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_POOR_VALIDATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">vfstd</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">ContextFunctions</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">evaluateInTagFalse</Value>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Visualforce Core</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 82, CWE ID 83, CWE ID 87, CWE ID 692</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 116</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">2.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>745a6bf4-04e7-40b8-808c-9ae1bdf601e2</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Poor Validation</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.cross_site_scripting_poor_validation"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="XSS"/>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_POOR_VALIDATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">vfstd</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">ContextFunctions</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">evaluateInHTag|evaluateInHAttr</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 82, CWE ID 83, CWE ID 87, CWE ID 692</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 116</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">2.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>dae33d76-b831-4276-8b95-bbe6bca2e151</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Poor Validation</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.cross_site_scripting_poor_validation"/>
                <Sink>
                    <InArguments>0,1</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="XSS"/>
                            <TaintFlagSet taintFlag="POORVALIDATION"/>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_POOR_VALIDATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">HTTPResponse</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">setBody|setBodyAsBlob</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 82, CWE ID 83, CWE ID 87, CWE ID 692</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 116</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">2.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>89e5c38c-cfcb-4b2d-a604-7c5f8dd3dc0e</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Poor Validation</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.cross_site_scripting_poor_validation"/>
                <Sink>
                    <InArguments>0,1</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="XSS"/>
                            <TaintFlagSet taintFlag="POORVALIDATION"/>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_POOR_VALIDATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">SelectOption</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">init^</Value>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 82, CWE ID 83, CWE ID 87, CWE ID 692</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 116</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">2.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>ace9d202-d92e-4173-b1ef-288bf9ab3c30</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Poor Validation</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.cross_site_scripting_poor_validation"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="XSS"/>
                            <TaintFlagSet taintFlag="POORVALIDATION"/>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_POOR_VALIDATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">SelectOption</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">setLabel|setValue</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                    <Group name="altcategoryGDPR">Access Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-3 Access Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-3 Access Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000213, CCI-001084, CCI-002165</Group>
                    <Group name="altcategoryCWE">CWE ID 566</Group>
                    <Group name="altcategoryOWASPASVS4.0">4.1.2 General Access Control Design (L1 L2 L3), 4.1.3 General Access Control Design (L1 L2 L3), 4.1.5 General Access Control Design (L1 L2 L3), 4.2.1 Operation Level Access Control (L1 L2 L3), 13.4.2 GraphQL and other Web Service Data Layer Security Requirements (L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A2 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2007">A4 Insecure Direct Object Reference</Group>
                    <Group name="altcategoryOWASP2010">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2013">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2017">A5 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2021">A01 Broken Access Control</Group>
                    <Group name="altcategoryOWASPMobile2014">M5 Poor Authorization and Authentication</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">AC</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.2</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategorySTIG3.1">APP3480.1 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3480.1 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Insufficient Authorization</Group>
                    <Group name="altcategoryWASC2.00">Insufficient Authorization (WASC-02)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 863</Group>
                    <Group name="Accuracy">1.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>ce191e6f-88ec-4093-96a1-32418bde02ad</RuleID>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Access Control</VulnCategory>
                <VulnSubcategory>Database</VulnSubcategory>
                <DefaultSeverity>2.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.access_control_database"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <Not>
                            <TaintFlagSet taintFlag="VALIDATED_ACCESS_CONTROL_DATABASE"/>
                        </Not>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Database</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">delete|emptyRecycleBin|undelete|update</Pattern>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                    <Group name="altcategoryGDPR">Access Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-3 Access Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-3 Access Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000213, CCI-001084, CCI-002165</Group>
                    <Group name="altcategoryCWE">CWE ID 566</Group>
                    <Group name="altcategoryOWASPASVS4.0">4.1.2 General Access Control Design (L1 L2 L3), 4.1.3 General Access Control Design (L1 L2 L3), 4.1.5 General Access Control Design (L1 L2 L3), 4.2.1 Operation Level Access Control (L1 L2 L3), 13.4.2 GraphQL and other Web Service Data Layer Security Requirements (L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A2 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2007">A4 Insecure Direct Object Reference</Group>
                    <Group name="altcategoryOWASP2010">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2013">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2017">A5 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2021">A01 Broken Access Control</Group>
                    <Group name="altcategoryOWASPMobile2014">M5 Poor Authorization and Authentication</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">AC</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.2</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategorySTIG3.1">APP3480.1 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3480.1 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Insufficient Authorization</Group>
                    <Group name="altcategoryWASC2.00">Insufficient Authorization (WASC-02)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 863</Group>
                    <Group name="Accuracy">1.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>0b0bf393-ee35-4c4c-aecb-b8dd1770d56e</RuleID>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Access Control</VulnCategory>
                <VulnSubcategory>Database</VulnSubcategory>
                <DefaultSeverity>2.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.access_control_database"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <Not>
                            <TaintFlagSet taintFlag="VALIDATED_ACCESS_CONTROL_DATABASE"/>
                        </Not>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Database</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">query|countQuery|getQueryLocator</Pattern>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                    <Group name="altcategoryGDPR">Access Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-3 Access Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-3 Access Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000213, CCI-001084, CCI-002165</Group>
                    <Group name="altcategoryCWE">CWE ID 566</Group>
                    <Group name="altcategoryOWASPASVS4.0">4.1.2 General Access Control Design (L1 L2 L3), 4.1.3 General Access Control Design (L1 L2 L3), 4.1.5 General Access Control Design (L1 L2 L3), 4.2.1 Operation Level Access Control (L1 L2 L3), 13.4.2 GraphQL and other Web Service Data Layer Security Requirements (L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A2 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2007">A4 Insecure Direct Object Reference</Group>
                    <Group name="altcategoryOWASP2010">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2013">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2017">A5 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2021">A01 Broken Access Control</Group>
                    <Group name="altcategoryOWASPMobile2014">M5 Poor Authorization and Authentication</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">AC</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.2</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategorySTIG3.1">APP3480.1 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3480.1 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Insufficient Authorization</Group>
                    <Group name="altcategoryWASC2.00">Insufficient Authorization (WASC-02)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 863</Group>
                    <Group name="Accuracy">1.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>54b1336e-94e2-495d-849f-a54ddd19b682</RuleID>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Access Control</VulnCategory>
                <VulnSubcategory>Database</VulnSubcategory>
                <DefaultSeverity>2.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.access_control_database"/>
                <Sink>
                    <InArguments>0,1</InArguments>
                    <Conditional>
                        <Not>
                            <TaintFlagSet taintFlag="VALIDATED_ACCESS_CONTROL_DATABASE"/>
                        </Not>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Database</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">merge|upsert</Pattern>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                    <Group name="altcategoryGDPR">Access Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-3 Access Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-3 Access Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000213, CCI-001084, CCI-002165</Group>
                    <Group name="altcategoryCWE">CWE ID 566</Group>
                    <Group name="altcategoryOWASPASVS4.0">4.1.2 General Access Control Design (L1 L2 L3), 4.1.3 General Access Control Design (L1 L2 L3), 4.1.5 General Access Control Design (L1 L2 L3), 4.2.1 Operation Level Access Control (L1 L2 L3), 13.4.2 GraphQL and other Web Service Data Layer Security Requirements (L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A2 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2007">A4 Insecure Direct Object Reference</Group>
                    <Group name="altcategoryOWASP2010">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2013">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2017">A5 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2021">A01 Broken Access Control</Group>
                    <Group name="altcategoryOWASPMobile2014">M5 Poor Authorization and Authentication</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">AC</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.2</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategorySTIG3.1">APP3480.1 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3480.1 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Insufficient Authorization</Group>
                    <Group name="altcategoryWASC2.00">Insufficient Authorization (WASC-02)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 863</Group>
                    <Group name="Accuracy">1.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>306003b0-14c2-4a65-870a-f2c1c74b1e79</RuleID>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Access Control</VulnCategory>
                <VulnSubcategory>Database</VulnSubcategory>
                <DefaultSeverity>2.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.access_control_database"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <Not>
                            <TaintFlagSet taintFlag="VALIDATED_ACCESS_CONTROL_DATABASE"/>
                        </Not>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Database</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">deleteAsync|insertAsync|updateAsync|deleteImmediate|insertImmediate|updateImmediate</Pattern>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                    <Group name="altcategoryGDPR">Access Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-3 Access Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-3 Access Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000213, CCI-001084, CCI-002165</Group>
                    <Group name="altcategoryCWE">CWE ID 566</Group>
                    <Group name="altcategoryOWASPASVS4.0">4.1.2 General Access Control Design (L1 L2 L3), 4.1.3 General Access Control Design (L1 L2 L3), 4.1.5 General Access Control Design (L1 L2 L3), 4.2.1 Operation Level Access Control (L1 L2 L3), 13.4.2 GraphQL and other Web Service Data Layer Security Requirements (L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A2 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2007">A4 Insecure Direct Object Reference</Group>
                    <Group name="altcategoryOWASP2010">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2013">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2017">A5 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2021">A01 Broken Access Control</Group>
                    <Group name="altcategoryOWASPMobile2014">M5 Poor Authorization and Authentication</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">AC</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.2</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategorySTIG3.1">APP3480.1 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3480.1 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Insufficient Authorization</Group>
                    <Group name="altcategoryWASC2.00">Insufficient Authorization (WASC-02)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 863</Group>
                    <Group name="Accuracy">1.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>bf7d7780-8237-4588-91d2-108a94b9d83a</RuleID>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Access Control</VulnCategory>
                <VulnSubcategory>Database</VulnSubcategory>
                <DefaultSeverity>2.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.access_control_database"/>
                <Sink>
                    <InArguments>1</InArguments>
                    <Conditional>
                        <Not>
                            <TaintFlagSet taintFlag="VALIDATED_ACCESS_CONTROL_DATABASE"/>
                        </Not>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">Database</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Batchable</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">execute</Value>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                    <Group name="altcategoryGDPR">Access Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-3 Access Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-3 Access Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000213, CCI-001084, CCI-002165</Group>
                    <Group name="altcategoryCWE">CWE ID 566</Group>
                    <Group name="altcategoryOWASPASVS4.0">4.1.2 General Access Control Design (L1 L2 L3), 4.1.3 General Access Control Design (L1 L2 L3), 4.1.5 General Access Control Design (L1 L2 L3), 4.2.1 Operation Level Access Control (L1 L2 L3), 13.4.2 GraphQL and other Web Service Data Layer Security Requirements (L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A2 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2007">A4 Insecure Direct Object Reference</Group>
                    <Group name="altcategoryOWASP2010">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2013">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2017">A5 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2021">A01 Broken Access Control</Group>
                    <Group name="altcategoryOWASPMobile2014">M5 Poor Authorization and Authentication</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">AC</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.2</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategorySTIG3.1">APP3480.1 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3480.1 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Insufficient Authorization</Group>
                    <Group name="altcategoryWASC2.00">Insufficient Authorization (WASC-02)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 863</Group>
                    <Group name="Accuracy">1.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>8a88fd60-15c0-4746-ac24-3cee5ffb0760</RuleID>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Access Control</VulnCategory>
                <VulnSubcategory>Database</VulnSubcategory>
                <DefaultSeverity>2.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.access_control_database"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <Not>
                            <TaintFlagSet taintFlag="VALIDATED_ACCESS_CONTROL_DATABASE"/>
                        </Not>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Search</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">query|find|suggest</Pattern>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Core</Group>
                    <Group name="altcategoryGDPR">Access Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-3 Access Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-3 Access Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000213, CCI-001084, CCI-002165</Group>
                    <Group name="altcategoryCWE">CWE ID 566</Group>
                    <Group name="altcategoryOWASPASVS4.0">4.1.2 General Access Control Design (L1 L2 L3), 4.1.3 General Access Control Design (L1 L2 L3), 4.1.5 General Access Control Design (L1 L2 L3), 4.2.1 Operation Level Access Control (L1 L2 L3), 13.4.2 GraphQL and other Web Service Data Layer Security Requirements (L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A2 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2007">A4 Insecure Direct Object Reference</Group>
                    <Group name="altcategoryOWASP2010">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2013">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2017">A5 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2021">A01 Broken Access Control</Group>
                    <Group name="altcategoryOWASPMobile2014">M5 Poor Authorization and Authentication</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">AC</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.2</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategorySTIG3.1">APP3480.1 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3480.1 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Insufficient Authorization</Group>
                    <Group name="altcategoryWASC2.00">Insufficient Authorization (WASC-02)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 863</Group>
                    <Group name="Accuracy">1.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>e3010f26-5222-4884-b848-47ed572b8d7f</RuleID>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Access Control</VulnCategory>
                <VulnSubcategory>Database</VulnSubcategory>
                <DefaultSeverity>2.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.access_control_database"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <Not>
                            <TaintFlagSet taintFlag="VALIDATED_ACCESS_CONTROL_DATABASE"/>
                        </Not>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <FunctionName>
                        <Pattern caseInsensitive="true">_soql_select|_soql_update|_soql_delete|_soql_merge|_soql_upsert|_soql_undelete</Pattern>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex DataSource</Group>
                    <Group name="altcategoryGDPR">Access Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-3 Access Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-3 Access Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000213, CCI-001084, CCI-002165</Group>
                    <Group name="altcategoryCWE">CWE ID 566</Group>
                    <Group name="altcategoryOWASPASVS4.0">4.1.2 General Access Control Design (L1 L2 L3), 4.1.3 General Access Control Design (L1 L2 L3), 4.1.5 General Access Control Design (L1 L2 L3), 4.2.1 Operation Level Access Control (L1 L2 L3), 13.4.2 GraphQL and other Web Service Data Layer Security Requirements (L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A2 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2007">A4 Insecure Direct Object Reference</Group>
                    <Group name="altcategoryOWASP2010">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2013">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2017">A5 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2021">A01 Broken Access Control</Group>
                    <Group name="altcategoryOWASPMobile2014">M5 Poor Authorization and Authentication</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">AC</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.2</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategorySTIG3.1">APP3480.1 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3480.1 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Insufficient Authorization</Group>
                    <Group name="altcategoryWASC2.00">Insufficient Authorization (WASC-02)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 863</Group>
                    <Group name="Accuracy">1.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>6b6b22cb-a928-4a82-a933-4415a9ffc0aa</RuleID>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Access Control</VulnCategory>
                <VulnSubcategory>Database</VulnSubcategory>
                <DefaultSeverity>2.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.access_control_database"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <Not>
                            <TaintFlagSet taintFlag="VALIDATED_ACCESS_CONTROL_DATABASE"/>
                        </Not>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">DataSource</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">deleteContext</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">set_(externalIds|tableSelected)_property</Pattern>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex DataSource</Group>
                    <Group name="altcategoryGDPR">Access Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-3 Access Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-3 Access Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000213, CCI-001084, CCI-002165</Group>
                    <Group name="altcategoryCWE">CWE ID 566</Group>
                    <Group name="altcategoryOWASPASVS4.0">4.1.2 General Access Control Design (L1 L2 L3), 4.1.3 General Access Control Design (L1 L2 L3), 4.1.5 General Access Control Design (L1 L2 L3), 4.2.1 Operation Level Access Control (L1 L2 L3), 13.4.2 GraphQL and other Web Service Data Layer Security Requirements (L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A2 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2007">A4 Insecure Direct Object Reference</Group>
                    <Group name="altcategoryOWASP2010">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2013">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2017">A5 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2021">A01 Broken Access Control</Group>
                    <Group name="altcategoryOWASPMobile2014">M5 Poor Authorization and Authentication</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">AC</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.2</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategorySTIG3.1">APP3480.1 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3480.1 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Insufficient Authorization</Group>
                    <Group name="altcategoryWASC2.00">Insufficient Authorization (WASC-02)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 863</Group>
                    <Group name="Accuracy">1.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>7b290f13-ef50-4e89-b33d-b8f5f56f2d2d</RuleID>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Access Control</VulnCategory>
                <VulnSubcategory>Database</VulnSubcategory>
                <DefaultSeverity>2.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.access_control_database"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <Not>
                            <TaintFlagSet taintFlag="VALIDATED_ACCESS_CONTROL_DATABASE"/>
                        </Not>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">DataSource</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">queryContext</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">set_queryMoreToken_property</Value>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex DataSource</Group>
                    <Group name="altcategoryGDPR">Access Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-3 Access Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-3 Access Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000213, CCI-001084, CCI-002165</Group>
                    <Group name="altcategoryCWE">CWE ID 566</Group>
                    <Group name="altcategoryOWASPASVS4.0">4.1.2 General Access Control Design (L1 L2 L3), 4.1.3 General Access Control Design (L1 L2 L3), 4.1.5 General Access Control Design (L1 L2 L3), 4.2.1 Operation Level Access Control (L1 L2 L3), 13.4.2 GraphQL and other Web Service Data Layer Security Requirements (L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A2 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2007">A4 Insecure Direct Object Reference</Group>
                    <Group name="altcategoryOWASP2010">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2013">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2017">A5 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2021">A01 Broken Access Control</Group>
                    <Group name="altcategoryOWASPMobile2014">M5 Poor Authorization and Authentication</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">AC</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.2</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategorySTIG3.1">APP3480.1 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3480.1 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Insufficient Authorization</Group>
                    <Group name="altcategoryWASC2.00">Insufficient Authorization (WASC-02)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 863</Group>
                    <Group name="Accuracy">1.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>9153d2e1-dd49-49bf-ad98-64cba0315c9a</RuleID>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Access Control</VulnCategory>
                <VulnSubcategory>Database</VulnSubcategory>
                <DefaultSeverity>2.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.access_control_database"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <Not>
                            <TaintFlagSet taintFlag="VALIDATED_ACCESS_CONTROL_DATABASE"/>
                        </Not>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">DataSource</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">upsertContext</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">set_(rows|tableSelected)_property</Pattern>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex DataSource</Group>
                    <Group name="altcategoryGDPR">Access Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-3 Access Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-3 Access Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000213, CCI-001084, CCI-002165</Group>
                    <Group name="altcategoryCWE">CWE ID 566</Group>
                    <Group name="altcategoryOWASPASVS4.0">4.1.2 General Access Control Design (L1 L2 L3), 4.1.3 General Access Control Design (L1 L2 L3), 4.1.5 General Access Control Design (L1 L2 L3), 4.2.1 Operation Level Access Control (L1 L2 L3), 13.4.2 GraphQL and other Web Service Data Layer Security Requirements (L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A2 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2007">A4 Insecure Direct Object Reference</Group>
                    <Group name="altcategoryOWASP2010">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2013">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2017">A5 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2021">A01 Broken Access Control</Group>
                    <Group name="altcategoryOWASPMobile2014">M5 Poor Authorization and Authentication</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">AC</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.2</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategorySTIG3.1">APP3480.1 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3480.1 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Insufficient Authorization</Group>
                    <Group name="altcategoryWASC2.00">Insufficient Authorization (WASC-02)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 863</Group>
                    <Group name="Accuracy">1.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>11c9c6e8-6e02-4f41-9bb2-13ee7bb9cdfc</RuleID>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Access Control</VulnCategory>
                <VulnSubcategory>Database</VulnSubcategory>
                <DefaultSeverity>2.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.access_control_database"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <Not>
                            <TaintFlagSet taintFlag="VALIDATED_ACCESS_CONTROL_DATABASE"/>
                        </Not>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">DataSource</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">ColumnSelection</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">set_(columnName|tableName)_property</Pattern>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex DataSource</Group>
                    <Group name="altcategoryGDPR">Access Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-3 Access Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-3 Access Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000213, CCI-001084, CCI-002165</Group>
                    <Group name="altcategoryCWE">CWE ID 566</Group>
                    <Group name="altcategoryOWASPASVS4.0">4.1.2 General Access Control Design (L1 L2 L3), 4.1.3 General Access Control Design (L1 L2 L3), 4.1.5 General Access Control Design (L1 L2 L3), 4.2.1 Operation Level Access Control (L1 L2 L3), 13.4.2 GraphQL and other Web Service Data Layer Security Requirements (L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A2 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2007">A4 Insecure Direct Object Reference</Group>
                    <Group name="altcategoryOWASP2010">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2013">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2017">A5 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2021">A01 Broken Access Control</Group>
                    <Group name="altcategoryOWASPMobile2014">M5 Poor Authorization and Authentication</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">AC</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.2</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategorySTIG3.1">APP3480.1 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3480.1 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Insufficient Authorization</Group>
                    <Group name="altcategoryWASC2.00">Insufficient Authorization (WASC-02)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 863</Group>
                    <Group name="Accuracy">1.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>27e7360f-f1d1-4cce-8f58-28529672441b</RuleID>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Access Control</VulnCategory>
                <VulnSubcategory>Database</VulnSubcategory>
                <DefaultSeverity>2.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.access_control_database"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <Not>
                            <TaintFlagSet taintFlag="VALIDATED_ACCESS_CONTROL_DATABASE"/>
                        </Not>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">DataSource</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">TableSelection</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">set_tableSelected_property</Pattern>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex DataSource</Group>
                    <Group name="altcategoryGDPR">Access Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-3 Access Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-3 Access Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000213, CCI-001084, CCI-002165</Group>
                    <Group name="altcategoryCWE">CWE ID 566</Group>
                    <Group name="altcategoryOWASPASVS4.0">4.1.2 General Access Control Design (L1 L2 L3), 4.1.3 General Access Control Design (L1 L2 L3), 4.1.5 General Access Control Design (L1 L2 L3), 4.2.1 Operation Level Access Control (L1 L2 L3), 13.4.2 GraphQL and other Web Service Data Layer Security Requirements (L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A2 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2007">A4 Insecure Direct Object Reference</Group>
                    <Group name="altcategoryOWASP2010">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2013">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2017">A5 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2021">A01 Broken Access Control</Group>
                    <Group name="altcategoryOWASPMobile2014">M5 Poor Authorization and Authentication</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">AC</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.2</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategorySTIG3.1">APP3480.1 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3480.1 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Insufficient Authorization</Group>
                    <Group name="altcategoryWASC2.00">Insufficient Authorization (WASC-02)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 863</Group>
                    <Group name="Accuracy">1.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>0e248d20-35ea-4be7-a794-5ccf1d5d83b1</RuleID>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Access Control</VulnCategory>
                <VulnSubcategory>Database</VulnSubcategory>
                <DefaultSeverity>2.0</DefaultSeverity>
                <Description ref="desc.dataflow.apex.access_control_database"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <Not>
                            <TaintFlagSet taintFlag="VALIDATED_ACCESS_CONTROL_DATABASE"/>
                        </Not>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">DataSource</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Filter</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">set_(columnName|columnValue|subfilters|tableName|type)_property</Pattern>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowCleanseRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>783ebcff-4e4f-454e-b838-42868ff8c13c</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">sObject</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">clear</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <OutArguments>this</OutArguments>
            </DataflowCleanseRule>
            <DataflowCleanseRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>2aa5ac1e-38b2-4df9-a01c-0c9fde41531b</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Matcher</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">Reset</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <OutArguments>this,return</OutArguments>
            </DataflowCleanseRule>
            <DataflowCleanseRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>7f3c1f9e-02a7-4360-9fa3-e5997795463b</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">List</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">clear</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <OutArguments>this</OutArguments>
            </DataflowCleanseRule>
            <DataflowCleanseRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>f7b63d09-75c6-4526-aeb4-ec06515cd33d</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Map</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">clear</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <OutArguments>this</OutArguments>
            </DataflowCleanseRule>
            <DataflowCleanseRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>1c9b7d75-828b-455d-9ad5-df63587eaff7</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Set</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">clear</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <OutArguments>this</OutArguments>
            </DataflowCleanseRule>
            <SemanticRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 89</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.4 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.5 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A6 Injection Flaws</Group>
                    <Group name="altcategoryOWASP2007">A2 Injection Flaws</Group>
                    <Group name="altcategoryOWASP2010">A1 Injection</Group>
                    <Group name="altcategoryOWASP2013">A1 Injection</Group>
                    <Group name="altcategoryOWASP2017">A1 Injection</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 089</Group>
                    <Group name="altcategoryCWETop252019">[6] CWE ID 089</Group>
                    <Group name="altcategoryCWETop252020">[6] CWE ID 089</Group>
                    <Group name="altcategoryCWETop252021">[6] CWE ID 089</Group>
                    <Group name="altcategoryCWETop252022">[3] CWE ID 089</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.6</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.2</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.1</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II</Group>
                    <Group name="altcategoryWASC24+2">SQL Injection</Group>
                    <Group name="altcategoryWASC2.00">SQL Injection (WASC-19)</Group>
                    <Group name="altcategorySANS2010">Insecure Interaction - CWE ID 089</Group>
                    <Group name="altcategorySANSTop252011">Insecure Interaction - CWE ID 089</Group>
                    <Group name="Accuracy">1.0</Group>
                    <Group name="Impact">1.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>0eecc775-fd15-432b-9d21-005b7d79b88c</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>SOQL Injection</VulnCategory>
                <DefaultSeverity>5.0</DefaultSeverity>
                <Description ref="desc.semantic.apex.soql_injection"/>
                <Type>default</Type>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Database</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">query|countQuery|getQueryLocator</Pattern>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <Conditional>
                    <Not>
                        <IsConstant argument="0"/>
                    </Not>
                </Conditional>
            </SemanticRule>
            <SemanticRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002540 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 89</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.4 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.5 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A6 Injection Flaws</Group>
                    <Group name="altcategoryOWASP2007">A2 Injection Flaws</Group>
                    <Group name="altcategoryOWASP2010">A1 Injection</Group>
                    <Group name="altcategoryOWASP2013">A1 Injection</Group>
                    <Group name="altcategoryOWASP2017">A1 Injection</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 089</Group>
                    <Group name="altcategoryCWETop252019">[6] CWE ID 089</Group>
                    <Group name="altcategoryCWETop252020">[6] CWE ID 089</Group>
                    <Group name="altcategoryCWETop252021">[6] CWE ID 089</Group>
                    <Group name="altcategoryCWETop252022">[3] CWE ID 089</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.6</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.2</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.1</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II</Group>
                    <Group name="altcategoryWASC24+2">SQL Injection</Group>
                    <Group name="altcategoryWASC2.00">SQL Injection (WASC-19)</Group>
                    <Group name="altcategorySANS2010">Insecure Interaction - CWE ID 089</Group>
                    <Group name="altcategorySANSTop252011">Insecure Interaction - CWE ID 089</Group>
                    <Group name="Accuracy">1.0</Group>
                    <Group name="Impact">1.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>f3629ee7-e410-4a70-895e-e54eacf6ef5f</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>SOSL Injection</VulnCategory>
                <DefaultSeverity>5.0</DefaultSeverity>
                <Description ref="desc.semantic.apex.sosl_injection"/>
                <Type>default</Type>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Search</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">query|find|suggest</Pattern>
                    </FunctionName>
                    <Modifiers>
                        <Modifier>static</Modifier>
                    </Modifiers>
                </FunctionIdentifier>
                <Conditional>
                    <Not>
                        <IsConstant argument="0"/>
                    </Not>
                </Conditional>
            </SemanticRule>
            <StructuralRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Core</Group>
                    <Group name="altcategoryGDPR">Access Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-3 Access Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-3 Access Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000213, CCI-001084, CCI-002165</Group>
                    <Group name="altcategoryCWE">CWE ID 566</Group>
                    <Group name="altcategoryOWASPASVS4.0">1.2.2 Authentication Architectural Requirements (L2 L3), 1.2.3 Authentication Architectural Requirements (L2 L3), 1.2.4 Authentication Architectural Requirements (L2 L3), 1.4.2 Access Control Architectural Requirements (L2 L3), 1.4.4 Access Control Architectural Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 4.1.2 General Access Control Design (L1 L2 L3), 4.1.3 General Access Control Design (L1 L2 L3), 4.1.5 General Access Control Design (L1 L2 L3), 4.2.1 Operation Level Access Control (L1 L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.1 Malicious Code Search (L2 L3), 13.1.4 Generic Web Service Security Verification Requirements (L2 L3), 14.5.1 Validate HTTP Request Header Requirements (L1 L2 L3), 14.5.4 Validate HTTP Request Header Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A2 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2007">A4 Insecure Direct Object Reference</Group>
                    <Group name="altcategoryOWASP2010">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2013">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2017">A5 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2021">A01 Broken Access Control</Group>
                    <Group name="altcategoryOWASPMobile2014">M5 Poor Authorization and Authentication</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">AC</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.2</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategorySTIG3.1">APP3480.1 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3480.1 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Insufficient Authorization</Group>
                    <Group name="altcategoryWASC2.00">Insufficient Authorization (WASC-02)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 863</Group>
                    <Group name="Accuracy">1.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>2edd0212-de89-4d02-8bf7-5d0bd4be303e</RuleID>
                <Notes><![CDATA[This rule is responsible for detecting calls to Database methods and verify if there is an Access Control check implemented in the same function. The check is defined by a conditional statement (IfStatement) based on isupdatable function output.
		    The first clause verify whether the expression is "isupdatable == false" or "false == isupdatable" and the Database method is in the elseBlock and not in the ifBlock, or the Database method is outside IfStatement and there is a return call inside the ifBlock.
		    The second clause verify whether the expression is "isupdatable == true" or "true == isupdatable" and the Database method is in the ifBlock and not in the elseBlock, or the Database method is outside IfStatement and there is a return call inside the elseBlock.
		    The third clause verify the "!isupdatable" expression and if the Database method is in the elseBlock and not in the ifBlock, or the Database method is outside IfStatement and there is a return call inside the ifBlock.
		    Finally the last clause verify if the enclosing method is called by the user or it is an internal function.
	    ]]></Notes>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Access Control</VulnCategory>
                <DefaultSeverity>2.0</DefaultSeverity>
                <Description ref="desc.structural.apex.access_control_update"/>
                <Predicate><![CDATA[
		    FunctionCall call: call.function is [Function: name matches "(?i)_soql_update"]
		    and call.enclosingFunction reachedBy [Function: name matches "(?i)post"]
		    and not call.enclosingFunction reaches [Function f: f contains
		    [IfStatement ifStmt: (
		    ifStmt.expression is [Operation op: op contains [Literal: image == "false"]
		    and ( op.lhs is [FunctionCall: function is
		    [Function: name matches "(?i)isupdateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]]
		    or op.rhs is [FunctionCall: function is
		    [Function: name matches "(?i)isupdateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]])

		    ] and ((ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_update"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_update"]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_update"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_update"]]
		    and (ifStmt.ifBlock contains [ReturnStatement:] or ifStmt.ifBlock contains [ThrowStatement:])))
		    ) or (
		    ifStmt.expression is [Operation op2: op2 contains [Literal: image == "true"]
		    and ( op2.lhs is [FunctionCall: function is
		    [Function: name matches "(?i)isupdateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]]
		    or op2.rhs is [FunctionCall: function is
		    [Function: name matches "(?i)isupdateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]])

		    ] and ((ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_update"]]
		    and not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_update"]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_update"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_update"]]
		    and (ifStmt.elseBlock contains [ReturnStatement:] or ifStmt.elseBlock contains [ThrowStatement:])))
		    ) or (
		    ifStmt.expression is [Operation op3: op3.unary and op3.lhs is
		    [FunctionCall: function is [Function: name matches "(?i)isupdateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]
		    ]
		    ] and ((ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_update"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_update"]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_update"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_update"]]
		    and (ifStmt.ifBlock contains [ReturnStatement:] or ifStmt.ifBlock contains [ThrowStatement:])))
		    )
		    ]
		    ]
		    ]]></Predicate>
            </StructuralRule>
            <StructuralRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Core</Group>
                    <Group name="altcategoryGDPR">Access Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-3 Access Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-3 Access Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000213, CCI-001084, CCI-002165</Group>
                    <Group name="altcategoryCWE">CWE ID 566</Group>
                    <Group name="altcategoryOWASPASVS4.0">1.2.2 Authentication Architectural Requirements (L2 L3), 1.2.3 Authentication Architectural Requirements (L2 L3), 1.2.4 Authentication Architectural Requirements (L2 L3), 1.4.2 Access Control Architectural Requirements (L2 L3), 1.4.4 Access Control Architectural Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 4.1.2 General Access Control Design (L1 L2 L3), 4.1.3 General Access Control Design (L1 L2 L3), 4.1.5 General Access Control Design (L1 L2 L3), 4.2.1 Operation Level Access Control (L1 L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.1 Malicious Code Search (L2 L3), 13.1.4 Generic Web Service Security Verification Requirements (L2 L3), 14.5.1 Validate HTTP Request Header Requirements (L1 L2 L3), 14.5.4 Validate HTTP Request Header Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A2 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2007">A4 Insecure Direct Object Reference</Group>
                    <Group name="altcategoryOWASP2010">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2013">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2017">A5 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2021">A01 Broken Access Control</Group>
                    <Group name="altcategoryOWASPMobile2014">M5 Poor Authorization and Authentication</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">AC</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.2</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategorySTIG3.1">APP3480.1 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3480.1 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Insufficient Authorization</Group>
                    <Group name="altcategoryWASC2.00">Insufficient Authorization (WASC-02)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 863</Group>
                    <Group name="Accuracy">1.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>0683a680-86ea-43df-8623-bd0571d82fc0</RuleID>
                <Notes><![CDATA[This rule is responsible for detecting calls to Database methods and verify if there is an Access Control check implemented in the same function. The check is defined by a conditional statement (IfStatement) based on isaccessible function output.
		    The first clause verify whether the expression is "isaccessible == false" or "false == isaccessible" and the Database method is in the elseBlock and not in the ifBlock.
		    The second clause verify whether the expression is "isaccessible == true" or "true == isaccessible" and the Database method is in the ifBlock and not in the elseBlock.
		    The third clause verify the "!isaccessible" expression and if the Database method is in the elseBlock and not in the ifBlock.
		    Finally the last clause verify if the enclosing method is called by the user or it is an internal function.
	    ]]></Notes>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Access Control</VulnCategory>
                <DefaultSeverity>2.0</DefaultSeverity>
                <Description ref="desc.structural.apex.access_control_read"/>
                <Predicate><![CDATA[
		    FunctionCall call: call.function is [Function: name matches "(?i)_soql_select"]
		    and call.enclosingFunction reachedBy [Function: name matches "(?i)post"]
		    and not call.enclosingFunction reaches [Function f: f contains
		    [IfStatement ifStmt: (
		    ifStmt.expression is [Operation op: op contains [Literal: image == "false"]
		    and ( op.lhs is [FunctionCall: function is
		    [Function: name matches "(?i)isaccessible" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]]
		    or op.rhs is [FunctionCall: function is
		    [Function: name matches "(?i)isaccessible" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]])

		    ] and ((ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_select"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_select"]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_select"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_select"]]
		    and (ifStmt.ifBlock contains [ReturnStatement:] or ifStmt.ifBlock contains [ThrowStatement:])))
		    ) or (
		    ifStmt.expression is [Operation op2: op2 contains [Literal: image == "true"]
		    and ( op2.lhs is [FunctionCall: function is
		    [Function: name matches "(?i)isaccessible" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]]
		    or op2.rhs is [FunctionCall: function is
		    [Function: name matches "(?i)isaccessible" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]])

		    ] and ((ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_select"]]
		    and not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_select"]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_select"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_select"]]
		    and (ifStmt.elseBlock contains [ReturnStatement:] or ifStmt.ifBlock contains [ThrowStatement:])))
		    ) or (
		    ifStmt.expression is [Operation op3: op3.unary and op3.lhs is
		    [FunctionCall: function is [Function: name matches "(?i)isaccessible" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]
		    ]
		    ] and ((ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_select"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_select"]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_select"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_select"]]
		    and (ifStmt.ifBlock contains [ReturnStatement:] or ifStmt.ifBlock contains [ThrowStatement:])))
		    )
		    ]
		    ]
		    ]]></Predicate>
            </StructuralRule>
            <StructuralRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Core</Group>
                    <Group name="altcategoryGDPR">Access Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-3 Access Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-3 Access Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000213, CCI-001084, CCI-002165</Group>
                    <Group name="altcategoryCWE">CWE ID 566</Group>
                    <Group name="altcategoryOWASPASVS4.0">1.2.2 Authentication Architectural Requirements (L2 L3), 1.2.3 Authentication Architectural Requirements (L2 L3), 1.2.4 Authentication Architectural Requirements (L2 L3), 1.4.2 Access Control Architectural Requirements (L2 L3), 1.4.4 Access Control Architectural Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 4.1.2 General Access Control Design (L1 L2 L3), 4.1.3 General Access Control Design (L1 L2 L3), 4.1.5 General Access Control Design (L1 L2 L3), 4.2.1 Operation Level Access Control (L1 L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.1 Malicious Code Search (L2 L3), 13.1.4 Generic Web Service Security Verification Requirements (L2 L3), 14.5.1 Validate HTTP Request Header Requirements (L1 L2 L3), 14.5.4 Validate HTTP Request Header Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A2 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2007">A4 Insecure Direct Object Reference</Group>
                    <Group name="altcategoryOWASP2010">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2013">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2017">A5 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2021">A01 Broken Access Control</Group>
                    <Group name="altcategoryOWASPMobile2014">M5 Poor Authorization and Authentication</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">AC</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.2</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategorySTIG3.1">APP3480.1 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3480.1 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Insufficient Authorization</Group>
                    <Group name="altcategoryWASC2.00">Insufficient Authorization (WASC-02)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 863</Group>
                    <Group name="Accuracy">1.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>ffbffbfc-04d5-4eb6-a3f5-1c2d16e41993</RuleID>
                <Notes><![CDATA[This rule is responsible for detecting calls to Database methods and verify if there is an Access Control check implemented in the same function. The check is defined by a conditional statement (IfStatement) based on isaccessible function output.
		    The first clause verify whether the expression is "isaccessible == false" or "false == isaccessible" and the Database method is in the elseBlock and not in the ifBlock.
		    The second clause verify whether the expression is "isaccessible == true" or "true == isaccessible" and the Database method is in the ifBlock and not in the elseBlock.
		    The third clause verify the "!isaccessible" expression and if the Database method is in the elseBlock and not in the ifBlock.
		    Finally the last clause verify if the enclosing method is called by the user or it is an internal function.
	    ]]></Notes>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Access Control</VulnCategory>
                <DefaultSeverity>2.0</DefaultSeverity>
                <Description ref="desc.structural.apex.access_control_read"/>
                <Predicate><![CDATA[
		    FunctionCall call: call.function is [Function: name matches "(?i)_sosl_query"]
		    and call.enclosingFunction reachedBy [Function: name matches "(?i)post"]
		    and not call.enclosingFunction reaches [Function f: f contains
		    [IfStatement ifStmt: (
		    ifStmt.expression is [Operation op: op contains [Literal: image == "false"]
		    and ( op.lhs is [FunctionCall: function is
		    [Function: name matches "(?i)isaccessible" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]]
		    or op.rhs is [FunctionCall: function is
		    [Function: name matches "(?i)isaccessible" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]])

		    ] and ((ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_sosl_query"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_sosl_query"]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_sosl_query"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_sosl_query"]]
		    and (ifStmt.ifBlock contains [ReturnStatement:] or ifStmt.ifBlock contains [ThrowStatement:])))
		    ) or (
		    ifStmt.expression is [Operation op2: op2 contains [Literal: image == "true"]
		    and ( op2.lhs is [FunctionCall: function is
		    [Function: name matches "(?i)isaccessible" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]]
		    or op2.rhs is [FunctionCall: function is
		    [Function: name matches "(?i)isaccessible" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]])

		    ] and ((ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_sosl_query"]]
		    and not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_sosl_query"]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_sosl_query"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_sosl_query"]]
		    and (ifStmt.elseBlock contains [ReturnStatement:] or ifStmt.elseBlock contains [ThrowStatement:])))
		    ) or (
		    ifStmt.expression is [Operation op3: op3.unary and op3.lhs is
		    [FunctionCall: function is [Function: name matches "(?i)isaccessible" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]
		    ]
		    ] and ((ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_sosl_query"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_sosl_query"]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_sosl_query"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_sosl_query"]]
		    and (ifStmt.ifBlock contains [ReturnStatement:] or ifStmt.ifBlock contains [ThrowStatement:])))
		    )
		    ]
		    ]
		    ]]></Predicate>
            </StructuralRule>
            <StructuralRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Core</Group>
                    <Group name="altcategoryGDPR">Access Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-3 Access Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-3 Access Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000213, CCI-001084, CCI-002165</Group>
                    <Group name="altcategoryCWE">CWE ID 566</Group>
                    <Group name="altcategoryOWASPASVS4.0">1.2.2 Authentication Architectural Requirements (L2 L3), 1.2.3 Authentication Architectural Requirements (L2 L3), 1.2.4 Authentication Architectural Requirements (L2 L3), 1.4.2 Access Control Architectural Requirements (L2 L3), 1.4.4 Access Control Architectural Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 4.1.2 General Access Control Design (L1 L2 L3), 4.1.3 General Access Control Design (L1 L2 L3), 4.1.5 General Access Control Design (L1 L2 L3), 4.2.1 Operation Level Access Control (L1 L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.1 Malicious Code Search (L2 L3), 13.1.4 Generic Web Service Security Verification Requirements (L2 L3), 14.5.1 Validate HTTP Request Header Requirements (L1 L2 L3), 14.5.4 Validate HTTP Request Header Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A2 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2007">A4 Insecure Direct Object Reference</Group>
                    <Group name="altcategoryOWASP2010">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2013">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2017">A5 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2021">A01 Broken Access Control</Group>
                    <Group name="altcategoryOWASPMobile2014">M5 Poor Authorization and Authentication</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">AC</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.2</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategorySTIG3.1">APP3480.1 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3480.1 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Insufficient Authorization</Group>
                    <Group name="altcategoryWASC2.00">Insufficient Authorization (WASC-02)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 863</Group>
                    <Group name="Accuracy">1.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>447d7d91-4c41-4afc-89c5-115e1dc4de86</RuleID>
                <Notes><![CDATA[This rule is responsible for detecting calls to Database methods and verify if there is an Access Control check implemented in the same function. The check is defined by a conditional statement (IfStatement) based on isdeletable function output.
		    The first clause verify whether the expression is "isdeletable == false" or "false == isdeletable" and the Database method is in the elseBlock and not in the ifBlock.
		    The second clause verify whether the expression is "isdeletable == true" or "true == isdeletable" and the Database method is in the ifBlock and not in the elseBlock.
		    The third clause verify the "!isdeletable" expression and if the Database method is in the elseBlock and not in the ifBlock.
		    Finally the last clause verify if the enclosing method is called by the user or it is an internal function.
	    ]]></Notes>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Access Control</VulnCategory>
                <DefaultSeverity>2.0</DefaultSeverity>
                <Description ref="desc.structural.apex.access_control_delete"/>
                <Predicate><![CDATA[
		    FunctionCall call: call.function is [Function: name matches "(?i)_soql_delete"]
		    and call.enclosingFunction reachedBy [Function: name matches "(?i)post"]
		    and not call.enclosingFunction reaches [Function f: f contains
		    [IfStatement ifStmt: (
		    ifStmt.expression is [Operation op: op contains [Literal: image == "false"]
		    and ( op.lhs is [FunctionCall: function is
		    [Function: name matches "(?i)isdeletable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describesobjectresult"]]]
		    or op.rhs is [FunctionCall: function is
		    [Function: name matches "(?i)isdeletable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describesobjectresult"]]])

		    ] and ((ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_delete"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_delete"]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_delete"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_delete"]]
		    and (ifStmt.ifBlock contains [ReturnStatement:] or ifStmt.ifBlock contains [ThrowStatement:])))
		    ) or (
		    ifStmt.expression is [Operation op2: op2 contains [Literal: image == "true"]
		    and ( op2.lhs is [FunctionCall: function is
		    [Function: name matches "(?i)isdeletable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describesobjectresult"]]]
		    or op2.rhs is [FunctionCall: function is
		    [Function: name matches "(?i)isdeletable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describesobjectresult"]]])

		    ] and ((ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_delete"]]
		    and not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_delete"]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_delete"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_delete"]]
		    and (ifStmt.elseBlock contains [ReturnStatement:] or ifStmt.elseBlock contains [ThrowStatement:])))
		    ) or (
		    ifStmt.expression is [Operation op3: op3.unary and op3.lhs is
		    [FunctionCall: function is [Function: name matches "(?i)isdeletable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describesobjectresult"]]
		    ]
		    ] and ((ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_delete"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_delete"]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_delete"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_delete"]]
		    and (ifStmt.ifBlock contains [ReturnStatement:] or ifStmt.ifBlock contains [ThrowStatement:])))
		    )
		    ]
		    ]
		    ]]></Predicate>
            </StructuralRule>
            <StructuralRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Core</Group>
                    <Group name="altcategoryGDPR">Access Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-3 Access Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-3 Access Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000213, CCI-001084, CCI-002165</Group>
                    <Group name="altcategoryCWE">CWE ID 566</Group>
                    <Group name="altcategoryOWASPASVS4.0">1.2.2 Authentication Architectural Requirements (L2 L3), 1.2.3 Authentication Architectural Requirements (L2 L3), 1.2.4 Authentication Architectural Requirements (L2 L3), 1.4.2 Access Control Architectural Requirements (L2 L3), 1.4.4 Access Control Architectural Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 4.1.2 General Access Control Design (L1 L2 L3), 4.1.3 General Access Control Design (L1 L2 L3), 4.1.5 General Access Control Design (L1 L2 L3), 4.2.1 Operation Level Access Control (L1 L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.1 Malicious Code Search (L2 L3), 13.1.4 Generic Web Service Security Verification Requirements (L2 L3), 14.5.1 Validate HTTP Request Header Requirements (L1 L2 L3), 14.5.4 Validate HTTP Request Header Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A2 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2007">A4 Insecure Direct Object Reference</Group>
                    <Group name="altcategoryOWASP2010">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2013">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2017">A5 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2021">A01 Broken Access Control</Group>
                    <Group name="altcategoryOWASPMobile2014">M5 Poor Authorization and Authentication</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">AC</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.2</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategorySTIG3.1">APP3480.1 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3480.1 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Insufficient Authorization</Group>
                    <Group name="altcategoryWASC2.00">Insufficient Authorization (WASC-02)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 863</Group>
                    <Group name="Accuracy">1.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>46b14590-1fbb-41b8-8113-d8da6137df5c</RuleID>
                <Notes><![CDATA[This rule is responsible for detecting calls to Database methods and verify if there is an Access Control check implemented in the same function. The check is defined by a conditional statement (IfStatement) based on iscreateable function output.
		    The first clause verify whether the expression is "iscreateable == false" or "false == iscreateable" and the Database method is in the elseBlock and not in the ifBlock.
		    The second clause verify whether the expression is "iscreateable == true" or "true == iscreateable" and the Database method is in the ifBlock and not in the elseBlock.
		    The third clause verify the "!iscreateable" expression and if the Database method is in the elseBlock and not in the ifBlock.
		    Finally the last clause verify if the enclosing method is called by the user or it is an internal function.
	    ]]></Notes>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Access Control</VulnCategory>
                <DefaultSeverity>2.0</DefaultSeverity>
                <Description ref="desc.structural.apex.access_control_insert"/>
                <Predicate><![CDATA[
		    FunctionCall call: call.function is [Function: name matches "(?i)_soql_insert"]
		    and call.enclosingFunction reachedBy [Function: name matches "(?i)post"]
		    and not call.enclosingFunction reaches [Function f: f contains
		    [IfStatement ifStmt: (
		    ifStmt.expression is [Operation op: op contains [Literal: image == "false"]
		    and ( op.lhs is [FunctionCall: function is
		    [Function: name matches "(?i)iscreateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]]
		    or op.rhs is [FunctionCall: function is
		    [Function: name matches "(?i)iscreateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]])

		    ] and ((ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_insert"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_insert"]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_insert"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_insert"]]
		    and (ifStmt.ifBlock contains [ReturnStatement:] or ifStmt.ifBlock contains [ThrowStatement:])))
		    ) or (
		    ifStmt.expression is [Operation op2: op2 contains [Literal: image == "true"]
		    and ( op2.lhs is [FunctionCall: function is
		    [Function: name matches "(?i)iscreateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]]
		    or op2.rhs is [FunctionCall: function is
		    [Function: name matches "(?i)iscreateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]])

		    ] and ((ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_insert"]]
		    and not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_insert"]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_insert"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_insert"]]
		    and (ifStmt.elseBlock contains [ReturnStatement:] or ifStmt.elseBlock contains [ThrowStatement:])))
		    ) or (
		    ifStmt.expression is [Operation op3: op3.unary and op3.lhs is
		    [FunctionCall: function is [Function: name matches "(?i)iscreateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]
		    ]
		    ] and ((ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_insert"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_insert"]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_insert"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_insert"]]
		    and (ifStmt.ifBlock contains [ReturnStatement:] or ifStmt.ifBlock contains [ThrowStatement:])))
		    )
		    ]
		    ]
		    ]]></Predicate>
            </StructuralRule>
            <StructuralRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Core</Group>
                    <Group name="altcategoryGDPR">Access Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-3 Access Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-3 Access Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000213, CCI-001084, CCI-002165</Group>
                    <Group name="altcategoryCWE">CWE ID 566</Group>
                    <Group name="altcategoryOWASPASVS4.0">1.2.2 Authentication Architectural Requirements (L2 L3), 1.2.3 Authentication Architectural Requirements (L2 L3), 1.2.4 Authentication Architectural Requirements (L2 L3), 1.4.2 Access Control Architectural Requirements (L2 L3), 1.4.4 Access Control Architectural Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 4.1.2 General Access Control Design (L1 L2 L3), 4.1.3 General Access Control Design (L1 L2 L3), 4.1.5 General Access Control Design (L1 L2 L3), 4.2.1 Operation Level Access Control (L1 L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.1 Malicious Code Search (L2 L3), 13.1.4 Generic Web Service Security Verification Requirements (L2 L3), 14.5.1 Validate HTTP Request Header Requirements (L1 L2 L3), 14.5.4 Validate HTTP Request Header Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A2 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2007">A4 Insecure Direct Object Reference</Group>
                    <Group name="altcategoryOWASP2010">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2013">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2017">A5 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2021">A01 Broken Access Control</Group>
                    <Group name="altcategoryOWASPMobile2014">M5 Poor Authorization and Authentication</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">AC</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.2</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategorySTIG3.1">APP3480.1 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3480.1 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Insufficient Authorization</Group>
                    <Group name="altcategoryWASC2.00">Insufficient Authorization (WASC-02)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 863</Group>
                    <Group name="Accuracy">1.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>688f69af-f45a-4b8b-826f-291481f6bd6e</RuleID>
                <Notes><![CDATA[This rule is responsible for detecting calls to Database methods and verify if there is an Access Control check implemented in the same function. The check is defined by a conditional statement (IfStatement) based on ismergeable function output.
		    The first clause verify whether the expression is "ismergeable == false" or "false == ismergeable" and the Database method is in the elseBlock and not in the ifBlock.
		    The second clause verify whether the expression is "ismergeable == true" or "true == ismergeable" and the Database method is in the ifBlock and not in the elseBlock.
		    The third clause verify the "!ismergeable" expression and if the Database method is in the elseBlock and not in the ifBlock.
		    Finally the last clause verify if the enclosing method is called by the user or it is an internal function.
	    ]]></Notes>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Access Control</VulnCategory>
                <DefaultSeverity>2.0</DefaultSeverity>
                <Description ref="desc.structural.apex.access_control_merge"/>
                <Predicate><![CDATA[
		    FunctionCall call: call.function is [Function: name matches "(?i)_soql_merge"]
		    and call.enclosingFunction reachedBy [Function: name matches "(?i)post"]
		    and not call.enclosingFunction reaches [Function f: f contains
		    [IfStatement ifStmt: (
		    ifStmt.expression is [Operation op: op contains [Literal: image == "false"]
		    and ( op.lhs is [FunctionCall: function is
		    [Function: name matches "(?i)ismergeable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describesobjectresult"]]]
		    or op.rhs is [FunctionCall: function is
		    [Function: name matches "(?i)ismergeable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describesobjectresult"]]])

		    ] and ((ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_merge"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_merge"]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_merge"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_merge"]]
		    and (ifStmt.ifBlock contains [ReturnStatement:] or ifStmt.ifBlock contains [ThrowStatement:])))
		    ) or (
		    ifStmt.expression is [Operation op2: op2 contains [Literal: image == "true"]
		    and ( op2.lhs is [FunctionCall: function is
		    [Function: name matches "(?i)ismergeable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describesobjectresult"]]]
		    or op2.rhs is [FunctionCall: function is
		    [Function: name matches "(?i)ismergeable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describesobjectresult"]]])

		    ] and ((ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_merge"]]
		    and not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_merge"]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_merge"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_merge"]]
		    and (ifStmt.elseBlock contains [ReturnStatement:] or ifStmt.elseBlock contains [ThrowStatement:])))
		    ) or (
		    ifStmt.expression is [Operation op3: op3.unary and op3.lhs is
		    [FunctionCall: function is [Function: name matches "(?i)ismergeable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describesobjectresult"]]
		    ]
		    ] and ((ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_merge"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_merge"]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_merge"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_merge"]]
		    and (ifStmt.ifBlock contains [ReturnStatement:] or ifStmt.ifBlock contains [ThrowStatement:])))
		    )
		    ]
		    ]
		    ]]></Predicate>
            </StructuralRule>
            <StructuralRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Core</Group>
                    <Group name="altcategoryGDPR">Access Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-3 Access Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-3 Access Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000213, CCI-001084, CCI-002165</Group>
                    <Group name="altcategoryCWE">CWE ID 566</Group>
                    <Group name="altcategoryOWASPASVS4.0">1.2.2 Authentication Architectural Requirements (L2 L3), 1.2.3 Authentication Architectural Requirements (L2 L3), 1.2.4 Authentication Architectural Requirements (L2 L3), 1.4.2 Access Control Architectural Requirements (L2 L3), 1.4.4 Access Control Architectural Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 4.1.2 General Access Control Design (L1 L2 L3), 4.1.3 General Access Control Design (L1 L2 L3), 4.1.5 General Access Control Design (L1 L2 L3), 4.2.1 Operation Level Access Control (L1 L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.1 Malicious Code Search (L2 L3), 13.1.4 Generic Web Service Security Verification Requirements (L2 L3), 14.5.1 Validate HTTP Request Header Requirements (L1 L2 L3), 14.5.4 Validate HTTP Request Header Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A2 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2007">A4 Insecure Direct Object Reference</Group>
                    <Group name="altcategoryOWASP2010">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2013">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2017">A5 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2021">A01 Broken Access Control</Group>
                    <Group name="altcategoryOWASPMobile2014">M5 Poor Authorization and Authentication</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">AC</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.2</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategorySTIG3.1">APP3480.1 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3480.1 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Insufficient Authorization</Group>
                    <Group name="altcategoryWASC2.00">Insufficient Authorization (WASC-02)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 863</Group>
                    <Group name="Accuracy">1.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>7867f4ef-8fd8-4a93-8f3d-54d1cb5b554e</RuleID>
                <Notes><![CDATA[This rule is responsible for detecting calls to Database methods and verify if there is an Access Control check implemented in the same function. The check is defined by a conditional statement (IfStatement) based on iscreateable function output.
		    The first clause verify whether the expression is "iscreateable == false" or "false == iscreateable" and the Database method is in the elseBlock and not in the ifBlock.
		    The second clause verify whether the expression is "iscreateable == true" or "true == iscreateable" and the Database method is in the ifBlock and not in the elseBlock.
		    The third clause verify the "!iscreateable" expression and if the Database method is in the elseBlock and not in the ifBlock.
		    Finally the last clause verify if the enclosing method is called by the user or it is an internal function.
	    ]]></Notes>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Access Control</VulnCategory>
                <DefaultSeverity>2.0</DefaultSeverity>
                <Description ref="desc.structural.apex.access_control_undelete"/>
                <Predicate><![CDATA[
		    FunctionCall call: call.function is [Function: name matches "(?i)_soql_undelete"]
		    and call.enclosingFunction reachedBy [Function: name matches "(?i)post"]
		    and not call.enclosingFunction reaches [Function f: f contains
		    [IfStatement ifStmt: (
		    ifStmt.expression is [Operation op: op contains [Literal: image == "false"]
		    and ( op.lhs is [FunctionCall: function is
		    [Function: name matches "(?i)iscreateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]]
		    or op.rhs is [FunctionCall: function is
		    [Function: name matches "(?i)iscreateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]])

		    ] and ((ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_undelete"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_undelete"]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_undelete"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_undelete"]]
		    and (ifStmt.ifBlock contains [ReturnStatement:] or ifStmt.ifBlock contains [ThrowStatement:])))
		    ) or (
		    ifStmt.expression is [Operation op2: op2 contains [Literal: image == "true"]
		    and ( op2.lhs is [FunctionCall: function is
		    [Function: name matches "(?i)iscreateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]]
		    or op2.rhs is [FunctionCall: function is
		    [Function: name matches "(?i)iscreateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]])

		    ] and ((ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_undelete"]]
		    and not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_undelete"]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_undelete"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_undelete"]]
		    and (ifStmt.elseBlock contains [ReturnStatement:] or ifStmt.elseBlock contains [ThrowStatement:])))
		    ) or (
		    ifStmt.expression is [Operation op3: op3.unary and op3.lhs is
		    [FunctionCall: function is [Function: name matches "(?i)iscreateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]
		    ]
		    ] and ((ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_undelete"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_undelete"]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_undelete"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_undelete"]]
		    and (ifStmt.ifBlock contains [ReturnStatement:] or ifStmt.ifBlock contains [ThrowStatement:])))
		    )
		    ]
		    ]
		    ]]></Predicate>
            </StructuralRule>
            <StructuralRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Core</Group>
                    <Group name="altcategoryGDPR">Access Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-3 Access Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-3 Access Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000213, CCI-001084, CCI-002165</Group>
                    <Group name="altcategoryCWE">CWE ID 566</Group>
                    <Group name="altcategoryOWASPASVS4.0">1.2.2 Authentication Architectural Requirements (L2 L3), 1.2.3 Authentication Architectural Requirements (L2 L3), 1.2.4 Authentication Architectural Requirements (L2 L3), 1.4.2 Access Control Architectural Requirements (L2 L3), 1.4.4 Access Control Architectural Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 4.1.2 General Access Control Design (L1 L2 L3), 4.1.3 General Access Control Design (L1 L2 L3), 4.1.5 General Access Control Design (L1 L2 L3), 4.2.1 Operation Level Access Control (L1 L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.1 Malicious Code Search (L2 L3), 13.1.4 Generic Web Service Security Verification Requirements (L2 L3), 14.5.1 Validate HTTP Request Header Requirements (L1 L2 L3), 14.5.4 Validate HTTP Request Header Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A2 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2007">A4 Insecure Direct Object Reference</Group>
                    <Group name="altcategoryOWASP2010">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2013">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2017">A5 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2021">A01 Broken Access Control</Group>
                    <Group name="altcategoryOWASPMobile2014">M5 Poor Authorization and Authentication</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">AC</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.2</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategorySTIG3.1">APP3480.1 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3480.1 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Insufficient Authorization</Group>
                    <Group name="altcategoryWASC2.00">Insufficient Authorization (WASC-02)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 863</Group>
                    <Group name="Accuracy">1.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>467d2eb7-5b2b-40eb-be08-ee62e64d3546</RuleID>
                <Notes><![CDATA[This rule is responsible for detecting calls to Database methods and verify if there is an Access Control check implemented in the same function. The check is defined by a conditional statement (IfStatement) based on isupdatable function output.
		    The first clause verify whether the expression is "isupdatable == false" or "false == isupdatable" and the Database method is in the elseBlock and not in the ifBlock.
		    The second clause verify whether the expression is "isupdatable == true" or "true == isupdatable" and the Database method is in the ifBlock and not in the elseBlock.
		    The third clause verify the "!isupdatable" expression and if the Database method is in the elseBlock and not in the ifBlock.
		    Finally the last clause verify if the enclosing method is called by the user or it is an internal function.
	    ]]></Notes>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Access Control</VulnCategory>
                <DefaultSeverity>2.0</DefaultSeverity>
                <Description ref="desc.structural.apex.access_control_upsert"/>
                <Predicate><![CDATA[
		    FunctionCall call: call.function is [Function: name matches "(?i)_soql_upsert"]
		    and call.enclosingFunction reachedBy [Function: name matches "(?i)post"]
		    and not call.enclosingFunction reaches [Function f: f contains
		    [IfStatement ifStmt: (
		    ifStmt.expression is [Operation op: op contains [Literal: image == "false"]
		    and ( op.lhs is [FunctionCall: function is
		    [Function: name matches "(?i)isupdateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]]
		    or op.rhs is [FunctionCall: function is
		    [Function: name matches "(?i)isupdateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]])

		    ] and ((ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_upsert"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_upsert"]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_upsert"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_upsert"]]
		    and (ifStmt.ifBlock contains [ReturnStatement:] or ifStmt.ifBlock contains [ThrowStatement:])))
		    ) or (
		    ifStmt.expression is [Operation op2: op2 contains [Literal: image == "true"]
		    and ( op2.lhs is [FunctionCall: function is
		    [Function: name matches "(?i)isupdateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]]
		    or op2.rhs is [FunctionCall: function is
		    [Function: name matches "(?i)isupdateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]])

		    ] and ((ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_upsert"]]
		    and not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_upsert"]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_upsert"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_upsert"]]
		    and (ifStmt.elseBlock contains [ReturnStatement:] or ifStmt.elseBlock contains [ThrowStatement:])))
		    ) or (
		    ifStmt.expression is [Operation op3: op3.unary and op3.lhs is
		    [FunctionCall: function is [Function: name matches "(?i)isupdateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]
		    ]
		    ] and ((ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_upsert"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_upsert"]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_upsert"]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)_soql_upsert"]]
		    and (ifStmt.ifBlock contains [ReturnStatement:] or ifStmt.ifBlock contains [ThrowStatement:])))
		    )
		    ]
		    ]
		    ]]></Predicate>
            </StructuralRule>
            <StructuralRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                    <Group name="altcategoryGDPR">Access Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-3 Access Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-3 Access Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000213, CCI-001084, CCI-002165</Group>
                    <Group name="altcategoryCWE">CWE ID 566</Group>
                    <Group name="altcategoryOWASPASVS4.0">1.2.2 Authentication Architectural Requirements (L2 L3), 1.2.3 Authentication Architectural Requirements (L2 L3), 1.2.4 Authentication Architectural Requirements (L2 L3), 1.4.2 Access Control Architectural Requirements (L2 L3), 1.4.4 Access Control Architectural Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 4.1.2 General Access Control Design (L1 L2 L3), 4.1.3 General Access Control Design (L1 L2 L3), 4.1.5 General Access Control Design (L1 L2 L3), 4.2.1 Operation Level Access Control (L1 L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.1 Malicious Code Search (L2 L3), 13.1.4 Generic Web Service Security Verification Requirements (L2 L3), 14.5.1 Validate HTTP Request Header Requirements (L1 L2 L3), 14.5.4 Validate HTTP Request Header Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A2 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2007">A4 Insecure Direct Object Reference</Group>
                    <Group name="altcategoryOWASP2010">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2013">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2017">A5 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2021">A01 Broken Access Control</Group>
                    <Group name="altcategoryOWASPMobile2014">M5 Poor Authorization and Authentication</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">AC</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.2</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategorySTIG3.1">APP3480.1 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3480.1 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Insufficient Authorization</Group>
                    <Group name="altcategoryWASC2.00">Insufficient Authorization (WASC-02)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 863</Group>
                    <Group name="Accuracy">1.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>c04894ab-a00a-435c-8ee6-5322983b6111</RuleID>
                <Notes><![CDATA[This rule is responsible for detecting calls to Database methods and verify if there is an Access Control check implemented in the same function. The check is defined by a conditional statement (IfStatement) based on isdeletable function output.
		    The first clause verify whether the expression is "isdeletable == false" or "false == isdeletable" and the Database method is in the elseBlock and not in the ifBlock.
		    The second clause verify whether the expression is "isdeletable == true" or "true == isdeletable" and the Database method is in the ifBlock and not in the elseBlock.
		    The third clause verify the "!isdeletable" expression and if the Database method is in the elseBlock and not in the ifBlock.
		    Finally the last clause verify if the enclosing method is called by the user or it is an internal function.
	    ]]></Notes>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Access Control</VulnCategory>
                <DefaultSeverity>2.0</DefaultSeverity>
                <Description ref="desc.structural.apex.access_control_delete"/>
                <Predicate><![CDATA[
		    FunctionCall call: call.function is
		    [Function: name matches "(?i)delete" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]
		    and call.enclosingFunction reachedBy [Function: name matches "(?i)post"]
		    and not call.enclosingFunction reaches [Function f: f contains
		    [IfStatement ifStmt: (
		    ifStmt.expression is [Operation op: op contains [Literal: image == "false"]
		    and ( op.lhs is [FunctionCall: function is
		    [Function: name matches "(?i)isdeletable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describesobjectresult"]]]
		    or op.rhs is [FunctionCall: function is
		    [Function: name matches "(?i)isdeletable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describesobjectresult"]]])

		    ] and ((ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)delete" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)delete" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)delete" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)delete" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and (ifStmt.ifBlock contains [ReturnStatement:] or ifStmt.ifBlock contains [ThrowStatement:])))
		    ) or (
		    ifStmt.expression is [Operation op2: op2 contains [Literal: image == "true"]
		    and ( op2.lhs is [FunctionCall: function is
		    [Function: name matches "(?i)isdeletable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describesobjectresult"]]]
		    or op2.rhs is [FunctionCall: function is
		    [Function: name matches "(?i)isdeletable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describesobjectresult"]]])

		    ] and ((ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?)delete" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)delete" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)delete" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)delete" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and (ifStmt.elseBlock contains [ReturnStatement:] or ifStmt.elseBlock contains [ThrowStatement:])))
		    ) or (
		    ifStmt.expression is [Operation op3: op3.unary and op3.lhs is
		    [FunctionCall: function is [Function: name matches "(?i)isdeletable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describesobjectresult"]]
		    ]
		    ] and ((ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)delete" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)delete" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)delete" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)delete" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and (ifStmt.ifBlock contains [ReturnStatement:] or ifStmt.ifBlock contains [ThrowStatement:])))
		    )
		    ]
		    ]
		    ]]></Predicate>
            </StructuralRule>
            <StructuralRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                    <Group name="altcategoryGDPR">Access Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-3 Access Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-3 Access Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000213, CCI-001084, CCI-002165</Group>
                    <Group name="altcategoryCWE">CWE ID 566</Group>
                    <Group name="altcategoryOWASPASVS4.0">1.2.2 Authentication Architectural Requirements (L2 L3), 1.2.3 Authentication Architectural Requirements (L2 L3), 1.2.4 Authentication Architectural Requirements (L2 L3), 1.4.2 Access Control Architectural Requirements (L2 L3), 1.4.4 Access Control Architectural Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 4.1.2 General Access Control Design (L1 L2 L3), 4.1.3 General Access Control Design (L1 L2 L3), 4.1.5 General Access Control Design (L1 L2 L3), 4.2.1 Operation Level Access Control (L1 L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.1 Malicious Code Search (L2 L3), 13.1.4 Generic Web Service Security Verification Requirements (L2 L3), 14.5.1 Validate HTTP Request Header Requirements (L1 L2 L3), 14.5.4 Validate HTTP Request Header Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A2 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2007">A4 Insecure Direct Object Reference</Group>
                    <Group name="altcategoryOWASP2010">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2013">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2017">A5 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2021">A01 Broken Access Control</Group>
                    <Group name="altcategoryOWASPMobile2014">M5 Poor Authorization and Authentication</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">AC</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.2</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategorySTIG3.1">APP3480.1 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3480.1 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Insufficient Authorization</Group>
                    <Group name="altcategoryWASC2.00">Insufficient Authorization (WASC-02)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 863</Group>
                    <Group name="Accuracy">1.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>bcfc09fc-cd96-4ce4-b38f-0c0995e14f74</RuleID>
                <Notes><![CDATA[This rule is responsible for detecting calls to Database methods and verify if there is an Access Control check implemented in the same function. The check is defined by a conditional statement (IfStatement) based on iscreateable function output.
		    The first clause verify whether the expression is "iscreateable == false" or "false == iscreateable" and the Database method is in the elseBlock and not in the ifBlock.
		    The second clause verify whether the expression is "iscreateable == true" or "true == iscreateable" and the Database method is in the ifBlock and not in the elseBlock.
		    The third clause verify the "!iscreateable" expression and if the Database method is in the elseBlock and not in the ifBlock.
		    Finally the last clause verify if the enclosing method is called by the user or it is an internal function.
	    ]]></Notes>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Access Control</VulnCategory>
                <DefaultSeverity>2.0</DefaultSeverity>
                <Description ref="desc.structural.apex.access_control_insert"/>
                <Predicate><![CDATA[
		    FunctionCall call: call.function is
		    [Function: name matches "(?i)insert" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]
		    and call.enclosingFunction reachedBy [Function: name matches "(?i)post"]
		    and not call.enclosingFunction reaches [Function f: f contains
		    [IfStatement ifStmt: (
		    ifStmt.expression is [Operation op: op contains [Literal: image == "false"]
		    and ( op.lhs is [FunctionCall: function is
		    [Function: name matches "(?i)iscreateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]]
		    or op.rhs is [FunctionCall: function is
		    [Function: name matches "(?i)iscreateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]])

		    ] and ((ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)insert" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)insert" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)insert" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)insert" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and (ifStmt.ifBlock contains [ReturnStatement:] or ifStmt.ifBlock contains [ThrowStatement:])))
		    ) or (
		    ifStmt.expression is [Operation op2: op2 contains [Literal: image == "true"]
		    and ( op2.lhs is [FunctionCall: function is
		    [Function: name matches "(?i)iscreateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]]
		    or op2.rhs is [FunctionCall: function is
		    [Function: name matches "(?i)iscreateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]])

		    ] and ((ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)insert" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)insert" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)insert" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)insert" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and (ifStmt.elseBlock contains [ReturnStatement:] or ifStmt.elseBlock contains [ThrowStatement:])))
		    ) or (
		    ifStmt.expression is [Operation op3: op3.unary and op3.lhs is
		    [FunctionCall: function is [Function: name matches "(?i)iscreateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]
		    ]
		    ] and ((ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)insert" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)insert" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)insert" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)insert" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and (ifStmt.ifBlock contains [ReturnStatement:] or ifStmt.ifBlock contains [ThrowStatement:])))
		    )
		    ]
		    ]
		    ]]></Predicate>
            </StructuralRule>
            <StructuralRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                    <Group name="altcategoryGDPR">Access Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-3 Access Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-3 Access Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000213, CCI-001084, CCI-002165</Group>
                    <Group name="altcategoryCWE">CWE ID 566</Group>
                    <Group name="altcategoryOWASPASVS4.0">1.2.2 Authentication Architectural Requirements (L2 L3), 1.2.3 Authentication Architectural Requirements (L2 L3), 1.2.4 Authentication Architectural Requirements (L2 L3), 1.4.2 Access Control Architectural Requirements (L2 L3), 1.4.4 Access Control Architectural Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 4.1.2 General Access Control Design (L1 L2 L3), 4.1.3 General Access Control Design (L1 L2 L3), 4.1.5 General Access Control Design (L1 L2 L3), 4.2.1 Operation Level Access Control (L1 L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.1 Malicious Code Search (L2 L3), 13.1.4 Generic Web Service Security Verification Requirements (L2 L3), 14.5.1 Validate HTTP Request Header Requirements (L1 L2 L3), 14.5.4 Validate HTTP Request Header Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A2 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2007">A4 Insecure Direct Object Reference</Group>
                    <Group name="altcategoryOWASP2010">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2013">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2017">A5 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2021">A01 Broken Access Control</Group>
                    <Group name="altcategoryOWASPMobile2014">M5 Poor Authorization and Authentication</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">AC</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.2</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategorySTIG3.1">APP3480.1 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3480.1 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Insufficient Authorization</Group>
                    <Group name="altcategoryWASC2.00">Insufficient Authorization (WASC-02)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 863</Group>
                    <Group name="Accuracy">1.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>c0495588-c1df-4c3f-b0b2-8b4a2f4de303</RuleID>
                <Notes><![CDATA[This rule is responsible for detecting calls to Database methods and verify if there is an Access Control check implemented in the same function. The check is defined by a conditional statement (IfStatement) based on ismergeable function output.
		    The first clause verify whether the expression is "ismergeable == false" or "false == ismergeable" and the Database method is in the elseBlock and not in the ifBlock.
		    The second clause verify whether the expression is "ismergeable == true" or "true == ismergeable" and the Database method is in the ifBlock and not in the elseBlock.
		    The third clause verify the "!ismergeable" expression and if the Database method is in the elseBlock and not in the ifBlock.
		    Finally the last clause verify if the enclosing method is called by the user or it is an internal function.
	    ]]></Notes>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Access Control</VulnCategory>
                <DefaultSeverity>2.0</DefaultSeverity>
                <Description ref="desc.structural.apex.access_control_merge"/>
                <Predicate><![CDATA[
		    FunctionCall call: call.function is
		    [Function: name matches "(?i)merge" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]
		    and call.enclosingFunction reachedBy [Function: name matches "(?i)post"]
		    and not call.enclosingFunction reaches [Function f: f contains
		    [IfStatement ifStmt: (
		    ifStmt.expression is [Operation op: op contains [Literal: image == "false"]
		    and ( op.lhs is [FunctionCall: function is
		    [Function: name matches "(?i)ismergeable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describesobjectresult"]]]
		    or op.rhs is [FunctionCall: function is
		    [Function: name matches "(?i)ismergeable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describesobjectresult"]]])

		    ] and ((ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)merge" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)merge" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)merge" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)merge" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and (ifStmt.ifBlock contains [ReturnStatement:] or ifStmt.ifBlock contains [ThrowStatement:])))
		    ) or (
		    ifStmt.expression is [Operation op2: op2 contains [Literal: image == "true"]
		    and ( op2.lhs is [FunctionCall: function is
		    [Function: name matches "(?i)ismergeable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describesobjectresult"]]]
		    or op2.rhs is [FunctionCall: function is
		    [Function: name matches "(?i)ismergeable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describesobjectresult"]]])

		    ] and ((ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)merge" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)merge" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)merge" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)merge" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and (ifStmt.elseBlock contains [ReturnStatement:] or ifStmt.elseBlock contains [ThrowStatement:])))
		    ) or (
		    ifStmt.expression is [Operation op3: op3.unary and op3.lhs is
		    [FunctionCall: function is [Function: name matches "(?i)ismergeable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describesobjectresult"]]
		    ]
		    ] and ((ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)merge" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)merge" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)merge" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)merge" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and (ifStmt.ifBlock contains [ReturnStatement:] or ifStmt.ifBlock contains [ThrowStatement:])))
		    )
		    ]
		    ]
		    ]]></Predicate>
            </StructuralRule>
            <StructuralRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                    <Group name="altcategoryGDPR">Access Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-3 Access Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-3 Access Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000213, CCI-001084, CCI-002165</Group>
                    <Group name="altcategoryCWE">CWE ID 566</Group>
                    <Group name="altcategoryOWASPASVS4.0">1.2.2 Authentication Architectural Requirements (L2 L3), 1.2.3 Authentication Architectural Requirements (L2 L3), 1.2.4 Authentication Architectural Requirements (L2 L3), 1.4.2 Access Control Architectural Requirements (L2 L3), 1.4.4 Access Control Architectural Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 4.1.2 General Access Control Design (L1 L2 L3), 4.1.3 General Access Control Design (L1 L2 L3), 4.1.5 General Access Control Design (L1 L2 L3), 4.2.1 Operation Level Access Control (L1 L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.1 Malicious Code Search (L2 L3), 13.1.4 Generic Web Service Security Verification Requirements (L2 L3), 14.5.1 Validate HTTP Request Header Requirements (L1 L2 L3), 14.5.4 Validate HTTP Request Header Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A2 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2007">A4 Insecure Direct Object Reference</Group>
                    <Group name="altcategoryOWASP2010">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2013">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2017">A5 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2021">A01 Broken Access Control</Group>
                    <Group name="altcategoryOWASPMobile2014">M5 Poor Authorization and Authentication</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">AC</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.2</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategorySTIG3.1">APP3480.1 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3480.1 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Insufficient Authorization</Group>
                    <Group name="altcategoryWASC2.00">Insufficient Authorization (WASC-02)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 863</Group>
                    <Group name="Accuracy">1.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>4461bcf3-fc5c-4cb9-928b-118f8ac8f5f4</RuleID>
                <Notes><![CDATA[This rule is responsible for detecting calls to Database methods and verify if there is an Access Control check implemented in the same function. The check is defined by a conditional statement (IfStatement) based on iscreateable function output.
		    The first clause verify whether the expression is "iscreateable == false" or "false == iscreateable" and the Database method is in the elseBlock and not in the ifBlock.
		    The second clause verify whether the expression is "iscreateable == true" or "true == iscreateable" and the Database method is in the ifBlock and not in the elseBlock.
		    The third clause verify the "!iscreateable" expression and if the Database method is in the elseBlock and not in the ifBlock.
		    Finally the last clause verify if the enclosing method is called by the user or it is an internal function.
	    ]]></Notes>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Access Control</VulnCategory>
                <DefaultSeverity>2.0</DefaultSeverity>
                <Description ref="desc.structural.apex.access_control_undelete"/>
                <Predicate><![CDATA[
		    FunctionCall call: call.function is
		    [Function: name matches "(?i)undelete" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]
		    and call.enclosingFunction reachedBy [Function: name matches "(?i)post"]
		    and not call.enclosingFunction reaches [Function f: f contains
		    [IfStatement ifStmt: (
		    ifStmt.expression is [Operation op: op contains [Literal: image == "false"]
		    and ( op.lhs is [FunctionCall: function is
		    [Function: name matches "(?i)iscreateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]]
		    or op.rhs is [FunctionCall: function is
		    [Function: name matches "(?i)iscreateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]])

		    ] and ((ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)undelete" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)undelete" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)undelete" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)undelete" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and (ifStmt.ifBlock contains [ReturnStatement:] or ifStmt.ifBlock contains [ThrowStatement:])))
		    ) or (
		    ifStmt.expression is [Operation op2: op2 contains [Literal: image == "true"]
		    and ( op2.lhs is [FunctionCall: function is
		    [Function: name matches "(?i)iscreateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]]
		    or op2.rhs is [FunctionCall: function is
		    [Function: name matches "(?i)iscreateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]])

		    ] and ((ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)undelete" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)undelete" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)undelete" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)undelete" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and (ifStmt.elseBlock contains [ReturnStatement:] or ifStmt.elseBlock contains [ThrowStatement:])))
		    ) or (
		    ifStmt.expression is [Operation op3: op3.unary and op3.lhs is
		    [FunctionCall: function is [Function: name matches "(?i)iscreateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]
		    ]
		    ] and ((ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)undelete" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)undelete" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)undelete" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)undelete" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and (ifStmt.ifBlock contains [ReturnStatement:] or ifStmt.ifBlock contains [ThrowStatement:])))
		    )
		    ]
		    ]
		    ]]></Predicate>
            </StructuralRule>
            <StructuralRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                    <Group name="altcategoryGDPR">Access Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-3 Access Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-3 Access Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000213, CCI-001084, CCI-002165</Group>
                    <Group name="altcategoryCWE">CWE ID 566</Group>
                    <Group name="altcategoryOWASPASVS4.0">1.2.2 Authentication Architectural Requirements (L2 L3), 1.2.3 Authentication Architectural Requirements (L2 L3), 1.2.4 Authentication Architectural Requirements (L2 L3), 1.4.2 Access Control Architectural Requirements (L2 L3), 1.4.4 Access Control Architectural Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 4.1.2 General Access Control Design (L1 L2 L3), 4.1.3 General Access Control Design (L1 L2 L3), 4.1.5 General Access Control Design (L1 L2 L3), 4.2.1 Operation Level Access Control (L1 L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.1 Malicious Code Search (L2 L3), 13.1.4 Generic Web Service Security Verification Requirements (L2 L3), 14.5.1 Validate HTTP Request Header Requirements (L1 L2 L3), 14.5.4 Validate HTTP Request Header Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A2 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2007">A4 Insecure Direct Object Reference</Group>
                    <Group name="altcategoryOWASP2010">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2013">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2017">A5 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2021">A01 Broken Access Control</Group>
                    <Group name="altcategoryOWASPMobile2014">M5 Poor Authorization and Authentication</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">AC</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.2</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategorySTIG3.1">APP3480.1 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3480.1 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Insufficient Authorization</Group>
                    <Group name="altcategoryWASC2.00">Insufficient Authorization (WASC-02)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 863</Group>
                    <Group name="Accuracy">1.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>c4f9048d-e6c4-4171-b946-9f162e0e4f3c</RuleID>
                <Notes><![CDATA[This rule is responsible for detecting calls to Database methods and verify if there is an Access Control check implemented in the same function. The check is defined by a conditional statement (IfStatement) based on isupdatable function output.
		    The first clause verify whether the expression is "isupdatable == false" or "false == isupdatable" and the Database method is in the elseBlock and not in the ifBlock.
		    The second clause verify whether the expression is "isupdatable == true" or "true == isupdatable" and the Database method is in the ifBlock and not in the elseBlock.
		    The third clause verify the "!isupdatable" expression and if the Database method is in the elseBlock and not in the ifBlock.
		    Finally the last clause verify if the enclosing method is called by the user or it is an internal function.
	    ]]></Notes>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Access Control</VulnCategory>
                <DefaultSeverity>2.0</DefaultSeverity>
                <Description ref="desc.structural.apex.access_control_update"/>
                <Predicate><![CDATA[
		    FunctionCall call: call.function is
		    [Function: name matches "(?i)update" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]
		    and call.enclosingFunction reachedBy [Function: name matches "(?i)post"]
		    and not call.enclosingFunction reaches [Function f: f contains
		    [IfStatement ifStmt: (
		    ifStmt.expression is [Operation op: op contains [Literal: image == "false"]
		    and ( op.lhs is [FunctionCall: function is
		    [Function: name matches "(?i)isupdateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]]
		    or op.rhs is [FunctionCall: function is
		    [Function: name matches "(?i)isupdateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]])

		    ] and ((ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)update" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)update" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)update" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)update" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and (ifStmt.ifBlock contains [ReturnStatement:] or ifStmt.ifBlock contains [ThrowStatement:])))
		    ) or (
		    ifStmt.expression is [Operation op2: op2 contains [Literal: image == "true"]
		    and ( op2.lhs is [FunctionCall: function is
		    [Function: name matches "(?i)isupdateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]]
		    or op2.rhs is [FunctionCall: function is
		    [Function: name matches "(?i)isupdateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]])

		    ] and ((ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)update" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)update" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)update" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)update" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and (ifStmt.elseBlock contains [ReturnStatement:] or ifStmt.elseBlock contains [ThrowStatement:])))
		    ) or (
		    ifStmt.expression is [Operation op3: op3.unary and op3.lhs is
		    [FunctionCall: function is [Function: name matches "(?i)isupdateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]
		    ]
		    ] and ((ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)update" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)update" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)update" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)update" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and (ifStmt.ifBlock contains [ReturnStatement:] or ifStmt.ifBlock contains [ThrowStatement:])))
		    )
		    ]
		    ]
		    ]]></Predicate>
            </StructuralRule>
            <StructuralRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                    <Group name="altcategoryGDPR">Access Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-3 Access Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-3 Access Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000213, CCI-001084, CCI-002165</Group>
                    <Group name="altcategoryCWE">CWE ID 566</Group>
                    <Group name="altcategoryOWASPASVS4.0">1.2.2 Authentication Architectural Requirements (L2 L3), 1.2.3 Authentication Architectural Requirements (L2 L3), 1.2.4 Authentication Architectural Requirements (L2 L3), 1.4.2 Access Control Architectural Requirements (L2 L3), 1.4.4 Access Control Architectural Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 4.1.2 General Access Control Design (L1 L2 L3), 4.1.3 General Access Control Design (L1 L2 L3), 4.1.5 General Access Control Design (L1 L2 L3), 4.2.1 Operation Level Access Control (L1 L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.1 Malicious Code Search (L2 L3), 13.1.4 Generic Web Service Security Verification Requirements (L2 L3), 14.5.1 Validate HTTP Request Header Requirements (L1 L2 L3), 14.5.4 Validate HTTP Request Header Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A2 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2007">A4 Insecure Direct Object Reference</Group>
                    <Group name="altcategoryOWASP2010">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2013">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2017">A5 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2021">A01 Broken Access Control</Group>
                    <Group name="altcategoryOWASPMobile2014">M5 Poor Authorization and Authentication</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">AC</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.2</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategorySTIG3.1">APP3480.1 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3480.1 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Insufficient Authorization</Group>
                    <Group name="altcategoryWASC2.00">Insufficient Authorization (WASC-02)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 863</Group>
                    <Group name="Accuracy">1.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>89409ee1-a2f4-4177-9dc2-72b1d1f0c73d</RuleID>
                <Notes><![CDATA[This rule is responsible for detecting calls to Database methods and verify if there is an Access Control check implemented in the same function. The check is defined by a conditional statement (IfStatement) based on isupdatable function output.
		    The first clause verify whether the expression is "isupdatable == false" or "false == isupdatable" and the Database method is in the elseBlock and not in the ifBlock.
		    The second clause verify whether the expression is "isupdatable == true" or "true == isupdatable" and the Database method is in the ifBlock and not in the elseBlock.
		    The third clause verify the "!isupdatable" expression and if the Database method is in the elseBlock and not in the ifBlock.
		    Finally the last clause verify if the enclosing method is called by the user or it is an internal function.
	    ]]></Notes>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Access Control</VulnCategory>
                <DefaultSeverity>2.0</DefaultSeverity>
                <Description ref="desc.structural.apex.access_control_upsert"/>
                <Predicate><![CDATA[
		    FunctionCall call: call.function is
		    [Function: name matches "(?i)upsert" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]
		    and call.enclosingFunction reachedBy [Function: name matches "(?i)post"]
		    and not call.enclosingFunction reaches [Function f: f contains
		    [IfStatement ifStmt: (
		    ifStmt.expression is [Operation op: op contains [Literal: image == "false"]
		    and ( op.lhs is [FunctionCall: function is
		    [Function: name matches "(?i)isupdateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]]
		    or op.rhs is [FunctionCall: function is
		    [Function: name matches "(?i)isupdateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]])

		    ] and ((ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)upsert" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)upsert" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)upsert" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)upsert" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and (ifStmt.ifBlock contains [ReturnStatement:] or ifStmt.ifBlock contains [ThrowStatement:])))
		    ) or (
		    ifStmt.expression is [Operation op2: op2 contains [Literal: image == "true"]
		    and ( op2.lhs is [FunctionCall: function is
		    [Function: name matches "(?i)isupdateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]]
		    or op2.rhs is [FunctionCall: function is
		    [Function: name matches "(?i)isupdateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]])

		    ] and ((ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)upsert" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)upsert" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)upsert" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)upsert" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and (ifStmt.elseBlock contains [ReturnStatement:] or ifStmt.elseBlock contains [ThrowStatement:])))
		    ) or (
		    ifStmt.expression is [Operation op3: op3.unary and op3.lhs is
		    [FunctionCall: function is [Function: name matches "(?i)isupdateable" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describefieldresult" or name matches "(?i)schema\.describesobjectresult"]]
		    ]
		    ] and ((ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)upsert" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)upsert" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)upsert" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)upsert" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and (ifStmt.ifBlock contains [ReturnStatement:] or ifStmt.ifBlock contains [ThrowStatement:])))
		    )
		    ]
		    ]
		    ]]></Predicate>
            </StructuralRule>
            <StructuralRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                    <Group name="altcategoryGDPR">Access Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-3 Access Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-3 Access Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000213, CCI-001084, CCI-002165</Group>
                    <Group name="altcategoryCWE">CWE ID 566</Group>
                    <Group name="altcategoryOWASPASVS4.0">1.2.2 Authentication Architectural Requirements (L2 L3), 1.2.3 Authentication Architectural Requirements (L2 L3), 1.2.4 Authentication Architectural Requirements (L2 L3), 1.4.2 Access Control Architectural Requirements (L2 L3), 1.4.4 Access Control Architectural Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 4.1.2 General Access Control Design (L1 L2 L3), 4.1.3 General Access Control Design (L1 L2 L3), 4.1.5 General Access Control Design (L1 L2 L3), 4.2.1 Operation Level Access Control (L1 L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.1 Malicious Code Search (L2 L3), 13.1.4 Generic Web Service Security Verification Requirements (L2 L3), 14.5.1 Validate HTTP Request Header Requirements (L1 L2 L3), 14.5.4 Validate HTTP Request Header Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A2 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2007">A4 Insecure Direct Object Reference</Group>
                    <Group name="altcategoryOWASP2010">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2013">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2017">A5 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2021">A01 Broken Access Control</Group>
                    <Group name="altcategoryOWASPMobile2014">M5 Poor Authorization and Authentication</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">AC</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.2</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategorySTIG3.1">APP3480.1 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3480.1 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3480.1 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Insufficient Authorization</Group>
                    <Group name="altcategoryWASC2.00">Insufficient Authorization (WASC-02)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 863</Group>
                    <Group name="Accuracy">1.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>40ad5d95-2ad3-4aa1-8248-53ac8ca1393e</RuleID>
                <Notes><![CDATA[This rule is responsible for detecting calls to Database methods and verify if there is an Access Control check implemented in the same function. The check is defined by a conditional statement (IfStatement) based on isaccessible function output.
		    The first clause verify whether the expression is "isaccessible == false" or "false == isaccessible" and the Database method is in the elseBlock and not in the ifBlock.
		    The second clause verify whether the expression is "isaccessible == true" or "true == isaccessible" and the Database method is in the ifBlock and not in the elseBlock.
		    The third clause verify the "!isaccessible" expression and if the Database method is in the elseBlock and not in the ifBlock.
		    Finally the last clause verify if the enclosing method is called by the user or it is an internal function.
	    ]]></Notes>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Access Control</VulnCategory>
                <DefaultSeverity>2.0</DefaultSeverity>
                <Description ref="desc.structural.apex.access_control_recyclebin"/>
                <Predicate><![CDATA[
		    FunctionCall call: call.function is
		    [Function: name matches "(?i)emptyrecyclebin" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]
		    and call.enclosingFunction reachedBy [Function: name matches "(?i)post"]
		    and not call.enclosingFunction reaches [Function f: f contains
		    [IfStatement ifStmt: (
		    ifStmt.expression is [Operation op: op contains [Literal: image == "false"]
		    and ( op.lhs is [FunctionCall: function is
		    [Function: name matches "(?i)isaccessible" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describesobjectresult"]]]
		    or op.rhs is [FunctionCall: function is
		    [Function: name matches "(?i)isaccessible" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describesobjectresult"]]])

		    ] and ((ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)emptyrecyclebin" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)emptyrecyclebin" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)emptyrecyclebin" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)emptyrecyclebin" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and (ifStmt.ifBlock contains [ReturnStatement:] or ifStmt.ifBlock contains [ThrowStatement:])))
		    ) or (
		    ifStmt.expression is [Operation op2: op2 contains [Literal: image == "true"]
		    and ( op2.lhs is [FunctionCall: function is
		    [Function: name matches "(?i)isaccessible" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describesobjectresult"]]]
		    or op2.rhs is [FunctionCall: function is
		    [Function: name matches "(?i)isaccessible" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describesobjectresult"]]])

		    ] and ((ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)emptyrecyclebin" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)emptyrecyclebin" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)emptyrecyclebin" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)emptyrecyclebin" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and (ifStmt.elseBlock contains [ReturnStatement:] or ifStmt.elseBlock contains [ThrowStatement:])))
		    ) or (
		    ifStmt.expression is [Operation op3: op3.unary and op3.lhs is
		    [FunctionCall: function is [Function: name matches "(?i)isaccessible" and enclosingClass.supers contains
		    [Class: name matches "(?i)schema\.describesobjectresult"]]
		    ]
		    ] and ((ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)emptyrecyclebin" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)emptyrecyclebin" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]])
		    or ( not ifStmt.elseBlock contains [FunctionCall: function is [Function: name matches "(?i)emptyrecyclebin" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and not ifStmt.ifBlock contains [FunctionCall: function is [Function: name matches "(?i)emptyrecyclebin" and enclosingClass.supers contains [Class: name matches "(?i)system\.database"]]]
		    and (ifStmt.ifBlock contains [ReturnStatement:] or ifStmt.ifBlock contains [ThrowStatement:])))
		    )
		    ]
		    ]
		    ]]></Predicate>
            </StructuralRule>
            <MapRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>ae9ece10-f833-499b-bc44-ee0568a5df8a</RuleID>
                <StoreFunction>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">List</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">add|set</Pattern>
                    </FunctionName>
                    <Parameters>
                        <WildCard min="2" max="2"/>
                    </Parameters>
                    <ApplyTo implements="true" overrides="true" extends="false"/>
                    <MapArg>this</MapArg>
                    <KeyArg>0</KeyArg>
                    <ValueArg>1</ValueArg>
                </StoreFunction>
                <RetrieveFunction>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">List</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">get|remove</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="false"/>
                    <MapArg>this</MapArg>
                    <KeyArg>0</KeyArg>
                    <ValueArg>return</ValueArg>
                </RetrieveFunction>
            </MapRule>
            <MapRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>32e025a2-c7da-4f1a-b517-395819f1d59c</RuleID>
                <StoreFunction>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Map</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">put</Value>
                    </FunctionName>
                    <Parameters>
                        <WildCard min="2" max="2"/>
                    </Parameters>
                    <ApplyTo implements="true" overrides="true" extends="false"/>
                    <MapArg>this</MapArg>
                    <KeyArg>0</KeyArg>
                    <ValueArg>1</ValueArg>
                </StoreFunction>
                <RetrieveFunction>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Map</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern caseInsensitive="true">get|remove</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="false"/>
                    <MapArg>this</MapArg>
                    <KeyArg>0</KeyArg>
                    <ValueArg>return</ValueArg>
                </RetrieveFunction>
                <KeysFunction>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Map</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">keySet</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="false"/>
                    <MapArg>this</MapArg>
                    <KeysArg>return</KeysArg>
                </KeysFunction>
                <ValuesFunction>
                    <NamespaceName>
                        <Value caseInsensitive="true">System</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value caseInsensitive="true">Map</Value>
                    </ClassName>
                    <FunctionName>
                        <Value caseInsensitive="true">values</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="false"/>
                    <MapArg>this</MapArg>
                    <ValuesArg>return</ValuesArg>
                </ValuesFunction>
            </MapRule>
            <CharacterizationRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Core</Group>
                </MetaInfo>
                <RuleID>5f67d10a-bc62-4665-a3ef-700f51fbb58c</RuleID>
                <StructuralMatch><![CDATA[
		    AssignmentStatement:
		    lhs is [FieldAccess fa: fa.field.type.name matches "(?i)system\.string"]
		    and (
		    rhs contains [Operation: op == "+" and not lhs.constantValue.null ]
		    or rhs is [Operation: op == "+" and not lhs.constantValue.null ]
		    )
		    ]]></StructuralMatch>
                <Definition><![CDATA[
		    TaintCleanse(fa, {+RCONCATENATED})
		    ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Core</Group>
                </MetaInfo>
                <RuleID>e0c0d570-5ef6-4e92-ac4e-657ed3e91b30</RuleID>
                <StructuralMatch><![CDATA[
		    AssignmentStatement:
		    lhs is [VariableAccess va: va.variable.type.name matches "(?i)system\.string"]
		    and (
		    rhs contains [Operation: op == "+" and not lhs.constantValue.null ]
		    or rhs is [Operation: op == "+" and not lhs.constantValue.null ]
		    )
		    ]]></StructuralMatch>
                <Definition><![CDATA[
		    TaintCleanse(va, {+RCONCATENATED})
		    ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Visualforce Core</Group>
                </MetaInfo>
                <RuleID>e9e00e99-81da-4dfa-b3c0-ab35149e920e</RuleID>
                <StructuralMatch><![CDATA[
		    FunctionCall call: call.function is
		    [Function f: f.name matches "(?i)set_.*_property"
		    and f.enclosingClass is [Class c: ]]
		    and call.arguments[0] is [Operation o: op == "+" and not lhs.constantValue.null ]
		    and call.arguments[0] is [Expression e: e.type.name matches "(?i)system\.string"]
		    ]]></StructuralMatch>
                <Definition><![CDATA[
		    TaintCleanse(e, {+RCONCATENATED})
		    ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Visualforce Core</Group>
                </MetaInfo>
                <RuleID>b1027d16-4a9d-42f8-a8c1-c92088af86b1</RuleID>
                <StructuralMatch><![CDATA[
		    FunctionCall call: call.function is
		    [Function f: f.name matches "(?i)set_.*_property"
		    and f.enclosingClass is [Class c: ]]
		    and call.arguments[0] contains [Operation o: op == "+" and not lhs.constantValue.null ]
		    and call.arguments[0] is [Expression e: e.type.name matches "(?i)system\.string"]
		    ]]></StructuralMatch>
                <Definition><![CDATA[
		    TaintCleanse(e, {+RCONCATENATED})
		    ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Visualforce Core</Group>
                </MetaInfo>
                <RuleID>93f5dd45-3d3f-4e51-a0ab-5cbae347418e</RuleID>
                <StructuralMatch><![CDATA[
		    FunctionCall call: call.function is
		    [Function f: f.name matches "(?i)set_src"
		    and f.enclosingClass.supers contains [Class c: c.name matches "(?i).*ApexIframe.*"]]
		    and call.arguments[0] is [Operation o: op == "+" and not lhs.constantValue.null ]
		    and call.arguments[0] is [Expression e: e.type.name matches "(?i)system\.string"]
		    ]]></StructuralMatch>
                <Definition><![CDATA[
		    TaintCleanse(e, {+RCONCATENATED})
		    ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="17.10" language="apex">
                <MetaInfo>
                    <Group name="package">Visualforce Core</Group>
                </MetaInfo>
                <RuleID>ae62b12a-9bfa-439c-9b22-19d9d528561a</RuleID>
                <StructuralMatch><![CDATA[
		    FunctionCall call: call.function is
		    [Function f: f.name matches "(?i)set_src"
		    and f.enclosingClass.supers contains [Class c: c.name matches "(?i).*ApexIframe.*"]]
		    and call.arguments[0] contains [Operation o: op == "+" and not lhs.constantValue.null ]
		    and call.arguments[0] is [Expression e: e.type.name matches "(?i)system\.string"]
		    ]]></StructuralMatch>
                <Definition><![CDATA[
		    TaintCleanse(e, {+RCONCATENATED})
		    ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="22.2" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Core</Group>
                </MetaInfo>
                <RuleID>5E2E8964-5F4C-4745-85A6-ECEBA02497D4</RuleID>
                <Notes><![CDATA[
            For the new Apex translator - sObject property setters
        ]]></Notes>
                <StructuralMatch><![CDATA[
            FunctionCall:
                name matches "set_(.+)_property"
                and function is [Function: not isBodyAvailable]
                and arguments.length == 1
                and instance is [Expression this:]
                and arguments[0] is [Expression val:]
        ]]></StructuralMatch>
                <Definition><![CDATA[
            TaintTransfer(val, this.$1)
        ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="22.2" language="apex">
                <MetaInfo>
                    <Group name="package">Apex Core</Group>
                </MetaInfo>
                <RuleID>842328B7-DB85-499D-861B-0B758F79424C</RuleID>
                <Notes><![CDATA[
            For the new Apex translator - sObject property getters
        ]]></Notes>
                <StructuralMatch><![CDATA[
            FunctionCall fc:
                name matches "get_(.+)_property"
                and function is [Function: not isBodyAvailable]
                and arguments.length == 0
                and instance is [Expression this:]
        ]]></StructuralMatch>
                <Definition><![CDATA[
            TaintTransfer(this.$1, fc)
        ]]></Definition>
            </CharacterizationRule>
            <ResultFilterRule formatVersion="17.10">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>3f7adeac-4ed1-4df2-aa89-057a3b68fbd1</RuleID>
                <Check>
                    <AnalyzerName>
                        <Dominant>dataflow</Dominant>
                        <Subordinate>dataflow</Subordinate>
                    </AnalyzerName>
                    <Category>
                        <Dominant>
                            <Value>SOQL Injection</Value>
                        </Dominant>
                        <Subordinate>
                            <Value>Access Control: Database</Value>
                        </Subordinate>
                    </Category>
                </Check>
            </ResultFilterRule>
            <ResultFilterRule formatVersion="17.10">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>d1b0fdfb-d52c-47eb-8a77-429e9300e8b7</RuleID>
                <Check>
                    <AnalyzerName>
                        <Dominant>dataflow</Dominant>
                        <Subordinate>dataflow</Subordinate>
                    </AnalyzerName>
                    <Category>
                        <Dominant>
                            <Value>SOSL Injection</Value>
                        </Dominant>
                        <Subordinate>
                            <Value>Access Control: Database</Value>
                        </Subordinate>
                    </Category>
                </Check>
            </ResultFilterRule>
            <ResultFilterRule formatVersion="17.10">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>eeac9522-de2a-4ab4-b35a-f100176b7ddd</RuleID>
                <Check>
                    <AnalyzerName>
                        <Dominant>dataflow</Dominant>
                        <Subordinate>semantic</Subordinate>
                    </AnalyzerName>
                    <Category>
                        <Dominant>
                            <Value>Access Control: Database</Value>
                        </Dominant>
                        <Subordinate>
                            <Value>SOQL Injection</Value>
                        </Subordinate>
                    </Category>
                </Check>
            </ResultFilterRule>
            <ResultFilterRule formatVersion="17.10">
                <MetaInfo>
                    <Group name="package">Apex System</Group>
                </MetaInfo>
                <RuleID>8f46b70d-a6fc-4664-a5cd-682afa01eddc</RuleID>
                <Check>
                    <AnalyzerName>
                        <Dominant>dataflow</Dominant>
                        <Subordinate>semantic</Subordinate>
                    </AnalyzerName>
                    <Category>
                        <Dominant>
                            <Value>Access Control: Database</Value>
                        </Dominant>
                        <Subordinate>
                            <Value>SOSL Injection</Value>
                        </Subordinate>
                    </Category>
                </Check>
            </ResultFilterRule>
        </RuleDefinitions>
        <LabelDefinitions/>
        <Descriptions>
            <Description id="desc.dataflow.apex.soql_injection" formatVersion="3.4">
                <Abstract><![CDATA[<Paragraph>On line <Replace key="PrimaryLocation.line"/> of <Replace key="PrimaryLocation.file"/>, the method <Replace key="EnclosingFunction.name"/> invokes a SOQL query built using input coming from an untrusted source. This call could allow an attacker to modify the statement's meaning and access unauthorized data.<AltParagraph>Executing SOQL queries with data from untrusted sources may allow access to unauthorized data.</AltParagraph></Paragraph>
  ]]></Abstract>
                <Explanation><![CDATA[The Salesforce Object Query Language (SOQL) is intended to retrieve specific information from the application database; one cannot change such data using SOQL queries.

Salesforce Object Query Language (SOQL) injection errors occur when:

1. Data enters a program from an untrusted source.
<Paragraph>
In this case, the data enters at <Replace key="SourceFunction" link="SourceLocation"/> in <Replace key="SourceLocation.file"/> on line <Replace key="SourceLocation.line"/>.
</Paragraph>

2. The data is used to dynamically construct a SOQL query without any pre-processing or sanitization.
<Paragraph>
In this case, the data is passed to <Replace key="SinkFunction" link="SinkLocation"/> in <Replace key="SinkLocation.file"/> on line <Replace key="SinkLocation.line"/>.
</Paragraph>

<b>Example 1:</b> The following code dynamically constructs and executes a SOQL query that searches for contacts with a specified name.

<pre>
...
public String inputValue {
  get { return inputValue; }
  set { inputValue = value; }
}
...
String queryString = 'SELECT Id FROM Contact WHERE (IsDeleted = false AND Name like \'%' + inputValue + '%\')';
result = Database.query(queryString);
...
</pre>

This code intends to execute the query as follows:

<pre>
SELECT Id FROM Contact WHERE (IsDeleted = false AND Name like '%inputValue%')
</pre>

However, because the query is constructed dynamically by concatenating a constant base query string and a user input string, the query only behaves correctly if <code>inputValue</code> does not contain a single-quote character. If an attacker enters the string <code>name') OR (Name like '%</code> for <code>inputValue</code>, then the query becomes the following:

<pre>
SELECT Id FROM Contact WHERE (IsDeleted = false AND Name like '%name') OR (Name like '%%')
</pre>

The addition of the <code>name') OR (Name like '%</code> condition causes the where clause to use the <code>LIKE '%%'</code> condition, which will force the query to output all possible ID values, since it becomes logically equivalent to the much simpler query:

<pre>
SELECT Id FROM Contact WHERE ... OR (Name like '%%')
</pre>

Unlike most of database interfaces, SOQL in the force.com platform does not support multiple SOQL statements separated by semicolons, which means that it is not possible to concatenate several commands in a single query as is the case with regular SQL injection attacks. Also, note that Apex database does not support comments, so every single quote, parenthesis or other special character must be paired.]]></Explanation>
                <Recommendations><![CDATA[The root cause of a SOQL injection vulnerability is the ability of an attacker to change context in the SOQL query, causing a value that the programmer intended to be interpreted as data to be interpreted as a new field or logical operator. When a SOQL query is constructed, the programmer knows what should be interpreted as part of the command and what should be interpreted as data. One traditional approach to preventing SOQL injection attacks is to handle them as an input validation problem and either accept only characters from an allow list of safe values or identify and escape a list of potentially malicious values (deny list). Checking an allow list can be a very effective means of enforcing strict input validation rules, but other solutions provided by the Salesforce platform require less maintenance and can offer more guarantees with respect to security. As is almost always the case, implementing a deny list is riddled with loopholes that make it ineffective at preventing SOQL injection attacks. For example, attackers may:
- Target fields that are not quoted
- Find ways to bypass the need for certain escaped metacharacters

There is a standard approach in the force.com platform to preventing SOQL injection attack. The approach is to evaluate SOQL statements on-the-fly in Apex by surrounding the statement in square brackets and using bind variables in such statements. SOQL statements in square brackets that use bind variables are referred to as Static SOQL Queries. Static SOQL Queries are analogous to Query Parameterization technique, so Static SOQL Queries prevent against SOQL injection in the same way as parameterized statements do in general, by escaping metacharacters when constructing and executing a SQL query. Bind variables can enforce this behavior by disallowing field changes and preventing SOQL injection attacks. Queries using bind variables are almost the same as presented in <code>Example 1</code>, with the exception that the user-supplied data will be bound to a variable and then included in the query. When the program is ready to execute a statement, it specifies to the database the runtime values to use for each of the bind parameters without the risk that the data will be interpreted as a modification to the command.

<b>Example 2:</b> <code>Example 1</code> can be rewritten to evaluate SOQL statements on-the-fly and to use bind variables as follows:

<pre>
...
public String inputValue {
  get { return inputValue; }
  set { inputValue = value; }
}
...
String queryValue = '%' + inputValue + '%';
result = [SELECT Id FROM Contact WHERE (IsDeleted = false AND Name like :queryValue)];
...
</pre>

Example 1 can also be rewritten to use <code>escapeSingleQuotes()</code> instead of bind variables. However, it is not recommended to be used as the only prevention mechanism since there are cases when the field does not use single quotes as delimiter.]]></Recommendations>
                <References>
                    <Reference>
                        <Title><![CDATA[Secure Coding SQL Injection]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/page/Secure_Coding_SQL_Injection]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SQL Injection Attacks by Example]]></Title>
                        <Author><![CDATA[S. J. Friedl]]></Author>
                        <Source><![CDATA[http://www.unixwiz.net/techtips/sql-injection.html]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Stop SQL Injection Attacks Before They Stop You]]></Title>
                        <Author><![CDATA[P. Litwin]]></Author>
                        <Publisher><![CDATA[MSDN Magazine]]></Publisher>
                        <PublishedDate>2004</PublishedDate>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SQL Injection and Oracle, Part One]]></Title>
                        <Author><![CDATA[P. Finnigan]]></Author>
                        <Publisher><![CDATA[Security Focus]]></Publisher>
                        <PublishedDate>2002</PublishedDate>
                        <Source><![CDATA[http://www.securityfocus.com/infocus/1644]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Writing Secure Code, Second Edition]]></Title>
                        <Author><![CDATA[M. Howard, D. LeBlanc]]></Author>
                        <Publisher><![CDATA[Microsoft Press]]></Publisher>
                        <PublishedDate>2003</PublishedDate>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CWE ID 89]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[6] CWE ID 089]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2019]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[6] CWE ID 089]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2020]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[6] CWE ID 089]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[3] CWE ID 089]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2022]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CCI-001310, CCI-002754]]></Title>
                        <Author><![CDATA[Standards Mapping - DISA Control Correlation Identifier Version 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI]]></Title>
                        <Author><![CDATA[Standards Mapping - FIPS200]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Indirect Access to Sensitive Data]]></Title>
                        <Author><![CDATA[Standards Mapping - General Data Protection Regulation]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI-10 Information Input Validation (P1)]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI-10 Information Input Validation]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[5.3.4 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.5 Output Encoding and Injection Prevention Requirements (L1 L2 L3)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Application Security Verification Standard 4.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[M7 Client Side Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Mobile Top 10 Risks 2014]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A6 Injection Flaws]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2004]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A2 Injection Flaws]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2007]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A1 Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A1 Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2013]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A1 Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2017]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A03 Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.6]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.3.1.1, Requirement 6.5.2]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 2.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 4.2 - Critical Asset Protection]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insecure Interaction - CWE ID 089]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2009]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insecure Interaction - CWE ID 089]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insecure Interaction - CWE ID 089]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2011]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.11]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.3]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.8]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 5.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SQL Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium 24 + 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SQL Injection (WASC-19)]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium Version 2.00]]></Author>
                    </Reference>
                </References>
            </Description>
            <Description id="desc.dataflow.apex.sosl_injection" formatVersion="3.4">
                <Abstract><![CDATA[<Paragraph>On line <Replace key="PrimaryLocation.line"/> of <Replace  key="PrimaryLocation.file"/>, the method <Replace key="EnclosingFunction.name"/> invokes a SOSL query built using input potentially coming from an untrusted source. This call could allow an attacker to modify the statement's meaning and access unauthorized data.<AltParagraph>Executing SOSL queries with data from untrusted sources may allow access to unauthorized data.</AltParagraph></Paragraph>
  ]]></Abstract>
                <Explanation><![CDATA[Salesforce Object Search Language (SOSL) is the Salesforce platform search language that is used to perform text searches in records. Use SOSL to search fields across multiple standard and custom object records in Salesforce.

Salesforce Object Search Language (SOSL) injection errors occur when:

1. Data enters a program from an untrusted source.
<Paragraph>
In this case, the data enters at <Replace key="SourceFunction" link="SourceLocation"/> in <Replace key="SourceLocation.file"/> on line <Replace key="SourceLocation.line"/>.
</Paragraph>

2. The data is used to dynamically construct a SOSL query without any pre-processing or sanitization.
<Paragraph>
In this case, the data is passed to <Replace key="PrimaryCall.name" link="PrimaryLocation"/> in <Replace key="PrimaryLocation.file"/> on line <Replace key="PrimaryLocation.line"/>.
</Paragraph>

<b>Example 1:</b> The following code dynamically constructs and executes a SOSL query that searches for contacts with a specified name.

<pre>
...
public String inputValue {
  get { return inputValue; }
  set { inputValue = value; }
}
...
String queryString = 'Name LIKE \'%' + inputValue + '%\'';
String searchString = 'Acme';
String searchQuery = 'FIND :searchString IN ALL FIELDS RETURNING Contact (Id WHERE ' + queryString + ')';
List&lt;List&lt;SObject&gt;&gt; results = Search.query(searchQuery);
...
</pre>

This code intends to execute the query as follows:

<pre>
String searchQuery = 'FIND :searchString IN ALL FIELDS RETURNING Contact (Id WHERE Name LIKE '%' + inputValue + '%')';
</pre>

However, because the query is constructed dynamically by concatenating a constant base query string and a user input string, the query only behaves correctly if <code>inputValue</code> does not contain a single-quote character. If an attacker enters the string <code>1%' OR Name LIKE '</code> for <code>inputValue</code>, then the query becomes the following:

<pre>
String searchQuery = 'FIND :searchString IN ALL FIELDS RETURNING Contact (Id WHERE Name LIKE '%1%' OR Name LIKE '%%')';
</pre>

The addition of the <code>OR Name like '%%'</code> condition causes the where clause to use the <code>LIKE '%%'</code> condition, which will force the query to output all the records that contain phrase 'map', since it becomes logically equivalent to the much simpler query:

<pre>
FIND 'map*' IN ALL FIELDS RETURNING Contact (Id WHERE Name LIKE '%%')
</pre>

Unlike most of database interfaces, SOSL in the force.com platform does not support multiple SOSL statements separated by semicolons, which means that it is not possible to concatenate several commands in a single query as is the case with regular SQL injection attacks. Also, note that Apex database does not support comments, so every single quote, parenthesis or other special character must be paired.]]></Explanation>
                <Recommendations><![CDATA[The root cause of a SOSL injection vulnerability is the ability of an attacker to change context in the SOSL query, causing a value that the programmer intended to be interpreted as data to be interpreted as a new field or logical operator. When a SOSL query is constructed, the programmer knows what should be interpreted as part of the command and what should be interpreted as data. One traditional approach to preventing SOSL injection attacks is to handle them as an input validation problem and either accept only characters from an allow list of safe values or identify and escape a list of potentially malicious values (deny list). Checking an allow list can be a very effective means of enforcing strict input validation rules, but other solutions provided by the Salesforce platform require less maintenance and can offer more guarantees with respect to security. As is almost always the case, implementing a deny list is riddled with loopholes that make it ineffective at preventing SSQL injection attacks. For example, attackers may:
- Target fields that are not quoted
- Find ways to bypass the need for certain escaped metacharacters
			
There is a standard approach in the force.com platform to preventing SOSL injection attack. The approach is to evaluate SOSL statements on-the-fly in Apex by surrounding the statement in square brackets and using bind variables in such statements. SOSL statements in square brackets that use bind variables are referred to as Static SOSL Queries. Static SOSL Queries are analogous to Query Parameterization technique, so Static SOSL Queries prevent against SOSL injection in the same way as parameterized statements do in general, by escaping metacharacters when constructing and executing a SQL query. Bind variables can enforce this behavior by disallowing field changes and preventing SOSL injection attacks. Queries using bind variables are almost the same as presented in <code>Example 1</code>, with the exception that the user-supplied data will be bound to a variable and then included in the query. When the program is ready to execute a statement, it specifies to the database the runtime values to use for each of the bind parameters without the risk that the data will be interpreted as a modification to the command.

<b>Example 2:</b> <code>Example 1</code> can be rewritten to evaluate SOSL statements on-the-fly and to use bind variables within the WHERE clause (or other similar clauses) as follows:

<pre>
...
public String inputValue {
  get { return inputValue; }
  set { inputValue = value; }
}
...
String queryString = 'Name LIKE \'%' + inputValue + '%\'';
String searchString = 'Acme';
String searchQuery = [FIND :searchString IN ALL FIELDS RETURNING Contact (Id WHERE :queryString)];
List&lt;List&lt;SObject&gt;&gt; results = Search.query(searchQuery);
...
</pre>

Example 1 can also be rewritten to use <code>escapeSingleQuotes()</code> instead of bind variables. However, it is not recommended to be used as the only prevention mechanism since there are cases when the field does not use single quotes as delimiter.]]></Recommendations>
                <References>
                    <Reference>
                        <Title><![CDATA[Secure Coding SQL Injection]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/page/Secure_Coding_SQL_Injection]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SQL Injection Attacks by Example]]></Title>
                        <Author><![CDATA[S. J. Friedl]]></Author>
                        <Source><![CDATA[http://www.unixwiz.net/techtips/sql-injection.html]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Stop SQL Injection Attacks Before They Stop You]]></Title>
                        <Author><![CDATA[P. Litwin]]></Author>
                        <Publisher><![CDATA[MSDN Magazine]]></Publisher>
                        <PublishedDate>2004</PublishedDate>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SQL Injection and Oracle, Part One]]></Title>
                        <Author><![CDATA[P. Finnigan]]></Author>
                        <Publisher><![CDATA[Security Focus]]></Publisher>
                        <PublishedDate>2002</PublishedDate>
                        <Source><![CDATA[http://www.securityfocus.com/infocus/1644]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Writing Secure Code, Second Edition]]></Title>
                        <Author><![CDATA[M. Howard, D. LeBlanc]]></Author>
                        <Publisher><![CDATA[Microsoft Press]]></Publisher>
                        <PublishedDate>2003</PublishedDate>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CWE ID 89]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[6] CWE ID 089]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2019]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[6] CWE ID 089]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2020]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[6] CWE ID 089]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[3] CWE ID 089]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2022]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CCI-001310, CCI-002754]]></Title>
                        <Author><![CDATA[Standards Mapping - DISA Control Correlation Identifier Version 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI]]></Title>
                        <Author><![CDATA[Standards Mapping - FIPS200]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Indirect Access to Sensitive Data]]></Title>
                        <Author><![CDATA[Standards Mapping - General Data Protection Regulation]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI-10 Information Input Validation (P1)]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI-10 Information Input Validation]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[5.3.4 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.5 Output Encoding and Injection Prevention Requirements (L1 L2 L3)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Application Security Verification Standard 4.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[M7 Client Side Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Mobile Top 10 Risks 2014]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A6 Injection Flaws]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2004]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A2 Injection Flaws]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2007]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A1 Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A1 Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2013]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A1 Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2017]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A03 Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.6]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.3.1.1, Requirement 6.5.2]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 2.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 4.2 - Critical Asset Protection]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insecure Interaction - CWE ID 089]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2009]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insecure Interaction - CWE ID 089]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insecure Interaction - CWE ID 089]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2011]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.11]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.3]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.8]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 5.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SQL Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium 24 + 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SQL Injection (WASC-19)]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium Version 2.00]]></Author>
                    </Reference>
                </References>
            </Description>
            <Description id="desc.semantic.apex.soql_injection" formatVersion="3.4">
                <Abstract><![CDATA[<Paragraph>On line <Replace key="PrimaryLocation.line"/> of <Replace  key="PrimaryLocation.file"/>, the method <Replace key="EnclosingFunction.name"/> invokes a SOQL query built using input coming from an untrusted source. This call could allow an attacker to modify the statement's meaning and access unauthorized data.<AltParagraph>Executing SOQL queries with data from untrusted sources may allow access to unauthorized data.</AltParagraph></Paragraph>
  ]]></Abstract>
                <Explanation><![CDATA[The Salesforce Object Query Language (SOQL) is intended to retrieve specific information from the application database; one canot change such data using SOQL queries.

Salesforce Object Query Language (SOQL) injection errors occur when:

1. Data enters a program from an untrusted source.

In this case, Fortify Static Code Analyzer could not determine that the source of the data is trusted.

2. The data is used to dynamically construct a SOSL query without any pre-processing or sanitization.
<Paragraph>
In this case, the data is passed to <Replace key="PrimaryCall.name" link="PrimaryLocation"/> in <Replace key="PrimaryLocation.file"/> on line <Replace key="PrimaryLocation.line"/>.
</Paragraph>

<b>Example 1:</b> The following code dynamically constructs and executes a SOSL query that searches for contacts with a specified name.
<pre>
...
public String inputValue {
  get { return inputValue; }
  set { inputValue = value; }
}
...
String queryString = 'SELECT Id FROM Contact WHERE (IsDeleted = false AND Name like \'%' + inputValue + '%\')';
result = Database.query(queryString);
...
</pre>

This code intends to execute the query as follows:
<pre>
SELECT Id FROM Contact WHERE (IsDeleted = false AND Name like '%inputValue%')
</pre>

However, because the query is constructed dynamically by concatenating a constant base query string and a user input string, the query only behaves correctly if <code>inputValue</code> does not contain a single-quote character. If an attacker enters the string <code>name') OR (Name like '%</code> for <code>inputValue</code>, then the query becomes the following:

<pre>
SELECT Id FROM Contact WHERE (IsDeleted = false AND Name like '%name') OR (Name like '%%')
</pre>

The addition of the <code>name') OR (Name like '%</code> condition causes the where clause to use the <code>LIKE '%%'</code> condition, which will force the query to output all possible ID values, since it becomes logically equivalent to the much simpler query:

<pre>
SELECT Id FROM Contact WHERE ... OR (Name like '%%')
</pre>

Unlike most of database interfaces, SOQL in the force.com platform does not support multiple SOQL statements separated by semicolons, which means that it is not possible to concatenate several commands in a single query as is the case with regular SQL injection attacks. Also, note that Apex database does not support comments, so every single quote, parenthesis or other special character must be paired.]]></Explanation>
                <Recommendations><![CDATA[The root cause of a SOQL injection vulnerability is the ability of an attacker to change context in the SOQL query, causing a value that the programmer intended to be interpreted as data to be interpreted as a new field or logical operator. When a SOQL query is constructed, the programmer knows what should be interpreted as part of the command and what should be interpreted as data. One traditional approach to preventing SOQL injection attacks is to handle them as an input validation problem and either accept only characters from an allow list of safe values or identify and escape a list of potentially malicious values (deny list). Checking an allow list can be a very effective means of enforcing strict input validation rules, but other solutions provided by the Salesforce platform require less maintenance and can offer more guarantees with respect to security. As is almost always the case, implementing a deny list is riddled with loopholes that make it ineffective at preventing SOQL injection attacks. For example, attackers may:
- Target fields that are not quoted
- Find ways to bypass the need for certain escaped metacharacters

There is a standard approach in the force.com platform to preventing SOQL injection attack. The approach is to evaluate SOQL statements on-the-fly in Apex by surrounding the statement in square brackets and using bind variables in such statements. SOQL statements in square brackets that use bind variables are referred to as Static SOQL Queries. Static SOQL Queries are analogous to Query Parameterization technique, so Static SOQL Queries prevent against SOQL injection in the same way as parameterized statements do in general, by escaping metacharacters when constructing and executing a SQL query. Bind variables can enforce this behavior by disallowing field changes and preventing SOQL injection attacks. Queries using bind variables are almost the same as presented in <code>Example 1</code>, with the exception that the user-supplied data will be bound to a variable and then included in the query. When the program is ready to execute a statement, it specifies to the database the runtime values to use for each of the bind parameters without the risk that the data will be interpreted as a modification to the command.

<b>Example 2:</b> <code>Example 1</code> can be rewritten to evaluate SOQL statements on-the-fly and to use bind variables as follows:

<pre>
...
public String inputValue {
  get { return inputValue; }
  set { inputValue = value; }
}
...
String queryValue = '%' + inputValue + '%';
result = [SELECT Id FROM Contact WHERE (IsDeleted = false AND Name like :queryValue)];
...
</pre>

Example 1 can also be rewritten to use <code>escapeSingleQuotes()</code> instead of bind variables. However, it is not recommended to be used as the only prevention mechanism since there are cases when the field does not use single quotes as delimiter.]]></Recommendations>
                <References>
                    <Reference>
                        <Title><![CDATA[Secure Coding SQL Injection]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/page/Secure_Coding_SQL_Injection]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SQL Injection Attacks by Example]]></Title>
                        <Author><![CDATA[S. J. Friedl]]></Author>
                        <Source><![CDATA[http://www.unixwiz.net/techtips/sql-injection.html]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Stop SQL Injection Attacks Before They Stop You]]></Title>
                        <Author><![CDATA[P. Litwin]]></Author>
                        <Publisher><![CDATA[MSDN Magazine]]></Publisher>
                        <PublishedDate>2004</PublishedDate>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SQL Injection and Oracle, Part One]]></Title>
                        <Author><![CDATA[P. Finnigan]]></Author>
                        <Publisher><![CDATA[Security Focus]]></Publisher>
                        <PublishedDate>2002</PublishedDate>
                        <Source><![CDATA[http://www.securityfocus.com/infocus/1644]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Writing Secure Code, Second Edition]]></Title>
                        <Author><![CDATA[M. Howard, D. LeBlanc]]></Author>
                        <Publisher><![CDATA[Microsoft Press]]></Publisher>
                        <PublishedDate>2003</PublishedDate>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CWE ID 89]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[6] CWE ID 089]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2019]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[6] CWE ID 089]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2020]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[6] CWE ID 089]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[3] CWE ID 089]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2022]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CCI-001310, CCI-002754]]></Title>
                        <Author><![CDATA[Standards Mapping - DISA Control Correlation Identifier Version 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI]]></Title>
                        <Author><![CDATA[Standards Mapping - FIPS200]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Indirect Access to Sensitive Data]]></Title>
                        <Author><![CDATA[Standards Mapping - General Data Protection Regulation]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI-10 Information Input Validation (P1)]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI-10 Information Input Validation]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[5.3.4 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.5 Output Encoding and Injection Prevention Requirements (L1 L2 L3)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Application Security Verification Standard 4.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[M7 Client Side Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Mobile Top 10 Risks 2014]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A6 Injection Flaws]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2004]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A2 Injection Flaws]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2007]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A1 Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A1 Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2013]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A1 Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2017]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A03 Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.6]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.3.1.1, Requirement 6.5.2]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 2.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 4.2 - Critical Asset Protection]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insecure Interaction - CWE ID 089]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2009]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insecure Interaction - CWE ID 089]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insecure Interaction - CWE ID 089]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2011]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.11]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.3]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.8]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 5.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SQL Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium 24 + 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SQL Injection (WASC-19)]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium Version 2.00]]></Author>
                    </Reference>
                </References>
            </Description>
            <Description id="desc.semantic.apex.sosl_injection" formatVersion="3.4">
                <Abstract><![CDATA[<Paragraph>On line <Replace key="PrimaryLocation.line"/> of <Replace  key="PrimaryLocation.file"/>, the method <Replace key="EnclosingFunction.name"/> invokes a SOSL query built using input potentially coming from an untrusted source. This call could allow an attacker to modify the statement's meaning and access unauthorized data.<AltParagraph>Executing SOSL queries with data from untrusted sources may allow access to unauthorized data.</AltParagraph></Paragraph>
  ]]></Abstract>
                <Explanation><![CDATA[Salesforce Object Search Language (SOSL) is the Salesforce search language that is used to perform text searches in records. Use SOSL to search fields across multiple standard and custom object records in Salesforce.

Salesforce Object Search Language (SOSL) injection errors occur when:

1. Data enters a program from an untrusted source.

In this case, Fortify Static Code Analyzer could not determine that the source of the data is trusted.

2. The data is used to dynamically construct a SOSL query without any pre-processing or sanitization.
<Paragraph>
In this case, the data is passed to <Replace key="PrimaryCall.name" link="PrimaryLocation"/> in <Replace key="PrimaryLocation.file"/> on line <Replace key="PrimaryLocation.line"/>.
</Paragraph>

<b>Example 1:</b> The following code dynamically constructs and executes a SOSL query that searches for contacts with a specified name.

<pre>
...
public String inputValue {
  get { return inputValue; }
  set { inputValue = value; }
}
...
String queryString = 'Name LIKE \'%' + inputValue + '%\'';
String searchString = 'Acme';
String searchQuery = 'FIND :searchString IN ALL FIELDS RETURNING Contact (Id WHERE ' + queryString + ')';
List&lt;List&lt;SObject&gt;&gt; results = Search.query(searchQuery);
...
</pre>

This code intends to execute the query as follows:

<pre>
String searchQuery = 'FIND :searchString IN ALL FIELDS RETURNING Account (Id WHERE Name LIKE '%' + inputValue + '%')';
</pre>

However, because the query is constructed dynamically by concatenating a constant base query string and a user input string, the query only behaves correctly if <code>inputValue</code> does not contain a single-quote character. If an attacker enters the string <code>1%' OR Name LIKE '</code> for <code>inputValue</code>, then the query becomes the following:

<pre>
String searchQuery = 'FIND :searchString IN ALL FIELDS RETURNING Account (Id WHERE Name LIKE '%1%' OR Name LIKE '%')';
</pre>

The addition of the <code>OR Name like '%%'</code> condition causes the where clause to use the <code>LIKE '%%'</code> condition, which will force the query to output all the records that contain phrase 'map', since it becomes logically equivalent to the much simpler query:

<pre>
FIND 'map*' IN ALL FIELDS RETURNING Contact (Id WHERE Name LIKE '%%')
</pre>

Unlike most of database interfaces, SOSL in the force.com platform does not support multiple SOSL statements separated by semicolons, which means that it is not possible to concatenate several commands in a single query as is the case with regular SQL injection attacks. Also, note that Apex database does not support comments, so every single quote, parenthesis or other special character must be paired.]]></Explanation>
                <Recommendations><![CDATA[The root cause of a SOSL injection vulnerability is the ability of an attacker to change context in the SOSL query, causing a value that the programmer intended to be interpreted as data to be interpreted as a new field or logical operator. When a SOSL query is constructed, the programmer knows what should be interpreted as part of the command and what should be interpreted as data. One traditional approach to preventing SOSL injection attacks is to handle them as an input validation problem and either accept only characters from an allow list of safe values or identify and escape a list of potentially malicious values (deny list). Checking an allow list can be a very effective means of enforcing strict input validation rules, but other solutions provided by the Salesforce platform require less maintenance and can offer more guarantees with respect to security. As is almost always the case, implementing a deny list is riddled with loopholes that make it ineffective at preventing SOSL injection attacks. For example, attackers may:
- Target fields that are not quoted
- Find ways to bypass the need for certain escaped metacharacters

There is a standard approach in the force.com platform to preventing SOSL injection attack. The approach is to evaluate SOSL statements on-the-fly in Apex by surrounding the statement in square brackets and using bind variables in such statements. SOSL statements in square brackets that use bind variables are referred to as Static SOSL Queries. Static SOSL Queries are analogous to Query Parameterization technique, so Static SOSL Queries prevent against SOSL injection in the same way as parameterized statements do in general, by escaping metacharacters when constructing and executing a SQL query. Bind variables can enforce this behavior by disallowing field changes and preventing SOSL injection attacks. Queries using bind variables are almost the same as presented in <code>Example 1</code>, with the exception that the user-supplied data will be bound to a variable and then included in the query. When the program is ready to execute a statement, it specifies to the database the runtime values to use for each of the bind parameters without the risk that the data will be interpreted as a modification to the command.

<b>Example 2:</b> <code>Example 1</code> can be rewritten to evaluate SOSL statements on-the-fly and to use bind variables within the WHERE clause (or other similar clauses) as follows:

<pre>
...
public String inputValue {
  get { return inputValue; }
  set { inputValue = value; }
}
...
String queryString = 'Name LIKE \'%' + inputValue + '%\'';
String searchString = 'Acme';
String searchQuery = [FIND :searchString IN ALL FIELDS RETURNING Account (Id WHERE :queryString)];
List&lt;List&lt;SObject&gt;&gt; results = Search.query(searchQuery);
...
</pre>

Example 1 can also be rewritten to use <code>escapeSingleQuotes()</code> instead of bind variables. However, it is not recommended to be used as the only prevention mechanism since there are cases when the field does not use single quotes as delimiter.]]></Recommendations>
                <References>
                    <Reference>
                        <Title><![CDATA[Secure Coding SQL Injection]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/page/Secure_Coding_SQL_Injection]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SQL Injection Attacks by Example]]></Title>
                        <Author><![CDATA[S. J. Friedl]]></Author>
                        <Source><![CDATA[http://www.unixwiz.net/techtips/sql-injection.html]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Stop SQL Injection Attacks Before They Stop You]]></Title>
                        <Author><![CDATA[P. Litwin]]></Author>
                        <Publisher><![CDATA[MSDN Magazine]]></Publisher>
                        <PublishedDate>2004</PublishedDate>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SQL Injection and Oracle, Part One]]></Title>
                        <Author><![CDATA[P. Finnigan]]></Author>
                        <Publisher><![CDATA[Security Focus]]></Publisher>
                        <PublishedDate>2002</PublishedDate>
                        <Source><![CDATA[http://www.securityfocus.com/infocus/1644]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Writing Secure Code, Second Edition]]></Title>
                        <Author><![CDATA[M. Howard, D. LeBlanc]]></Author>
                        <Publisher><![CDATA[Microsoft Press]]></Publisher>
                        <PublishedDate>2003</PublishedDate>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CWE ID 89]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[6] CWE ID 089]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2019]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[6] CWE ID 089]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2020]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[6] CWE ID 089]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[3] CWE ID 089]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2022]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CCI-001310, CCI-002754]]></Title>
                        <Author><![CDATA[Standards Mapping - DISA Control Correlation Identifier Version 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI]]></Title>
                        <Author><![CDATA[Standards Mapping - FIPS200]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Indirect Access to Sensitive Data]]></Title>
                        <Author><![CDATA[Standards Mapping - General Data Protection Regulation]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI-10 Information Input Validation (P1)]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI-10 Information Input Validation]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[5.3.4 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.5 Output Encoding and Injection Prevention Requirements (L1 L2 L3)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Application Security Verification Standard 4.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[M7 Client Side Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Mobile Top 10 Risks 2014]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A6 Injection Flaws]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2004]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A2 Injection Flaws]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2007]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A1 Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A1 Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2013]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A1 Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2017]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A03 Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.6]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.3.1.1, Requirement 6.5.2]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 2.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 4.2 - Critical Asset Protection]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insecure Interaction - CWE ID 089]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2009]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insecure Interaction - CWE ID 089]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insecure Interaction - CWE ID 089]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2011]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3540.1 CAT I, APP3540.3 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.11]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.3]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.8]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002540 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 5.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SQL Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium 24 + 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SQL Injection (WASC-19)]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium Version 2.00]]></Author>
                    </Reference>
                </References>
            </Description>
            <Description id="desc.dataflow.apex.frame_spoofing" formatVersion="3.4">
                <Abstract><![CDATA[<Paragraph>On line <Replace key="PrimaryLocation.line"/> in <Replace key="PrimaryLocation.file"/>, the <code>apex:iframe</code> component is rendered using user-supplied input as its URL, which may result in malicious content being loaded within the Visualforce page.<AltParagraph>Accepting user-supplied data as <code>apex:iframe</code> source URL may lead to malicious content being loaded within the Visualforce page.</AltParagraph></Paragraph>
  ]]></Abstract>
                <Explanation><![CDATA[Frame Spoofing vulnerabilities occur when:

1. Data enters a web application through an untrusted source.
<Paragraph>
In this case, the data enters at <Replace key="SourceFunction" link="SourceLocation"/> in <Replace key="SourceLocation.file"/> on line <Replace key="SourceLocation.line"/>.
</Paragraph>
2. The data is used as an <code>iframe</code> URL without being validated.
<Paragraph>
In this case, the data is used at <Replace key="SinkFunction" link="SinkLocation"/> in <Replace key="SinkLocation.file"/> on line <Replace key="SinkLocation.line"/>.
</Paragraph>
This way, an attacker may be able to control what is rendered into the inline frame. By modifying the frame URL to point to a malicious site, phishing attacks may be performed in an attempt to steal user information, including credentials or other sensitive data. Given that the base domain is trusted - <code>Salesforce.com</code>, the victim will trust the page and provide all of the requested information.

<b>Example 1:</b> In the following code example, the <code>iframesrc</code> URL parameter is directly used as the <code>apex:iframe</code> target URL.
<pre>
&lt;apex:page&gt;
&lt;apex:iframe src="{!$CurrentPage.parameters.iframesrc}"&gt;&lt;/apex:iframe&gt;
&lt;/apex:page&gt;
</pre>

This way, if an attacker provides a victim with the <code>iframesrc</code> parameter set to a malicious website, the frame will be rendered with the content of the malicious website.
<pre>
&lt;iframe src="http://evildomain.com/"&gt;
</pre>]]></Explanation>
                <Recommendations><![CDATA[To prevent Frame Spoofing vulnerability, three different approaches may be taken:
- Validate data used in the <code>src</code> attribute of <code>apex:iframe</code> component. Characters, such as ":", "/" and "." must be avoided.
- Use only URLs from a pre-defined allow list.
- Hardcode the domain

<b>Example 2:</b> The following code shows how the domain may be hardcoded to avoid Frame Spoofing.
<pre>
&lt;apex:iframe src="http://validdomain.com/{!CurrentPage.parameters.iframesrc}"&gt;&lt;/apex:iframe&gt;
</pre>]]></Recommendations>
                <References>
                    <Reference>
                        <Title><![CDATA[Content Spoofing - TechTarget]]></Title>
                        <Author><![CDATA[Ryan C. Barnett]]></Author>
                        <Source><![CDATA[http://searchsecurity.techtarget.com/feature/Content-Spoofing]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Secure Coding Guidelines]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/page/Secure_Coding_Guideline]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CWE ID 601]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CCI-002754]]></Title>
                        <Author><![CDATA[Standards Mapping - DISA Control Correlation Identifier Version 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI]]></Title>
                        <Author><![CDATA[Standards Mapping - FIPS200]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Indirect Access to Sensitive Data]]></Title>
                        <Author><![CDATA[Standards Mapping - General Data Protection Regulation]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI-10 Information Input Validation (P1)]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI-10 Information Input Validation]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[5.1.5 Input Validation Requirements (L1 L2 L3)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Application Security Verification Standard 4.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[M1 Weak Server Side Controls]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Mobile Top 10 Risks 2014]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A1 Unvalidated Input]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2004]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A10 Unvalidated Redirects and Forwards]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A10 Unvalidated Redirects and Forwards]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2013]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.3.1.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 2.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 4.2 - Critical Asset Protection]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insecure Interaction - CWE ID 601]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insecure Interaction - CWE ID 601]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2011]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3600 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3600 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3600 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3600 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3600 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3600 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3600 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.11]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.3]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.8]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 5.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Content Spoofing]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium 24 + 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[URL Redirector Abuse (WASC-38)]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium Version 2.00]]></Author>
                    </Reference>
                </References>
            </Description>
            <Description id="desc.structural.apex.access_control_update" formatVersion="3.4">
                <Abstract><![CDATA[<Paragraph>Without proper access control, the method <Replace key="EnclosingFunction.name"/> in <Replace key="PrimaryLocation.file"/> can execute a DML Update statement on line <Replace key="PrimaryLocation.line"/>, allowing an attacker to modify unauthorized database entries.<AltParagraph>Executing a SOQL statement without checking user permissions can allow an attacker to modify unauthorized entries.</AltParagraph></Paragraph>
  ]]></Abstract>
                <Explanation><![CDATA[Access control vulnerabilities occur when an attacker can access resources that are restricted to only authorized users.

By default, Visualforce applications automatically enforce Object-level security (CRUD) and Field-level security (FLS) when SObjects and SObject fields are used. However, if objects and fields are referenced as generic data types, these mechanisms are not enforced and access control checks need to be implemented programmatically.

<b>Example 1:</b> In the following code example, fields are updated using custom setter methods, and therefore require authorization checks.
<pre>
&lt;apex:page controller="accessControl"&gt;
  &lt;apex:pageBlock &gt;
    &lt;apex:pageBlockSection &gt;
      &lt;apex:outputText value="Survey Name: "/&gt;
      &lt;apex:inputText value="{!surveyName}"/&gt;
      &lt;/apex:pageBlockSection&gt;
    &lt;apex:pageBlockSection &gt;
      &lt;apex:outputText value="New Name: "/&gt;
      &lt;apex:inputText value="{!newSurveyName}"/&gt;
    &lt;/apex:pageBlockSection&gt;
      &lt;apex:pageBlockSection &gt;
      &lt;apex:commandButton value="Update" action="{!updateName}"/&gt;
    &lt;/apex:pageBlockSection&gt;
  &lt;/apex:pageBlock&gt;
&lt;/apex:page&gt;
</pre>
<pre>
public String surveyName { get; set; }
public String newSurveyName { get; set; }
public PageReference updateName() {
  Survey__c s = [SELECT Name FROM Survey__c WHERE Name=:surveyName];

  s.Name = newSurveyName;
  update s;

  PageReference page = ApexPages.currentPage();            
  page.setRedirect(true);
  return page;
}
</pre>]]></Explanation>
                <Recommendations><![CDATA[To prevent Access Control vulnerabilities, four different approaches may be taken:

<b>1. Only operate directly on SObjects and SObject fields</b>
Since Visualforce automatically enforces CRUD and FLS controls on SObjects and SObject fields, this is the preferred option.

<b>2. Use Standard controllers</b>
In some cases it is not possible to operate directly on SObjects or SObject fields, so a viable alternative is to use a Standard Controller. This controller will automatically check CRUD access before performing the operation. However, there might be some cases when there is the need to work with custom Objects and therefore this approach cannot be used. More information about Standard Controllers can be found in the Salesforce documentation [4].

<b>3. Perform authorization checks before SObject and SObject field operations in Apex code</b>
When it is not possible to operate directly on SObjects or to use a Standard Controller, the developer must implement access control checks before performing database operations.

<b>Example 2:</b> The following code example, shows <code>Example 1</code> with the authorization check.
<pre>
  public PageReference updateName() {
    Survey__c s = [SELECT Name FROM Survey__c WHERE Name=:surveyName];
    if (!Schema.sObjectType.Survey__c.fields.Name.isUpdateable()){
      ApexPages.addMessage(new ApexPages.Message(ApexPages.Severity.FATAL,'Insufficient access'));
      return null;
    }
    s.Name = newSurveyName;
    update s;

    PageReference page = ApexPages.currentPage();
    page.setRedirect(true);
    return page;
  }
</pre>

<b>4. Perform authorization checks inside the Visualforce page</b>
The last alternative is to perform access control checks inside the Visualforce page. This can be achieved through the utilization of the <code>rendered</code> attribute.

<b>Example 3:</b> In the following code example, the field is only rendered if the user has the proper authorization.
<pre>
  &lt;apex:inputText value="{!newSurveyName}" rendered="{!$ObjectType.Survey__c.fields.Name.Updateable}" /&gt;
</pre>]]></Recommendations>
                <References>
                    <Reference>
                        <Title><![CDATA[Secure Coding Guidelines - Authorization and Access Control]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/page/Secure_Coding_Access_Control]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Testing CRUD and FLS Enforcement]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/page/Testing_CRUD_and_FLS_Enforcement]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Enforcing CRUD and FLS]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/page/Enforcing_CRUD_and_FLS]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Visualforce Developers Guide - Standard Controllers]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/docs/atlas.en-us.pages.meta/pages/pages_controller_std.htm]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CWE ID 566]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CCI-000213, CCI-001084, CCI-002165]]></Title>
                        <Author><![CDATA[Standards Mapping - DISA Control Correlation Identifier Version 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[AC]]></Title>
                        <Author><![CDATA[Standards Mapping - FIPS200]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Access Violation]]></Title>
                        <Author><![CDATA[Standards Mapping - General Data Protection Regulation]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[AC-3 Access Enforcement (P1)]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[AC-3 Access Enforcement]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[1.2.2 Authentication Architectural Requirements (L2 L3), 1.2.3 Authentication Architectural Requirements (L2 L3), 1.2.4 Authentication Architectural Requirements (L2 L3), 1.4.2 Access Control Architectural Requirements (L2 L3), 1.4.4 Access Control Architectural Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 4.1.2 General Access Control Design (L1 L2 L3), 4.1.3 General Access Control Design (L1 L2 L3), 4.1.5 General Access Control Design (L1 L2 L3), 4.2.1 Operation Level Access Control (L1 L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.1 Malicious Code Search (L2 L3), 13.1.4 Generic Web Service Security Verification Requirements (L2 L3), 14.5.1 Validate HTTP Request Header Requirements (L1 L2 L3), 14.5.4 Validate HTTP Request Header Requirements (L1 L2 L3)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Application Security Verification Standard 4.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[M5 Poor Authorization and Authentication]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Mobile Top 10 Risks 2014]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A2 Broken Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2004]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Insecure Direct Object Reference]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2007]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Insecure Direct Object References]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Insecure Direct Object References]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2013]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A5 Broken Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2017]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A01 Broken Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.2]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.4]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 2.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 5.4 - Authentication and Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 5.4 - Authentication and Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Porous Defenses - CWE ID 863]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2011]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.11]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.3]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.8]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 5.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insufficient Authorization]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium 24 + 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insufficient Authorization (WASC-02)]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium Version 2.00]]></Author>
                    </Reference>
                </References>
            </Description>
            <Description id="desc.structural.apex.access_control_read" formatVersion="3.4">
                <Abstract><![CDATA[<Paragraph>Without proper access control, the method <Replace key="EnclosingFunction.name"/> in <Replace key="PrimaryLocation.file"/> can execute a SOQL Select statement on line <Replace key="PrimaryLocation.line"/>, allowing an attacker to read unauthorized database entries.<AltParagraph>Executing a SOQL statement without checking user permissions can allow an attacker to read unauthorized entries.</AltParagraph></Paragraph>
  ]]></Abstract>
                <Explanation><![CDATA[Access control vulnerabilities occur when an attacker can access resources that are restricted to only authorized users.

By default, Visualforce applications automatically enforce Object-level security (CRUD) and Field-level security (FLS) when SObjects and SObject fields are used. However, if objects and fields are referenced as generic data types, these mechanisms are not enforced and access control checks need to be implemented programmatically.

<b>Example 1:</b> In the following code example, the value of an SObject field is passed to a string variable before being provided to the Visualforce page, and therefore bypasses CRUD and FLS controls.
<pre>
&lt;apex:page controller="accessControl"&gt;
  &lt;apex:outputText value="Account Name: "/&gt;
  &lt;apex:outputText value="{!Name}"/&gt;
&lt;/apex:page&gt;
</pre>
<pre>
public with sharing class accessControl {
  public String getName() {
    Account a = [SELECT Name FROM Account LIMIT 1];
    return a.Name;
  }
}
</pre>]]></Explanation>
                <Recommendations><![CDATA[To prevent Access Control vulnerabilities, four different approaches may be taken:

<b>1. Only operate directly on SObjects and SObject fields</b>
Since Visualforce automatically enforces CRUD and FLS controls on SObjects and SObject fields, this is the preferred option.

<b>Example 2:</b> The following code example, shows <code>Example 1</code> rewritten to operate directly on SObjects.
<pre>
  &lt;apex:page controller="accessControl"&gt;
    &lt;apex:outputText value="Account Name: "/&gt;
    &lt;apex:outputText value="{!Account.name}"/&gt;
  &lt;/apex:page&gt;
</pre>
<pre>
  public with sharing class accessControl {
    public Account getAccount() {
      return [SELECT Name FROM Account LIMIT 1];
    }
  }
</pre>

<b>2. Use Standard controllers</b>
In some cases it is not possible to operate directly on SObjects or SObject fields, so a viable alternative is to use a Standard Controller. This controller will automatically check CRUD access before performing the operation. However, there might be some cases when there is the need to work with custom Objects and therefore this approach cannot be used. More information about Standard Controllers can be found in the Salesforce documentation [4].

<b>3. Perform authorization checks before SObject and SObject field operations in Apex code</b>
When it is not possible to operate directly on SObjects or to use a Standard Controller, the developer must implement access control checks before performing database operations.

<b>Example 3:</b> The following code example, shows <code>Example 1</code> with the authorization check.
<pre>
  public String getName() {
    if (!Schema.sObjectType.Account.fields.Name.isAccessible()){
      ApexPages.addMessage(new ApexPages.Message(ApexPages.Severity.FATAL,'Insufficient access'));
      return null;
    }
    Account a = [SELECT Name FROM Account LIMIT 1];
    return a.Name;
  }
</pre>

<b>4. Perform authorization checks inside the Visualforce page</b>
The last alternative is to perform access control checks inside the Visualforce page. This can be achieved through the utilization of the <code>rendered</code> attribute.

<b>Example 4:</b> In the following code example, the field is only rendered if the user has the proper authorization.
<pre>
  &lt;apex:outputText value="{!Name}" rendered="{!$ObjectType.Account.fields.Name.Accessible}}" /&gt;
</pre>]]></Recommendations>
                <References>
                    <Reference>
                        <Title><![CDATA[Secure Coding Guidelines - Authorization and Access Control]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/page/Secure_Coding_Access_Control]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Testing CRUD and FLS Enforcement]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/page/Testing_CRUD_and_FLS_Enforcement]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Enforcing CRUD and FLS]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/page/Enforcing_CRUD_and_FLS]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Visualforce Developers Guide - Standard Controllers]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/docs/atlas.en-us.pages.meta/pages/pages_controller_std.htm]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CWE ID 566]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CCI-000213, CCI-001084, CCI-002165]]></Title>
                        <Author><![CDATA[Standards Mapping - DISA Control Correlation Identifier Version 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[AC]]></Title>
                        <Author><![CDATA[Standards Mapping - FIPS200]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Access Violation]]></Title>
                        <Author><![CDATA[Standards Mapping - General Data Protection Regulation]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[AC-3 Access Enforcement (P1)]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[AC-3 Access Enforcement]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[1.2.2 Authentication Architectural Requirements (L2 L3), 1.2.3 Authentication Architectural Requirements (L2 L3), 1.2.4 Authentication Architectural Requirements (L2 L3), 1.4.2 Access Control Architectural Requirements (L2 L3), 1.4.4 Access Control Architectural Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 4.1.2 General Access Control Design (L1 L2 L3), 4.1.3 General Access Control Design (L1 L2 L3), 4.1.5 General Access Control Design (L1 L2 L3), 4.2.1 Operation Level Access Control (L1 L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.1 Malicious Code Search (L2 L3), 13.1.4 Generic Web Service Security Verification Requirements (L2 L3), 14.5.1 Validate HTTP Request Header Requirements (L1 L2 L3), 14.5.4 Validate HTTP Request Header Requirements (L1 L2 L3)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Application Security Verification Standard 4.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[M5 Poor Authorization and Authentication]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Mobile Top 10 Risks 2014]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A2 Broken Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2004]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Insecure Direct Object Reference]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2007]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Insecure Direct Object References]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Insecure Direct Object References]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2013]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A5 Broken Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2017]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A01 Broken Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.2]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.4]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 2.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 5.4 - Authentication and Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 5.4 - Authentication and Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Porous Defenses - CWE ID 863]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2011]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.11]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.3]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.8]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 5.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insufficient Authorization]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium 24 + 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insufficient Authorization (WASC-02)]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium Version 2.00]]></Author>
                    </Reference>
                </References>
            </Description>
            <Description id="desc.structural.apex.access_control_delete" formatVersion="3.4">
                <Abstract><![CDATA[<Paragraph>Without proper access control, the method <Replace key="EnclosingFunction.name"/> in <Replace key="PrimaryLocation.file"/> can execute a DML Delete statement on line <Replace key="PrimaryLocation.line"/>, allowing an attacker to delete unauthorized database entries.<AltParagraph>Executing a SOQL statement without checking user permissions can allow an attacker to delete unauthorized entries.</AltParagraph></Paragraph>
  ]]></Abstract>
                <Explanation><![CDATA[Access control vulnerabilities occur when an attacker can access resources that are restricted to only authorized users.

By default, Visualforce applications automatically enforce Object-level security (CRUD) and Field-level security (FLS) when SObjects and SObject fields are used. However, if objects and fields are referenced as generic data types, these mechanisms are not enforced and access control checks need to be implemented programmatically.

<b>Example 1:</b> In the following code example, a delete operation is performed on a custom controller, and therefore bypasses CRUD and FLS controls.
<pre>
&lt;apex:page controller="accessControl"&gt;
  &lt;apex:outputText value="Survey Name: "/&gt;
  &lt;apex:inputText value="{!deleteValue}"/&gt;
  &lt;apex:commandButton value="Delete" action="{!deleteSurvey}"/&gt;
&lt;/apex:page&gt;
</pre>
<pre>
public PageReference deleteSurvey() {
  Survey__c s = [SELECT Name FROM Survey__c WHERE Name=:deleteValue];
  delete s;

  PageReference page = ApexPages.currentPage();
  page.setRedirect(true);
  return page;
}
</pre>]]></Explanation>
                <Recommendations><![CDATA[To prevent Access Control vulnerabilities, four different approaches may be taken:

<b>1. Only operate directly on SObjects and SObject fields</b>
Since Visualforce automatically enforces CRUD and FLS controls on SObjects and SObject fields, this is the preferred option.

<b>2. Use Standard controllers</b>
In some cases it is not possible to operate directly on SObjects or SObject fields, so a viable alternative is to use a Standard Controller. This controller will automatically check CRUD access before performing the operation. However, there might be some cases when there is the need to work with custom Objects and therefore this approach cannot be used. More information about Standard Controllers can be found in the Salesforce documentation [4].

<b>3. Perform authorization checks before SObject and SObject field operations in Apex code</b>
When it is not possible to operate directly on SObjects or to use a Standard Controller, the developer must implement access control checks before performing database operations.

<b>Example 2:</b> The following code example, shows <code>Example 1</code> with the authorization check.
<pre>
  public PageReference deleteSurvey() {
    if (!Survey__c.sObjectType.getDescribe().isDeletable()){
      ApexPages.addMessage(new ApexPages.Message(ApexPages.Severity.FATAL,'Insufficient access'));
      return null;
    }
    Survey__c s = [SELECT Name FROM Survey__c WHERE Name=:deleteValue];
    delete s;

    PageReference page = ApexPages.currentPage();
    page.setRedirect(true);
    return page;
  }
</pre>

<b>4. Perform authorization checks inside the Visualforce page</b>
The last alternative is to perform access control checks inside the Visualforce page. This can be achieved through the utilization of the <code>rendered</code> attribute.

<b>Example 3:</b> In the following code example, the field is only rendered if the user has the proper authorization.
<pre>
  &lt;apex:commandButton action="{!deleteSurvey}" rendered="{!$ObjectType.Survey__c.Deletable}" /&gt;
</pre>]]></Recommendations>
                <References>
                    <Reference>
                        <Title><![CDATA[Secure Coding Guidelines - Authorization and Access Control]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/page/Secure_Coding_Access_Control]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Testing CRUD and FLS Enforcement]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/page/Testing_CRUD_and_FLS_Enforcement]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Enforcing CRUD and FLS]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/page/Enforcing_CRUD_and_FLS]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Visualforce Developers Guide - Standard Controllers]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/docs/atlas.en-us.pages.meta/pages/pages_controller_std.htm]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CWE ID 566]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CCI-000213, CCI-001084, CCI-002165]]></Title>
                        <Author><![CDATA[Standards Mapping - DISA Control Correlation Identifier Version 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[AC]]></Title>
                        <Author><![CDATA[Standards Mapping - FIPS200]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Access Violation]]></Title>
                        <Author><![CDATA[Standards Mapping - General Data Protection Regulation]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[AC-3 Access Enforcement (P1)]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[AC-3 Access Enforcement]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[1.2.2 Authentication Architectural Requirements (L2 L3), 1.2.3 Authentication Architectural Requirements (L2 L3), 1.2.4 Authentication Architectural Requirements (L2 L3), 1.4.2 Access Control Architectural Requirements (L2 L3), 1.4.4 Access Control Architectural Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 4.1.2 General Access Control Design (L1 L2 L3), 4.1.3 General Access Control Design (L1 L2 L3), 4.1.5 General Access Control Design (L1 L2 L3), 4.2.1 Operation Level Access Control (L1 L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.1 Malicious Code Search (L2 L3), 13.1.4 Generic Web Service Security Verification Requirements (L2 L3), 14.5.1 Validate HTTP Request Header Requirements (L1 L2 L3), 14.5.4 Validate HTTP Request Header Requirements (L1 L2 L3)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Application Security Verification Standard 4.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[M5 Poor Authorization and Authentication]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Mobile Top 10 Risks 2014]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A2 Broken Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2004]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Insecure Direct Object Reference]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2007]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Insecure Direct Object References]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Insecure Direct Object References]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2013]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A5 Broken Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2017]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A01 Broken Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.2]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.4]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 2.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 5.4 - Authentication and Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 5.4 - Authentication and Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Porous Defenses - CWE ID 863]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2011]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.11]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.3]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.8]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 5.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insufficient Authorization]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium 24 + 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insufficient Authorization (WASC-02)]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium Version 2.00]]></Author>
                    </Reference>
                </References>
            </Description>
            <Description id="desc.structural.apex.access_control_insert" formatVersion="3.4">
                <Abstract><![CDATA[<Paragraph>Without proper access control, the method <Replace key="EnclosingFunction.name"/> in <Replace key="PrimaryLocation.file"/> can execute a DML Insert statement on line <Replace key="PrimaryLocation.line"/>, allowing an attacker to delete unauthorized database entries.<AltParagraph>Executing a SOQL statement without checking user permissions can allow an attacker to create unauthorized entries.</AltParagraph></Paragraph>
  ]]></Abstract>
                <Explanation><![CDATA[Access control vulnerabilities occur when an attacker can access resources that are restricted to only authorized users.

By default, Visualforce applications automatically enforce Object-level security (CRUD) and Field-level security (FLS) when SObjects and SObject fields are used. However, if objects and fields are referenced as generic data types, these mechanisms are not enforced and access control checks need to be implemented programmatically.

<b>Example 1:</b> In the following code example, SObjects are created in a custom controller, and therefore bypass CRUD and FLS controls.
<pre>
&lt;apex:page controller="accessControl"&gt;
  &lt;apex:outputText value="Survey Name: "/&gt;
  &lt;apex:inputText value="{!surveyName}"/&gt;
  &lt;apex:commandButton value="Create" action="{!createSurvey}"/&gt;
&lt;/apex:page&gt;
</pre>
<pre>
public PageReference createSurvey() {
  Survey__c s = new Survey__c();
  s.Name = surveyName;
  insert s;

  PageReference page = ApexPages.currentPage();
  page.setRedirect(true);
  return page;
}
</pre>]]></Explanation>
                <Recommendations><![CDATA[To prevent Access Control vulnerabilities, four different approaches may be taken:

<b>1. Only operate directly on SObjects and SObject fields</b>
Since Visualforce automatically enforces CRUD and FLS controls on SObjects and SObject fields, this is the preferred option.

<b>2. Use Standard controllers</b>
In some cases it is not possible to operate directly on SObjects or SObject fields, so a viable alternative is to use a Standard Controller. This controller will automatically check CRUD access before performing the operation. However, there might be some cases when there is the need to work with custom Objects and therefore this approach cannot be used. More information about Standard Controllers can be found in the Salesforce documentation [4].

<b>3. Perform authorization checks before SObject and SObject field operations in Apex code</b>
When it is not possible to operate directly on SObjects or to use a Standard Controller, the developer must implement access control checks before performing database operations.

<b>Example 2:</b> The following code example, shows <code>Example 1</code> with the authorization check.
<pre>
  public PageReference createSurvey() {
    if (!Schema.SobjectType.Survey__c.fields.getMap().get('Name').getDescribe().isCreateable()) {
      ApexPages.addMessage(new ApexPages.Message(ApexPages.Severity.FATAL,'Insufficient access'));
      return null;
    }
    Survey__c s = new Survey__c();
    s.Name = surveyName;
    insert s;

    PageReference page = ApexPages.currentPage();
    page.setRedirect(true);
    return page;
  }
</pre>

<b>4. Perform authorization checks inside the Visualforce page</b>
The last alternative is to perform access control checks inside the Visualforce page. This can be achieved through the utilization of the <code>rendered</code> attribute.

<b>Example 3:</b> In the following code example, the field is only rendered if the user has the proper authorization.
<pre>
  &lt;apex:inputText value="{!surveyName}" rendered="{!$ObjectType.Survey__c.fields.Name.Createable}" /&gt;
</pre>]]></Recommendations>
                <References>
                    <Reference>
                        <Title><![CDATA[Secure Coding Guidelines - Authorization and Access Control]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/page/Secure_Coding_Access_Control]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Testing CRUD and FLS Enforcement]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/page/Testing_CRUD_and_FLS_Enforcement]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Enforcing CRUD and FLS]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/page/Enforcing_CRUD_and_FLS]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Visualforce Developers Guide - Standard Controllers]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/docs/atlas.en-us.pages.meta/pages/pages_controller_std.htm]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CWE ID 566]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CCI-000213, CCI-001084, CCI-002165]]></Title>
                        <Author><![CDATA[Standards Mapping - DISA Control Correlation Identifier Version 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[AC]]></Title>
                        <Author><![CDATA[Standards Mapping - FIPS200]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Access Violation]]></Title>
                        <Author><![CDATA[Standards Mapping - General Data Protection Regulation]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[AC-3 Access Enforcement (P1)]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[AC-3 Access Enforcement]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[1.2.2 Authentication Architectural Requirements (L2 L3), 1.2.3 Authentication Architectural Requirements (L2 L3), 1.2.4 Authentication Architectural Requirements (L2 L3), 1.4.2 Access Control Architectural Requirements (L2 L3), 1.4.4 Access Control Architectural Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 4.1.2 General Access Control Design (L1 L2 L3), 4.1.3 General Access Control Design (L1 L2 L3), 4.1.5 General Access Control Design (L1 L2 L3), 4.2.1 Operation Level Access Control (L1 L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.1 Malicious Code Search (L2 L3), 13.1.4 Generic Web Service Security Verification Requirements (L2 L3), 14.5.1 Validate HTTP Request Header Requirements (L1 L2 L3), 14.5.4 Validate HTTP Request Header Requirements (L1 L2 L3)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Application Security Verification Standard 4.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[M5 Poor Authorization and Authentication]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Mobile Top 10 Risks 2014]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A2 Broken Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2004]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Insecure Direct Object Reference]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2007]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Insecure Direct Object References]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Insecure Direct Object References]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2013]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A5 Broken Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2017]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A01 Broken Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.2]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.4]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 2.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 5.4 - Authentication and Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 5.4 - Authentication and Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Porous Defenses - CWE ID 863]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2011]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.11]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.3]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.8]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 5.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insufficient Authorization]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium 24 + 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insufficient Authorization (WASC-02)]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium Version 2.00]]></Author>
                    </Reference>
                </References>
            </Description>
            <Description id="desc.structural.apex.access_control_merge" formatVersion="3.4">
                <Abstract><![CDATA[<Paragraph>Without proper access control, the method <Replace key="EnclosingFunction.name"/> in <Replace key="PrimaryLocation.file"/> can execute a DML Merge statement on line <Replace key="PrimaryLocation.line"/>, allowing an attacker to merge unauthorized database entries.<AltParagraph>Executing a SOQL statement without checking user permissions can allow an attacker to merge unauthorized entries.</AltParagraph></Paragraph>
  ]]></Abstract>
                <Explanation><![CDATA[Access control vulnerabilities occur when an attacker can access resources that are restricted to only authorized users.

By default, Visualforce applications automatically enforce Object-level security (CRUD) and Field-level security (FLS) when SObjects and SObject fields are used. However, if objects and fields are referenced as generic data types, these mechanisms are not enforced and access control checks need to be implemented programmatically.

<b>Example 1:</b> In the following code example, SObjects are merged in a custom controller, and therefore bypass CRUD and FLS controls.
<pre>
&lt;apex:page controller="accessControl"&gt;
  &lt;apex:outputText value="Master Account Name: "/&gt;
  &lt;apex:inputText value="{!masterAccountName}"/&gt;
  &lt;apex:outputText value="Merged Account Name: "/&gt;
  &lt;apex:inputText value="{!mergedAccountName}"/&gt;
  &lt;apex:commandButton value="Merge" action="{!mergeAccounts}"/&gt;
&lt;/apex:page&gt;
</pre>
<pre>
public PageReference mergeAccounts() {
  Account masterAcct = [SELECT Id, Name FROM Account WHERE Name = :masterAccountName LIMIT 1];
  Account mergeAcct = [SELECT Id, Name FROM Account WHERE Name = :mergedAccountName LIMIT 1];

  merge masterAcct mergeAcct;

  PageReference page = ApexPages.currentPage();
  page.setRedirect(true);
  return page;
}
</pre>]]></Explanation>
                <Recommendations><![CDATA[To prevent Access Control vulnerabilities, four different approaches may be taken:

<b>1. Only operate directly on SObjects and SObject fields</b>
Since Visualforce automatically enforces CRUD and FLS controls on SObjects and SObject fields, this is the preferred option.

<b>2. Use Standard controllers</b>
In some cases it is not possible to operate directly on SObjects or SObject fields, so a viable alternative is to use a Standard Controller. This controller will automatically check CRUD access before performing the operation. However, there might be some cases when there is the need to work with custom Objects and therefore this approach cannot be used. More information about Standard Controllers can be found in the Salesforce documentation [4].

<b>3. Perform authorization checks before SObject and SObject field operations in Apex code</b>
When it is not possible to operate directly on SObjects or to use a Standard Controller, the developer must implement access control checks before performing database operations.

<b>Example 2:</b> The following code example, shows <code>Example 1</code> with the authorization check.
<pre>
  public PageReference mergeAccounts() {
    Account masterAcct = [SELECT Id, Name FROM Account WHERE Name = :masterAccountName LIMIT 1];
    Account mergeAcct = [SELECT Id, Name FROM Account WHERE Name = :mergedAccountName LIMIT 1];

    if (!Account.sObjectType.getDescribe().isMergeable()){
      ApexPages.addMessage(new ApexPages.Message(ApexPages.Severity.FATAL,'Insufficient access'));
      return null;
    }

    merge masterAcct mergeAcct;

    PageReference page = ApexPages.currentPage();
    page.setRedirect(true);
    return page;
  }
</pre>

<b>4. Perform authorization checks inside the Visualforce page</b>
The last alternative is to perform access control checks inside the Visualforce page. This can be achieved through the utilization of the <code>rendered</code> attribute.

<b>Example 3:</b> In the following code example, the field is only rendered if the user has the proper authorization.
<pre>
  &lt;apex:inputText value="{!masterAccountName}" rendered="{!$ObjectType.Account.fields.Name.Updateable}" /&gt;
</pre>]]></Recommendations>
                <References>
                    <Reference>
                        <Title><![CDATA[Secure Coding Guidelines - Authorization and Access Control]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/page/Secure_Coding_Access_Control]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Testing CRUD and FLS Enforcement]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/page/Testing_CRUD_and_FLS_Enforcement]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Enforcing CRUD and FLS]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/page/Enforcing_CRUD_and_FLS]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Visualforce Developers Guide - Standard Controllers]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/docs/atlas.en-us.pages.meta/pages/pages_controller_std.htm]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CWE ID 566]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CCI-000213, CCI-001084, CCI-002165]]></Title>
                        <Author><![CDATA[Standards Mapping - DISA Control Correlation Identifier Version 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[AC]]></Title>
                        <Author><![CDATA[Standards Mapping - FIPS200]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Access Violation]]></Title>
                        <Author><![CDATA[Standards Mapping - General Data Protection Regulation]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[AC-3 Access Enforcement (P1)]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[AC-3 Access Enforcement]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[1.2.2 Authentication Architectural Requirements (L2 L3), 1.2.3 Authentication Architectural Requirements (L2 L3), 1.2.4 Authentication Architectural Requirements (L2 L3), 1.4.2 Access Control Architectural Requirements (L2 L3), 1.4.4 Access Control Architectural Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 4.1.2 General Access Control Design (L1 L2 L3), 4.1.3 General Access Control Design (L1 L2 L3), 4.1.5 General Access Control Design (L1 L2 L3), 4.2.1 Operation Level Access Control (L1 L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.1 Malicious Code Search (L2 L3), 13.1.4 Generic Web Service Security Verification Requirements (L2 L3), 14.5.1 Validate HTTP Request Header Requirements (L1 L2 L3), 14.5.4 Validate HTTP Request Header Requirements (L1 L2 L3)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Application Security Verification Standard 4.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[M5 Poor Authorization and Authentication]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Mobile Top 10 Risks 2014]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A2 Broken Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2004]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Insecure Direct Object Reference]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2007]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Insecure Direct Object References]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Insecure Direct Object References]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2013]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A5 Broken Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2017]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A01 Broken Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.2]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.4]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 2.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 5.4 - Authentication and Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 5.4 - Authentication and Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Porous Defenses - CWE ID 863]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2011]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.11]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.3]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.8]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 5.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insufficient Authorization]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium 24 + 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insufficient Authorization (WASC-02)]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium Version 2.00]]></Author>
                    </Reference>
                </References>
            </Description>
            <Description
                id="desc.structural.apex.access_control_undelete" formatVersion="3.4">
                <Abstract><![CDATA[<Paragraph>Without proper access control, the method <Replace key="EnclosingFunction.name"/> in <Replace key="PrimaryLocation.file"/> can execute a DML Undelete statement on line <Replace key="PrimaryLocation.line"/>, allowing an attacker to restore unauthorized database entries.<AltParagraph>Executing a SOQL statement without checking user permissions can allow an attacker to restore unauthorized entries.</AltParagraph></Paragraph>
  ]]></Abstract>
                <Explanation><![CDATA[Access control vulnerabilities occur when an attacker can access resources that are restricted to only authorized users.

By default, Visualforce applications automatically enforce Object-level security (CRUD) and Field-level security (FLS) when SObjects and SObject fields are used. However, if objects and fields are referenced as generic data types, these mechanisms are not enforced and access control checks need to be implemented programmatically.

<b>Example 1:</b> In the following code example, SObjects are restored in a custom controller, and therefore bypass CRUD and FLS controls.
<pre>
&lt;apex:page controller="accessControl"&gt;
  &lt;apex:outputText value="Survey ID: "/&gt;
  &lt;apex:inputText value="{!surveyId}"/&gt;
  &lt;apex:commandButton value="Restore" action="{!restoreSurvey}"/&gt;
&lt;/apex:page&gt;
</pre>
<pre>
public PageReference restoreSurvey() {
  Survey__c s = new Survey__c();
  s.Id = surveyId;
  undelete s;

  PageReference page = ApexPages.currentPage();
  page.setRedirect(true);
  return page;
}
</pre>]]></Explanation>
                <Recommendations><![CDATA[To prevent Access Control vulnerabilities, four different approaches may be taken:

<b>1. Only operate directly on SObjects and SObject fields</b>
Since Visualforce automatically enforces CRUD and FLS controls on SObjects and SObject fields, this is the preferred option.

<b>2. Use Standard controllers</b>
In some cases it is not possible to operate directly on SObjects or SObject fields, so a viable alternative is to use a Standard Controller. This controller will automatically check CRUD access before performing the operation. However, there might be some cases when there is the need to work with custom Objects and therefore this approach cannot be used. More information about Standard Controllers can be found in the Salesforce documentation [4].

<b>3. Perform authorization checks before SObject and SObject field operations in Apex code</b>
When it is not possible to operate directly on SObjects or to use a Standard Controller, the developer must implement access control checks before performing database operations.

<b>Example 2:</b> The following code example, shows <code>Example 1</code> with the authorization check.
<pre>
  public PageReference restoreSurvey() {
    if (!Schema.SobjectType.Survey__c.fields.getMap().get('Name').getDescribe().isCreateable()) {
      ApexPages.addMessage(new ApexPages.Message(ApexPages.Severity.FATAL,'Insufficient access'));
      return null;
    }
    Survey__c s = new Survey__c();
    s.Id = surveyId;
    undelete s;

    PageReference page = ApexPages.currentPage();
    page.setRedirect(true);
    return page;
  }
</pre>

<b>4. Perform authorization checks inside the Visualforce page</b>
The last alternative is to perform access control checks inside the Visualforce page. This can be achieved through the utilization of the <code>rendered</code> attribute.

<b>Example 3:</b> In the following code example, the field is only rendered if the user has the proper authorization.
<pre>
  &lt;apex:inputText value="{!surveyId}" rendered="{!$ObjectType.Survey__c.fields.Name.Createable}" /&gt;
</pre>]]></Recommendations>
                <References>
                    <Reference>
                        <Title><![CDATA[Secure Coding Guidelines - Authorization and Access Control]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/page/Secure_Coding_Access_Control]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Testing CRUD and FLS Enforcement]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/page/Testing_CRUD_and_FLS_Enforcement]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Enforcing CRUD and FLS]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/page/Enforcing_CRUD_and_FLS]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Visualforce Developers Guide - Standard Controllers]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/docs/atlas.en-us.pages.meta/pages/pages_controller_std.htm]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CWE ID 566]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CCI-000213, CCI-001084, CCI-002165]]></Title>
                        <Author><![CDATA[Standards Mapping - DISA Control Correlation Identifier Version 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[AC]]></Title>
                        <Author><![CDATA[Standards Mapping - FIPS200]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Access Violation]]></Title>
                        <Author><![CDATA[Standards Mapping - General Data Protection Regulation]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[AC-3 Access Enforcement (P1)]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[AC-3 Access Enforcement]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[1.2.2 Authentication Architectural Requirements (L2 L3), 1.2.3 Authentication Architectural Requirements (L2 L3), 1.2.4 Authentication Architectural Requirements (L2 L3), 1.4.2 Access Control Architectural Requirements (L2 L3), 1.4.4 Access Control Architectural Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 4.1.2 General Access Control Design (L1 L2 L3), 4.1.3 General Access Control Design (L1 L2 L3), 4.1.5 General Access Control Design (L1 L2 L3), 4.2.1 Operation Level Access Control (L1 L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.1 Malicious Code Search (L2 L3), 13.1.4 Generic Web Service Security Verification Requirements (L2 L3), 14.5.1 Validate HTTP Request Header Requirements (L1 L2 L3), 14.5.4 Validate HTTP Request Header Requirements (L1 L2 L3)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Application Security Verification Standard 4.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[M5 Poor Authorization and Authentication]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Mobile Top 10 Risks 2014]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A2 Broken Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2004]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Insecure Direct Object Reference]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2007]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Insecure Direct Object References]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Insecure Direct Object References]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2013]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A5 Broken Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2017]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A01 Broken Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.2]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.4]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 2.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 5.4 - Authentication and Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 5.4 - Authentication and Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Porous Defenses - CWE ID 863]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2011]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.11]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.3]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.8]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 5.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insufficient Authorization]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium 24 + 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insufficient Authorization (WASC-02)]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium Version 2.00]]></Author>
                    </Reference>
                </References>
            </Description>
            <Description id="desc.structural.apex.access_control_upsert" formatVersion="3.4">
                <Abstract><![CDATA[<Paragraph>Without proper access control, the method <Replace key="EnclosingFunction.name"/> in <Replace key="PrimaryLocation.file"/> can execute a DML Upsert statement on line <Replace key="PrimaryLocation.line"/>, allowing an attacker to modify or create unauthorized database entries.<AltParagraph>Executing a SOQL statement without checking user permissions can allow an attacker to modify or create unauthorized entries.</AltParagraph></Paragraph>
  ]]></Abstract>
                <Explanation><![CDATA[Access control vulnerabilities occur when an attacker can access resources that are restricted to only authorized users.

By default, Visualforce applications automatically enforce Object-level security (CRUD) and Field-level security (FLS) when SObjects and SObject fields are used. However, if objects and fields are referenced as generic data types, these mechanisms are not enforced and access control checks need to be implemented programmatically.

<b>Example 1:</b> In the following code example, an upsert DML statement is executed in a custom controller, and therefore bypasses CRUD and FLS controls.
<pre>
&lt;apex:page controller="accessControl"&gt;
  &lt;apex:pageBlock &gt;
    &lt;apex:pageBlockSection &gt;
      &lt;apex:outputText value="Survey Name: "/&gt;
      &lt;apex:inputText value="{!surveyName}"/&gt;
      &lt;/apex:pageBlockSection&gt;
    &lt;apex:pageBlockSection &gt;
      &lt;apex:outputText value="New Name: "/&gt;
      &lt;apex:inputText value="{!newSurveyName}"/&gt;
    &lt;/apex:pageBlockSection&gt;
      &lt;apex:pageBlockSection &gt;
      &lt;apex:commandButton value="Update" action="{!updateName}"/&gt;
    &lt;/apex:pageBlockSection&gt;
  &lt;/apex:pageBlock&gt;
&lt;/apex:page&gt;
</pre>
<pre>
public String surveyName { get; set; }
public String newSurveyName { get; set; }
public PageReference updateName() {
  Survey__c s = [SELECT Name FROM Survey__c WHERE Name=:surveyName];

  s.Name = newSurveyName;
  upsert s;

  PageReference page = ApexPages.currentPage();
  page.setRedirect(true);
  return page;
}
</pre>]]></Explanation>
                <Recommendations><![CDATA[To prevent Access Control vulnerabilities, four different approaches may be taken:

<b>1. Only operate directly on SObjects and SObject fields</b>
Since Visualforce automatically enforces CRUD and FLS controls on SObjects and SObject fields, this is the preferred option.

<b>2. Use Standard controllers</b>
In some cases it is not possible to operate directly on SObjects or SObject fields, so a viable alternative is to use a Standard Controller. This controller will automatically check CRUD access before performing the operation. However, there might be some cases when there is the need to work with custom Objects and therefore this approach cannot be used. More information about Standard Controllers can be found in the Salesforce documentation [4].

<b>3. Perform authorization checks before SObject and SObject field operations in Apex code</b>
When it is not possible to operate directly on SObjects or to use a Standard Controller, the developer must implement access control checks before performing database operations.

<b>Example 2:</b> The following code example, shows <code>Example 1</code> with the authorization check.
<pre>
  public PageReference updateName() {
    Survey__c s = [SELECT Name FROM Survey__c WHERE Name=:surveyName];
    if (!Schema.sObjectType.Survey__c.fields.Name.isUpdateable()){
      ApexPages.addMessage(new ApexPages.Message(ApexPages.Severity.FATAL,'Insufficient access'));
      return null;
    }
    s.Name = newSurveyName;
    upsert s;

    PageReference page = ApexPages.currentPage();
    page.setRedirect(true);
    return page;
  }
</pre>

<b>4. Perform authorization checks inside the Visualforce page</b>
The last alternative is to perform access control checks inside the Visualforce page. This can be achieved through the utilization of the <code>rendered</code> attribute.

<b>Example 3:</b> In the following code example, the field is only rendered if the user has the proper authorization.
<pre>
  &lt;apex:inputText value="{!newSurveyName}" rendered="{!$ObjectType.Survey__c.fields.Name.Updateable}" /&gt;
</pre>]]></Recommendations>
                <References>
                    <Reference>
                        <Title><![CDATA[Secure Coding Guidelines - Authorization and Access Control]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/page/Secure_Coding_Access_Control]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Testing CRUD and FLS Enforcement]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/page/Testing_CRUD_and_FLS_Enforcement]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Enforcing CRUD and FLS]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/page/Enforcing_CRUD_and_FLS]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Visualforce Developers Guide - Standard Controllers]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/docs/atlas.en-us.pages.meta/pages/pages_controller_std.htm]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CWE ID 566]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CCI-000213, CCI-001084, CCI-002165]]></Title>
                        <Author><![CDATA[Standards Mapping - DISA Control Correlation Identifier Version 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[AC]]></Title>
                        <Author><![CDATA[Standards Mapping - FIPS200]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Access Violation]]></Title>
                        <Author><![CDATA[Standards Mapping - General Data Protection Regulation]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[AC-3 Access Enforcement (P1)]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[AC-3 Access Enforcement]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[1.2.2 Authentication Architectural Requirements (L2 L3), 1.2.3 Authentication Architectural Requirements (L2 L3), 1.2.4 Authentication Architectural Requirements (L2 L3), 1.4.2 Access Control Architectural Requirements (L2 L3), 1.4.4 Access Control Architectural Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 4.1.2 General Access Control Design (L1 L2 L3), 4.1.3 General Access Control Design (L1 L2 L3), 4.1.5 General Access Control Design (L1 L2 L3), 4.2.1 Operation Level Access Control (L1 L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.1 Malicious Code Search (L2 L3), 13.1.4 Generic Web Service Security Verification Requirements (L2 L3), 14.5.1 Validate HTTP Request Header Requirements (L1 L2 L3), 14.5.4 Validate HTTP Request Header Requirements (L1 L2 L3)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Application Security Verification Standard 4.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[M5 Poor Authorization and Authentication]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Mobile Top 10 Risks 2014]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A2 Broken Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2004]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Insecure Direct Object Reference]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2007]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Insecure Direct Object References]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Insecure Direct Object References]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2013]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A5 Broken Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2017]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A01 Broken Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.2]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.4]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 2.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 5.4 - Authentication and Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 5.4 - Authentication and Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Porous Defenses - CWE ID 863]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2011]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.11]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.3]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.8]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 5.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insufficient Authorization]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium 24 + 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insufficient Authorization (WASC-02)]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium Version 2.00]]></Author>
                    </Reference>
                </References>
            </Description>
            <Description
                id="desc.structural.apex.access_control_recyclebin" formatVersion="3.4">
                <Abstract><![CDATA[<Paragraph>Without proper access control, the method <Replace key="EnclosingFunction.name"/> in <Replace key="PrimaryLocation.file"/> can execute a Database emptyRecycleBin statement on line <Replace key="PrimaryLocation.line"/>, allowing an attacker to permanently delete unauthorized database entries.<AltParagraph>Executing a SOQL statement without checking user permissions can allow an attacker to permanently delete unauthorized entries.</AltParagraph></Paragraph>
  ]]></Abstract>
                <Explanation><![CDATA[Access control vulnerabilities occur when an attacker can access resources that are restricted to only authorized users.

By default, Visualforce applications automatically enforce Object-level security (CRUD) and Field-level security (FLS) when SObjects and SObject fields are used. However, if objects and fields are referenced as generic data types, these mechanisms are not enforced and access control checks need to be implemented programmatically.

<b>Example 1:</b> In the following code example, the <code>emptyRecycleBin</code> method is executed on a custom controller, and therefore bypasses CRUD and FLS controls.
<pre>
&lt;apex:page controller="accessControl"&gt;
  &lt;apex:outputText value="Survey ID to permanently delete: "/&gt;
  &lt;apex:inputText value="{!surveyId}"/&gt;
  &lt;apex:commandButton value="Permanently Delete" action="{!emptyRecBin}"/&gt;
&lt;/apex:page&gt;
</pre>
<pre>
public PageReference emptyRecBin() {
  List&lt;Id&gt; ids = new List&lt;Id&gt;();
  ids.add(surveyId);
  System.Database.emptyRecycleBin(ids);

  PageReference page = ApexPages.currentPage();
  page.setRedirect(true);
  return page;
}
</pre>]]></Explanation>
                <Recommendations><![CDATA[To prevent Access Control vulnerabilities, four different approaches may be taken:

<b>1. Only operate directly on SObjects and SObject fields</b>
Since Visualforce automatically enforces CRUD and FLS controls on SObjects and SObject fields, this is the preferred option.

<b>2. Use Standard controllers</b>
In some cases it is not possible to operate directly on SObjects or SObject fields, so a viable alternative is to use a Standard Controller. This controller will automatically check CRUD access before performing the operation. However, there might be some cases when there is the need to work with custom Objects and therefore this approach cannot be used. More information about Standard Controllers can be found in the Salesforce documentation [4].

<b>3. Perform authorization checks before SObject and SObject field operations in Apex code</b>
When it is not possible to operate directly on SObjects or to use a Standard Controller, the developer must implement access control checks before performing database operations.

<b>Example 2:</b> The following code example, shows <code>Example 1</code> with the authorization check.
<pre>
  public PageReference deleteSurvey() {
    if (!Survey__c.sObjectType.getDescribe().isAccessible()){
      ApexPages.addMessage(new ApexPages.Message(ApexPages.Severity.FATAL,'Insufficient access'));
      return null;
    }
    List&lt;Id&gt; ids = new List&lt;Id&gt;();
    ids.add(surveyId);
    System.Database.emptyRecycleBin(ids);

    PageReference page = ApexPages.currentPage();
    page.setRedirect(true);
    return page;
  }
</pre>

<b>4. Perform authorization checks inside the Visualforce page</b>
The last alternative is to perform access control checks inside the Visualforce page. This can be achieved through the utilization of the <code>rendered</code> attribute.

<b>Example 3:</b> In the following code example, the field is only rendered if the user has the proper authorization.
<pre>
  &lt;apex:commandButton action="{!surveyId}" rendered="{!$ObjectType.Survey__c.fields.Name.Accessible}" /&gt;
</pre>]]></Recommendations>
                <References>
                    <Reference>
                        <Title><![CDATA[Secure Coding Guidelines - Authorization and Access Control]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/page/Secure_Coding_Access_Control]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Testing CRUD and FLS Enforcement]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/page/Testing_CRUD_and_FLS_Enforcement]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Enforcing CRUD and FLS]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/page/Enforcing_CRUD_and_FLS]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Visualforce Developers Guide - Standard Controllers]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/docs/atlas.en-us.pages.meta/pages/pages_controller_std.htm]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CWE ID 566]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CCI-000213, CCI-001084, CCI-002165]]></Title>
                        <Author><![CDATA[Standards Mapping - DISA Control Correlation Identifier Version 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[AC]]></Title>
                        <Author><![CDATA[Standards Mapping - FIPS200]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Access Violation]]></Title>
                        <Author><![CDATA[Standards Mapping - General Data Protection Regulation]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[AC-3 Access Enforcement (P1)]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[AC-3 Access Enforcement]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[1.2.2 Authentication Architectural Requirements (L2 L3), 1.2.3 Authentication Architectural Requirements (L2 L3), 1.2.4 Authentication Architectural Requirements (L2 L3), 1.4.2 Access Control Architectural Requirements (L2 L3), 1.4.4 Access Control Architectural Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 4.1.2 General Access Control Design (L1 L2 L3), 4.1.3 General Access Control Design (L1 L2 L3), 4.1.5 General Access Control Design (L1 L2 L3), 4.2.1 Operation Level Access Control (L1 L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.1 Malicious Code Search (L2 L3), 13.1.4 Generic Web Service Security Verification Requirements (L2 L3), 14.5.1 Validate HTTP Request Header Requirements (L1 L2 L3), 14.5.4 Validate HTTP Request Header Requirements (L1 L2 L3)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Application Security Verification Standard 4.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[M5 Poor Authorization and Authentication]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Mobile Top 10 Risks 2014]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A2 Broken Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2004]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Insecure Direct Object Reference]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2007]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Insecure Direct Object References]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Insecure Direct Object References]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2013]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A5 Broken Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2017]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A01 Broken Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.2]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.4]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 2.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 5.4 - Authentication and Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 5.4 - Authentication and Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Porous Defenses - CWE ID 863]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2011]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.11]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.3]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.8]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 5.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insufficient Authorization]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium 24 + 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insufficient Authorization (WASC-02)]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium Version 2.00]]></Author>
                    </Reference>
                </References>
            </Description>
            <Description id="desc.dataflow.apex.access_control_database" formatVersion="3.4">
                <Abstract><![CDATA[<Paragraph>Without proper access control, the method <Replace key="EnclosingFunction.name"/> in <Replace key="PrimaryLocation.file"/> can execute a SOQL/SOSL statement on line <Replace key="PrimaryLocation.line"/> that may contain a user-supplied primary key, therefore allowing the attacker to access unauthorized records.<AltParagraph>Without proper access control, executing a SOQL/SOSL statement that may contain a user-supplied primary key can allow an attacker to view unauthorized records.</AltParagraph></Paragraph>
  ]]></Abstract>
                <Explanation><![CDATA[Database access control errors occur when:

1. Data enters a program from an untrusted source.
<Paragraph>
In this case, the data enters at <Replace key="SourceFunction" link="SourceLocation"/> in <Replace key="SourceLocation.file"/> on line <Replace key="SourceLocation.line"/>.
</Paragraph>

2. The data is used to specify the value of a primary key in a SOQL/SOSL query.
<Paragraph>
In this case, the data is used by <Replace key="SinkFunction" link="SinkLocation"/> in <Replace key="SinkLocation.file"/> on line <Replace key="SinkLocation.line"/>.
</Paragraph>

<b>Example 1:</b> In the following code example, <code>inputID</code> value is originated from a pre-defined list, and a bind variable helps to prevent SOQL/SOSL injection.

<pre>
...
result = [SELECT Name, Phone FROM Contact WHERE (IsDeleted = false AND Id=:inputID)];
...
</pre>

The problem with the previous example is that using a pre-defined list of IDs is insufficient to prevent the user from modifying the value of <code>inputID</code>. If the attacker is able to bypass the interface and send a request with a different value he will have access to other contact information. Since the code in this example does not check to ensure that the user has permission to access the requested contact, it will display any contact, even if the user is not authorized to see it.]]></Explanation>
                <Recommendations><![CDATA[Instead of relying on the interface to restrict values submitted by the user, access control mechanisms should be implemented by the application and database layers. Under no circumstances should a user be allowed to retrieve or modify a row in the database without the appropriate permissions. Every query that accesses the database should enforce this policy, which can often be accomplished by simply including the current authenticated username as part of the query.

<b>Example 2:</b> The following code implements the same functionality as <code>Example 1</code> but imposes an additional constraint to verify that the contact information belongs to the currently authenticated user.

<pre>
...
String queryValue = String.escapeSingleQuotes(inputID);
String userID = UserInfo.getUserId();
result = [SELECT Name, Phone FROM Contact WHERE (IsDeleted = false AND Id=:queryValue AND user =:userID)];
...
</pre>
]]></Recommendations>
                <References>
                    <Reference>
                        <Title><![CDATA[Secure Coding Guidelines - Authorization and Access Control]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/page/Secure_Coding_Access_Control]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Testing CRUD and FLS Enforcement]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/page/Testing_CRUD_and_FLS_Enforcement]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Enforcing CRUD and FLS]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/page/Enforcing_CRUD_and_FLS]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CWE ID 566]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CCI-000213, CCI-001084, CCI-002165]]></Title>
                        <Author><![CDATA[Standards Mapping - DISA Control Correlation Identifier Version 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[AC]]></Title>
                        <Author><![CDATA[Standards Mapping - FIPS200]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Access Violation]]></Title>
                        <Author><![CDATA[Standards Mapping - General Data Protection Regulation]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[AC-3 Access Enforcement (P1)]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[AC-3 Access Enforcement]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[4.1.2 General Access Control Design (L1 L2 L3), 4.1.3 General Access Control Design (L1 L2 L3), 4.1.5 General Access Control Design (L1 L2 L3), 4.2.1 Operation Level Access Control (L1 L2 L3), 13.4.2 GraphQL and other Web Service Data Layer Security Requirements (L2 L3)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Application Security Verification Standard 4.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[M5 Poor Authorization and Authentication]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Mobile Top 10 Risks 2014]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A2 Broken Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2004]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Insecure Direct Object Reference]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2007]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Insecure Direct Object References]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Insecure Direct Object References]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2013]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A5 Broken Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2017]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A01 Broken Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.2]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.4]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 2.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 5.4 - Authentication and Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 5.4 - Authentication and Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Porous Defenses - CWE ID 863]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2011]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3480.1 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.11]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.3]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.8]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000460 CAT I, APSC-DV-000470 CAT II, APSC-DV-002360 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 5.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insufficient Authorization]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium 24 + 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insufficient Authorization (WASC-02)]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium Version 2.00]]></Author>
                    </Reference>
                </References>
            </Description>
            <Description
                id="desc.dataflow.apex.cross_site_scripting_reflected" formatVersion="3.4">
                <Abstract><![CDATA[<Paragraph>On line <Replace key="PrimaryLocation.line"/> in <Replace key="PrimaryLocation.file"/>, the method <Replace key="EnclosingFunction.name"/> sends unvalidated data to the web browser, which can result in the execution of malicious code.<AltParagraph>Sending unvalidated data to the web browser may lead to the execution of malicious code.</AltParagraph></Paragraph>
  ]]></Abstract>
                <Explanation><![CDATA[Cross-site scripting (XSS) vulnerabilities occur when:

1. Data enters a web application through an untrusted source. In the case of reflected XSS, an untrusted source is most frequently a web request, and in the case of persistent (also known as stored) XSS it is the results of a database query.
<Paragraph>
In this case, the data enters at <Replace key="SourceFunction" link="SourceLocation"/> in <Replace key="SourceLocation.file"/> on line <Replace key="SourceLocation.line"/>.
</Paragraph>
2. The data is included in dynamic content that is sent to a web user without validation.
<Paragraph>
In this case, the data is sent at <Replace key="SinkFunction" link="SinkLocation"/> in <Replace key="SinkLocation.file"/> on line <Replace key="SinkLocation.line"/>.
</Paragraph>
The malicious content usually is a segment of JavaScript code, but can also be HML, Flash or any other active content that might be executed by the browser. The variety of attacks based on XSS is almost limitless, but they commonly include transmitting private data such as cookies or other session information to the attacker, redirecting the victim to web content controlled by the attacker, or performing other malicious operations on the user's machine under the guise of the vulnerable site.


<b>Example 1:</b> The following Visualforce code segment reads an HTTP request parameter, <code>username</code>, and displays it to the user.

<pre>
&lt;script&gt;
document.write('{!$CurrentPage.parameters.username}')
&lt;/script&gt;
</pre>

The code in this example was intended to receive only alphanumeric text and display it. However, if <code>username</code> contains metacharacters or source code, it will be executed by the web browser.

Initially this might not appear to be much of a vulnerability. After all, why would someone enter a URL that causes malicious code to run on their own computer? The real danger is that an attacker will create the malicious URL, then use email or social engineering tricks to lure victims into visiting a link to the URL. When victims click the link, they unwittingly reflect the malicious content through the vulnerable web application back to their own computers. This mechanism of exploiting vulnerable web applications is known as Reflected XSS.

<b>Example 2:</b> The following Apex code segment queries a database for a contact name with a given ID and returns the corresponding employee's name, which later gets printed by the Visualforce code.

<pre>
...
variable = Database.query('SELECT Name FROM Contact WHERE id = ID');
...
</pre>
<pre>
&lt;div onclick="this.innerHTML='Hello {!variable}'"&gt;Click me!&lt;/div&gt;
</pre>

As in <code>Example 1</code>, this code behaves correctly when the values of <code>name</code> are well defined like just alphanumeric characters, but does nothing to check for malicious data. Even read from a database, the value should be properly validated because the content of the database can be originated from user-supplied data. This way, an attacker can have malicious commands executed in the user's web browser without the need to interact with the victim like in Reflected XSS. This type of attack, known as Stored XSS (or Persistent), can be very hard to detect since the data is indirectly provided to the vulnerable function and also have a higher impact due to the possibility to affect multiple users. XSS got its start in this form with web sites that offered a "guestbook" to visitors. Attackers would include JavaScript in their guestbook entries, and all subsequent visitors to the guestbook page would execute the malicious code.

As the examples demonstrate, XSS vulnerabilities are caused by code that includes unvalidated data in an HTTP response. There are two vectors by which an XSS attack can be executed:

- As in <code>Example 1</code>, data is read from the HTTP request and reflected back in the HTTP response. Reflected XSS occurs when an attacker can have dangerous content delivered to a vulnerable web application and then reflected back to the user and execute by his browser. The most common mechanism to deliver malicious content is to include it as a parameter in a URL that is posted publicly or emailed directly to the victim. URLs crafted this way are the core of many phishing schemes, where the attacker lures the victim to visit the URL. After the site reflects the content back to the user, it is executed and can perform several actions like forward private sensitive information, execute unauthorized operations on the victim computer etc.

- As in <code>Example 2</code>, the database or other data store can provide dangerous data to the application that will be included in dynamic content. From the attacker's perspective, the best place to store malicious content is an area accessible to all users specially those with elevated privileges, who are more likely to handle sensitive information or perform critical operations.]]></Explanation>
                <Recommendations><![CDATA[The solution to prevent XSS vulnerabilities is to ensure that every user-supplied data is properly validated.

Since XSS occurs due to the web application sending malicious data to the user, one logical approach is to validate data going out from the application. However, this approach is not very effective and prone to errors since web applications usually generate dynamic content in a complex and intricate way. Therefore, an effective way to mitigate this risk is to perform input validation for XSS.

Validating web application inputs is used to prevent other vulnerabilities, such as SOQL injection, so improving the existing mechanism to include checks for XSS is relatively easy. Also, it is important to keep in mind that all input sources must be validated, no matter whether the data is provided by a database, another trusted application or user input. This is due to the fact that it is not possible to ensure that other applications and data sources have performed the validation properly and their output is safe.

The most secure approach to validating against XSS payloads is to create an allow list of safe characters and accept input composed exclusively of them. For example, a valid username might only include alphanumeric characters or a phone number might only include digits 0-9. However, this solution is not always possible in web applications because some fields are supposed to receive special characters that can be used in XSS attacks, like HTML fragments.

Another more flexible, but less secure method is an allow list, which selectively rejects or escapes potentially dangerous characters before outputting them. In order to create such a list, it is needed to understand the characters that hold special meaning for web browsers. Although the HTML standard defines which characters have special meaning, many web browsers try to correct common mistakes in HTML and might treat other characters as special in certain contexts. This is why we do not recommend the use of deny lists as a means to prevent XSS. The CERT(R) Coordination Center at the Software Engineering Institute at Carnegie Mellon University provides the following details about special characters in various contexts [1]:

In the content of a block-level element (in the middle of a paragraph of text):

- "&lt;" is special because it introduces a tag.

- "&amp;" is special because it introduces a character entity.

- "&gt;" is special because some browsers treat it as special, on the assumption that the author of the page intended to include an opening "&lt;", but omitted it in error.

The following principles apply to attribute values:
- In attribute values enclosed in single quotes, the single quotes are special because they mark the end of the attribute value.

- In attribute values without any quotes, white-space characters, such as space and tab, are special.

- "&amp;" is special when used with certain attributes, because it introduces a character entity.

In URLs, for example, a search engine might provide a link within the results page that the user can click to re-run the search. This can be implemented by encoding the search query inside the URL, which introduces additional special characters:

- Space, tab, and new line are special because they mark the end of the URL.

- "&amp;" is special because it either introduces a character entity or separates CGI parameters.

- Non-ASCII characters (that is, everything greater than 127 in the ISO-8859-1 encoding) are not allowed in URLs, so they are considered to be special in this context.

- The "%" symbol must be filtered from input anywhere parameters encoded with HTTP escape sequences are decoded by server-side code. For example, "%" must be filtered if input such as "%68%65%6C%6C%6F" becomes "hello" when it appears on the web page.


Within the body of a &lt;SCRIPT&gt; &lt;/SCRIPT&gt;:

- Semicolons, parentheses, curly braces, and new line characters must be filtered out in situations where text could be inserted directly into a pre-existing script tag.

Server-side scripts:

- Server-side scripts that convert any exclamation characters (!) in input to double-quote characters (") on output might require additional filtering.

Other possibilities:

- If an attacker submits a request in UTF-7, the special character '&lt;' appears as '+ADw-' and might bypass filtering. If the output is included in a page that does not explicitly specify an encoding format, then some browsers try to intelligently identify the encoding based on the content (in this case, UTF-7).

After you identify the correct points in an application to perform validation for XSS attacks and what special characters the validation should consider, the next challenge is to identify how your validation handles special characters. If special characters are not considered valid input to the application, then you can reject any input that contains special characters as invalid. A second option is to remove special characters with filtering. However, filtering has the side effect of changing any visual representation of the filtered content and might be unacceptable in circumstances where the integrity of the input must be preserved for display.

If input containing special characters must be accepted and displayed accurately, validation must encode any special characters to remove their significance. A complete list of ISO 8859-1 encoded values for special characters is provided as part of the official HTML specification [2].

The Salesforce platform has two mechanisms to protect against XSS: automatic HTML encoding as well as built-in encoding functions that can be invoked manually from VisualForce. Despite that, in order to use these protections correctly, the developer needs to have a thorough understanding of how variables are rendered by the browser.

- Built in Auto Encoding
All merge-fields are always auto HTML encoded provided they
- do not occur within a &lt;style&gt; or &lt;script&gt; tag
- do not occur within an Apex tag with the escape='false' attribute

The auto HTML encoding is applied after any other VisualForce functions and is applied even if other VisualForce encoding functions are used. Therefore, the application code needs to take automatic encoding into account in order to avoid double encoding or improperly encoding merge-fields.

<b>Example 3:</b> In this example, the content of the <code>userInput</code> variable is automatically encoded.
<pre>
&lt;apex:outputText&gt;
{!$CurrentPage.parameters.userInput}
&lt;/apex:outputText&gt;
</pre>

<b>Example 4:</b> With <code>&lt;script&gt;</code> tags there is not automatic encoding, therefore this example is vulnerable to XSS.
<pre>
&lt;script&gt;
var x = '{!$CurrentPage.parameters.userInput}';
&lt;/script&gt;
</pre>

- VisualForce encoding functions
There are cases when the automatic HTML encoding is insufficient to avoid XSS issues and the developer should analyze how the data will be processed inside the application (HTML Parsing, URI Parsing and Javascript Parsing) to apply the correct encoding.

- JSENCODE
JSENCODE function is used to prevent data from breaking out of quoted strings.

- HTMLENCODE
HTMLENCODE function is used when data is interpreted in an HTML Context and is not already auto-encoded.

- URLENCODE
URLENCODE function is used to map each character with ASCII code 00-255 to the corresponding two-byte hexadecimal representation as %XX. Therefore it will not provide valid absolute URLs and should only be used when encoding URI components.

Also, it is important to realize that there are cases when multiple encodings must be applied due to the interaction between the different parsers (Javascript, HTML, and URI). And this multiple encoding is order sensitive, meaning that depending on the context <code>JSENCODE(HTMLENCODE())</code> will provide the adequate protection but <code>HTMLENCODE(JSENCODE())</code> won't.]]></Recommendations>
                <Tips/>
                <References>
                    <Reference>
                        <Title><![CDATA[Understanding Malicious Content Mitigation for Web Developers]]></Title>
                        <Publisher><![CDATA[CERT]]></Publisher>
                        <Source><![CDATA[https://resources.sei.cmu.edu/library/asset-view.cfm?assetid=496719#9]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[HTML 4.01 Specification]]></Title>
                        <Publisher><![CDATA[W3]]></Publisher>
                        <Source><![CDATA[https://www.w3.org/TR/html401/sgml/entities.html#h-24.2]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Secure Coding Guidelines - Cross Site Scripting]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/page/Secure_Coding_Cross_Site_Scripting]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CWE ID 79, CWE ID 80]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[2] CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2019]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[1] CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2020]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[2] CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[2] CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2022]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CCI-001310, CCI-002754]]></Title>
                        <Author><![CDATA[Standards Mapping - DISA Control Correlation Identifier Version 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI]]></Title>
                        <Author><![CDATA[Standards Mapping - FIPS200]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Indirect Access to Sensitive Data]]></Title>
                        <Author><![CDATA[Standards Mapping - General Data Protection Regulation]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI-10 Information Input Validation (P1)]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI-10 Information Input Validation]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Application Security Verification Standard 4.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[M7 Client Side Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Mobile Top 10 Risks 2014]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Cross Site Scripting]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2004]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A1 Cross Site Scripting (XSS)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2007]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A2 Cross-Site Scripting (XSS)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A3 Cross-Site Scripting (XSS)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2013]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A7 Cross-Site Scripting (XSS)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2017]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A03 Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.4]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.3.1.1, Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.7]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 2.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.7]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.7]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.7]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.7]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 4.2 - Critical Asset Protection]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insecure Interaction - CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2009]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insecure Interaction - CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insecure Interaction - CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2011]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.11]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.3]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.8]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 5.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Cross-Site Scripting]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium 24 + 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Cross-Site Scripting (WASC-08)]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium Version 2.00]]></Author>
                    </Reference>
                </References>
            </Description>
            <Description
                id="desc.dataflow.apex.cross_site_scripting_persistent" formatVersion="3.4">
                <Abstract><![CDATA[<Paragraph>On line <Replace key="PrimaryLocation.line"/> in <Replace key="PrimaryLocation.file"/>, the method <Replace key="EnclosingFunction.name"/> sends unvalidated data to the web browser, which can result in the execution of malicious code.<AltParagraph>Sending unvalidated data to the web browser may lead to the execution of malicious code.</AltParagraph></Paragraph>
  ]]></Abstract>
                <Explanation><![CDATA[Cross-site scripting (XSS) vulnerabilities occur when:

1. Data enters a web application through an untrusted source. In the case of persistent XSS, an untrusted source is most frequently the results of a database query, and in the case of Reflected XSS - a web request.
<Paragraph>
In this case, the data enters at <Replace key="SourceFunction" link="SourceLocation"/> in <Replace key="SourceLocation.file"/> on line <Replace key="SourceLocation.line"/>.
</Paragraph>
2. The data is included in dynamic content that is sent to a web user without validation.
<Paragraph>
In this case, the data is sent at <Replace key="SinkFunction" link="SinkLocation"/> in <Replace key="SinkLocation.file"/> on line <Replace key="SinkLocation.line"/>.
</Paragraph>
The malicious content usually is a segment of JavaScript code, but can also be HML, Flash or any other active content that might be executed by the browser. The variety of attacks based on XSS is almost limitless, but they commonly include transmitting private data such as cookies or other session information to the attacker, redirecting the victim to web content controlled by the attacker, or performing other malicious operations on the user's machine under the guise of the vulnerable site.

<b>Example 1:</b> The following Apex code segment queries a database for a contact name with a given ID and returns the corresponding employee's name, which later gets printed by the Visualforce code.

<pre>
...
variable = Database.query('SELECT Name FROM Contact WHERE id = ID');
...
</pre>
<pre>
&lt;div onclick="this.innerHTML='Hello {!variable}'"&gt;Click me!&lt;/div&gt;
</pre>

This code behaves correctly when the values of <code>name</code> are well defined like just alphanumeric characters, but does nothing to check for malicious data. Even read from a database, the value should be properly validated because the content of the database can be originated from user-supplied data. This way, an attacker can have malicious commands executed in the user's web browser without the need to interact with the victim like in Reflected XSS. This type of attack, known as Stored XSS (or Persistent), can be very hard to detect since the data is indirectly provided to the vulnerable function and also have a higher impact due to the possibility to affect multiple users. XSS got its start in this form with web sites that offered a "guestbook" to visitors. Attackers would include JavaScript in their guestbook entries, and all subsequent visitors to the guestbook page would execute the malicious code.

<b>Example 2:</b> The following Visualforce code segment reads an HTTP request parameter, <code>username</code>, and displays it to the user.

<pre>
&lt;script&gt;
document.write('{!$CurrentPage.parameters.username}')
&lt;/script&gt;
</pre>

The code in this example was intended to receive only alphanumeric text and display it. However, if <code>username</code> contains metacharacters or source code, it will be executed by the web browser.

Initially this might not appear to be much of a vulnerability. After all, why would someone enter a URL that causes malicious code to run on their own computer? The real danger is that an attacker will create the malicious URL, then use email or social engineering tricks to lure victims into visiting a link to the URL. When victims click the link, they unwittingly reflect the malicious content through the vulnerable web application back to their own computers. This mechanism of exploiting vulnerable web applications is known as Reflected XSS.

As the examples demonstrate, XSS vulnerabilities are caused by code that includes unvalidated data in an HTTP response. There are two vectors by which an XSS attack can be executed:

- As in <code>Example 1</code>, the database or other data store can provide dangerous data to the application that will be included in dynamic content. From the attacker's perspective, the best place to store malicious content is an area accessible to all users specially those with elevated privileges, who are more likely to handle sensitive information or perform critical operations.

- As in <code>Example 2</code>, data is read from the HTTP request and reflected back in the HTTP response. Reflected XSS occurs when an attacker can have dangerous content delivered to a vulnerable web application and then reflected back to the user and execute by his browser. The most common mechanism to deliver malicious content is to include it as a parameter in a URL that is posted publicly or emailed directly to the victim. URLs crafted this way are the core of many phishing schemes, where the attacker lures the victim to visit the URL. After the site reflects the content back to the user, it is executed and can perform several actions like forward private sensitive information, execute unauthorized operations on the victim computer etc.]]></Explanation>
                <Recommendations><![CDATA[The solution to prevent XSS vulnerabilities is to ensure that every user-supplied data is properly validated.

Since XSS occurs due to the web application sending malicious data to the user, one logical approach is to validate data going out from the application. However, this approach is not very effective and prone to errors since web applications usually generate dynamic content in a complex and intricate way. Therefore, an effective way to mitigate this risk is to perform input validation for XSS.

Validating web application inputs is used to prevent other vulnerabilities, such as SOQL injection, so improving the existing mechanism to include checks for XSS is relatively easy. Also, it is important to keep in mind that all input sources must be validated, no matter whether the data is provided by a database, another trusted application or user input. This is due to the fact that it is not possible to ensure that other applications and data sources have performed the validation properly and their output is safe.

The most secure approach to validating against XSS payloads is to create an allow list of safe characters and accept input composed exclusively of them. For example, a valid username might only include alphanumeric characters or a phone number might only include digits 0-9. However, this solution is not always possible in web applications because some fields are supposed to receive special characters that can be used in XSS attacks, like HTML fragments.

Another more flexible, but less secure method is an allow list, which selectively rejects or escapes potentially dangerous characters before outputting them. In order to create such a list, it is needed to understand the characters that hold special meaning for web browsers. Although the HTML standard defines which characters have special meaning, many web browsers try to correct common mistakes in HTML and might treat other characters as special in certain contexts. This is why we do not recommend the use of deny lists as a means to prevent XSS. The CERT(R) Coordination Center at the Software Engineering Institute at Carnegie Mellon University provides the following details about special characters in various contexts [1]:

In the content of a block-level element (in the middle of a paragraph of text):

- "&lt;" is special because it introduces a tag.

- "&amp;" is special because it introduces a character entity.

- "&gt;" is special because some browsers treat it as special, on the assumption that the author of the page intended to include an opening "&lt;", but omitted it in error.

The following principles apply to attribute values:
- In attribute values enclosed in single quotes, the single quotes are special because they mark the end of the attribute value.

- In attribute values without any quotes, white-space characters, such as space and tab, are special.

- "&amp;" is special when used with certain attributes, because it introduces a character entity.

In URLs, for example, a search engine might provide a link within the results page that the user can click to re-run the search. This can be implemented by encoding the search query inside the URL, which introduces additional special characters:

- Space, tab, and new line are special because they mark the end of the URL.

- "&amp;" is special because it either introduces a character entity or separates CGI parameters.

- Non-ASCII characters (that is, everything greater than 127 in the ISO-8859-1 encoding) are not allowed in URLs, so they are considered to be special in this context.

- The "%" symbol must be filtered from input anywhere parameters encoded with HTTP escape sequences are decoded by server-side code. For example, "%" must be filtered if input such as "%68%65%6C%6C%6F" becomes "hello" when it appears on the web page.


Within the body of a &lt;SCRIPT&gt; &lt;/SCRIPT&gt;:

- Semicolons, parentheses, curly braces, and new line characters must be filtered out in situations where text could be inserted directly into a pre-existing script tag.

Server-side scripts:

- Server-side scripts that convert any exclamation characters (!) in input to double-quote characters (") on output might require additional filtering.

Other possibilities:

- If an attacker submits a request in UTF-7, the special character '&lt;' appears as '+ADw-' and might bypass filtering. If the output is included in a page that does not explicitly specify an encoding format, then some browsers try to intelligently identify the encoding based on the content (in this case, UTF-7).

After you identify the correct points in an application to perform validation for XSS attacks and what special characters the validation should consider, the next challenge is to identify how your validation handles special characters. If special characters are not considered valid input to the application, then you can reject any input that contains special characters as invalid. A second option is to remove special characters with filtering. However, filtering has the side effect of changing any visual representation of the filtered content and might be unacceptable in circumstances where the integrity of the input must be preserved for display.

If input containing special characters must be accepted and displayed accurately, validation must encode any special characters to remove their significance. A complete list of ISO 8859-1 encoded values for special characters is provided as part of the official HTML specification [2].

The Salesforce platform has two mechanisms to protect against XSS: automatic HTML encoding as well as built-in encoding functions that can be invoked manually from VisualForce. Despite that, in order to use these protections correctly, the developer needs to have a thorough understanding of how variables are rendered by the browser.

- Built in Auto Encoding
All merge-fields are always auto HTML encoded provided they
- do not occur within a &lt;style&gt; or &lt;script&gt; tag
- do not occur within an Apex tag with the escape='false' attribute

The auto HTML encoding is applied after any other VisualForce functions and is applied even if other VisualForce encoding functions are used. Therefore, the application code needs to take automatic encoding into account in order to avoid double encoding or improperly encoding merge-fields.

<b>Example 3:</b> In this example, the content of the <code>userInput</code> variable is automatically encoded.
<pre>
&lt;apex:outputText&gt;
{!$CurrentPage.parameters.userInput}
&lt;/apex:outputText&gt;
</pre>

<b>Example 4:</b> With <code>&lt;script&gt;</code> tags there is not automatic encoding, therefore this example is vulnerable to XSS.
<pre>
&lt;script&gt;
var x = '{!$CurrentPage.parameters.userInput}';
&lt;/script&gt;
</pre>

- VisualForce encoding functions
There are cases when the automatic HTML encoding is insufficient to avoid XSS issues and the developer should analyze how the data will be processed inside the application (HTML Parsing, URI Parsing and Javascript Parsing) to apply the correct encoding.

- JSENCODE
JSENCODE function is used to prevent data from breaking out of quoted strings.

- HTMLENCODE
HTMLENCODE function is used when data is interpreted in an HTML Context and is not already auto-encoded.

- URLENCODE
URLENCODE function is used to map each character with ASCII code 00-255 to the corresponding two-byte hexadecimal representation as %XX. Therefore it will not provide valid absolute URLs and should only be used when encoding URI components.

Also, it is important to realize that there are cases when multiple encodings must be applied due to the interaction between the different parsers (Javascript, HTML, and URI). And this multiple encoding is order sensitive, meaning that depending on the context <code>JSENCODE(HTMLENCODE())</code> will provide the adequate protection but <code>HTMLENCODE(JSENCODE())</code> won't.]]></Recommendations>
                <Tips/>
                <References>
                    <Reference>
                        <Title><![CDATA[Understanding Malicious Content Mitigation for Web Developers]]></Title>
                        <Publisher><![CDATA[CERT]]></Publisher>
                        <Source><![CDATA[https://resources.sei.cmu.edu/library/asset-view.cfm?assetid=496719#9]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[HTML 4.01 Specification]]></Title>
                        <Publisher><![CDATA[W3]]></Publisher>
                        <Source><![CDATA[https://www.w3.org/TR/html401/sgml/entities.html#h-24.2]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Secure Coding Guidelines - Cross Site Scripting]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/page/Secure_Coding_Cross_Site_Scripting]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CWE ID 79, CWE ID 80]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[2] CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2019]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[1] CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2020]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[2] CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[2] CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2022]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CCI-001310, CCI-002754]]></Title>
                        <Author><![CDATA[Standards Mapping - DISA Control Correlation Identifier Version 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI]]></Title>
                        <Author><![CDATA[Standards Mapping - FIPS200]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Indirect Access to Sensitive Data]]></Title>
                        <Author><![CDATA[Standards Mapping - General Data Protection Regulation]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI-10 Information Input Validation (P1)]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI-10 Information Input Validation]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Application Security Verification Standard 4.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[M7 Client Side Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Mobile Top 10 Risks 2014]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Cross Site Scripting]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2004]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A1 Cross Site Scripting (XSS)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2007]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A2 Cross-Site Scripting (XSS)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A3 Cross-Site Scripting (XSS)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2013]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A7 Cross-Site Scripting (XSS)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2017]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A03 Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.4]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.3.1.1, Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.7]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 2.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.7]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.7]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.7]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.7]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 4.2 - Critical Asset Protection]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insecure Interaction - CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2009]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insecure Interaction - CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insecure Interaction - CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2011]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.11]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.3]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.8]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 5.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Cross-Site Scripting]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium 24 + 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Cross-Site Scripting (WASC-08)]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium Version 2.00]]></Author>
                    </Reference>
                </References>
            </Description>
            <Description
                id="desc.dataflow.apex.cross_site_scripting_poor_validation" formatVersion="3.4">
                <Abstract><![CDATA[<Paragraph>The method <Replace key="EnclosingFunction.name"/> in <Replace key="PrimaryLocation.file"/> uses HTML, URL or JavaScript encoding that is not always enough to prevent malicious code from reaching the web browser.<AltParagraph>Sending unvalidated data to the web browser may lead to the execution of malicious code.</AltParagraph></Paragraph>
  ]]></Abstract>
                <Explanation><![CDATA[Due to the large amount of possible interactions between user supplied data and the web browser parsers, it is not always possible to properly assess if the applied encoding is sufficient to protect against XSS vulnerability. Therefore, Fortify Static Code Analyzer reports cross-site scripting findings even when encoding is applied and presents them as Cross-Site Scripting: Poor Validation issues.

Cross-site scripting (XSS) vulnerabilities occur when:

1. Data enters a web application through an untrusted source. In the case of reflected XSS, an untrusted source is most frequently a web request, and in the case of persistent (also known as stored) XSS it is the results of a database query.
<Paragraph>
In this case, the data enters at <Replace key="SourceFunction" link="SourceLocation"/> in <Replace key="SourceLocation.file"/> on line <Replace key="SourceLocation.line"/>.
</Paragraph>
2. The data is included in dynamic content that is sent to a web user without validation.
<Paragraph>
In this case, the data is sent at <Replace key="SinkFunction" link="SinkLocation"/> in <Replace key="SinkLocation.file"/> on line <Replace key="SinkLocation.line"/>.
</Paragraph>
The malicious content usually is a segment of JavaScript code, but can also be HML, Flash or any other active content that might be executed by the browser. The variety of attacks based on XSS is almost limitless, but they commonly include transmitting private data such as cookies or other session information to the attacker, redirecting the victim to web content controlled by the attacker, or performing other malicious operations on the user's machine under the guise of the vulnerable site.

<b>Example 1:</b> The following Apex code segment queries a database for a contact name with a given ID and returns the corresponding employee's name, which later gets printed by the Visualforce code.

<pre>
...
variable = Database.query('SELECT Name FROM Contact WHERE id = ID');
...
</pre>
<pre>
&lt;div onclick="this.innerHTML='Hello {!HTMLENCODE(variable)}'"&gt;Click me!&lt;/div&gt;
</pre>

This code, despite the usage of <code>HTMLENCODE</code>, does not properly validate the data provided by the database and is vulnerable to XSS. This happens because the <code>variable</code> content is parsed by different mechanisms (HTML and Javascript parsers), therfore neeeds to be encoded two times. This way, an attacker can have malicious commands executed in the user's web browser without the need to interact with the victim like in Reflected XSS. This type of attack, known as Stored XSS (or Persistent), can be very hard to detect since the data is indirectly provided to the vulnerable function and also have a higher impact due to the possibility to affect multiple users. XSS got its start in this form with web sites that offered a "guestbook" to visitors. Attackers would include JavaScript in their guestbook entries, and all subsequent visitors to the guestbook page would execute the malicious code.

<b>Example 2:</b> The following Visualforce code segment reads an HTTP request parameter, <code>username</code>, and displays it to the user.

<pre>
&lt;script&gt;
document.write('{!HTMLENCODE($CurrentPage.parameters.username)}')
&lt;/script&gt;
</pre>

The code in this example was intended to receive only alphanumeric text and display it. However, if <code>username</code> contains metacharacters or source code, it will be executed by the web browser. Also in this example the usage of <code>HTMLENCODE</code> is not enough to prevent the XSS attack since the variable is processed by the Javascript parser.

Initially this might not appear to be much of a vulnerability. After all, why would someone enter a URL that causes malicious code to run on their own computer? The real danger is that an attacker will create the malicious URL, then use email or social engineering tricks to lure victims into visiting a link to the URL. When victims click the link, they unwittingly reflect the malicious content through the vulnerable web application back to their own computers. This mechanism of exploiting vulnerable web applications is known as Reflected XSS.

As the examples demonstrate, XSS vulnerabilities are caused by code that includes unvalidated data in an HTTP response. There are two vectors by which an XSS attack can be executed:

- As in <code>Example 1</code>, the database or other data store can provide dangerous data to the application that will be included in dynamic content. From the attacker's perspective, the best place to store malicious content is an area accessible to all users specially those with elevated privileges, who are more likely to handle sensitive information or perform critical operations.

- As in <code>Example 2</code>, data is read from the HTTP request and reflected back in the HTTP response. Reflected XSS occurs when an attacker can have dangerous content delivered to a vulnerable web application and then reflected back to the user and execute by his browser. The most common mechanism to deliver malicious content is to include it as a parameter in a URL that is posted publicly or emailed directly to the victim. URLs crafted this way are the core of many phishing schemes, where the attacker lures the victim to visit the URL. After the site reflects the content back to the user, it is executed and can perform several actions like forward private sensitive information, execute unauthorized operations on the victim computer etc.]]></Explanation>
                <Recommendations><![CDATA[The solution to prevent XSS vulnerabilities is to ensure that every user-supplied data is properly validated.

Since XSS occurs due to the web application sending malicious data to the user, one logical approach is to validate data going out from the application. However, this approach is not very effective and prone to errors since web applications usually generate dynamic content in a complex and intricate way. Therefore, an effective way to mitigate this risk is to perform input validation for XSS.

Validating web application inputs is used to prevent other vulnerabilities, such as SOQL injection, so improving the existing mechanism to include checks for XSS is relatively easy. Also, it is important to keep in mind that all input sources must be validated, no matter whether the data is provided by a database, another trusted application or user input. This is due to the fact that it is not possible to ensure that other applications and data sources have performed the validation properly and their output is safe.

The most secure approach to validating against XSS payloads is to create an allow list of safe characters and accept input composed exclusively of them. For example, a valid username might only include alphanumeric characters or a phone number might only include digits 0-9. However, this solution is not always possible in web applications because some fields are supposed to receive special characters that can be used in XSS attacks, like HTML fragments.

Another more flexible, but less secure method is an allow list, which selectively rejects or escapes potentially dangerous characters before outputting them. In order to create such a list, it is needed to understand the characters that hold special meaning for web browsers. Although the HTML standard defines which characters have special meaning, many web browsers try to correct common mistakes in HTML and might treat other characters as special in certain contexts. This is why we do not recommend the use of deny lists as a means to prevent XSS. The CERT(R) Coordination Center at the Software Engineering Institute at Carnegie Mellon University provides the following details about special characters in various contexts [1]:

In the content of a block-level element (in the middle of a paragraph of text):

- "&lt;" is special because it introduces a tag.

- "&amp;" is special because it introduces a character entity.

- "&gt;" is special because some browsers treat it as special, on the assumption that the author of the page intended to include an opening "&lt;", but omitted it in error.

The following principles apply to attribute values:
- In attribute values enclosed in single quotes, the single quotes are special because they mark the end of the attribute value.

- In attribute values without any quotes, white-space characters, such as space and tab, are special.

- "&amp;" is special when used with certain attributes, because it introduces a character entity.

In URLs, for example, a search engine might provide a link within the results page that the user can click to re-run the search. This can be implemented by encoding the search query inside the URL, which introduces additional special characters:

- Space, tab, and new line are special because they mark the end of the URL.

- "&amp;" is special because it either introduces a character entity or separates CGI parameters.

- Non-ASCII characters (that is, everything greater than 127 in the ISO-8859-1 encoding) are not allowed in URLs, so they are considered to be special in this context.

- The "%" symbol must be filtered from input anywhere parameters encoded with HTTP escape sequences are decoded by server-side code. For example, "%" must be filtered if input such as "%68%65%6C%6C%6F" becomes "hello" when it appears on the web page.


Within the body of a &lt;SCRIPT&gt; &lt;/SCRIPT&gt;:

- Semicolons, parentheses, curly braces, and new line characters must be filtered out in situations where text could be inserted directly into a pre-existing script tag.

Server-side scripts:

- Server-side scripts that convert any exclamation characters (!) in input to double-quote characters (") on output might require additional filtering.

Other possibilities:

- If an attacker submits a request in UTF-7, the special character '&lt;' appears as '+ADw-' and might bypass filtering. If the output is included in a page that does not explicitly specify an encoding format, then some browsers try to intelligently identify the encoding based on the content (in this case, UTF-7).

After you identify the correct points in an application to perform validation for XSS attacks and what special characters the validation should consider, the next challenge is to identify how your validation handles special characters. If special characters are not considered valid input to the application, then you can reject any input that contains special characters as invalid. A second option is to remove special characters with filtering. However, filtering has the side effect of changing any visual representation of the filtered content and might be unacceptable in circumstances where the integrity of the input must be preserved for display.

If input containing special characters must be accepted and displayed accurately, validation must encode any special characters to remove their significance. A complete list of ISO 8859-1 encoded values for special characters is provided as part of the official HTML specification [2].

The Salesforce platform has two mechanisms to protect against XSS: automatic HTML encoding as well as built-in encoding functions that can be invoked manually from VisualForce. Despite that, in order to use these protections correctly, the developer needs to have a thorough understanding of how variables are rendered by the browser.

- Built in Auto Encoding
All merge-fields are always auto HTML encoded provided they
- do not occur within a &lt;style&gt; or &lt;script&gt; tag
- do not occur within an Apex tag with the escape='false' attribute

The auto HTML encoding is applied after any other VisualForce functions and is applied even if other VisualForce encoding functions are used. Therefore, the application code needs to take automatic encoding into account in order to avoid double encoding or improperly encoding merge-fields.

<b>Example 3:</b> In this example, the content of the <code>userInput</code> variable is automatically encoded.
<pre>
&lt;apex:outputText&gt;
{!$CurrentPage.parameters.userInput}
&lt;/apex:outputText&gt;
</pre>

<b>Example 4:</b> With <code>&lt;script&gt;</code> tags there is not automatic encoding, therefore this example is vulnerable to XSS.
<pre>
&lt;script&gt;
var x = '{!$CurrentPage.parameters.userInput}';
&lt;/script&gt;
</pre>

- VisualForce encoding functions
There are cases when the automatic HTML encoding is insufficient to avoid XSS issues and the developer should analyze how the data will be processed inside the application (HTML Parsing, URI Parsing and Javascript Parsing) to apply the correct encoding.

- JSENCODE
JSENCODE function is used to prevent data from breaking out of quoted strings.

- HTMLENCODE
HTMLENCODE function is used when data is interpreted in an HTML Context and is not already auto-encoded.

- URLENCODE
URLENCODE function is used to map each character with ASCII code 00-255 to the corresponding two-byte hexadecimal representation as %XX. Therefore it will not provide valid absolute URLs and should only be used when encoding URI components.

Also, it is important to realize that there are cases when multiple encodings must be applied due to the interaction between the different parsers (Javascript, HTML, and URI). And this multiple encoding is order sensitive, meaning that depending on the context <code>JSENCODE(HTMLENCODE())</code> will provide the adequate protection but <code>HTMLENCODE(JSENCODE())</code> won't.]]></Recommendations>
                <Tips/>
                <References>
                    <Reference>
                        <Title><![CDATA[Understanding Malicious Content Mitigation for Web Developers]]></Title>
                        <Publisher><![CDATA[CERT]]></Publisher>
                        <Source><![CDATA[https://resources.sei.cmu.edu/library/asset-view.cfm?assetid=496719#9]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[HTML 4.01 Specification]]></Title>
                        <Publisher><![CDATA[W3]]></Publisher>
                        <Source><![CDATA[https://www.w3.org/TR/html401/sgml/entities.html#h-24.2]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Secure Coding Guidelines - Cross Site Scripting]]></Title>
                        <Author><![CDATA[Salesforce Developers Technical Library]]></Author>
                        <Source><![CDATA[https://developer.salesforce.com/page/Secure_Coding_Cross_Site_Scripting]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CWE ID 82, CWE ID 83, CWE ID 87, CWE ID 692]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[2] CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2019]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[1] CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2020]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[2] CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[2] CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2022]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CCI-001310, CCI-002754]]></Title>
                        <Author><![CDATA[Standards Mapping - DISA Control Correlation Identifier Version 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI]]></Title>
                        <Author><![CDATA[Standards Mapping - FIPS200]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Indirect Access to Sensitive Data]]></Title>
                        <Author><![CDATA[Standards Mapping - General Data Protection Regulation]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI-10 Information Input Validation (P1)]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI-10 Information Input Validation]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Application Security Verification Standard 4.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[M7 Client Side Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Mobile Top 10 Risks 2014]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Cross Site Scripting]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2004]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A1 Cross Site Scripting (XSS)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2007]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A2 Cross-Site Scripting (XSS)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A3 Cross-Site Scripting (XSS)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2013]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A7 Cross-Site Scripting (XSS)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2017]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A03 Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.4]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.3.1.1, Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.7]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 2.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.7]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.7]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.7]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.7]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 4.2 - Critical Asset Protection]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insecure Interaction - CWE ID 116]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2009]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.11]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.3]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.8]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 5.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Cross-Site Scripting]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium 24 + 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Cross-Site Scripting (WASC-08)]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium Version 2.00]]></Author>
                    </Reference>
                </References>
            </Description>
            <Description id="desc.internal.apex.description_not_needed" formatVersion="3.4">
                <Abstract append="false"><![CDATA[There is no description available for this vulnerability category.]]></Abstract>
                <Explanation append="false"><![CDATA[Please contact Micro Focus Fortify for further details.]]></Explanation>
                <Recommendations><![CDATA[Please contact Micro Focus Fortify for further details.]]></Recommendations>
            </Description>
        </Descriptions>
        <ControlflowStateStrings/>
        <TaintFlagDeclarations>
            <Flag name="VALIDATED_SOQL_INJECTION" type="neutral"/>
            <Flag name="VALIDATED_SOSL_INJECTION" type="neutral"/>
            <Flag name="NUMBER" type="neutral"/>
            <Flag name="WEAKCRYPTO" type="neutral"/>
            <Flag name="BASE64_ENCODED" type="neutral"/>
            <Flag name="NO_NEW_LINE" type="neutral"/>
            <Flag name="VALIDATED_CROSS_SITE_SCRIPTING_REFLECTED" type="neutral"/>
            <Flag name="VALIDATED_CROSS_SITE_SCRIPTING_PERSISTENT" type="neutral"/>
            <Flag name="VALIDATED_CROSS_SITE_SCRIPTING_DOM" type="neutral"/>
            <Flag name="POORVALIDATION" type="specific"/>
            <Flag name="URL_ENCODE" type="neutral"/>
            <Flag name="CSV_ENCODE" type="neutral"/>
            <Flag name="UNICODE_ENCODE" type="neutral"/>
            <Flag name="JS_ENCODE" type="neutral"/>
            <Flag name="JAVA_ENCODE" type="neutral"/>
            <Flag name="HTML_ENCODE" type="neutral"/>
            <Flag name="XML_ENCODE" type="neutral"/>
            <Flag name="APEX_VALIDATION_OFF" type="neutral"/>
            <Flag name="VALIDATED_ACCESS_CONTROL_DATABASE" type="neutral"/>
            <Flag name="XSS" type="general"/>
            <Flag name="WEB" type="general"/>
            <Flag name="GUI_FORM" type="general"/>
            <Flag name="FORM" type="general"/>
            <Flag name="NETWORK" type="general"/>
            <Flag name="DATABASE" type="general"/>
            <Flag name="LDAP" type="general"/>
            <Flag name="NAMING" type="general"/>
            <Flag name="XML" type="general"/>
            <Flag name="OPEN_XML" type="general"/>
            <Flag name="JSON" type="general"/>
            <Flag name="WEBSERVICE" type="general"/>
            <Flag name="VALIDATED_CROSS_SITE_SCRIPTING_POOR_VALIDATION" type="neutral"/>
            <Flag name="VALIDATED_FRAME_SPOOFING" type="neutral"/>
            <Flag name="RCONCATENATED" type="neutral"/>
            <Flag name="SYSTEMINFO" type="specific"/>
            <Flag name="EXCEPTIONINFO" type="neutral"/>
        </TaintFlagDeclarations>
        <TaintFlagDescriptions>
            <FlagDescription name="WEB">Web</FlagDescription>
            <FlagDescription name="GUI_FORM">GUI Form</FlagDescription>
            <FlagDescription name="FORM">Web Form</FlagDescription>
            <FlagDescription name="NETWORK">Network</FlagDescription>
            <FlagDescription name="DATABASE">Database</FlagDescription>
            <FlagDescription name="LDAP">LDAP Service</FlagDescription>
            <FlagDescription name="NAMING">Naming Service</FlagDescription>
            <FlagDescription name="XML">XML Document</FlagDescription>
            <FlagDescription name="OPEN_XML">Open XML Document</FlagDescription>
            <FlagDescription name="JSON">JSON Document</FlagDescription>
            <FlagDescription name="WEBSERVICE">Web Service</FlagDescription>
            <FlagDescription name="SYSTEMINFO">System Information</FlagDescription>
        </TaintFlagDescriptions>
        <Coverage>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">sObject</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">clear</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Matcher</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">Reset</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">List</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">clear</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Map</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">clear</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Set</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">clear</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Pattern caseInsensitive="true">.*</Pattern>
                </NamespaceName>
                <ClassName>
                    <Pattern caseInsensitive="true">.*_pageclass</Pattern>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">globalFlow</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">String</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">escapeSingleQuotes</Value>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Pattern caseInsensitive="true">Object|sObject</Pattern>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">clone|deepClone</Pattern>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Pattern caseInsensitive="true">Object|sObject</Pattern>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">toString</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Blob</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">toPdf</Value>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Blob</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">valueOf</Value>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Boolean</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">valueOf</Value>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Cookie</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">init^</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Cookie</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">get(Domain|Name|Path|Value)</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Date</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">add(Days|Months|Years)</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Date</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">day(OfYear)?|format|month|year</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Date</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">newInstance</Value>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Date</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">parse</Value>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Date</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">valueOf</Value>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Datetime</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">add(Days|Hours|Minutes|Months|Seconds|Years)</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Datetime</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">date(GMT)?|day(Gmt|OfYear|OfYearGmt)?</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Datetime</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">format(Gmt)?</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Datetime</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">formatLong|getTime|hour(Gmt)?|millisecond(Gmt)?|minute(Gmt)?|month(Gmt)?|second(Gmt)?|time(Gmt)?|year(Gmt)?</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Datetime</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">newInstance(Gmt)?</Pattern>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Datetime</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">parse</Value>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Datetime</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">valueOf</Value>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Decimal</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">abs|doubleValue|format|intValue|longValue|round|stripTrailing|toPlainString</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Decimal</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">divide</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Decimal</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">pow</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Decimal</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">valueOf</Value>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Double</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">format|intValue|longValue|round</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Double</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">valueOf</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">EncodingUtil</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">base64Decode</Value>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">EncodingUtil</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">base64Encode</Value>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">EncodingUtil</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">convertFromHex</Value>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">EncodingUtil</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">convertToHex</Value>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">EncodingUtil</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">urlDecode</Pattern>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">EncodingUtil</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">urlEncode</Pattern>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Id</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">valueOf</Value>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Integer</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">format</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Integer</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">valueOf</Value>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Long</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">format</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Long</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">intValue</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Long</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">valueOf</Value>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Math</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">abs|acos|asin|atan|atan2|cbrt|ceil|cos|cosh|exp|floor|log|log10|max|min|mod|pow|rint|round|rountToLong|signum|sin|sinh|sqrt|tan|tanh</Pattern>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Pattern</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">compile</Value>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Pattern</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">matcher</Value>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Pattern</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">pattern</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Pattern</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">quote</Value>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Pattern</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">split</Value>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Matcher</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">group</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Matcher</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">pattern</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Matcher</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">quoteReplacement</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Matcher</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">region</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Matcher</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">replaceFirst</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Matcher</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">replaceAll</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Matcher</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">useAnchoringBounds</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Matcher</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">usePattern</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Matcher</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">useTransparentBounds</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">String</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">format|join</Pattern>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">String</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">replace|replaceAll|replaceFirst</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">String</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">repeat</Value>
                </FunctionName>
                <Parameters>
                    <WildCard min="1" max="1"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">String</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">repeat</Value>
                </FunctionName>
                <Parameters>
                    <WildCard min="2" max="2"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">String</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">getCommonPrefix</Value>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">String</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">valueOf|valueOfGmt</Pattern>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">String</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">abbreviate|capitalize|center|difference|getChars|left|leftPad|mid|normalizeSpace|remove|removeEnd|removeEndIgnoreCase|removeStart|removeStartIgnoreCase|repeat|replace|replaceAll|replaceFirst|reverse|right|rightPad|split|split|splitByCharacterType|splitByCharacterTypeCamelCase|substring|substring|substringAfter|substringAfterLast|substringBefore|substringBeforeLast|substringBetween|substringBetween|swapCase|toLowerCase|toLowerCase|toUpperCase|toUpperCase|trim|uncapitalize|valueOf</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">String</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">escapeCsv</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">String</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">unescapeCsv</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">String</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">escapeUnicode</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">String</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">unescapeUnicode</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">String</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">escapeEcmaScript</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">String</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">unescapeEcmaScript</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">String</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">escapeJava</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">String</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">unescapeJava</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">String</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">deleteWhitespace</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">String</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">charAt</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">String</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">fromCharArray</Value>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">String</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">escapeHtml3|escapeHtml4</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">String</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">escapeXml</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">String</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">unescapeHtml3|unescapeHtml4</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">String</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">unescapeXml</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">String</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">stripHtmlTags</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Time</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">addHours</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Time</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">addMilliseconds</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Time</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">addMinutes</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Time</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">addSeconds</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Time</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">hour</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Time</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">millisecond</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Time</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">minute</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Time</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">newInstance</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Time</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">second</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Url</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">init^</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Url</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">get(Authority|CurrentRequestUrl|File|Host|Path|Query|Ref|SalesforceBaseUrl|UserInfo)|toExternalForm</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Url</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">get(DefaultPort|Port)</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">List</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">init^</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">List</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">add|addAll</Pattern>
                </FunctionName>
                <Parameters>
                    <WildCard min="1" max="1"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">List</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">sort</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">List</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">iterator</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">iterator</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">next</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Map</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">init^</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Map</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">putAll</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Set</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">init^</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Set</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">add|addAll</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Database</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">convertLead</Value>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">Database</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">QueryLocator</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">getQuery|iterator</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">Database</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">QueryLocatorIterator</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">next</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">Database</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">LeadConvert</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">getAccountId|getContactId|getConvertedStatus|getLeadID|getOpportunityName|getOwnerID</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">Database</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">LeadConvert</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">setAccountId|setConvertedStatus|setDoNotCreateOpportunity|setLeadId|setOpportunityName|setOverwriteLeadSource|setOwnerId|setSendNotificationEmail</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">Database</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Error</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">getFields|getMessage</Pattern>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">Database</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Error</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">getStatusCode</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">PageReference</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">init^</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">DataSource</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Table</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">get_(columns|description|labelPlural|labelSingular|name|nameColumn)_property</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">DataSource</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Column</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">get_(description|label|name|type)_property</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">DataSource</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">QueryUtils</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">applyLimitAndOffset</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">DataSource</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">QueryUtils</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">filter</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">DataSource</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">QueryUtils</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">process</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">DataSource</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">QueryUtils</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">sort</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">DataSource</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">SearchContext</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">init^</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">DataSource</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">SearchContext</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">get_searchPhrase_property</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">DataSource</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">SearchContext</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">set_searchPhrase_property</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">Search</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">KnowledgeSuggestionFilter</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">add(ArticleType|DataCategory)|set(Channel|DataCategories|Language|PublishStatus|ValidationStatus)</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">Search</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">QuestionSuggestionFilter</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">add(GroupId|NetworkId|UserId)|set(GroupIds|NetworkIds|TopicId|UserIds)</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">Search</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">SearchResult</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">get(SObject|Snippet)</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">Search</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">SearchResults</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">get</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">Search</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">SuggestionResult</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">getSObject</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">Search</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">SuggestionResults</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">getSuggestionResults</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Pattern>.*</Pattern>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">DatetimeFunctions</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">_date|_dateValue|_dateTimeValue|_day|_month|_year</Pattern>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Pattern>.*</Pattern>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">InfFunctions</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">_blankValue|_nullValue</Pattern>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Pattern>.*</Pattern>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">MathFunctions</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">_abs|_ceiling|_exp|_floor|_ln|_log|_max|_min|_mod|_round|_sqrt</Pattern>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Pattern>.*</Pattern>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">TextFunctions</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">_caseSafeId</Value>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Pattern>.*</Pattern>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">TextFunctions</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">_htmlEncode</Value>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Pattern>.*</Pattern>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">TextFunctions</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">_jsenCode</Value>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Pattern>.*</Pattern>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">TextFunctions</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">_jsInHtmlEncode</Value>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Pattern>.*</Pattern>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">TextFunctions</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">_left|_lower|_mid|_right</Pattern>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Pattern>.*</Pattern>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">TextFunctions</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">_lPad|_rPad</Pattern>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Pattern>.*</Pattern>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">TextFunctions</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">_substitute|_text|_trim|_upper</Pattern>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Pattern>.*</Pattern>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">TextFunctions</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">_urlencode</Value>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Pattern>.*</Pattern>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">TextFunctions</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">_value</Value>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Pattern>.*</Pattern>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">AdvancedFunctions</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">_getRecordIds|_vLookUp</Pattern>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">vfstd</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">ContextFunctions</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">evaluateInAttrFalse</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <FunctionName>
                    <Value caseInsensitive="true">_soql_where</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Database</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">query|countQuery|getQueryLocator</Pattern>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Search</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">query|find|suggest</Pattern>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">DataSource</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">DeleteContext</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">set_(tableSelected|externalIds)_property</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Pattern caseInsensitive="true">.*</Pattern>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">AdvancedFunctions</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">_linkto|_requireScript</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Pattern caseInsensitive="true">vfstd</Pattern>
                </NamespaceName>
                <ClassName>
                    <Pattern caseInsensitive="true">apexiframe</Pattern>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">set_src</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">vfstd</Value>
                </NamespaceName>
                <ClassName>
                    <Pattern caseInsensitive="true">ApexChartTips|apexcolumn|apexcommandButton|apexcommandLink|apexdataList|apexdataTable|apeximage|apexincludeScript|apexoutputField|apexoutputLabel|apexoutputLink|apexoutputText|apexInputText|ApexPageBlockTable|ApexPanelBar|ApexRepeat|ApexSelectCheckboxes|ApexSelectList|apexselectOption|apexselectOptions|ApexSelectRadio|apexstylesheet|ApexTabPanel|apexvariable</Pattern>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">set_value|set_valuefield|set_itemvalue|set_footervalue|set_headervalue</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">vfstd</Value>
                </NamespaceName>
                <ClassName>
                    <Pattern caseInsensitive="true">apexincludeScript</Pattern>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">set_value</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">vfstd</Value>
                </NamespaceName>
                <ClassName>
                    <Pattern caseInsensitive="true">ApexParam</Pattern>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">set_value</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">vfstd</Value>
                </NamespaceName>
                <ClassName>
                    <Pattern caseInsensitive="true">apexactionStatus|apexcolumn|apexcommandButton|apexcommandLink|apexdataList|apexdataTable|apexform|apeximage|apexinput|apexinputCheckbox|apexinputField|apexinputFile|apexinputSecret|apexinputText|apexinputTextarea|apexoutputLabel|apexoutputLink|apexoutputPanel|apexpageBlock|apexpageBlockButtons|apexpageBlockSection|apexpageBlockTable|apexpanelGrid|apexselectCheckboxes|apexselectList|apexselectOption|apexselectRadio|apextab|apextabPanel|apextoolbar|apextoolbarGroup</Pattern>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">set_onclick|set_onblclick|set_onkeydown|set_onkeypress|set_onkeyup|set_onmousedown|set_onmousemove|set_onmouseout|set_onmouseover|set_onmouseup|set_onstart|set_onstop</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">vfstd</Value>
                </NamespaceName>
                <ClassName>
                    <Pattern caseInsensitive="true">ApexActionStatus|ApexAreaSeries|ApexAxis|ApexBarSeries|ApexColumn|ApexCommandButton|ApexCommandLink|ApexDataList|ApexDataTable|ApexDetail|ApexEmailPublisher|ApexForm|ApexIframe|ApexImage|ApexInput|ApexInputCheckbox|ApexInputFile|ApexInputSecret|ApexInputText|ApexInputTextarea|ApexLineSeries|ApexLogCallPublisher|ApexMapMarker|ApexMessage|ApexMessages|ApexOutputField|ApexOutputLabel|ApexOutputLink|ApexOutputPanel|ApexOutputText|ApexPage|ApexPageBlock|ApexPageBlockButtons|ApexPageBlockSection|ApexPageBlockTable|ApexPageMessage|ApexPanelGrid|ApexRadarSeries|ApexRelatedList|ApexScatterSeries|ApexSectionHeader|ApexSelectCheckboxes|ApexSelectList|ApexSelectOption|ApexSelectRadio|ApexTab|ApexTabPanel|SupportCaseArticles|SupportPortalPublisher</Pattern>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">set_title</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">vfstd</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">ContextFunctions</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">evaluateInStyle|evaluateInScript</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">vfstd</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">ContextFunctions</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">evaluateInTagFalse</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">HTTPResponse</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">setBody|setBodyAsBlob</Pattern>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">SelectOption</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">init^</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">SelectOption</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">setLabel|setValue</Pattern>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">vfstd</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">ApexParam</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">set_value</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">vfstd</Value>
                </NamespaceName>
                <ClassName>
                    <Pattern caseInsensitive="true">ApexActionStatus|ApexAreaSeries|ApexAxis|ApexBarSeries|ApexColumn|ApexCommandButton|ApexCommandLink|ApexDataList|ApexDataTable|ApexDetail|ApexEmailPublisher|ApexForm|ApexIframe|ApexImage|ApexInput|ApexInputCheckbox|ApexInputFile|ApexInputSecret|ApexInputText|ApexInputTextarea|ApexLineSeries|ApexLogCallPublisher|ApexMapMarker|ApexMessage|ApexMessages|ApexOutputField|ApexOutputLabel|ApexOutputLink|ApexOutputPanel|ApexOutputText|ApexPage|ApexPageBlock|ApexPageBlockButtons|ApexPageBlockSection|ApexPageBlockTable|ApexPageMessage|ApexPanelGrid|ApexRadarSeries|ApexRelatedList|ApexScatterSeries|ApexSectionHeader|ApexSelectCheckboxes|ApexSelectList|ApexSelectOption|ApexSelectRadio|ApexTab|ApexTabPanel|SupportCaseArticles|SupportPortalPublisher</Pattern>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">set_title</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">vfstd</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">ContextFunctions</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">evaluateInHTag|evaluateInHAttr</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Database</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">delete|emptyRecycleBin|undelete|update</Pattern>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Database</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">merge|upsert</Pattern>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Database</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">deleteAsync|insertAsync|updateAsync|deleteImmediate|insertImmediate|updateImmediate</Pattern>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">Database</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Batchable</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">execute</Value>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <FunctionName>
                    <Pattern caseInsensitive="true">_soql_select|_soql_update|_soql_delete|_soql_merge|_soql_upsert|_soql_undelete</Pattern>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">DataSource</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">deleteContext</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">set_(externalIds|tableSelected)_property</Pattern>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">DataSource</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">queryContext</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">set_queryMoreToken_property</Value>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">DataSource</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">upsertContext</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">set_(rows|tableSelected)_property</Pattern>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">DataSource</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">ColumnSelection</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">set_(columnName|tableName)_property</Pattern>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">DataSource</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">TableSelection</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">set_tableSelected_property</Pattern>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">DataSource</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Filter</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">set_(columnName|columnValue|subfilters|tableName|type)_property</Pattern>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Pattern caseInsensitive="true">vfstd</Pattern>
                </NamespaceName>
                <ClassName>
                    <Pattern caseInsensitive="true">apexchart|apexcolumn|apexdatalist|apexdatatable|apexinput|apexinputcheckbox|apexinputfield|apexinputhidden|apexinputsecret|apexinputtext|apexinputtextarea|apexoutputlink|apexselectcheckboxes|apexselectlist|apexselectoption|apexselectradio</Pattern>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">get_data|get_value|get_assignto</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">UserInfo</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">get(DefaultCurrency|Language|Locale|UserType|OrganizationId|ProfileId|SessionId|UserId|UserRoleId)</Pattern>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">UserInfo</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">get(FirstName|LastName|Name|OrganizationName|UserEmail|UserName|SessionId)</Pattern>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">Database</Value>
                </NamespaceName>
                <ClassName>
                    <Pattern caseInsensitive="true">(Delete|UnDelete|Merge|Save|Upsert|EmptyRecycleBin)Result</Pattern>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">getErrors</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">DataSource</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Connection</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">query|search</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">DataSource</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Connection</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">sync</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Database</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">query|getQueryLocator</Pattern>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">PageReference</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">getParameters|getCookies|getHeaders|getContent|getUrl</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">HTTPRequest</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">getBody|getBodyAsBlob|getBodyDocument|getCompressed|getEndpoint|getHeader|getMethod</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <FunctionName>
                    <Value caseInsensitive="true">_soql_select</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Pattern>.*</Pattern>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">TextFunctions</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">_getSessionId</Value>
                </FunctionName>
                <Modifiers>
                    <Modifier>static</Modifier>
                </Modifiers>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">HTTPResponse</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">get.*</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">SelectOption</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">get.*</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">List</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">add|set</Pattern>
                </FunctionName>
                <Parameters>
                    <WildCard min="2" max="2"/>
                </Parameters>
                <ApplyTo implements="true" overrides="true" extends="false"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">List</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">get|remove</Pattern>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="false"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Map</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">put</Value>
                </FunctionName>
                <Parameters>
                    <WildCard min="2" max="2"/>
                </Parameters>
                <ApplyTo implements="true" overrides="true" extends="false"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Map</Value>
                </ClassName>
                <FunctionName>
                    <Pattern caseInsensitive="true">get|remove</Pattern>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="false"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Map</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">values</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="false"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="17.10">
                <NamespaceName>
                    <Value caseInsensitive="true">System</Value>
                </NamespaceName>
                <ClassName>
                    <Value caseInsensitive="true">Map</Value>
                </ClassName>
                <FunctionName>
                    <Value caseInsensitive="true">keySet</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="false"/>
            </FunctionIdentifier>
        </Coverage>
        <ScriptDefinitions/>
    </Rules>
    <Masks revision="0">
        <mask:Mask builtin="true" name="Targeted">
            <mask:Exclusion>
                <mask:Attribute name="inputsource" value="Database"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="Access Control"/>
                <mask:Attribute name="analyzer" value="structural"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="Access Control"/>
                <mask:Attribute name="subcategory" value="Database"/>
                <mask:Attribute name="analyzer" value="dataflow"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="Cross-Site Scripting"/>
                <mask:Attribute name="subcategory" value="Poor Validation"/>
                <mask:Attribute name="analyzer" value="dataflow"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="SOQL Injection"/>
                <mask:Attribute name="analyzer" value="semantic"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="SOSL Injection"/>
                <mask:Attribute name="analyzer" value="semantic"/>
            </mask:Exclusion>
            <mask:Description><![CDATA[This setting provides the source code analyzer with rules within categories that have been proven to be high priority issues across multiple industries and within a variety of environments.  They should be used to discover a limited set of well-known, critical security issues.]]></mask:Description>
        </mask:Mask>
        <mask:Mask builtin="true" default="true" name="Broad">
            <mask:Description><![CDATA[This setting provides the source code analyzer with the most comprehensive set of rules.  It should be used to discover a broad set of security issues to be audited.]]></mask:Description>
        </mask:Mask>
        <mask:Mask builtin="true" name="Medium">
            <mask:Exclusion>
                <mask:Attribute name="category" value="Access Control"/>
                <mask:Attribute name="analyzer" value="structural"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="Access Control"/>
                <mask:Attribute name="subcategory" value="Database"/>
                <mask:Attribute name="analyzer" value="dataflow"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="Cross-Site Scripting"/>
                <mask:Attribute name="subcategory" value="Poor Validation"/>
                <mask:Attribute name="analyzer" value="dataflow"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="SOQL Injection"/>
                <mask:Attribute name="analyzer" value="semantic"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="SOSL Injection"/>
                <mask:Attribute name="analyzer" value="semantic"/>
            </mask:Exclusion>
            <mask:Description><![CDATA[This setting provides the source code analyzer with rules that strike a balance between producing results that detail all potential issues and a targeted set of possible vulnerabilities.]]></mask:Description>
        </mask:Mask>
    </Masks>
    <Localization>
        <Mapping>
            <KeyString>Access Control</KeyString>
            <LocalString>Access Control</LocalString>
        </Mapping>
        <Mapping>
            <KeyString>SOQL Injection</KeyString>
            <LocalString>SOQL Injection</LocalString>
        </Mapping>
        <Mapping>
            <KeyString>SOSL Injection</KeyString>
            <LocalString>SOSL Injection</LocalString>
        </Mapping>
        <Mapping>
            <KeyString>Database</KeyString>
            <LocalString>Database</LocalString>
        </Mapping>
        <Mapping>
            <KeyString>Cross-Site Scripting</KeyString>
            <LocalString>Cross-Site Scripting</LocalString>
        </Mapping>
        <Mapping>
            <KeyString>Reflected</KeyString>
            <LocalString>Reflected</LocalString>
        </Mapping>
        <Mapping>
            <KeyString>Persistent</KeyString>
            <LocalString>Persistent</LocalString>
        </Mapping>
        <Mapping>
            <KeyString>Poor Validation</KeyString>
            <LocalString>Poor Validation</LocalString>
        </Mapping>
        <Mapping>
            <KeyString>Frame Spoofing</KeyString>
            <LocalString>Frame Spoofing</LocalString>
        </Mapping>
    </Localization>
    <ResolutionLibraries>
        <ResolutionLibrary formatVersion="17.10" language="apex" filename="CommonTypes">
            <Text><![CDATA[
@namespace('apex')
class emptystackexception { 
     emptystackexception( );
     emptystackexception( exception param1);
     emptystackexception( string param1);
     emptystackexception( string param1, exception param2);
    string gettypename( );

}
//////////////////////////////////////////

@namespace('apex')
class stack { 
     stack( );
    boolean empty( );

    string peek( );

    string pop( );

    void push( string item);

}
//////////////////////////////////////////

@namespace('apexpages')
class action { 
     action( string expression);
    string getexpression( );

    system.pagereference invoke( );

}
//////////////////////////////////////////

@namespace('apexpages')
class component { 
    list<apexpages.component> childcomponents { set; get; }
    any componentiterations { set; get; }
    string expressions { set; get; }
    string facets { set; get; }
    id id { set; get; }
    apexpages.component parent { set; get; }
    boolean rendered { set; get; }
    apexpages.component getcomponentbyid( string id);

}
//////////////////////////////////////////

@namespace('apexpages')
class componentiteration { 
    list<component> childcomponents;
    any iterationvalue;
    component parent;
    apexpages.component getcomponentbyid( string id);

}
//////////////////////////////////////////

@namespace('apexpages')
class ideastandardcontroller { 
    void addfields( list<string> fieldnames);

    system.pagereference cancel( );

    system.pagereference delete( );

    system.pagereference edit( );

    list<ideacomment> getcommentlist( );

    string getid( );

    sobject getrecord( );

    sobject getsubject( );

    void reset( );

    system.pagereference save( );

    system.pagereference view( );

}
//////////////////////////////////////////

@namespace('apexpages')
class ideastandardsetcontroller { 
    void addfields( list<string> fieldnames);

    system.pagereference cancel( );

    void first( );

    boolean getcompleteresult( );

    string getfilterid( );

    boolean gethasnext( );

    boolean gethasprevious( );

    list<idea> getidealist( );

    list<system.selectoption> getlistviewoptions( );

    integer getpagenumber( );

    integer getpagesize( );

    sobject getrecord( );

    list<sobject> getrecords( );

    integer getresultsize( );

    list<sobject> getselected( );

    void last( );

    void next( );

    void previous( );

    void reset( );

    system.pagereference save( );

    void setfilterid( string filterid);

    void setpagenumber( integer pagenumber);

    void setpagesize( integer pagesize);

    void setselected( list<sobject> selected);

}
//////////////////////////////////////////

@namespace('apexpages')
class knowledgearticleversionstandardcontroller { 
     knowledgearticleversionstandardcontroller( sobject param1);
    void addfields( list<string> fieldnames);

    system.pagereference cancel( );

    system.pagereference delete( );

    system.pagereference edit( );

    string getid( );

    sobject getrecord( );

    string getsourceid( );

    sobject getsubject( );

    void reset( );

    system.pagereference save( );

    void selectdatacategory( string categorygroup, string category);

    system.pagereference view( );

}
//////////////////////////////////////////

@namespace('apexpages')
class message { 
     message( apexpages.severity param1, string param2);
     message( apexpages.severity param1, string param2, string param3);
     message( apexpages.severity param1, string param2, string param3, string param4);
    string getcomponentlabel( );

    string getdetail( );

    apexpages.severity getseverity( );

    string getsummary( );

}
//////////////////////////////////////////

@namespace('apexpages')
enum severity { confirm, error, fatal, info, warning}
//////////////////////////////////////////

@namespace('apexpages')
class standardcontroller { 
     standardcontroller( sobject param1);
    void addfields( list<string> fieldnames);

    system.pagereference cancel( );

    system.pagereference delete( );

    system.pagereference edit( );

    string getid( );

    sobject getrecord( );

    sobject getsubject( );

    void reset( );

    system.pagereference save( );

    system.pagereference view( );

}
//////////////////////////////////////////

@namespace('apexpages')
class standardsetcontroller { 
     standardsetcontroller( database.querylocator param1);
     standardsetcontroller( list<sobject> param1);
    void addfields( list<string> fieldnames);

    system.pagereference cancel( );

    void first( );

    boolean getcompleteresult( );

    string getfilterid( );

    boolean gethasnext( );

    boolean gethasprevious( );

    list<system.selectoption> getlistviewoptions( );

    integer getpagenumber( );

    integer getpagesize( );

    sobject getrecord( );

    list<sobject> getrecords( );

    integer getresultsize( );

    list<sobject> getselected( );

    void last( );

    void next( );

    void previous( );

    void reset( );

    system.pagereference save( );

    void setfilterid( string filterid);

    void setpagenumber( integer pagenumber);

    void setpagesize( integer pagesize);

    void setselected( list<sobject> selected);

}
//////////////////////////////////////////

@namespace('applauncher')
class appmenu { 
     appmenu( );
    static void setappvisibility( id appmenuitemid, boolean isvisible);

    static void setorgsortorder( list<id> applicationids);

    static void setusersortorder( list<id> applicationids);

}
//////////////////////////////////////////

@namespace('approval')
class lockresult { 
    list<database.error> errors { set; get; }
    id id { set; get; }
    boolean success { set; get; }
    list<database.error> geterrors( );

    id getid( );

    boolean issuccess( );

}
//////////////////////////////////////////

@namespace('approval')
class processrequest { 
    string comments { set; get; }
    list<id> nextapproverids { set; get; }
    string getcomments( );

    list<id> getnextapproverids( );

    void setcomments( string param1);

    void setnextapproverids( list<id> param1);

}
//////////////////////////////////////////

@namespace('approval')
class processresult { 
    list<id> actorids { set; get; }
    string entityid { set; get; }
    list<database.error> errors { set; get; }
    string instanceid { set; get; }
    string instancestatus { set; get; }
    list<id> newworkitemids { set; get; }
    boolean success { set; get; }
    list<id> getactorids( );

    string getentityid( );

    list<database.error> geterrors( );

    string getinstanceid( );

    string getinstancestatus( );

    list<id> getnewworkitemids( );

    boolean issuccess( );

}
//////////////////////////////////////////

@namespace('approval')
class processsubmitrequest { 
    string objectid { set; get; }
    string processdefinitionnameorid { set; get; }
    boolean skipentrycriteria { set; get; }
    string submitterid { set; get; }
     processsubmitrequest( );
    string getcomments( );

    list<id> getnextapproverids( );

    string getobjectid( );

    string getprocessdefinitionnameorid( );

    boolean getskipentrycriteria( );

    string getsubmitterid( );

    void setcomments( string param1);

    void setnextapproverids( list<id> param1);

    void setobjectid( string param1);

    void setprocessdefinitionnameorid( string param1);

    void setskipentrycriteria( boolean param1);

    void setsubmitterid( string param1);

}
//////////////////////////////////////////

@namespace('approval')
class processworkitemrequest { 
    string action { set; get; }
    string workitemid { set; get; }
     processworkitemrequest( );
    string getaction( );

    string getcomments( );

    list<id> getnextapproverids( );

    string getworkitemid( );

    void setaction( string param1);

    void setcomments( string param1);

    void setnextapproverids( list<id> param1);

    void setworkitemid( string param1);

}
//////////////////////////////////////////

@namespace('approval')
class unlockresult { 
    list<database.error> errors { set; get; }
    id id { set; get; }
    boolean success { set; get; }
    list<database.error> geterrors( );

    id getid( );

    boolean issuccess( );

}
//////////////////////////////////////////

@namespace('auth')
class authconfiguration { 
     authconfiguration( string communityorcustomurl, string starturl);
     authconfiguration( id networkid, string starturl);
    boolean getallowinternaluserloginenabled( );

    authconfig getauthconfig( );

    list<authconfigproviders> getauthconfigproviders( );

    list<authprovider> getauthproviders( );

    static string getauthproviderssourl( string communityurl, string starturl, string developername);

    string getbackgroundcolor( );

    string getdefaultprofileforregistration( );

    string getfootertext( );

    string getforgotpasswordurl( );

    string getlogourl( );

    list<samlssoconfig> getsamlproviders( );

    static string getsamlssourl( string communityurl, string starturl, string samlid);

    boolean getselfregistrationenabled( );

    string getselfregistrationurl( );

    string getstarturl( );

    boolean getusernamepasswordenabled( );

    boolean iscommunityusingsiteascontainer( );

}
//////////////////////////////////////////

@namespace('auth')
class authprovidercallbackstate { 
    string body { set; get; }
    map<string,string> headers { set; get; }
    map<string,string> queryparameters { set; get; }
     authprovidercallbackstate( map<string,string> headers, string body, map<string,string> queryparameters);
}
//////////////////////////////////////////

@namespace('cache')
class cacheexception { 
     cacheexception( );
     cacheexception( exception param1);
     cacheexception( string msg);
     cacheexception( string param1, exception param2);
    string gettypename( );

}
//////////////////////////////////////////

@namespace('cache')
class invalidparamexception { 
     invalidparamexception( );
     invalidparamexception( exception param1);
     invalidparamexception( string param1);
     invalidparamexception( string param1, exception param2);
    string gettypename( );

}
//////////////////////////////////////////

@namespace('cache')
class itemsizelimitexceededexception { 
     itemsizelimitexceededexception( );
     itemsizelimitexceededexception( exception param1);
     itemsizelimitexceededexception( string param1);
     itemsizelimitexceededexception( string param1, exception param2);
    string gettypename( );

}
//////////////////////////////////////////

@namespace('cache')
class org { 
    static integer max_ttl_secs;
     org( );
    static list<boolean> contains( list<string> keys);

    static boolean contains( string key);

    static list<any> get( list<string> keys);

    static object get( string key);

    static double getcapacity( );

    static set<string> getkeys( );

    static string getname( );

    static cache.orgpartition getpartition( string partitionname);

    static void put( string key, object value);

    static void put( string key, object value, integer ttlsecs);

    static void put( string key, object value, integer ttlsecs, cache.visibility visibility, boolean immutable);

    static void put( string key, object value, cache.visibility visibility);

    static list<boolean> remove( list<string> keys);

    static boolean remove( string key);

}
//////////////////////////////////////////

@namespace('cache')
class orgcacheexception { 
     orgcacheexception( );
     orgcacheexception( exception param1);
     orgcacheexception( string msg);
     orgcacheexception( string param1, exception param2);
    string gettypename( );

}
//////////////////////////////////////////

@namespace('cache')
class orgpartition { 
     orgpartition( string fullyqualifiedpartitionname);
    boolean contains( string key);

    static string createfullyqualifiedkey( string namespace, string partition, string key);

    static string createfullyqualifiedpartition( string namespace, string partition);

    object get( string key);

    double getcapacity( );

    set<string> getkeys( );

    string getname( );

    boolean isavailable( );

    void put( string key, object value);

    void put( string key, object value, integer ttlsecs);

    void put( string key, object value, integer ttlsecs, cache.visibility visibility, boolean immutable);

    void put( string key, object value, cache.visibility visibility);

    boolean remove( string key);

    static void validatekey( boolean isdefault, string key);

    static void validatekeyvalue( boolean isdefault, string key, object value);

    static void validatekeys( boolean isdefault, list<string> keys);

    static void validatepartitionname( string name);

}
//////////////////////////////////////////

@namespace('cache')
class partition { 
     partition( );
    boolean contains( string key);

    static string createfullyqualifiedkey( string namespace, string partition, string key);

    static string createfullyqualifiedpartition( string namespace, string partition);

    object get( string key);

    double getcapacity( );

    set<string> getkeys( );

    string getname( );

    boolean isavailable( );

    void put( string key, object value);

    void put( string key, object value, integer ttlsecs);

    void put( string key, object value, integer ttlsecs, cache.visibility visibility, boolean immutable);

    void put( string key, object value, cache.visibility visibility);

    boolean remove( string key);

    static void validatekey( boolean isdefault, string key);

    static void validatekeyvalue( boolean isdefault, string key, object value);

    static void validatekeys( boolean isdefault, list<string> keys);

    static void validatepartitionname( string name);

}
//////////////////////////////////////////

@namespace('cache')
class platformcacheinvalidoperationexception { 
     platformcacheinvalidoperationexception( );
     platformcacheinvalidoperationexception( exception param1);
     platformcacheinvalidoperationexception( string param1);
     platformcacheinvalidoperationexception( string param1, exception param2);
    string gettypename( );

}
//////////////////////////////////////////

@namespace('cache')
class session { 
    static integer max_ttl_secs;
     session( );
    static boolean contains( string key);

    static object get( string key);

    static double getcapacity( );

    static set<string> getkeys( );

    static string getname( );

    static cache.sessionpartition getpartition( string partitionname);

    static boolean isavailable( );

    static void put( string key, object value);

    static void put( string key, object value, integer ttlsecs);

    static void put( string key, object value, integer ttlsecs, cache.visibility visibility, boolean immutable);

    static void put( string key, object value, cache.visibility visibility);

    static boolean remove( string key);

class sessioncacheexception { 
     sessioncacheexception( );
     sessioncacheexception( exception param1);
     sessioncacheexception( string msg);
     sessioncacheexception( string param1, exception param2);
    string gettypename( );

}
class sessioncachenosessionexception { 
     sessioncachenosessionexception( );
     sessioncachenosessionexception( exception param1);
     sessioncachenosessionexception( string msg);
     sessioncachenosessionexception( string param1, exception param2);
    string gettypename( );

}
}
//////////////////////////////////////////

@namespace('cache')
class sessionpartition { 
     sessionpartition( string fullyqualifiedpartitionname);
    boolean contains( string key);

    static string createfullyqualifiedkey( string namespace, string partition, string key);

    static string createfullyqualifiedpartition( string namespace, string partition);

    object get( string key);

    double getcapacity( );

    set<string> getkeys( );

    string getname( );

    boolean isavailable( );

    void put( string key, object value);

    void put( string key, object value, integer ttlsecs);

    void put( string key, object value, integer ttlsecs, cache.visibility visibility, boolean immutable);

    void put( string key, object value, cache.visibility visibility);

    boolean remove( string key);

    static void validatekey( boolean isdefault, string key);

    static void validatekeyvalue( boolean isdefault, string key, object value);

    static void validatekeys( boolean isdefault, list<string> keys);

    static void validatepartitionname( string name);

}
//////////////////////////////////////////

@namespace('cache')
enum visibility { all, namespace}
//////////////////////////////////////////

@namespace('canvas')
interface applicationcontext { 
    string getcanvasurl( );

    string getdevelopername( );

    string getname( );

    string getnamespace( );

    string getversion( );

    void setcanvasurlpath( string param1);

}
//////////////////////////////////////////

@namespace('canvas')
interface canvaslifecyclehandler { 
    set<canvas.contexttypeenum> excludecontexttypes( );

    void onrender( canvas.rendercontext param1);

}
//////////////////////////////////////////

@namespace('canvas')
class canvasrenderexception { 
     canvasrenderexception( );
     canvasrenderexception( exception param1);
     canvasrenderexception( string param1);
     canvasrenderexception( string param1, exception param2);
    string gettypename( );

}
//////////////////////////////////////////

@namespace('canvas')
enum contexttypeenum { organization, record_detail, user}
//////////////////////////////////////////

@namespace('canvas')
interface environmentcontext { 
    void addentityfield( string param1);

    void addentityfields( set<string> param1);

    string getdisplaylocation( );

    list<string> getentityfields( );

    string getlocationurl( );

    string getparametersasjson( );

    string getsublocation( );

    void setparametersasjson( string param1);

}
//////////////////////////////////////////

@namespace('canvas')
interface rendercontext { 
    canvas.applicationcontext getapplicationcontext( );

    canvas.environmentcontext getenvironmentcontext( );

}
//////////////////////////////////////////

@namespace('canvas')
class test { 
    static string key_canvas_url;
    static string key_developer_name;
    static string key_display_location;
    static string key_location_url;
    static string key_name;
    static string key_namespace;
    static string key_sub_location;
    static string key_version;
     test( );
    static canvas.rendercontext mockrendercontext( map<string,string> appcontexttestvalues, map<string,string> envcontexttestvalues);

    static void testcanvaslifecycle( canvas.canvaslifecyclehandler handler, canvas.rendercontext mockrendercontext);

}
//////////////////////////////////////////

@namespace('chatteranswers')
interface accountcreator { 
    string createaccount( string param1, string param2, id param3);

}
//////////////////////////////////////////

@namespace('connectapi')
class abstractmessagebody { 
    boolean isrichtext { set; get; }
    list<connectapi._7y_7ymessage_7ysegment> messagesegments { set; get; }
    string text { set; get; }
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class abstractrecommendation { 
    connectapi._7yrecommendation_7yexplanation explanation { set; get; }
    connectapi._7yrecommendationtype recommendationtype { set; get; }
    string url { set; get; }
    connectapi._7yplatformaction_7ygroup platformaction_7ygroup { set; get; }
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class abstractrecommendationexplanation { 
    string summary { set; get; }
    connectapi._7yrecommendation_7yexplanationtype type { set; get; }
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class abstractrecordfield { 
    string type { set; get; }
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class abstractrecordview extends connectapi.actorwithid { 
    string name { set; get; }
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class actionlinkdefinition { 
    string actionurl { set; get; }
    datetime createddate { set; get; }
    string excludeduserid { set; get; }
    boolean groupdefault { set; get; }
    list<connectapi._7yrequestheader> headers { set; get; }
    string id { set; get; }
    string label { set; get; }
    string labelkey { set; get; }
    connectapi._7yhttprequestmethod method { set; get; }
    datetime modifieddate { set; get; }
    string requestbody { set; get; }
    boolean requiresconfirmation { set; get; }
    string templateid { set; get; }
    connectapi._7yactionlinktype type { set; get; }
    string userid { set; get; }
     actionlinkdefinition( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class actionlinkdefinitioninput { 
    connectapi._7yactionlinktype actiontype { set; get; }
    string actionurl { set; get; }
    string excludeduserid { set; get; }
    boolean groupdefault { set; get; }
    list<connectapi._7yrequestheader_7yinput> headers { set; get; }
    string labelkey { set; get; }
    connectapi._7yhttprequest_7ymethod method { set; get; }
    string requestbody { set; get; }
    boolean requiresconfirmation { set; get; }
    string userid { set; get; }
     actionlinkdefinitioninput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class actionlinkdiagnosticinfo { 
    string diagnosticinfo { set; get; }
    string url { set; get; }
     actionlinkdiagnosticinfo( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum actionlinkexecutionsallowed { once, onceperuser, unlimited}
//////////////////////////////////////////

@namespace('connectapi')
class actionlinkgroupdefinition { 
    list<connectapi._7yactionlinkdefinition> actionlinks { set; get; }
    connectapi._7yplatformaction_7ygroupcategory category { set; get; }
    datetime createddate { set; get; }
    connectapi._7yactionlink_7yexecutionsallowed executionsallowed { set; get; }
    datetime expirationdate { set; get; }
    string id { set; get; }
    datetime modifieddate { set; get; }
    string templateid { set; get; }
    string url { set; get; }
     actionlinkgroupdefinition( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class actionlinkgroupdefinitioninput { 
    list<connectapi._7yactionlink_7ydefinitioninput> actionlinks { set; get; }
    connectapi._7yplatformaction_7ygroupcategory category { set; get; }
    connectapi._7yactionlink_7yexecutionsallowed executionsallowed { set; get; }
    datetime expirationdate { set; get; }
    list<connectapi._7yactionlinktemplate_7ybindinginput> templatebindings { set; get; }
    string templateid { set; get; }
     actionlinkgroupdefinitioninput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class actionlinks { 
    static connectapi.actionlinkgroupdefinition createactionlinkgroupdefinition( string communityid, connectapi.actionlinkgroupdefinitioninput actionlinkgroup);

    static void deleteactionlinkgroupdefinition( string communityid, string actionlinkgroupid);

    static connectapi.platformaction getactionlink( string communityid, string actionlinkid);

    static connectapi.actionlinkdiagnosticinfo getactionlinkdiagnosticinfo( string communityid, string actionlinkid);

    static connectapi.platformactiongroup getactionlinkgroup( string communityid, string actionlinkgroupid);

    static connectapi.actionlinkgroupdefinition getactionlinkgroupdefinition( string communityid, string actionlinkgroupid);

}
//////////////////////////////////////////

@namespace('connectapi')
class actionlinktemplatebindinginput { 
    string key { set; get; }
    string value { set; get; }
     actionlinktemplatebindinginput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum actionlinktype { api, apiasync, download, ui}
//////////////////////////////////////////

@namespace('connectapi')
class actor { 
    string name { set; get; }
    string type { set; get; }
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class actorwithid extends connectapi.actor { 
    string id { set; get; }
    connectapi._7ymotif motif { set; get; }
    connectapi._7y_7yreference mysubscription { set; get; }
    string recordviewurl { set; get; }
    string url { set; get; }
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class address { 
    string city { set; get; }
    string country { set; get; }
    string formattedaddress { set; get; }
    string state { set; get; }
    string street { set; get; }
    string zip { set; get; }
     address( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class announcement { 
    datetime expirationdate { set; get; }
    connectapi._7yfeedelement feedelement { set; get; }
    string id { set; get; }
    boolean isarchived { set; get; }
    boolean sendemails { set; get; }
    string url { set; get; }
     announcement( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class announcementinput { 
    connectapi._7ymessage_7y_7ybody_7yinput body { set; get; }
    datetime expirationdate { set; get; }
    string feeditemid { set; get; }
    boolean isarchived { set; get; }
    string parentid { set; get; }
    boolean sendemails { set; get; }
     announcementinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class announcementpage { 
    list<connectapi_7y.announcement> announcements { set; get; }
    string currentpageurl { set; get; }
    string nextpageurl { set; get; }
    string previouspageurl { set; get; }
     announcementpage( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class announcements { 
    static void deleteannouncement( string communityid, string announcementid);

    static connectapi.announcement getannouncement( string communityid, string announcementid);

    static connectapi.announcementpage getannouncements( string communityid, string parentid);

    static connectapi.announcementpage getannouncements( string communityid, string parentid, integer pageparam, integer pagesize);

    static connectapi.announcement postannouncement( string communityid, connectapi.announcementinput announcement);

    static connectapi.announcement updateannouncement( string communityid, string announcementid, datetime expirationdate);

}
//////////////////////////////////////////

@namespace('connectapi')
class approvalattachment { 
    string id { set; get; }
    list<connectapi._7yapproval_7ypost_7ytemplate_7yfield> posttemplatefields { set; get; }
    string processinstancestepid { set; get; }
    connectapi._7yworkflowprocess_7ystatus status { set; get; }
     approvalattachment( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class approvalcapability extends connectapi._7yfeedelement_7ycapability { 
    string id { set; get; }
    list<connectapi._7yapprovalpost_7ytemplatefield> posttemplatefields { set; get; }
    string processinstancestepid { set; get; }
    connectapi._7yworkflowprocess_7ystatus status { set; get; }
     approvalcapability( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class approvalposttemplatefield { 
    string displayname { set; get; }
    string displayvalue { set; get; }
    connectapi._7y_7yreference record { set; get; }
     approvalposttemplatefield( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class articleitem { 
    string id { set; get; }
    double rating { set; get; }
    string title { set; get; }
    string urllink { set; get; }
    integer viewcount { set; get; }
     articleitem( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class articlesummary extends connectapi.actorwithid { 
    string articletype { set; get; }
    datetime lastpublisheddate { set; get; }
    double rating { set; get; }
    string summary { set; get; }
    string title { set; get; }
    string urlname { set; get; }
    integer viewcount { set; get; }
}
//////////////////////////////////////////

@namespace('connectapi')
class associatedactionscapability { 
    list<connectapi._7yplatformactiongroup> platformactiongroups { set; get; }
     associatedactionscapability( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class associatedactionscapabilityinput { 
    list<string> actionlinkgroupids { set; get; }
     associatedactionscapabilityinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class audiencecriteria { 
    connectapi._7yrecommendationaudience_7ycriteriatype type { set; get; }
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class audiencecriteriainput { 
    connectapi._7yrecommendation_7yaudience_7ycriteriatype type { set; get; }
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion param1);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class bannercapability extends connectapi._7yfeedelement_7ycapability { 
    connectapi.motif motif { set; get; }
    connectapi.bannerstyle style { set; get; }
     bannercapability( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class bannerphoto { 
    string bannerphotourl { set; get; }
    string bannerphotoversionid { set; get; }
    string url { set; get; }
     bannerphoto( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class bannerphotoinput { 
    integer cropheight { set; get; }
    integer cropsize { set; get; }
    integer cropwidth { set; get; }
    integer cropx { set; get; }
    integer cropy { set; get; }
    string fileid { set; get; }
    integer versionnumber { set; get; }
     bannerphotoinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum bannerstyle { announcement}
//////////////////////////////////////////

@namespace('connectapi')
class basictemplateattachment extends connectapi.feeditemattachment { 
    string description { set; get; }
    connectapi.icon icon { set; get; }
    string linkrecordid { set; get; }
    string linkurl { set; get; }
    string subtype { set; get; }
    string title { set; get; }
     basictemplateattachment( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class batchinput { 
     batchinput( object input);
     batchinput( object input, connectapi.binaryinput binary);
     batchinput( object input, list<connectapi.binaryinput> binaries);
    list<connectapi.binaryinput> getbinaries( );

    object getinput( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class batchresult { 
    exception error { set; get; }
    string errormessage { set; get; }
    string errortypename { set; get; }
    boolean issuccess { set; get; }
    object result { set; get; }
     batchresult( object result, exception error);
    exception geterror( );

    string geterrormessage( );

    string geterrortypename( );

    object getresult( );

    boolean issuccess( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class binaryinput { 
     binaryinput( blob blobvalue, string contenttype, string filename);
    blob getblobvalue( );

    string getcontenttype( );

    string getfilename( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class blankrecordfield extends connectapi.abstractrecordfield { 
     blankrecordfield( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class bookmarkscapability extends connectapi.feedelementcapability { 
    boolean isbookmarkedbycurrentuser { set; get; }
     bookmarkscapability( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class bookmarkscapabilityinput { 
    boolean isbookmarkedbycurrentuser { set; get; }
     bookmarkscapabilityinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class bundlecapability extends connectapi.feedelementcapability { 
    connectapi.bundletype bundletype { set; get; }
    connectapi._7yfeedelement_7ypage page { set; get; }
    integer totalelements { set; get; }
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum bundletype { genericbundle, trackedchanges}
//////////////////////////////////////////

@namespace('connectapi')
class canvasattachmentinput extends connectapi.feeditemattachmentinput { 
    string description { set; get; }
    string developername { set; get; }
    string height { set; get; }
    string namespaceprefix { set; get; }
    string parameters { set; get; }
    string thumbnailurl { set; get; }
    string title { set; get; }
     canvasattachmentinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class canvascapability extends connectapi.feedelementcapability { 
    string description { set; get; }
    string developername { set; get; }
    string height { set; get; }
    connectapi.icon icon { set; get; }
    string namespaceprefix { set; get; }
    string parameters { set; get; }
    string thumbnailurl { set; get; }
    string title { set; get; }
     canvascapability( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class canvascapabilityinput extends connectapi.feedelementcapabilityinput { 
    string description { set; get; }
    string developername { set; get; }
    string height { set; get; }
    string namespaceprefix { set; get; }
    string parameters { set; get; }
    string thumbnailurl { set; get; }
    string title { set; get; }
     canvascapabilityinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class canvastemplateattachment extends connectapi.feeditemattachment { 
    string description { set; get; }
    string developername { set; get; }
    string height { set; get; }
    	connectapi.icon icon { set; get; }
    string namespaceprefix { set; get; }
    string parameters { set; get; }
    string thumbnailurl { set; get; }
    string title { set; get; }
     canvastemplateattachment( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum caseactortype { customer, customerservice}
//////////////////////////////////////////

@namespace('connectapi')
class casecomment extends connectapi.feeditemattachment { 
    connectapi._7ycaseactortype actortype { set; get; }
    connectapi._7yuser_7ysummary createdby { set; get; }
    datetime createddate { set; get; }
    connectapi.casecommenteventtype eventtype { set; get; }
    string id { set; get; }
    boolean published { set; get; }
    string text { set; get; }
     casecomment( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class casecommentcapability extends connectapi.feedelementcapability { 
    connectapi._7ycaseactortype actortype { set; get; }
    connectapi.actor createdby { set; get; }
    datetime createddate { set; get; }
    connectapi._7ycasecomment_7yeventtype eventtype { set; get; }
    string id { set; get; }
    boolean published { set; get; }
    string text { set; get; }
     casecommentcapability( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum casecommenteventtype { newinternal, newpublished, newpublishedbycustomer, publishexisting, publishexistingbycustomer, unpublishexistingbycustomer, unpublishexsiting}
//////////////////////////////////////////

@namespace('connectapi')
class chatter { 
    static void deletesubscription( string communityid, string subscriptionid);

    static connectapi.followerpage getfollowers( string communityid, string recordid);

    static connectapi.followerpage getfollowers( string communityid, string recordid, integer pageparam, integer pagesize);

    static connectapi.subscription getsubscription( string communityid, string subscriptionid);

}
//////////////////////////////////////////

@namespace('connectapi')
class chatteractivity { 
    integer commentcount { set; get; }
    integer commentreceivedcount { set; get; }
    integer likereceivedcount { set; get; }
    integer postcount { set; get; }
     chatteractivity( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class chatterconversation { 
    string conversationid { set; get; }
    string conversationurl { set; get; }
    list<connectapi._7yuser_7ysummary> members { set; get; }
    connectapi._7ychatter_7ymessagepage messages { set; get; }
    boolean read { set; get; }
     chatterconversation( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class chatterconversationpage { 
    list<connectapi._7ychatter_7yconversationsummary> conversations { set; get; }
    string currentpagetoken { set; get; }
    string currentpageurl { set; get; }
    string nextpagetoken { set; get; }
    string nextpageurl { set; get; }
     chatterconversationpage( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class chatterconversationsummary { 
    string id { set; get; }
    connectapi._7ychatter_7ymessage latestmessage { set; get; }
    list<connectapi._7yuser_7ysummary> members { set; get; }
    boolean read { set; get; }
    string url { set; get; }
     chatterconversationsummary( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class chatterfavorites { 
    static connectapi.feedfavorite addfavorite( string communityid, string subjectid, string searchtext);

    static connectapi.feedfavorite addrecordfavorite( string communityid, string subjectid, string targetid);

    static void deletefavorite( string communityid, string subjectid, string favoriteid);

    static connectapi.feedfavorite getfavorite( string communityid, string subjectid, string favoriteid);

    static connectapi.feedfavorites getfavorites( string communityid, string subjectid);

    static connectapi.feedelementpage getfeedelements( string communityid, string subjectid, string favoriteid);

    static connectapi.feedelementpage getfeedelements( string communityid, string subjectid, string favoriteid, integer recentcommentcount, integer elementsperbundle, string pageparam, integer pagesize, connectapi.feedsortorder sortparam);

    static connectapi.feedelementpage getfeedelements( string communityid, string subjectid, string favoriteid, string pageparam, integer pagesize, connectapi.feedsortorder sortparam);

    static connectapi.feeditempage getfeeditems( string communityid, string subjectid, string favoriteid);

    static connectapi.feeditempage getfeeditems( string communityid, string subjectid, string favoriteid, integer recentcommentcount, string pageparam, integer pagesize, connectapi.feedsortorder sortparam);

    static connectapi.feeditempage getfeeditems( string communityid, string subjectid, string favoriteid, string pageparam, integer pagesize, connectapi.feedsortorder sortparam);

    static void settestgetfeedelements( string communityid, string subjectid, string favoriteid, connectapi.feedelementpage result);

    static void settestgetfeedelements( string communityid, string subjectid, string favoriteid, integer recentcommentcount, integer elementsperbundle, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, connectapi.feedelementpage result);

    static void settestgetfeedelements( string communityid, string subjectid, string favoriteid, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, connectapi.feedelementpage result);

    static void settestgetfeeditems( string communityid, string subjectid, string favoriteid, connectapi.feeditempage result);

    static void settestgetfeeditems( string communityid, string subjectid, string favoriteid, integer recentcommentcount, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, connectapi.feeditempage result);

    static void settestgetfeeditems( string communityid, string subjectid, string favoriteid, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, connectapi.feeditempage result);

    static connectapi.feedfavorite updatefavorite( string communityid, string subjectid, string favoriteid, boolean updatelastviewdate);

}
//////////////////////////////////////////

@namespace('connectapi')
class chatterfeeds { 
    static void deletecomment( string communityid, string commentid);

    static void deletefeedelement( string communityid, string feedelementid);

    static void deletefeeditem( string communityid, string feeditemid);

    static void deletelike( string communityid, string likeid);

    static connectapi.comment getcomment( string communityid, string commentid);

    static connectapi.commentpage getcommentsforfeedelement( string communityid, string feedelementid);

    static connectapi.commentpage getcommentsforfeedelement( string communityid, string feedelementid, string pageparam, integer pagesize);

    static connectapi.commentpage getcommentsforfeeditem( string communityid, string feeditemid);

    static connectapi.commentpage getcommentsforfeeditem( string communityid, string feeditemid, string pageparam, integer pagesize);

    static connectapi.feed getfeed( string communityid, connectapi.feedtype feedtype);

    static connectapi.feed getfeed( string communityid, connectapi.feedtype feedtype, connectapi.feedsortorder sortparam);

    static connectapi.feed getfeed( string communityid, connectapi.feedtype feedtype, string subjectid);

    static connectapi.feed getfeed( string communityid, connectapi.feedtype feedtype, string subjectid, connectapi.feedsortorder sortparam);

    static connectapi.feeddirectory getfeeddirectory( string communityid);

    static connectapi.feedelement getfeedelement( string communityid, string feedelementid);

    static connectapi.feedelement getfeedelement( string communityid, string feedelementid, integer recentcommentcount, integer elementsperbundle);

    static list<connectapi.batchresult> getfeedelementbatch( string communityid, list<string> feedelementids);

    static connectapi.pollcapability getfeedelementpoll( string communityid, string feedelementid);

    static connectapi.feedelementpage getfeedelementsfrombundle( string communityid, string feedelementid);

    static connectapi.feedelementpage getfeedelementsfrombundle( string communityid, string feedelementid, string pageparam, integer pagesize, integer elementsperbundle, integer recentcommentcount);

    static connectapi.feedelementpage getfeedelementsfromfeed( string communityid, connectapi.feedtype feedtype);

    static connectapi.feedelementpage getfeedelementsfromfeed( string communityid, connectapi.feedtype feedtype, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam);

    static connectapi.feedelementpage getfeedelementsfromfeed( string communityid, connectapi.feedtype feedtype, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, connectapi.feedfilter filter);

    static connectapi.feedelementpage getfeedelementsfromfeed( string communityid, connectapi.feedtype feedtype, string pageparam, integer pagesize, connectapi.feedsortorder sortparam);

    static connectapi.feedelementpage getfeedelementsfromfeed( string communityid, connectapi.feedtype feedtype, string subjectid);

    static connectapi.feedelementpage getfeedelementsfromfeed( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam);

    static connectapi.feedelementpage getfeedelementsfromfeed( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, boolean showinternalonly);

    static connectapi.feedelementpage getfeedelementsfromfeed( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, connectapi.feedfilter filter);

    static connectapi.feedelementpage getfeedelementsfromfeed( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, integer elementsperbundle, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, boolean showinternalonly);

    static connectapi.feedelementpage getfeedelementsfromfeed( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, integer elementsperbundle, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, boolean showinternalonly, connectapi.feedfilter filter);

    static connectapi.feedelementpage getfeedelementsfromfeed( string communityid, connectapi.feedtype feedtype, string subjectid, string pageparam, integer pagesize, connectapi.feedsortorder sortparam);

    static connectapi.feedelementpage getfeedelementsfromfilterfeed( string communityid, string subjectid, string keyprefix);

    static connectapi.feedelementpage getfeedelementsfromfilterfeed( string communityid, string subjectid, string keyprefix, integer recentcommentcount, integer elementsperbundle, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam);

    static connectapi.feedelementpage getfeedelementsfromfilterfeed( string communityid, string subjectid, string keyprefix, string pageparam, integer pagesize, connectapi.feedsortorder sortparam);

    static connectapi.feedelementpage getfeedelementsfromfilterfeedupdatedsince( string communityid, string subjectid, string keyprefix, integer recentcommentcount, integer elementsperbundle, connectapi.feeddensity density, string pageparam, integer pagesize, string updatedsince);

    static connectapi.feedelementpage getfeedelementsupdatedsince( string communityid, connectapi.feedtype feedtype, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, string updatedsince);

    static connectapi.feedelementpage getfeedelementsupdatedsince( string communityid, connectapi.feedtype feedtype, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, string updatedsince, connectapi.feedfilter filter);

    static connectapi.feedelementpage getfeedelementsupdatedsince( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, string updatedsince);

    static connectapi.feedelementpage getfeedelementsupdatedsince( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, string updatedsince, boolean showinternalonly);

    static connectapi.feedelementpage getfeedelementsupdatedsince( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, integer elementsperbundle, connectapi.feeddensity density, string pageparam, integer pagesize, string updatedsince, boolean showinternalonly);

    static connectapi.feedelementpage getfeedelementsupdatedsince( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, integer elementsperbundle, connectapi.feeddensity density, string pageparam, integer pagesize, string updatedsince, boolean showinternalonly, connectapi.feedfilter filter);

    static connectapi.feedelementpage getfeedelementsupdatedsince( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, integer elementsperbundle, connectapi.feeddensity density, string pageparam, integer pagesize, string updatedsince, connectapi.feedfilter filter);

    static connectapi.feeditem getfeeditem( string communityid, string feeditemid);

    static list<connectapi.batchresult> getfeeditembatch( string communityid, list<string> feeditemids);

    static connectapi.feeditempage getfeeditemsfromfeed( string communityid, connectapi.feedtype feedtype);

    static connectapi.feeditempage getfeeditemsfromfeed( string communityid, connectapi.feedtype feedtype, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam);

    static connectapi.feeditempage getfeeditemsfromfeed( string communityid, connectapi.feedtype feedtype, string pageparam, integer pagesize, connectapi.feedsortorder sortparam);

    static connectapi.feeditempage getfeeditemsfromfeed( string communityid, connectapi.feedtype feedtype, string subjectid);

    static connectapi.feeditempage getfeeditemsfromfeed( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam);

    static connectapi.feeditempage getfeeditemsfromfeed( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, boolean showinternalonly);

    static connectapi.feeditempage getfeeditemsfromfeed( string communityid, connectapi.feedtype feedtype, string subjectid, string pageparam, integer pagesize, connectapi.feedsortorder sortparam);

    static connectapi.feeditempage getfeeditemsfromfilterfeed( string communityid, string subjectid, string keyprefix);

    static connectapi.feeditempage getfeeditemsfromfilterfeed( string communityid, string subjectid, string keyprefix, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam);

    static connectapi.feeditempage getfeeditemsfromfilterfeed( string communityid, string subjectid, string keyprefix, string pageparam, integer pagesize, connectapi.feedsortorder sortparam);

    static connectapi.feeditempage getfeeditemsfromfilterfeedupdatedsince( string communityid, string subjectid, string keyprefix, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, string updatedsince);

    static connectapi.feeditempage getfeeditemsupdatedsince( string communityid, connectapi.feedtype feedtype, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, string updatedsince);

    static connectapi.feeditempage getfeeditemsupdatedsince( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, string updatedsince);

    static connectapi.feeditempage getfeeditemsupdatedsince( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, string updatedsince, boolean showinternalonly);

    static connectapi.feedpoll getfeedpoll( string communityid, string feeditemid);

    static connectapi.feed getfilterfeed( string communityid, string subjectid, string keyprefix);

    static connectapi.feed getfilterfeed( string communityid, string subjectid, string keyprefix, connectapi.feedsortorder sortparam);

    static connectapi.feeddirectory getfilterfeeddirectory( string communityid, string subjectid);

    static connectapi.chatterlike getlike( string communityid, string likeid);

    static connectapi.chatterlikepage getlikesforcomment( string communityid, string commentid);

    static connectapi.chatterlikepage getlikesforcomment( string communityid, string commentid, integer pageparam, integer pagesize);

    static connectapi.chatterlikepage getlikesforfeedelement( string communityid, string feedelementid);

    static connectapi.chatterlikepage getlikesforfeedelement( string communityid, string feedelementid, integer pageparam, integer pagesize);

    static connectapi.chatterlikepage getlikesforfeeditem( string communityid, string feeditemid);

    static connectapi.chatterlikepage getlikesforfeeditem( string communityid, string feeditemid, integer pageparam, integer pagesize);

    static connectapi.feedentityiseditable iscommenteditablebyme( string communityid, string commentid);

    static connectapi.feedentityiseditable isfeedelementeditablebyme( string communityid, string feedelementid);

    static connectapi.feedmodifiedinfo ismodified( string communityid, connectapi.feedtype feedtype, string subjectid, string since);

    static connectapi.chatterlike likecomment( string communityid, string commentid);

    static connectapi.chatterlike likefeedelement( string communityid, string feedelementid);

    static connectapi.chatterlike likefeeditem( string communityid, string feeditemid);

    static connectapi.comment postcomment( string communityid, string feeditemid, connectapi.commentinput comment, connectapi.binaryinput feeditemfileupload);

    static connectapi.comment postcomment( string communityid, string feeditemid, string text);

    static connectapi.comment postcommenttofeedelement( string communityid, string feedelementid, connectapi.commentinput comment, connectapi.binaryinput feedelementfileupload);

    static connectapi.comment postcommenttofeedelement( string communityid, string feedelementid, string text);

    static connectapi.feedelement postfeedelement( string communityid, connectapi.feedelementinput feedelement);

    static connectapi.feedelement postfeedelement( string communityid, connectapi.feedelementinput feedelement, connectapi.binaryinput feedelementfileupload);

    static connectapi.feedelement postfeedelement( string communityid, string subjectid, connectapi.feedelementtype feedelementtype, string text);

    static list<connectapi.batchresult> postfeedelementbatch( string communityid, list<connectapi.batchinput> feedelements);

    static connectapi.feeditem postfeeditem( string communityid, connectapi.feedtype feedtype, string subjectid, connectapi.feediteminput feeditem, connectapi.binaryinput feeditemfileupload);

    static connectapi.feeditem postfeeditem( string communityid, connectapi.feedtype feedtype, string subjectid, string text);

    static connectapi.feedelementpage searchfeedelements( string communityid, string q);

    static connectapi.feedelementpage searchfeedelements( string communityid, string q, connectapi.feedsortorder sortparam);

    static connectapi.feedelementpage searchfeedelements( string communityid, string q, integer recentcommentcount, string pageparam, integer pagesize, connectapi.feedsortorder sortparam);

    static connectapi.feedelementpage searchfeedelements( string communityid, string q, string pageparam, integer pagesize);

    static connectapi.feedelementpage searchfeedelements( string communityid, string q, string pageparam, integer pagesize, connectapi.feedsortorder sortparam);

    static connectapi.feedelementpage searchfeedelementsinfeed( string communityid, connectapi.feedtype feedtype, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, string q);

    static connectapi.feedelementpage searchfeedelementsinfeed( string communityid, connectapi.feedtype feedtype, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, string q, connectapi.feedfilter filter);

    static connectapi.feedelementpage searchfeedelementsinfeed( string communityid, connectapi.feedtype feedtype, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, string q);

    static connectapi.feedelementpage searchfeedelementsinfeed( string communityid, connectapi.feedtype feedtype, string q);

    static connectapi.feedelementpage searchfeedelementsinfeed( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, string q);

    static connectapi.feedelementpage searchfeedelementsinfeed( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, string q, boolean showinternalonly);

    static connectapi.feedelementpage searchfeedelementsinfeed( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, string q, boolean showinternalonly, connectapi.feedfilter filter);

    static connectapi.feedelementpage searchfeedelementsinfeed( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, string q, connectapi.feedfilter filter);

    static connectapi.feedelementpage searchfeedelementsinfeed( string communityid, connectapi.feedtype feedtype, string subjectid, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, string q);

    static connectapi.feedelementpage searchfeedelementsinfeed( string communityid, connectapi.feedtype feedtype, string subjectid, string q);

    static connectapi.feedelementpage searchfeedelementsinfilterfeed( string communityid, string subjectid, string keyprefix, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, string q);

    static connectapi.feedelementpage searchfeedelementsinfilterfeed( string communityid, string subjectid, string keyprefix, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, string q);

    static connectapi.feedelementpage searchfeedelementsinfilterfeed( string communityid, string subjectid, string keyprefix, string q);

    static connectapi.feeditempage searchfeeditems( string communityid, string q);

    static connectapi.feeditempage searchfeeditems( string communityid, string q, connectapi.feedsortorder sortparam);

    static connectapi.feeditempage searchfeeditems( string communityid, string q, integer recentcommentcount, string pageparam, integer pagesize, connectapi.feedsortorder sortparam);

    static connectapi.feeditempage searchfeeditems( string communityid, string q, string pageparam, integer pagesize);

    static connectapi.feeditempage searchfeeditems( string communityid, string q, string pageparam, integer pagesize, connectapi.feedsortorder sortparam);

    static connectapi.feeditempage searchfeeditemsinfeed( string communityid, connectapi.feedtype feedtype, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, string q);

    static connectapi.feeditempage searchfeeditemsinfeed( string communityid, connectapi.feedtype feedtype, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, string q);

    static connectapi.feeditempage searchfeeditemsinfeed( string communityid, connectapi.feedtype feedtype, string q);

    static connectapi.feeditempage searchfeeditemsinfeed( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, string q);

    static connectapi.feeditempage searchfeeditemsinfeed( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, string q, boolean showinternalonly);

    static connectapi.feeditempage searchfeeditemsinfeed( string communityid, connectapi.feedtype feedtype, string subjectid, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, string q);

    static connectapi.feeditempage searchfeeditemsinfeed( string communityid, connectapi.feedtype feedtype, string subjectid, string q);

    static connectapi.feeditempage searchfeeditemsinfilterfeed( string communityid, string subjectid, string keyprefix, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, string q);

    static connectapi.feeditempage searchfeeditemsinfilterfeed( string communityid, string subjectid, string keyprefix, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, string q);

    static connectapi.feeditempage searchfeeditemsinfilterfeed( string communityid, string subjectid, string keyprefix, string q);

    static connectapi.mutecapability setismutedbyme( string communityid, string feedelementid, boolean ismutedbyme);

    static void settestgetfeedelementsfromfeed( string communityid, connectapi.feedtype feedtype, connectapi.feedelementpage result);

    static void settestgetfeedelementsfromfeed( string communityid, connectapi.feedtype feedtype, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, connectapi.feedelementpage result);

    static void settestgetfeedelementsfromfeed( string communityid, connectapi.feedtype feedtype, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, connectapi.feedfilter filter, connectapi.feedelementpage result);

    static void settestgetfeedelementsfromfeed( string communityid, connectapi.feedtype feedtype, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, connectapi.feedelementpage result);

    static void settestgetfeedelementsfromfeed( string communityid, connectapi.feedtype feedtype, string subjectid, connectapi.feedelementpage result);

    static void settestgetfeedelementsfromfeed( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, boolean showinternalonly, connectapi.feedelementpage result);

    static void settestgetfeedelementsfromfeed( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, connectapi.feedelementpage result);

    static void settestgetfeedelementsfromfeed( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, connectapi.feedfilter filter, connectapi.feedelementpage result);

    static void settestgetfeedelementsfromfeed( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, integer elementsperbundle, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, boolean showinternalonly, connectapi.feedelementpage result);

    static void settestgetfeedelementsfromfeed( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, integer elementsperbundle, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, boolean showinternalonly, connectapi.feedfilter filter, connectapi.feedelementpage result);

    static void settestgetfeedelementsfromfeed( string communityid, connectapi.feedtype feedtype, string subjectid, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, connectapi.feedelementpage result);

    static void settestgetfeedelementsfromfilterfeed( string communityid, string subjectid, string keyprefix, connectapi.feedelementpage result);

    static void settestgetfeedelementsfromfilterfeed( string communityid, string subjectid, string keyprefix, integer recentcommentcount, integer elementsperbundle, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, connectapi.feedelementpage result);

    static void settestgetfeedelementsfromfilterfeed( string communityid, string subjectid, string keyprefix, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, connectapi.feedelementpage result);

    static void settestgetfeedelementsfromfilterfeedupdatedsince( string communityid, string subjectid, string keyprefix, integer recentcommentcount, integer elementsperbundle, connectapi.feeddensity density, string pageparam, integer pagesize, string updatedsince, connectapi.feedelementpage result);

    static void settestgetfeedelementsupdatedsince( string communityid, connectapi.feedtype feedtype, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, string updatedsince, connectapi.feedelementpage result);

    static void settestgetfeedelementsupdatedsince( string communityid, connectapi.feedtype feedtype, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, string updatedsince, connectapi.feedfilter filter, connectapi.feedelementpage result);

    static void settestgetfeedelementsupdatedsince( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, string updatedsince, boolean showinternalonly, connectapi.feedelementpage result);

    static void settestgetfeedelementsupdatedsince( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, string updatedsince, connectapi.feedelementpage result);

    static void settestgetfeedelementsupdatedsince( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, integer elementsperbundle, connectapi.feeddensity density, string pageparam, integer pagesize, string updatedsince, boolean showinternalonly, connectapi.feedelementpage result);

    static void settestgetfeedelementsupdatedsince( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, integer elementsperbundle, connectapi.feeddensity density, string pageparam, integer pagesize, string updatedsince, boolean showinternalonly, connectapi.feedfilter filter, connectapi.feedelementpage result);

    static void settestgetfeedelementsupdatedsince( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, integer elementsperbundle, connectapi.feeddensity density, string pageparam, integer pagesize, string updatedsince, connectapi.feedfilter filter, connectapi.feedelementpage result);

    static void settestgetfeeditemsfromfeed( string communityid, connectapi.feedtype feedtype, connectapi.feeditempage result);

    static void settestgetfeeditemsfromfeed( string communityid, connectapi.feedtype feedtype, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, connectapi.feeditempage result);

    static void settestgetfeeditemsfromfeed( string communityid, connectapi.feedtype feedtype, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, connectapi.feeditempage result);

    static void settestgetfeeditemsfromfeed( string communityid, connectapi.feedtype feedtype, string subjectid, connectapi.feeditempage result);

    static void settestgetfeeditemsfromfeed( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, boolean showinternalonly, connectapi.feeditempage result);

    static void settestgetfeeditemsfromfeed( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, connectapi.feeditempage result);

    static void settestgetfeeditemsfromfeed( string communityid, connectapi.feedtype feedtype, string subjectid, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, connectapi.feeditempage result);

    static void settestgetfeeditemsfromfilterfeed( string communityid, string subjectid, string keyprefix, connectapi.feeditempage result);

    static void settestgetfeeditemsfromfilterfeed( string communityid, string subjectid, string keyprefix, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, connectapi.feeditempage result);

    static void settestgetfeeditemsfromfilterfeed( string communityid, string subjectid, string keyprefix, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, connectapi.feeditempage result);

    static void settestgetfeeditemsfromfilterfeedupdatedsince( string communityid, string subjectid, string keyprefix, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, string updatedsince, connectapi.feeditempage result);

    static void settestgetfeeditemsupdatedsince( string communityid, connectapi.feedtype feedtype, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, string updatedsince, connectapi.feeditempage result);

    static void settestgetfeeditemsupdatedsince( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, string updatedsince, boolean showinternalonly, connectapi.feeditempage result);

    static void settestgetfeeditemsupdatedsince( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, string updatedsince, connectapi.feeditempage result);

    static void settestsearchfeedelements( string communityid, string q, connectapi.feedelementpage result);

    static void settestsearchfeedelements( string communityid, string q, connectapi.feedsortorder sortparam, connectapi.feedelementpage result);

    static void settestsearchfeedelements( string communityid, string q, integer recentcommentcount, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, connectapi.feedelementpage result);

    static void settestsearchfeedelements( string communityid, string q, string pageparam, integer pagesize, connectapi.feedelementpage result);

    static void settestsearchfeedelements( string communityid, string q, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, connectapi.feedelementpage result);

    static void settestsearchfeedelementsinfeed( string communityid, connectapi.feedtype feedtype, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, string q, connectapi.feedelementpage result);

    static void settestsearchfeedelementsinfeed( string communityid, connectapi.feedtype feedtype, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, string q, connectapi.feedfilter filter, connectapi.feedelementpage result);

    static void settestsearchfeedelementsinfeed( string communityid, connectapi.feedtype feedtype, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, string q, connectapi.feedelementpage result);

    static void settestsearchfeedelementsinfeed( string communityid, connectapi.feedtype feedtype, string q, connectapi.feedelementpage result);

    static void settestsearchfeedelementsinfeed( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, string q, boolean showinternalonly, connectapi.feedelementpage result);

    static void settestsearchfeedelementsinfeed( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, string q, boolean showinternalonly, connectapi.feedfilter filter, connectapi.feedelementpage result);

    static void settestsearchfeedelementsinfeed( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, string q, connectapi.feedelementpage result);

    static void settestsearchfeedelementsinfeed( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, string q, connectapi.feedfilter filter, connectapi.feedelementpage result);

    static void settestsearchfeedelementsinfeed( string communityid, connectapi.feedtype feedtype, string subjectid, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, string q, connectapi.feedelementpage result);

    static void settestsearchfeedelementsinfeed( string communityid, connectapi.feedtype feedtype, string subjectid, string q, connectapi.feedelementpage result);

    static void settestsearchfeedelementsinfilterfeed( string communityid, string subjectid, string keyprefix, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, string q, connectapi.feedelementpage result);

    static void settestsearchfeedelementsinfilterfeed( string communityid, string subjectid, string keyprefix, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, string q, connectapi.feedelementpage result);

    static void settestsearchfeedelementsinfilterfeed( string communityid, string subjectid, string keyprefix, string q, connectapi.feedelementpage result);

    static void settestsearchfeeditems( string communityid, string q, connectapi.feeditempage result);

    static void settestsearchfeeditems( string communityid, string q, connectapi.feedsortorder sortparam, connectapi.feeditempage result);

    static void settestsearchfeeditems( string communityid, string q, integer recentcommentcount, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, connectapi.feeditempage result);

    static void settestsearchfeeditems( string communityid, string q, string pageparam, integer pagesize, connectapi.feeditempage result);

    static void settestsearchfeeditems( string communityid, string q, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, connectapi.feeditempage result);

    static void settestsearchfeeditemsinfeed( string communityid, connectapi.feedtype feedtype, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, string q, connectapi.feeditempage result);

    static void settestsearchfeeditemsinfeed( string communityid, connectapi.feedtype feedtype, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, string q, connectapi.feeditempage result);

    static void settestsearchfeeditemsinfeed( string communityid, connectapi.feedtype feedtype, string q, connectapi.feeditempage result);

    static void settestsearchfeeditemsinfeed( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, string q, boolean showinternalonly, connectapi.feeditempage result);

    static void settestsearchfeeditemsinfeed( string communityid, connectapi.feedtype feedtype, string subjectid, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, string q, connectapi.feeditempage result);

    static void settestsearchfeeditemsinfeed( string communityid, connectapi.feedtype feedtype, string subjectid, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, string q, connectapi.feeditempage result);

    static void settestsearchfeeditemsinfeed( string communityid, connectapi.feedtype feedtype, string subjectid, string q, connectapi.feeditempage result);

    static void settestsearchfeeditemsinfilterfeed( string communityid, string subjectid, string keyprefix, integer recentcommentcount, connectapi.feeddensity density, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, string q, connectapi.feeditempage result);

    static void settestsearchfeeditemsinfilterfeed( string communityid, string subjectid, string keyprefix, string pageparam, integer pagesize, connectapi.feedsortorder sortparam, string q, connectapi.feeditempage result);

    static void settestsearchfeeditemsinfilterfeed( string communityid, string subjectid, string keyprefix, string q, connectapi.feeditempage result);

    static connectapi.feedelement sharefeedelement( string communityid, string subjectid, connectapi.feedelementtype feedelementtype, string originalfeedelementid);

    static connectapi.feeditem sharefeeditem( string communityid, connectapi.feedtype feedtype, string subjectid, string originalfeeditemid);

    static connectapi.feeditem updatebookmark( string communityid, string feeditemid, boolean isbookmarkedbycurrentuser);

    static connectapi.comment updatecomment( string communityid, string commentid, connectapi.commentinput comment);

    static connectapi.feedelement updatefeedelement( string communityid, string feedelementid, connectapi.feedelementinput feedelement);

    static connectapi.bookmarkscapability updatefeedelementbookmarks( string communityid, string feedelementid, boolean isbookmarkedbycurrentuser);

    static connectapi.bookmarkscapability updatefeedelementbookmarks( string communityid, string feedelementid, connectapi.bookmarkscapabilityinput bookmarks);

    static connectapi.pollcapability voteonfeedelementpoll( string communityid, string feedelementid, string mychoiceid);

    static connectapi.feedpoll voteonfeedpoll( string communityid, string feeditemid, string mychoiceid);

}
//////////////////////////////////////////

@namespace('connectapi')
class chattergroup extends connectapi.actorwithid { 
    string additionallabel { set; get; }
    connectapi._7yannouncement announcement { set; get; }
    connectapi._7ybannerphoto bannerphoto { set; get; }
    boolean canhavechatterguests { set; get; }
    connectapi._7y_7yreference community { set; get; }
    string description { set; get; }
    string emailtochatteraddress { set; get; }
    boolean isarchived { set; get; }
    boolean isautoarchivedisabled { set; get; }
    boolean isbroadcast { set; get; }
    datetime lastfeedelementpostdate { set; get; }
    datetime lastfeeditempostdate { set; get; }
    integer membercount { set; get; }
    connectapi._7ygroupmembership_7ytype myrole { set; get; }
    connectapi._7y_7yreference mysubscription { set; get; }
    string name { set; get; }
    string owner { set; get; }
    connectapi.photo photo { set; get; }
    connectapi._7ygroupvisibility_7ytype visibility { set; get; }
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class chattergroupdetail extends connectapi.chattergroup { 
    integer filecount { set; get; }
    connectapi._7ygroup_7yinformation information { set; get; }
    integer pendingrequests { set; get; }
     chattergroupdetail( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class chattergroupinput { 
    string announcement { set; get; }
    boolean canhavechatterguests { set; get; }
    string description { set; get; }
    connectapi._7ygroup_7yinformation_7yinput information { set; get; }
    boolean isarchived { set; get; }
    boolean isautoarchivedisabled { set; get; }
    boolean isbroadcast { set; get; }
    string name { set; get; }
    string owner { set; get; }
    connectapi._7ygroupvisibilitytype visibility { set; get; }
     chattergroupinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class chattergrouppage { 
    string currentpageurl { set; get; }
    list<connectapi._7ychatter_7ygroup_7ydetail> groups { set; get; }
    string nextpageurl { set; get; }
    string previouspageurl { set; get; }
     chattergrouppage( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class chattergroups { 
    static connectapi.groupmember addmember( string communityid, string groupid, string userid);

    static connectapi.groupmember addmemberwithrole( string communityid, string groupid, string userid, connectapi.groupmembershiptype role);

    static connectapi.grouprecord addrecord( string communityid, string groupid, string recordid);

    static connectapi.chattergroupdetail creategroup( string communityid, connectapi.chattergroupinput groupinput);

    static void deletebannerphoto( string communityid, string groupid);

    static void deletegroup( string communityid, string groupid);

    static void deletemember( string communityid, string membershipid);

    static void deletephoto( string communityid, string groupid);

    static connectapi.subscription follow( string communityid, string groupid, string subjectid);

    static connectapi.announcementpage getannouncements( string communityid, string groupid);

    static connectapi.announcementpage getannouncements( string communityid, string groupid, integer pageparam, integer pagesize);

    static connectapi.bannerphoto getbannerphoto( string communityid, string groupid);

    static connectapi.followingpage getfollowings( string communityid, string groupid);

    static connectapi.followingpage getfollowings( string communityid, string groupid, integer pageparam);

    static connectapi.followingpage getfollowings( string communityid, string groupid, integer pageparam, integer pagesize);

    static connectapi.followingpage getfollowings( string communityid, string groupid, string filtertype);

    static connectapi.followingpage getfollowings( string communityid, string groupid, string filtertype, integer pageparam);

    static connectapi.followingpage getfollowings( string communityid, string groupid, string filtertype, integer pageparam, integer pagesize);

    static connectapi.chattergroupdetail getgroup( string communityid, string groupid);

    static list<connectapi.batchresult> getgroupbatch( string communityid, list<string> groupids);

    static connectapi.groupmembershiprequest getgroupmembershiprequest( string communityid, string requestid);

    static connectapi.groupmembershiprequests getgroupmembershiprequests( string communityid, string groupid);

    static connectapi.groupmembershiprequests getgroupmembershiprequests( string communityid, string groupid, connectapi.groupmembershiprequeststatus status);

    static connectapi.chattergrouppage getgroups( string communityid);

    static connectapi.chattergrouppage getgroups( string communityid, connectapi.grouparchivestatus archivestatus, integer pageparam, integer pagesize);

    static connectapi.chattergrouppage getgroups( string communityid, integer pageparam, integer pagesize);

    static connectapi.groupmember getmember( string communityid, string membershipid);

    static connectapi.groupmemberpage getmembers( string communityid, string groupid);

    static connectapi.groupmemberpage getmembers( string communityid, string groupid, integer pageparam, integer pagesize);

    static list<connectapi.batchresult> getmembershipbatch( string communityid, list<string> membershipids);

    static connectapi.groupchattersettings getmychattersettings( string communityid, string groupid);

    static connectapi.photo getphoto( string communityid, string groupid);

    static connectapi.grouprecord getrecord( string communityid, string grouprecordid);

    static connectapi.grouprecordpage getrecords( string communityid, string groupid);

    static connectapi.grouprecordpage getrecords( string communityid, string groupid, integer pageparam, integer pagesize);

    static connectapi.announcement postannouncement( string communityid, string groupid, connectapi.announcementinput announcement);

    static void removerecord( string communityid, string grouprecordid);

    static connectapi.groupmembershiprequest requestgroupmembership( string communityid, string groupid);

    static connectapi.chattergrouppage searchgroups( string communityid, string q);

    static connectapi.chattergrouppage searchgroups( string communityid, string q, connectapi.grouparchivestatus archivestatus, integer pageparam, integer pagesize);

    static connectapi.chattergrouppage searchgroups( string communityid, string q, integer pageparam, integer pagesize);

    static connectapi.bannerphoto setbannerphoto( string communityid, string groupid, connectapi.binaryinput fileupload);

    static connectapi.bannerphoto setbannerphoto( string communityid, string groupid, string fileid, integer versionnumber);

    static connectapi.bannerphoto setbannerphotowithattributes( string communityid, string groupid, connectapi.bannerphotoinput bannerphoto);

    static connectapi.bannerphoto setbannerphotowithattributes( string communityid, string groupid, connectapi.bannerphotoinput bannerphoto, connectapi.binaryinput fileupload);

    static connectapi.photo setphoto( string communityid, string groupid, connectapi.binaryinput fileupload);

    static connectapi.photo setphoto( string communityid, string groupid, string fileid, integer versionnumber);

    static connectapi.photo setphotowithattributes( string communityid, string groupid, connectapi.photoinput photo);

    static connectapi.photo setphotowithattributes( string communityid, string groupid, connectapi.photoinput photo, connectapi.binaryinput fileupload);

    static void settestsearchgroups( string communityid, string q, connectapi.chattergrouppage result);

    static void settestsearchgroups( string communityid, string q, connectapi.grouparchivestatus archivestatus, integer pageparam, integer pagesize, connectapi.chattergrouppage result);

    static void settestsearchgroups( string communityid, string q, integer pageparam, integer pagesize, connectapi.chattergrouppage result);

    static connectapi.chattergroupdetail updategroup( string communityid, string groupid, connectapi.chattergroupinput groupinput);

    static connectapi.groupmember updategroupmember( string communityid, string membershipid, connectapi.groupmembershiptype role);

    static connectapi.groupchattersettings updatemychattersettings( string communityid, string groupid, connectapi.groupemailfrequency emailfrequency);

    static connectapi.groupmembershiprequest updaterequeststatus( string communityid, string requestid, connectapi.groupmembershiprequeststatus status);

    static connectapi.groupmembershiprequest updaterequeststatus( string communityid, string requestid, connectapi.groupmembershiprequeststatus status, string responsemessage);

}
//////////////////////////////////////////

@namespace('connectapi')
class chattergroupsummary extends connectapi.chattergroup { 
    integer filecount { set; get; }
     chattergroupsummary( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class chattergroupsummarypage { 
    string currentpageurl { set; get; }
    list<connectapi._7ychatter_7ygroup_7ysummary> groups { set; get; }
    string nextpageurl { set; get; }
    string previouspageurl { set; get; }
}
//////////////////////////////////////////

@namespace('connectapi')
class chatterlike { 
    string id { set; get; }
    connectapi._7y_7yreference likeditem { set; get; }
    string url { set; get; }
    connectapi._7yuser_7ysummary user { set; get; }
     chatterlike( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class chatterlikepage { 
    integer currentpagetoken { set; get; }
    string currentpageurl { set; get; }
    list<connectapi._7ychatter_7ylike> items { set; get; }
    list<connectapi._7ychatter_7ylike> likes { set; get; }
    integer nextpagetoken { set; get; }
    string nextpageurl { set; get; }
    integer previouspagetoken { set; get; }
    string previouspageurl { set; get; }
    integer total { set; get; }
     chatterlikepage( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class chatterlikescapability extends connectapi.feedelementcapability { 
    boolean islikedbycurrentuser { set; get; }
    connectapi._7ymessagebody likesmessage { set; get; }
    connectapi._7yreference mylike { set; get; }
    connectapi._7ychatterlikepage page { set; get; }
     chatterlikescapability( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class chattermessage { 
    connectapi._7ymessage_7ybody body { set; get; }
    string conversationid { set; get; }
    string conversationurl { set; get; }
    string id { set; get; }
    list<connectapi._7yuser_7ysummary> recipients { set; get; }
    connectapi._7yuser_7ysummary sender { set; get; }
    connectapi._7y_7yreference sendingcommunity { set; get; }
    datetime sentdate { set; get; }
    string url { set; get; }
     chattermessage( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class chattermessagepage { 
    string currentpagetoken { set; get; }
    string currentpageurl { set; get; }
    list<connectapi.chattermessage> messages { set; get; }
    string nextpagetoken { set; get; }
    string nextpageurl { set; get; }
     chattermessagepage( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class chattermessages { 
    static connectapi.chatterconversation getconversation( string communityid, string conversationid);

    static connectapi.chatterconversation getconversation( string communityid, string conversationid, string pageparam, integer pagesize);

    static connectapi.chatterconversation getconversation( string conversationid);

    static connectapi.chatterconversation getconversation( string conversationid, string pageparam, integer pagesize);

    static connectapi.chatterconversationpage getconversations( );

    static connectapi.chatterconversationpage getconversations( string communityid);

    static connectapi.chatterconversationpage getconversations( string communityid, string pageparam, integer pagesize);

    static connectapi.chatterconversationpage getconversations( string pageparam, integer pagesize);

    static connectapi.chattermessage getmessage( string communityid, string messageid);

    static connectapi.chattermessage getmessage( string messageid);

    static connectapi.chattermessagepage getmessages( );

    static connectapi.chattermessagepage getmessages( string communityid);

    static connectapi.chattermessagepage getmessages( string communityid, string pageparam, integer pagesize);

    static connectapi.chattermessagepage getmessages( string pageparam, integer pagesize);

    static connectapi.unreadconversationcount getunreadcount( );

    static connectapi.unreadconversationcount getunreadcount( string communityid);

    static connectapi.chatterconversationsummary markconversationread( string communityid, string conversationid, boolean read);

    static connectapi.chatterconversationsummary markconversationread( string conversationid, boolean read);

    static connectapi.chattermessage replytomessage( string communityid, string text, string inreplyto);

    static connectapi.chattermessage replytomessage( string text, string inreplyto);

    static connectapi.chatterconversation searchconversation( string communityid, string conversationid, string pageparam, integer pagesize, string q);

    static connectapi.chatterconversation searchconversation( string communityid, string conversationid, string q);

    static connectapi.chatterconversation searchconversation( string conversationid, string pageparam, integer pagesize, string q);

    static connectapi.chatterconversation searchconversation( string conversationid, string q);

    static connectapi.chatterconversationpage searchconversations( string communityid, string pageparam, integer pagesize, string q);

    static connectapi.chatterconversationpage searchconversations( string communityid, string q);

    static connectapi.chatterconversationpage searchconversations( string pageparam, integer pagesize, string q);

    static connectapi.chatterconversationpage searchconversations( string q);

    static connectapi.chattermessagepage searchmessages( string communityid, string pageparam, integer pagesize, string q);

    static connectapi.chattermessagepage searchmessages( string communityid, string q);

    static connectapi.chattermessagepage searchmessages( string pageparam, integer pagesize, string q);

    static connectapi.chattermessagepage searchmessages( string q);

    static connectapi.chattermessage sendmessage( string communityid, string text, string recipients);

    static connectapi.chattermessage sendmessage( string text, string recipients);

}
//////////////////////////////////////////

@namespace('connectapi')
class chatterusers { 
    static void deletephoto( string communityid, string userid);

    static connectapi.subscription follow( string communityid, string userid, string subjectid);

    static connectapi.userchattersettings getchattersettings( string communityid, string userid);

    static connectapi.followerpage getfollowers( string communityid, string userid);

    static connectapi.followerpage getfollowers( string communityid, string userid, integer pageparam, integer pagesize);

    static connectapi.followingpage getfollowings( string communityid, string userid);

    static connectapi.followingpage getfollowings( string communityid, string userid, integer pageparam);

    static connectapi.followingpage getfollowings( string communityid, string userid, integer pageparam, integer pagesize);

    static connectapi.followingpage getfollowings( string communityid, string userid, string filtertype);

    static connectapi.followingpage getfollowings( string communityid, string userid, string filtertype, integer pageparam);

    static connectapi.followingpage getfollowings( string communityid, string userid, string filtertype, integer pageparam, integer pagesize);

    static connectapi.usergrouppage getgroups( string communityid, string userid);

    static connectapi.usergrouppage getgroups( string communityid, string userid, integer pageparam, integer pagesize);

    static connectapi.photo getphoto( string communityid, string userid);

    static connectapi.reputation getreputation( string communityid, string userid);

    static connectapi.userdetail getuser( string communityid, string userid);

    static list<connectapi.batchresult> getuserbatch( string communityid, list<string> userids);

    static connectapi.userpage getusers( string communityid);

    static connectapi.userpage getusers( string communityid, integer pageparam, integer pagesize);

    static connectapi.usergrouppage searchusergroups( string communityid, string userid, string q);

    static connectapi.usergrouppage searchusergroups( string communityid, string userid, string q, integer pageparam, integer pagesize);

    static connectapi.userpage searchusers( string communityid, string q);

    static connectapi.userpage searchusers( string communityid, string q, integer pageparam, integer pagesize);

    static connectapi.userpage searchusers( string communityid, string q, string searchcontextid, integer pageparam, integer pagesize);

    static connectapi.photo setphoto( string communityid, string userid, connectapi.binaryinput fileupload);

    static connectapi.photo setphoto( string communityid, string userid, string fileid, integer versionnumber);

    static connectapi.photo setphotowithattributes( string communityid, string userid, connectapi.photoinput photo);

    static connectapi.photo setphotowithattributes( string communityid, string userid, connectapi.photoinput photo, connectapi.binaryinput fileupload);

    static void settestsearchusers( string communityid, string q, connectapi.userpage result);

    static void settestsearchusers( string communityid, string q, integer pageparam, integer pagesize, connectapi.userpage result);

    static void settestsearchusers( string communityid, string q, string searchcontextid, integer pageparam, integer pagesize, connectapi.userpage result);

    static connectapi.userchattersettings updatechattersettings( string communityid, string userid, connectapi.groupemailfrequency defaultgroupemailfrequency);

    static connectapi.userdetail updateuser( string communityid, string userid, connectapi.userinput userinput);

}
//////////////////////////////////////////

@namespace('connectapi')
enum cleantype { bulkclean, incremental, manual, perpetual}
//////////////////////////////////////////

@namespace('connectapi')
class clientinfo { 
    string applicationname { set; get; }
    string applicationurl { set; get; }
     clientinfo( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class comment { 
    connectapi._7yfeeditem_7yattachment attachment { set; get; }
    connectapi._7yfeedbody body { set; get; }
    connectapi._7ycommentcapabilities capabilities { set; get; }
    connectapi._7yclientinfo clientinfo { set; get; }
    datetime createddate { set; get; }
    connectapi._7y_7yreference feedelement { set; get; }
    connectapi._7y_7yreference feeditem { set; get; }
    string id { set; get; }
    boolean isdeleterestricted { set; get; }
    connectapi._7ychatter_7ylike_7ypage likes { set; get; }
    connectapi._7ymessage_7ybody likesmessage { set; get; }
    connectapi._7ymoderationflags moderationflags { set; get; }
    connectapi._7y_7yreference mylike { set; get; }
    connectapi._7y_7yreference parent { set; get; }
    string relativecreateddate { set; get; }
    connectapi._7ycommenttype type { set; get; }
    string url { set; get; }
    connectapi._7yuser_7ysummary user { set; get; }
     comment( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class commentcapabilities { 
    connectapi._7ycontentcapability content { set; get; }
    connectapi._7yeditcapability edit { set; get; }
    connectapi._7ystatuscapability status { set; get; }
     commentcapabilities( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class commentcapabilitiesinput { 
    connectapi._7ycontentcapability_7yinput content { set; get; }
     commentcapabilitiesinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class commentinput { 
    connectapi._7yfeed_7yitem_7yattachment_7y_7yinput attachment { set; get; }
    connectapi._7ymessage_7y_7ybody_7yinput body { set; get; }
    connectapi._7ycommentcapabilitiesinput capabilities { set; get; }
     commentinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class commentpage { 
    list<connectapi._7ycomment> comments { set; get; }
    string currentpagetoken { set; get; }
    string currentpageurl { set; get; }
    list<connectapi._7ycomment> items { set; get; }
    string nextpagetoken { set; get; }
    string nextpageurl { set; get; }
    integer total { set; get; }
     commentpage( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class commentscapability extends connectapi.feedelementcapability { 
    connectapi._7ycomment_7ypage page { set; get; }
     commentscapability( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum commenttype { contentcomment, textcomment}
//////////////////////////////////////////

@namespace('connectapi')
class communities { 
    static connectapi.communitypage getcommunities( );

    static connectapi.communitypage getcommunities( connectapi.communitystatus status);

    static connectapi.community getcommunity( string communityid);

}
//////////////////////////////////////////

@namespace('connectapi')
class community { 
    boolean allowchatteraccesswithoutlogin { set; get; }
    boolean allowmemberstoflag { set; get; }
    string description { set; get; }
    string id { set; get; }
    boolean invitationsenabled { set; get; }
    boolean knowledgeableenabled { set; get; }
    string loginurl { set; get; }
    string name { set; get; }
    boolean nicknamedisplayenabled { set; get; }
    boolean privatemessagesenabled { set; get; }
    boolean reputationenabled { set; get; }
    boolean sendwelcomeemail { set; get; }
    string siteurl { set; get; }
    connectapi._7ycommunitystatus status { set; get; }
    string url { set; get; }
    string urlpathprefix { set; get; }
     community( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum communityflagvisibility { moderatorsonly, selfandmoderators}
//////////////////////////////////////////

@namespace('connectapi')
enum communityflag_7ytype { flagasinappropriate, flagasspam}
//////////////////////////////////////////

@namespace('connectapi')
class communitymoderation { 
    static connectapi.moderationflags addflagtocomment( string communityid, string commentid);

    static connectapi.moderationflags addflagtocomment( string communityid, string commentid, connectapi.communityflagvisibility visibility);

    static connectapi.moderationcapability addflagtofeedelement( string communityid, string feedelementid);

    static connectapi.moderationcapability addflagtofeedelement( string communityid, string feedelementid, connectapi.communityflagvisibility visibility);

    static connectapi.moderationflags addflagtofeeditem( string communityid, string feeditemid);

    static connectapi.moderationflags addflagtofeeditem( string communityid, string feeditemid, connectapi.communityflagvisibility visibility);

    static connectapi.moderationflags getflagsoncomment( string communityid, string commentid);

    static connectapi.moderationflags getflagsoncomment( string communityid, string commentid, connectapi.communityflagvisibility visibility);

    static connectapi.moderationcapability getflagsonfeedelement( string communityid, string feedelementid);

    static connectapi.moderationcapability getflagsonfeedelement( string communityid, string feedelementid, connectapi.communityflagvisibility visibility);

    static connectapi.moderationflags getflagsonfeeditem( string communityid, string feeditemid);

    static connectapi.moderationflags getflagsonfeeditem( string communityid, string feeditemid, connectapi.communityflagvisibility visibility);

    static void removeflagfromcomment( string communityid, string commentid, string userid);

    static void removeflagfromfeedelement( string communityid, string feedelementid, string userid);

    static void removeflagfromfeeditem( string communityid, string feeditemid, string userid);

}
//////////////////////////////////////////

@namespace('connectapi')
class communitypage { 
    list<connectapi._7ycommunity> communities { set; get; }
    integer total { set; get; }
     communitypage( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum communitystatus { inactive, live, underconstruction}
//////////////////////////////////////////

@namespace('connectapi')
class complexsegment extends connectapi.messagesegment { 
    list<connectapi._7y_7ymessage_7ysegment> segments { set; get; }
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class compoundrecordfield extends connectapi.labeledrecordfield { 
    list<connectapi._7y_7yabstract_7yrecordfield> fields { set; get; }
     compoundrecordfield( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class connectapiexception { 
    string geterrorcode( );

    string gettypename( );

}
//////////////////////////////////////////

@namespace('connectapi')
class content { 
    string checksum { set; get; }
    string contenturl { set; get; }
    string description { set; get; }
    string downloadurl { set; get; }
    string fileextension { set; get; }
    string filesize { set; get; }
    string filetype { set; get; }
    string filetypeenumname { set; get; }
    string hasflashpreview { set; get; }
    boolean haspdfpreview { set; get; }
    string hastinythumbnailpreview { set; get; }
    string id { set; get; }
    string iscontextusersubscribedtodocument { set; get; }
    boolean isinmyfilesync { set; get; }
    string isrenditionprocessing { set; get; }
    string issyncavailable { set; get; }
    string lastmodifieddate { set; get; }
    string mimetype { set; get; }
    string renditionurl { set; get; }
    string renditionurl240by180 { set; get; }
    string renditionurl720by480 { set; get; }
    connectapi._7yfilesharingoption sharingoption { set; get; }
    string textpreview { set; get; }
    string thumb120by90renditionstatus { set; get; }
    string thumb240by180renditionstatus { set; get; }
    string thumb720by480renditionstatus { set; get; }
    string title { set; get; }
    string versionid { set; get; }
     content( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class contentattachment extends connectapi.feeditemattachment { 
    string checksum { set; get; }
    string contenturl { set; get; }
    string description { set; get; }
    string downloadurl { set; get; }
    string fileextension { set; get; }
    string filesize { set; get; }
    string filetype { set; get; }
    boolean hasimagepreview { set; get; }
    boolean haspdfpreview { set; get; }
    string id { set; get; }
    boolean isinmyfilesync { set; get; }
    string mimetype { set; get; }
    string renditionurl { set; get; }
    string renditionurl240by180 { set; get; }
    string renditionurl720by480 { set; get; }
    string textpreview { set; get; }
    string thumb120by90renditionstatus { set; get; }
    string thumb240by180renditionstatus { set; get; }
    string thumb720by480renditionstatus { set; get; }
    string title { set; get; }
    string versionid { set; get; }
     contentattachment( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class contentattachmentinput extends connectapi.feeditemattachmentinput { 
    string contentdocumentid { set; get; }
     contentattachmentinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class contentcapability extends connectapi.feedelementcapability { 
    string checksum { set; get; }
    string contenturl { set; get; }
    string description { set; get; }
    string downloadurl { set; get; }
    string fileextension { set; get; }
    string filesize { set; get; }
    string filetype { set; get; }
    string filetypeenumname { set; get; }
    boolean hasflashpreview { set; get; }
    boolean haspdfpreview { set; get; }
    boolean hastinythumbnailpreview { set; get; }
    string id { set; get; }
    boolean iscontextusersubscribedtodocument { set; get; }
    boolean isinmyfilesync { set; get; }
    boolean isrenditionprocessing { set; get; }
    boolean issyncavailable { set; get; }
    string lastmodifieddate { set; get; }
    string mimetype { set; get; }
    string renditionurl { set; get; }
    string renditionurl240by180 { set; get; }
    string renditionurl720by480 { set; get; }
    connectapi._7yfilesharingoption sharingoption { set; get; }
    string textpreview { set; get; }
    string thumb120by90renditionstatus { set; get; }
    string thumb240by180renditionstatus { set; get; }
    string thumb720by480renditionstatus { set; get; }
    string title { set; get; }
    string versionid { set; get; }
     contentcapability( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class contentcapabilityinput extends connectapi.feedelementcapabilityinput { 
    string contentdocumentid { set; get; }
    string description { set; get; }
    connectapi._7yfilesharing_7yoption sharingoption { set; get; }
    string title { set; get; }
     contentcapabilityinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class currencyrecordfield extends connectapi.labeledrecord_7yfield { 
     currencyrecordfield( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class customlistaudiencecriteria extends connectapi.audiencecriteria { 
    integer membercount { set; get; }
    connectapi._7yuserreferencepage members { set; get; }
     customlistaudiencecriteria( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class customlistaudiencecriteriainput extends connectapi.audiencecriteriainput { 
    connectapi._7yrecommendation_7yaudiencemember_7yoperationtype memberoperationtype { set; get; }
    list<string> members { set; get; }
     customlistaudiencecriteriainput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class dashboardcomponentattachment extends connectapi.feeditemattachment { 
    string componentid { set; get; }
    string componentname { set; get; }
    string dashboardbodytext { set; get; }
    string dashboardid { set; get; }
    string dashboardname { set; get; }
    string fullsizeimageurl { set; get; }
    datetime lastrefreshdate { set; get; }
    string lastrefreshdatedisplaytext { set; get; }
    connectapi._7yuser_7ysummary runninguser { set; get; }
    string thumbnailurl { set; get; }
     dashboardcomponentattachment( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class dashboardcomponentsnapshot { 
    string componentid { set; get; }
    string componentname { set; get; }
    string dashboardbodytext { set; get; }
    string dashboardid { set; get; }
    string dashboardname { set; get; }
    string fullsizeimageurl { set; get; }
    datetime lastrefreshdate { set; get; }
    string lastrefreshdatedisplaytext { set; get; }
    connectapi._7yusersummary runninguser { set; get; }
    string thumbnailurl { set; get; }
     dashboardcomponentsnapshot( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class dashboardcomponentsnapshotcapability extends connectapi.feedelementcapability { 
    connectapi._7ydashboardcomponent_7ysnapshot dashboardcomponentsnapshot { set; get; }
     dashboardcomponentsnapshotcapability( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class datacloud { 
    static connectapi.datacloudcompanies getcompaniesfromorder( string orderid);

    static connectapi.datacloudcompanies getcompaniesfromorder( string orderid, integer pageparam, integer pagesize);

    static connectapi.datacloudcompany getcompany( string companyid);

    static connectapi.datacloudcontact getcontact( string contactid);

    static connectapi.datacloudcontacts getcontactsfromorder( string orderid);

    static connectapi.datacloudcontacts getcontactsfromorder( string orderid, integer pageparam, integer pagesize);

    static connectapi.datacloudorder getorder( string orderid);

    static connectapi.datacloudpurchaseusage getusage( string userid);

    static connectapi.datacloudorder postorder( connectapi.datacloudorderinput orderinput);

}
//////////////////////////////////////////

@namespace('connectapi')
class datacloudcompanies { 
    connectapi.datacloudcompany companies { set; get; }
    string currentpageurl { set; get; }
    string nextpageurl { set; get; }
    string previouspageurl { set; get; }
    integer total { set; get; }
     datacloudcompanies( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class datacloudcompany { 
    integer activecontacts { set; get; }
    connectapi.address address { set; get; }
    double annualrevenue { set; get; }
    string companyid { set; get; }
    string description { set; get; }
    string dunsnumber { set; get; }
    string industry { set; get; }
    boolean isinactive { set; get; }
    boolean isowned { set; get; }
    string naicscode { set; get; }
    string naicsdescription { set; get; }
    string name { set; get; }
    integer numberofemployees { set; get; }
    string ownership { set; get; }
    connectapi.phonenumber phonenumbers { set; get; }
    string sic { set; get; }
    string sicdescription { set; get; }
    string site { set; get; }
    string tickersymbol { set; get; }
    string tradestyle { set; get; }
    datetime updateddate { set; get; }
    string website { set; get; }
    string yearstarted { set; get; }
     datacloudcompany( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class datacloudcompanyhierarchy { 
    Object apiparams;
    Object children;
    Object company;
    Object globalparent;
    Object parent;
    Object totalchildren;
     datacloudcompanyhierarchy( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class datacloudcompanyhierarchyinput { 
    Object childrenoffset;
    Object companyidentifier;
    Object companyidentifierenum;
    Object datacloudclientid;
    Object fetchglobalparent;
    Object fetchimmediatechildren;
    Object fetchimmediateparent;
    Object fetchself;
    Object numberofchildren;
     datacloudcompanyhierarchyinput( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum datacloudcompanyidentifier { accountid, datacloudcompanyid, duns}
//////////////////////////////////////////

@namespace('connectapi')
class datacloudcontact { 
    connectapi.address address { set; get; }
    string companyid { set; get; }
    string companyname { set; get; }
    string contactid { set; get; }
    string department { set; get; }
    string email { set; get; }
    string firstname { set; get; }
    boolean isinactive { set; get; }
    boolean isowned { set; get; }
    string lastname { set; get; }
    string level { set; get; }
    connectapi.phonenumber phonenumbers { set; get; }
    string title { set; get; }
    datetime updateddate { set; get; }
     datacloudcontact( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class datacloudcontacts { 
    list<any> contacts { set; get; }
    string currentpageurl { set; get; }
    string nextpageurl { set; get; }
    string previouspageurl { set; get; }
    integer total { set; get; }
     datacloudcontacts( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class datacloudimport { 
    any duplicatesskippedcount;
    any errorcount;
    any errormessagedescriptionurl;
    any importstatus;
    any orgallowsduplicates;
    any successcount;
     datacloudimport( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class datacloudimportstatus { 
    any datacloudid;
    any importstatus;
     datacloudimportstatus( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum datacloudimportstatustype { duplicate, error, success}
//////////////////////////////////////////

@namespace('connectapi')
class datacloudinternalcompany { 
    any domesticultimateduns;
    any externalrepresentation;
    any globalultimateduns;
    any isincrm;
    any ismarketable;
    any parentduns;
     datacloudinternalcompany( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class datacloudorder { 
    string entityurl { set; get; }
    string id { set; get; }
    integer purchasecount { set; get; }
    datetime purchasedate { set; get; }
    string url { set; get; }
     datacloudorder( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class datacloudorderinput { 
    string companyids { set; get; }
    string contactids { set; get; }
    connectapi.datacloudusertype usertype { set; get; }
     datacloudorderinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class datacloudpurchaseusage { 
    integer listpoolcreditsavailable { set; get; }
    integer listpoolcreditsused { set; get; }
    integer monthlycreditsavailable { set; get; }
    integer monthlycreditsused { set; get; }
     datacloudpurchaseusage( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum datacloudusertype { listpool, monthly}
//////////////////////////////////////////

@namespace('connectapi')
class daterecordfield extends connectapi.labeledrecord_7yfield { 
    datetime datevalue { set; get; }
     daterecordfield( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class digestjob { 
    connectapi._7ydigestperiod period { set; get; }
}
//////////////////////////////////////////

@namespace('connectapi')
enum digestperiod { dailydigest, weeklydigest}
//////////////////////////////////////////

@namespace('connectapi')
class editcapability { 
    boolean iseditrestricted { set; get; }
    string iseditablebymeurl { set; get; }
    connectapi.actor lasteditedby { set; get; }
    datetime lastediteddate { set; get; }
    integer latestrevision { set; get; }
    string relativelastediteddate { set; get; }
     editcapability( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class emailaddress { 
    string displayname { set; get; }
    string emailaddress { set; get; }
    connectapi._7yrecordsummary relatedrecord { set; get; }
     emailaddress( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class emailattachment { 
    connectapi._7yrecordsummary attachment { set; get; }
    string contenttype { set; get; }
    string filename { set; get; }
     emailattachment( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class emailmessage extends connectapi.feeditemattachment { 
    connectapi.email_7ymessagedirection direction { set; get; }
    string emailmessageid { set; get; }
    string subject { set; get; }
    string textbody { set; get; }
    list<connectapi.emailaddress> toaddresses { set; get; }
     emailmessage( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class emailmessagecapability extends connectapi.feedelementcapability { 
    list<connectapi._7yemailattachment> attachments { set; get; }
    list<connectapi._7yemailaddress> bccaddresses { set; get; }
    string body { set; get; }
    list<connectapi._7yemailaddress> ccaddresses { set; get; }
    connectapi._7yemailmessagedirection direction { set; get; }
    string emailmessageid { set; get; }
    connectapi._7yemailaddress fromaddress { set; get; }
    boolean isrichtext { set; get; }
    string subject { set; get; }
    string textbody { set; get; }
    list<connectapi._7yemailaddress> toaddresses { set; get; }
    integer totalattachments { set; get; }
     emailmessagecapability( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum emailmessagedirection { inbound, outbound}
//////////////////////////////////////////

@namespace('connectapi')
class enhancedlinkcapability extends connectapi.feedelementcapability { 
    string description { set; get; }
    connectapi.icon icon { set; get; }
    string linkrecordid { set; get; }
    string linkurl { set; get; }
    string title { set; get; }
     enhancedlinkcapability( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class entitylinksegment extends connectapi.messagesegment { 
    connectapi._7ymotif motif { set; get; }
    connectapi._7y_7yreference reference { set; get; }
     entitylinksegment( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class entityrecommendation extends connectapi.abstractrecommendation { 
    string actonurl { set; get; }
    connectapi._7yrecommendation_7yactiontype action { set; get; }
    connectapi.actor entity { set; get; }
     entityrecommendation( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class externalemailservices { 
    static connectapi.useroauthinfo getuseroauthinfo( string landingpage);

}
//////////////////////////////////////////

@namespace('connectapi')
class features { 
    boolean chatter { set; get; }
    boolean chatteractivity { set; get; }
    boolean chatteranswers { set; get; }
    boolean chatterglobalinfluence { set; get; }
    boolean chattergrouprecordsharing { set; get; }
    boolean chattergrouprecords { set; get; }
    boolean chattermessages { set; get; }
    boolean chattertopics { set; get; }
    boolean communitiesenabled { set; get; }
    boolean communitymoderation { set; get; }
    boolean communityreputation { set; get; }
    boolean connectrecords { set; get; }
    boolean dashboardcomponentsnapshots { set; get; }
    string defaultcurrencyisocode { set; get; }
    boolean feedpolling { set; get; }
    boolean files { set; get; }
    boolean filesoncomments { set; get; }
    boolean groupscanfollow { set; get; }
    boolean ideas { set; get; }
    boolean managedtopicsenabled { set; get; }
    integer maxfilesperfeeditem { set; get; }
    boolean mobilenotificationsenabled { set; get; }
    boolean multicurrency { set; get; }
    boolean publisheractions { set; get; }
    boolean storedataondevicesenabled { set; get; }
    boolean thanksallowed { set; get; }
    boolean trendingtopics { set; get; }
    boolean viralinvitesallowed { set; get; }
    boolean wave { set; get; }
     features( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class feed { 
    string feedelementposturl { set; get; }
    string feedelementsurl { set; get; }
    string feeditemsurl { set; get; }
    string ismodifiedurl { set; get; }
    boolean respectsmute { set; get; }
     feed( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class feedbody extends connectapi.abstractmessagebody { 
     feedbody( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum feeddensity { allupdates, fewerupdates}
//////////////////////////////////////////

@namespace('connectapi')
class feeddirectory { 
    list<connectapi._7yfeed_7yfavorite> favorites { set; get; }
    list<connectapi.feeddirectoryitem> feeds { set; get; }
     feeddirectory( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class feeddirectoryitem { 
    string feedelementsurl { set; get; }
    string feeditemsurl { set; get; }
    connectapi_7y.feedtype feedtype { set; get; }
    string feedurl { set; get; }
    string keyprefix { set; get; }
    string label { set; get; }
     feeddirectoryitem( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class feedelement { 
    connectapi._7yfeedbody body { set; get; }
    connectapi._7yfeedelement_7ycapabilities  capabilities { set; get; }
    datetime createddate { set; get; }
    connectapi._7yfeedelementtype feedelementtype { set; get; }
    connectapi._7ymessagebody header { set; get; }
    string id { set; get; }
    datetime modifieddate { set; get; }
    connectapi._7yactorwithid parent { set; get; }
    datetime relativecreateddate { set; get; }
    string url { set; get; }
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class feedelementcapabilities { 
    connectapi._7yapprovalcapability approval { set; get; }
    connectapi._7yassociatedactions_7ycapability associatedactions { set; get; }
    connectapi._7ybannercapability  banner { set; get; }
    connectapi._7ybookmarks_7ycapability bookmarks { set; get; }
    connectapi._7ybundlecapability  bundle { set; get; }
    connectapi.canvas_7ycapability  canvas { set; get; }
    connectapi.case_7ycommentcapability casecomment { set; get; }
    connectapi._7ychatterlikes_7ycapability chatterlikes { set; get; }
    connectapi._7ycommentscapability comments { set; get; }
    connectapi._7ycontentcapability content { set; get; }
    connectapi._7ydashboardcomponent_7ysnapshotcapability dashboardcomponentsnapshot { set; get; }
    connectapi._7yeditcapability edit { set; get; }
    connectapi._7yemailmessage_7ycapability emailmessage { set; get; }
    connectapi._7yenhancedlink_7ycapability enhancedlink { set; get; }
    connectapi._7yfilescapability files { set; get; }
    connectapi._7yinteractions_7ycapability interactions { set; get; }
    connectapi._7ylinkcapability link { set; get; }
    connectapi._7ymoderation_7ycapability moderation { set; get; }
    connectapi._7ymutecapability mute { set; get; }
    connectapi.origincapability origin { set; get; }
    connectapi._7ypollcapability  poll { set; get; }
    connectapi._7yquestionandanswers_7ycapability questionandanswers { set; get; }
    connectapi._7yrecommendations_7ycapability recommendations { set; get; }
    connectapi._7yrecordsnapshot_7ycapability recordsnapshot { set; get; }
    connectapi._7ysocialpostcapability socialpost { set; get; }
    connectapi._7ystatuscapability status { set; get; }
    connectapi._7ytopicscapability  topics { set; get; }
    connectapi._7ytrackedchanges_7ycapability trackedchanges { set; get; }
     feedelementcapabilities( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class feedelementcapabilitiesinput { 
    connectapi._7yassociatedactions_7ycapabilityinput associatedactions { set; get; }
    connectapi._7ybookmarkscapability_7yinput bookmarks { set; get; }
    connectapi._7ycanvascapability_7yinput canvas { set; get; }
    connectapi._7ycontentcapability_7yinput content { set; get; }
    connectapi._7yfilescapabilityinput files { set; get; }
    connectapi._7ylinkcapabilityinput link { set; get; }
    connectapi._7ypollcapabilityinput poll { set; get; }
    connectapi._7yquestionandanswers_7ycapabilityinput questionandanswers { set; get; }
    connectapi._7ytopicscapability_7yinput topics { set; get; }
     feedelementcapabilitiesinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class feedelementcapability { 
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class feedelementcapabilityinput { 
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion param1);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum feedelementcapabilitytype { approval, associatedactions, banner, bookmarks, bundle, canvas, casecomment, chatterlikes, comments, content, dashboardcomponentsnapshot, edit, emailmessage, enhancedlink, files, link, moderation, mute, origin, poll, questionandanswers, recommendations, recordsnapshot, socialpost, topics, trackedchanges}
//////////////////////////////////////////

@namespace('connectapi')
class feedelementinput { 
    connectapi._7yfeedelement_7ycapabilitiesinput capabilities { set; get; }
    connectapi._7yfeedelementtype feedelementtype { set; get; }
    string subjectid { set; get; }
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion param1);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class feedelementpage { 
    string currentpagetoken { set; get; }
    string currentpageurl { set; get; }
    list<connectapi._7yfeedelement> elements { set; get; }
    string ismodifiedtoken { set; get; }
    string ismodifiedurl { set; get; }
    string nextpagetoken { set; get; }
    string nextpageurl { set; get; }
    string updatestoken { set; get; }
    string updatesurl { set; get; }
     feedelementpage( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum feedelementtype { bundle, feeditem, recommendation}
//////////////////////////////////////////

@namespace('connectapi')
class feedentityiseditable { 
    boolean areattachmentseditablebyme { set; get; }
    string feedentityurl { set; get; }
    boolean iseditablebyme { set; get; }
     feedentityiseditable( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum feedentity_7ystatus { pendingreview, published}
//////////////////////////////////////////

@namespace('connectapi')
class feedfavorite { 
    connectapi._7y_7yreference community { set; get; }
    connectapi._7yuser_7ysummary createdby { set; get; }
    string feedurl { set; get; }
    string id { set; get; }
    datetime lastviewdate { set; get; }
    string name { set; get; }
    string searchtext { set; get; }
    connectapi._7y_7yreference target { set; get; }
    connectapi._7yfeedfavorite_7ytype type { set; get; }
    string url { set; get; }
    connectapi._7yuser_7ysummary user { set; get; }
     feedfavorite( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class feedfavorites { 
    list<connectapi._7yfeed_7yfavorite> favorites { set; get; }
    integer total { set; get; }
     feedfavorites( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum feedfavoritetype { }
//////////////////////////////////////////

@namespace('connectapi')
enum feedfilter { allquestions, communityscoped, solvedquestions, unansweredquestions, unsolvedquestions}
//////////////////////////////////////////

@namespace('connectapi')
class feeditem extends connectapi.feedelement { 
    connectapi.actor actor { set; get; }
    connectapi._7yfeeditem_7yattachment attachment { set; get; }
    boolean canshare { set; get; }
    connectapi._7yclientinfo clientinfo { set; get; }
    connectapi._7ycomment_7y_7ypage comments { set; get; }
    boolean event { set; get; }
    boolean isbookmarkedbycurrentuser { set; get; }
    boolean isdeleterestricted { set; get; }
    boolean islikedbycurrentuser { set; get; }
    connectapi._7ychatter_7ylike_7ypage likes { set; get; }
    connectapi._7ymessage_7ybody likesmessage { set; get; }
    connectapi._7ymoderationflags moderationflags { set; get; }
    connectapi._7y_7yreference mylike { set; get; }
    connectapi._7y_7yreference originalfeeditem { set; get; }
    connectapi.actor originalfeeditemactor { set; get; }
    string photourl { set; get; }
    connectapi._7ymessage_7ybody preamble { set; get; }
    connectapi.feeditemtopicpage topics { set; get; }
    connectapi._7yfeeditemtype type { set; get; }
    connectapi._7yfeeditem_7yvisibilitytype visibility { set; get; }
     feeditem( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class feeditemattachment { 
    any type;
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class feeditemattachmentinput { 
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion param1);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum feeditemattachmenttype { approval, basictemplate, canvas, casecomment, content, dashboardcomponent, emailmessage, link, poll, question, recordsnapshot, trackedchange}
//////////////////////////////////////////

@namespace('connectapi')
class feediteminput extends connectapi.feedelementinput { 
    connectapi._7yfeed_7yitem_7yattachment_7y_7yinput attachment { set; get; }
    connectapi._7ymessage_7y_7ybody_7yinput body { set; get; }
    boolean isbookmarkedbycurrentuser { set; get; }
    string originalfeedelementid { set; get; }
    string originalfeeditemid { set; get; }
    connectapi._7yfeeditem_7yvisibilitytype visibility { set; get; }
     feediteminput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class feeditempage { 
    string currentpagetoken { set; get; }
    string currentpageurl { set; get; }
    string ismodifiedtoken { set; get; }
    string ismodifiedurl { set; get; }
    list<connectapi.feeditem> items { set; get; }
    string nextpagetoken { set; get; }
    string nextpageurl { set; get; }
    string updatestoken { set; get; }
    string updatesurl { set; get; }
     feeditempage( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class feeditemtopicpage { 
    boolean canassigntopics { set; get; }
    list<connectapi._7ytopic> topics { set; get; }
     feeditemtopicpage( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum feeditemtype { }
//////////////////////////////////////////

@namespace('connectapi')
enum feeditemvisibilitytype { allusers, internalusers}
//////////////////////////////////////////

@namespace('connectapi')
class feedmodifiedinfo { 
    boolean ismodified { set; get; }
    string ismodifiedtoken { set; get; }
    string nextpollurl { set; get; }
     feedmodifiedinfo( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class feedpoll extends connectapi.feeditemattachment { 
    list<connectapi._7yfeed_7ypoll_7ychoice> choices;
    string mychoiceid;
    integer totalvotecount;
     feedpoll( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class feedpollchoice { 
    string id { set; get; }
    integer position { set; get; }
    string text { set; get; }
    integer votecount { set; get; }
    double votecountratio { set; get; }
     feedpollchoice( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum feedsortorder { createddatedesc, lastmodifieddatedesc}
//////////////////////////////////////////

@namespace('connectapi')
enum feedtype { bookmarks, company, files, filter, groups, home, moderation, muted, news, people, record, to, topics, userprofile}
//////////////////////////////////////////

@namespace('connectapi')
class fieldchangenamesegment extends connectapi.messagesegment { 
     fieldchangenamesegment( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class fieldchangesegment extends connectapi.complexsegment { 
     fieldchangesegment( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class fieldchangevaluesegment extends connectapi.messagesegment { 
    string url { set; get; }
    connectapi._7yfieldchange_7yvaluetype valuetype { set; get; }
     fieldchangevaluesegment( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum fieldchangevaluetype { newvalue, oldvalue}
//////////////////////////////////////////

@namespace('connectapi')
class file extends connectapi.actorwithid { 
    string checksum { set; get; }
    datetime contentmodifieddate { set; get; }
    integer contentsize { set; get; }
    string contenturl { set; get; }
    string description { set; get; }
    string downloadurl { set; get; }
    string fileextension { set; get; }
    string filetype { set; get; }
    string flashrenditionstatus { set; get; }
    boolean isinmyfilesync { set; get; }
    boolean ismajorversion { set; get; }
    string mimetype { set; get; }
    connectapi._7ymoderationflags moderationflags { set; get; }
    datetime modifieddate { set; get; }
    string origin { set; get; }
    connectapi._7yuser_7ysummary owner { set; get; }
    string pdfrenditionstatus { set; get; }
    connectapi._7yfilepublishstatus publishstatus { set; get; }
    string renditionurl { set; get; }
    string renditionurl240by180 { set; get; }
    string renditionurl720by480 { set; get; }
    connectapi._7yfilesharingoption sharingoption { set; get; }
    connectapi._7yfilesharingtype sharingrole { set; get; }
    string textpreview { set; get; }
    string thumb120by90renditionstatus { set; get; }
    string thumb240by180renditionstatus { set; get; }
    string thumb720by480renditionstatus { set; get; }
    string title { set; get; }
    string versionnumber { set; get; }
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class fileidinput { 
    string id { set; get; }
    connectapi._7yoperationtype operationtype { set; get; }
     fileidinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class filepreview { 
    any format;
    any previewurlcount;
    any previewurls;
    any status;
    any url;
     filepreview( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class filepreviewcollection { 
    any fileid;
    any previews;
    any url;
     filepreviewcollection( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum filepreviewformat { pdf, svg, thumbnail, thumbnailbig, thumbnailtiny}
//////////////////////////////////////////

@namespace('connectapi')
enum filepreviewstatus { available, inprogress, notavailable, notscheduled}
//////////////////////////////////////////

@namespace('connectapi')
class filepreviewurl { 
    any pagenumber;
    any previewurl;
     filepreviewurl( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum filepublishstatus { pendingaccess, privateaccess, publicaccess}
//////////////////////////////////////////

@namespace('connectapi')
class filescapability extends connectapi.feedelementcapability { 
    list<connectapi._7ycontent> items { set; get; }
     filescapability( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class filescapabilityinput extends connectapi.feedelementcapabilityinput { 
    list<connectapi._7yfileidinput> items { set; get; }
     filescapabilityinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum filesharingoption { allowed, restricted}
//////////////////////////////////////////

@namespace('connectapi')
enum filesharingtype { admin, collaborator, owner, viewer, workspacemanaged}
//////////////////////////////////////////

@namespace('connectapi')
class filesummary extends connectapi.file { 
     filesummary( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class followerpage { 
    string currentpageurl { set; get; }
    list<connectapi._7ysubscription> followers { set; get; }
    string nextpageurl { set; get; }
    string previouspageurl { set; get; }
    integer total { set; get; }
     followerpage( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class followingcounts { 
    integer people { set; get; }
    integer records { set; get; }
    integer total { set; get; }
     followingcounts( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class followingpage { 
    string currentpageurl { set; get; }
    list<connectapi._7ysubscription> following { set; get; }
    string nextpageurl { set; get; }
    string previouspageurl { set; get; }
    integer total { set; get; }
     followingpage( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class genericbundlecapability extends connectapi.bundlecapability { 
     genericbundlecapability( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class genericfeedelement extends connectapi.feedelement { 
     genericfeedelement( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class globalinfluence { 
    string percentile { set; get; }
    integer rank { set; get; }
     globalinfluence( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum grouparchivestatus { all, archived, notarchived}
//////////////////////////////////////////

@namespace('connectapi')
class groupchattersettings { 
    connectapi._7ygroupemail_7yfrequency emailfrequency { set; get; }
     groupchattersettings( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum groupemailfrequency { dailydigest, eachpost, never, usedefault, weeklydigest}
//////////////////////////////////////////

@namespace('connectapi')
class groupinformation { 
    string text { set; get; }
    string title { set; get; }
     groupinformation( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class groupinformationinput { 
    string text { set; get; }
    string title { set; get; }
     groupinformationinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class groupmember { 
    string id { set; get; }
    datetime lastfeedaccessdate { set; get; }
    connectapi._7ygroupmembership_7ytype role { set; get; }
    string url { set; get; }
    connectapi._7yuser_7ysummary user { set; get; }
     groupmember( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class groupmemberpage { 
    string currentpageurl { set; get; }
    list<connectapi._7ygroupmember> members { set; get; }
    connectapi._7y_7yreference mymembership { set; get; }
    string nextpageurl { set; get; }
    string previouspageurl { set; get; }
    integer totalmembercount { set; get; }
     groupmemberpage( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class groupmembershiprequest { 
    datetime createddate { set; get; }
    string id { set; get; }
    datetime lastupdatedate { set; get; }
    connectapi._7y_7yreference requestedgroup { set; get; }
    string responsemessage { set; get; }
    connectapi._7ygroupmembership_7yrequeststatus status { set; get; }
    string url { set; get; }
    connectapi._7yuser_7ysummary user { set; get; }
     groupmembershiprequest( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class groupmembershiprequests { 
    list<connectapi._7ygroup_7ymembership_7yrequest> requests { set; get; }
    integer total { set; get; }
     groupmembershiprequests( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum groupmembershiprequeststatus { accepted, declined, pending}
//////////////////////////////////////////

@namespace('connectapi')
enum groupmembershiptype { groupmanager, groupowner, notamember, notamemberprivaterequested, standardmember}
//////////////////////////////////////////

@namespace('connectapi')
class grouprecord { 
    string id { set; get; }
    connectapi._7yactorwithid record { set; get; }
    string url { set; get; }
     grouprecord( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class grouprecordinput { 
    string recordid { set; get; }
     grouprecordinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class grouprecordpage { 
    string currentpageurl { set; get; }
    string nextpageurl { set; get; }
    string previouspageurl { set; get; }
    list<connectapi._7ygrouprecord> records { set; get; }
    integer totalrecordcount { set; get; }
     grouprecordpage( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum groupvisibilitytype { privateaccess, publicaccess, unlistedaccess}
//////////////////////////////////////////

@namespace('connectapi')
class hashtagsegment extends connectapi.messagesegment { 
    string tag { set; get; }
    string topicurl { set; get; }
    string url { set; get; }
     hashtagsegment( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class hashtagsegmentinput extends connectapi.messagesegmentinput { 
    string tag { set; get; }
     hashtagsegmentinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum httprequestmethod { httpdelete, httpget, httphead, httppatch, httppost, httpput}
//////////////////////////////////////////

@namespace('connectapi')
class icon { 
    integer height { set; get; }
    integer url { set; get; }
    string width { set; get; }
     icon( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class inlineimagesegment extends connectapi.messagesegment { 
    string alttext { set; get; }
    integer contentsize { set; get; }
    string fileextension { set; get; }
    connectapi.file_7ypreviewcollection thumbnails { set; get; }
    string url { set; get; }
     inlineimagesegment( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class inlineimagesegmentinput extends connectapi.messagesegmentinput { 
    string alttext { set; get; }
    string fileid { set; get; }
     inlineimagesegmentinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class interactionscapability extends connectapi.feedelementcapability { 
    integer count { set; get; }
}
//////////////////////////////////////////

@namespace('connectapi')
class knowledge { 
    static connectapi.knowledgearticleversioncollection gettrendingarticles( string communityid, integer maxresults);

    static connectapi.knowledgearticleversioncollection gettrendingarticlesfortopic( string communityid, string topicid, integer maxresults);

    static void settestgettrendingarticles( string communityid, integer maxresults, connectapi.knowledgearticleversioncollection result);

    static void settestgettrendingarticlesfortopic( string communityid, string topicid, integer maxresults, connectapi.knowledgearticleversioncollection result);

}
//////////////////////////////////////////

@namespace('connectapi')
class knowledgearticleversion { 
    string articletype { set; get; }
    string id { set; get; }
    string knowledgearticleid { set; get; }
    datetime lastpublisheddate { set; get; }
    string summary { set; get; }
    string title { set; get; }
    string urlname { set; get; }
     knowledgearticleversion( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class knowledgearticleversioncollection { 
    list<connectapi._7yknowledgearticle_7yversion> items { set; get; }
     knowledgearticleversioncollection( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class labeledrecordfield extends connectapi.abstractrecordfield { 
    string label { set; get; }
    string text { set; get; }
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class linkattachment extends connectapi.feeditemattachment { 
    string title { set; get; }
    string url { set; get; }
     linkattachment( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class linkattachmentinput extends connectapi.feeditemattachmentinput { 
    string url { set; get; }
    string urlname { set; get; }
     linkattachmentinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class linkcapability extends connectapi.feedelementcapability { 
    string url { set; get; }
    string urlname { set; get; }
     linkcapability( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class linkcapabilityinput extends connectapi.feedelementcapabilityinput { 
    string url { set; get; }
    string urlname { set; get; }
     linkcapabilityinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class linksegment extends connectapi.messagesegment { 
    string url { set; get; }
     linksegment( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class linksegmentinput extends connectapi.messagesegmentinput { 
    string url { set; get; }
     linksegmentinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class maintenanceinfo { 
    string description { set; get; }
    string maintenancetitle { set; get; }
    connectapi._7ymaintenancetype maintenancetype { set; get; }
    datetime messageeffectivetime { set; get; }
    datetime messageexpirationtime { set; get; }
    datetime scheduledenddowntime { set; get; }
    datetime scheduledendmaintenancetime { set; get; }
    datetime scheduledstartdowntime { set; get; }
    datetime scheduledstartmaintenancetime { set; get; }
     maintenanceinfo( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum maintenancetype { downtime, generallyavailable, maintenancewithdowntime, readonly}
//////////////////////////////////////////

@namespace('connectapi')
class managedtopic { 
    list<connectapi._7ymanagedtopic> children { set; get; }
    string id { set; get; }
    connectapi.managed_7ytopic_7ytype managedtopictype { set; get; }
    connectapi._7y_7yreference parent { set; get; }
    connectapi._7ytopic topic { set; get; }
    string url { set; get; }
     managedtopic( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class managedtopiccollection { 
    string currentpageurl { set; get; }
    list<connectapi._7ymanagedtopic> managedtopics { set; get; }
     managedtopiccollection( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class managedtopicpositioncollectioninput { 
    list<connectapi._7ymanagedtopic_7ypositioninput> managedtopicpositions { set; get; }
     managedtopicpositioncollectioninput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class managedtopicpositioninput { 
    string managedtopicid { set; get; }
    integer position { set; get; }
     managedtopicpositioninput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class managedtopics { 
    static connectapi.managedtopic createmanagedtopic( string communityid, string recordid, connectapi.managedtopictype managedtopictype);

    static connectapi.managedtopic createmanagedtopic( string communityid, string recordid, connectapi.managedtopictype managedtopictype, string parentid);

    static connectapi.managedtopic createmanagedtopicbyname( string communityid, string name, connectapi.managedtopictype managedtopictype);

    static connectapi.managedtopic createmanagedtopicbyname( string communityid, string name, connectapi.managedtopictype managedtopictype, string parentid);

    static void deletemanagedtopic( string communityid, string managedtopicid);

    static connectapi.managedtopic getmanagedtopic( string communityid, string managedtopicid);

    static connectapi.managedtopic getmanagedtopic( string communityid, string managedtopicid, integer depth);

    static connectapi.managedtopiccollection getmanagedtopics( string communityid);

    static connectapi.managedtopiccollection getmanagedtopics( string communityid, connectapi.managedtopictype managedtopictype);

    static connectapi.managedtopiccollection getmanagedtopics( string communityid, connectapi.managedtopictype managedtopictype, integer depth);

    static connectapi.managedtopiccollection getmanagedtopics( string communityid, connectapi.managedtopictype managedtopictype, string recordid, integer depth);

    static connectapi.managedtopiccollection reordermanagedtopics( string communityid, connectapi.managedtopicpositioncollectioninput managedtopicpositioncollection);

}
//////////////////////////////////////////

@namespace('connectapi')
enum managedtopictype { featured, navigational}
//////////////////////////////////////////

@namespace('connectapi')
class markupbeginsegment extends connectapi.messagesegment { 
    string htmltag { set; get; }
    connectapi._7ymarkuptype markuptype { set; get; }
     markupbeginsegment( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class markupbeginsegmentinput extends connectapi.messagesegmentinput { 
    connectapi._7ymarkuptype markuptype { set; get; }
     markupbeginsegmentinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class markupendsegment extends connectapi.messagesegment { 
    string htmltag { set; get; }
    connectapi._7ymarkuptype markuptype { set; get; }
     markupendsegment( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class markupendsegmentinput extends connectapi.messagesegmentinput { 
    connectapi._7ymarkuptype markuptype { set; get; }
     markupendsegmentinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum markuptype { bold, italic, listitem, orderedlist, paragraph, strikethrough, underline, unorderedlist}
//////////////////////////////////////////

@namespace('connectapi')
class mentioncompletion { 
    string additionallabel { set; get; }
    string description { set; get; }
    string name { set; get; }
    string photourl { set; get; }
    string recordid { set; get; }
    connectapi._7yusertype usertype { set; get; }
     mentioncompletion( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class mentioncompletionpage { 
    string currentpageurl { set; get; }
    list<connectapi._7ymentioncompletion> mentioncompletions { set; get; }
    string nextpageurl { set; get; }
    string previouspageurl { set; get; }
     mentioncompletionpage( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum mentioncompletiontype { all, group, user}
//////////////////////////////////////////

@namespace('connectapi')
class mentions { 
    static connectapi.mentioncompletionpage getmentioncompletions( string communityid, string q, string contextid);

    static connectapi.mentioncompletionpage getmentioncompletions( string communityid, string q, string contextid, connectapi.mentioncompletiontype type, integer pageparam, integer pagesize);

    static connectapi.mentionvalidations getmentionvalidations( string communityid, string parentid, list<string> recordids, connectapi.feeditemvisibilitytype visibility);

    static void settestgetmentioncompletions( string communityid, string q, string contextid, connectapi.mentioncompletionpage result);

    static void settestgetmentioncompletions( string communityid, string q, string contextid, connectapi.mentioncompletiontype type, integer pageparam, integer pagesize, connectapi.mentioncompletionpage result);

}
//////////////////////////////////////////

@namespace('connectapi')
class mentionsegment extends connectapi.messagesegment { 
    boolean accessible { set; get; }
    string name { set; get; }
    connectapi._7yactorwithid record { set; get; }
    connectapi._7yuser_7ysummary user { set; get; }
     mentionsegment( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class mentionsegmentinput extends connectapi.messagesegmentinput { 
    string id { set; get; }
    username _00_id { set; get; }
     mentionsegmentinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class mentionvalidation { 
    string recordid { set; get; }
    connectapi._7ymentionvalidation_7ystatus validationstatus { set; get; }
     mentionvalidation( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class mentionvalidations { 
    boolean haserrors { set; get; }
    list<connectapi._7ymentionvalidation> mentionvalidations { set; get; }
     mentionvalidations( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum mentionvalidationstatus { disallowed, inaccessible, ok}
//////////////////////////////////////////

@namespace('connectapi')
class messagebody extends connectapi.abstractmessagebody { 
     messagebody( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class messagebodyinput { 
    list<connectapi._7ymessage_7ysegment_7yinput> messagesegments { set; get; }
     messagebodyinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class messagesegment { 
    string text { set; get; }
    connectapi._7ymessagesegment_7ytype type { set; get; }
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class messagesegmentinput { 
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion param1);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum messagesegmenttype { entitylink, fieldchange, fieldchangename, fieldchangevalue, hashtag, inlineimage, link, markupbegin, markupend, mention, morechanges, resourcelink, text}
//////////////////////////////////////////

@namespace('connectapi')
class moderationcapability extends connectapi.feedelementcapability { 
    connectapi._7ymoderationflags moderationflags { set; get; }
     moderationcapability( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class moderationflags { 
    integer flagcount { set; get; }
    boolean flaggedbyme { set; get; }
     moderationflags( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class morechangessegment extends connectapi.messagesegment { 
    list<connectapi._7yfieldchange_7ysegment> morechanges { set; get; }
    integer morechangescount { set; get; }
     morechangessegment( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class motif { 
    string color { set; get; }
    string largeiconurl { set; get; }
    string mediumiconurl { set; get; }
    string smalliconurl { set; get; }
    string svgiconurl { set; get; }
     motif( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class mutecapability extends connectapi.feedelementcapability { 
    boolean ismutedbyme { set; get; }
     mutecapability( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class mutecapabilityinput extends connectapi.feedelementcapabilityinput { 
    boolean ismutedbyme { set; get; }
     mutecapabilityinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class newfileattachmentinput extends connectapi.feeditemattachmentinput { 
    string description { set; get; }
    string title { set; get; }
     newfileattachmentinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class newuseraudiencecriteria extends connectapi.audiencecriteria { 
    double maxdaysincommunity { set; get; }
     newuseraudiencecriteria( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class newuseraudiencecriteriainput extends connectapi.audiencecriteriainput { 
    double value { set; get; }
     newuseraudiencecriteriainput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class nonentityrecommendation extends connectapi.abstractrecommendation { 
    string displaylabel { set; get; }
    connectapi.motif motif { set; get; }
     nonentityrecommendation( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class notfoundexception { 
    string gettypename( );

}
//////////////////////////////////////////

@namespace('connectapi')
class oauthproviderinfo { 
    string authorizationurl { set; get; }
    string name { set; get; }
}
//////////////////////////////////////////

@namespace('connectapi')
enum operationtype { add, remove}
//////////////////////////////////////////

@namespace('connectapi')
class organization { 
    static connectapi.organizationsettings getsettings( );

}
//////////////////////////////////////////

@namespace('connectapi')
class organizationsettings { 
    integer accesstimeout { set; get; }
    connectapi.features features { set; get; }
    list<connectapi._7ymaintenanceinfo> maintenanceinfo { set; get; }
    string name { set; get; }
    string orgid { set; get; }
    connectapi.usersettings usersettings { set; get; }
     organizationsettings( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class origincapability extends connectapi.feedelementcapability { 
    connectapi._7yuser_7ysummary  actor { set; get; }
    connectapi._7y_7yreference originrecord { set; get; }
     origincapability( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class percentrecordfield extends connectapi.labeledrecord_7yfield { 
    double value { set; get; }
     percentrecordfield( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class phonenumber { 
    string label { set; get; }
    string phonenumber { set; get; }
    string phonetype { set; get; }
    string type { set; get; }
     phonenumber( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class photo { 
    string fullemailphotourl { set; get; }
    string largephotourl { set; get; }
    string photoversionid { set; get; }
    string smallphotourl { set; get; }
    string standardemailphotourl { set; get; }
    string url { set; get; }
     photo( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class photoinput { 
    integer cropsize { set; get; }
    integer cropx { set; get; }
    integer cropy { set; get; }
    string fileid { set; get; }
    integer versionnumber { set; get; }
     photoinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class picklistrecordfield extends connectapi.labeledrecord_7yfield { 
     picklistrecordfield( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class platformaction { 
    string actionurl { set; get; }
    string apiname { set; get; }
    string confirmationmessage { set; get; }
    connectapi._7yuser_7ysummary executinguser { set; get; }
    boolean groupdefault { set; get; }
    string iconurl { set; get; }
    string id { set; get; }
    string label { set; get; }
    datetime modifieddate { set; get; }
    connectapi._7y_7yreference platformactiongroup { set; get; }
    connectapi._7yplatformaction_7ystatus status { set; get; }
    string subtype { set; get; }
    connectapi._7yplatformactiontype type { set; get; }
    string url { set; get; }
     platformaction( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class platformactiongroup { 
    connectapi._7yplatformaction_7ygroupcategory category { set; get; }
    string id { set; get; }
    datetime modifieddate { set; get; }
    list<connectapi._7yplatformaction> platformactions { set; get; }
    string url { set; get; }
     platformactiongroup( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum platformactiongroupcategory { overflow, primary}
//////////////////////////////////////////

@namespace('connectapi')
enum platformactionstatus { failedstatus, newstatus, pendingstatus, successfulstatus}
//////////////////////////////////////////

@namespace('connectapi')
enum platformactiontype { actionlink, custombutton, productivityaction, quickaction, standardbutton}
//////////////////////////////////////////

@namespace('connectapi')
class pollattachmentinput extends connectapi.feeditemattachmentinput { 
    list<string> pollchoices { set; get; }
     pollattachmentinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class pollcapability extends connectapi.feedelementcapability { 
    list<connectapi._7yfeedpollchoice> choices { set; get; }
    string mychoiceid { set; get; }
    integer totalvotecount { set; get; }
     pollcapability( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class pollcapabilityinput extends connectapi.feedelementcapabilityinput { 
    list<string> choices { set; get; }
    string mychoiceid { set; get; }
     pollcapabilityinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class questionandanswers { 
    static connectapi.questionandanswerssuggestions getsuggestions( string communityid, string q, string subjectid, boolean includearticles, integer maxresults);

    static void settestgetsuggestions( string communityid, string q, string subjectid, boolean includearticles, integer maxresults, connectapi.questionandanswerssuggestions result);

    static connectapi.questionandanswerscapability updatequestionandanswers( string communityid, string feedelementid, connectapi.questionandanswerscapabilityinput questionandanswerscapability);

}
//////////////////////////////////////////

@namespace('connectapi')
class questionandanswerscapability extends connectapi.feedelementcapability { 
    connectapi._7ycomment bestanswer { set; get; }
    connectapi._7yusersummary bestanswerselectedby { set; get; }
    boolean cancurrentuserselectorremovebestanswer { set; get; }
    connectapi._7yreference escalatedcase { set; get; }
    string questiontitle { set; get; }
     questionandanswerscapability( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class questionandanswerscapabilityinput extends connectapi.feedelementcapabilityinput { 
    string bestanswerid { set; get; }
    string questiontitle { set; get; }
     questionandanswerscapabilityinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class questionandanswerssuggestions { 
    list<connectapi._7yarticleitem> articles { set; get; }
    list<connectapi._7yfeedelement> questions { set; get; }
     questionandanswerssuggestions( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class questionattachment { 
    any bestanswer;
    any bestanswerselectedby;
    any cancurrentuserselectorremovebestanswer;
    any questiontitle;
     questionattachment( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class questionattachmentinput { 
    string questiontitle { set; get; }
     questionattachmentinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class ratelimitexception { 
    string geterrorcode( );

    string gettypename( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum recommendationactiontype { follow, join, view}
//////////////////////////////////////////

@namespace('connectapi')
class recommendationaudience { 
    connectapi._7yaudiencecriteria criteria { set; get; }
    string id { set; get; }
    integer membercount { set; get; }
    connectapi._7yuserreferencepage members { set; get; }
    connectapi.user modifiedby { set; get; }
    datetime modifieddate { set; get; }
    string name { set; get; }
    string url { set; get; }
     recommendationaudience( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum recommendationaudiencecriteriatype { customlist, maxdaysincommunity}
//////////////////////////////////////////

@namespace('connectapi')
class recommendationaudienceinput { 
    connectapi._7yaudiencecriteria_7yinput criteria { set; get; }
    connectapi._7yrecommendation_7yaudiencemember_7yoperationtype memberoperationtype { set; get; }
    list<string> members { set; get; }
    string name { set; get; }
     recommendationaudienceinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum recommendationaudiencememberoperationtype { add, remove}
//////////////////////////////////////////

@namespace('connectapi')
class recommendationaudiencepage { 
    integer audiencecount { set; get; }
    string currentpageurl { set; get; }
    string nextpageurl { set; get; }
    string previouspageurl { set; get; }
    list<connectapi._7yrecommendation_7yaudience> recommendationaudiences { set; get; }
     recommendationaudiencepage( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum recommendationchannel { customchannel1, customchannel2, customchannel3, customchannel4, customchannel5, defaultchannel}
//////////////////////////////////////////

@namespace('connectapi')
class recommendationcollection { 
    list<connectapi._7yabstract_7yrecommendation> recommendations { set; get; }
     recommendationcollection( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class recommendationdefinition { 
    string actionurl { set; get; }
    string actionurlname { set; get; }
    string explanation { set; get; }
    string id { set; get; }
    string name { set; get; }
    connectapi.photo photo { set; get; }
    string title { set; get; }
    string url { set; get; }
     recommendationdefinition( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class recommendationdefinitioninput { 
    string actionurl { set; get; }
    string actionurlname { set; get; }
    string explanation { set; get; }
    string name { set; get; }
    string title { set; get; }
     recommendationdefinitioninput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class recommendationdefinitionpage { 
    list<connectapi._7yrecommendation_7ydefinition> recommendationdefinitions { set; get; }
    string url { set; get; }
     recommendationdefinitionpage( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class recommendationexplanation extends connectapi.abstractrecommendationexplanation { 
    string detailsurl { set; get; }
     recommendationexplanation( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum recommendationexplanationtype { custom, filepopular, fileviewedtogether, followedtogetherwithfollowees, groupmembersfollowed, groupnew, grouppopular, itemviewedtogether, popularapp, recordowned, recordparentoffollowed, recordviewed, topicfollowedtogether, topicfollowedtogetherwithfollowees, topicpopularfollowed, topicpopularliked, userdirectreport, userfollowedtogether, userfollowssameusers, usermanager, usernew, userpeer, userpopular, userviewingsamerecords}
//////////////////////////////////////////

@namespace('connectapi')
class recommendations { 
    static connectapi.recommendationaudience createrecommendationaudience( string communityid, connectapi.recommendationaudienceinput recommendationaudience);

    static connectapi.recommendationaudience createrecommendationaudience( string communityid, string name);

    static connectapi.recommendationdefinition createrecommendationdefinition( string communityid, connectapi.recommendationdefinitioninput recommendationdefinition);

    static connectapi.recommendationdefinition createrecommendationdefinition( string communityid, string name, string title, string actionurl, string actionurlname, string explanation);

    static connectapi.scheduledrecommendation createscheduledrecommendation( string communityid, connectapi.scheduledrecommendationinput scheduledrecommendation);

    static connectapi.scheduledrecommendation createscheduledrecommendation( string communityid, string recommendationdefinitionid, integer rank, boolean enabled, string recommendationaudienceid);

    static connectapi.scheduledrecommendation createscheduledrecommendation( string communityid, string recommendationdefinitionid, integer rank, boolean enabled, string recommendationaudienceid, connectapi.recommendationchannel channel);

    static void deleterecommendationaudience( string communityid, string recommendationaudienceid);

    static void deleterecommendationdefinition( string communityid, string recommendationdefinitionid);

    static void deleterecommendationdefinitionphoto( string communityid, string recommendationdefinitionid);

    static void deletescheduledrecommendation( string communityid, string scheduledrecommendationid, boolean deletedefinitioniflast);

    static connectapi.recommendationaudience getrecommendationaudience( string communityid, string recommendationaudienceid);

    static connectapi.userreferencepage getrecommendationaudiencemembership( string communityid, string recommendationaudienceid);

    static connectapi.userreferencepage getrecommendationaudiencemembership( string communityid, string recommendationaudienceid, integer pageparam, integer pagesize);

    static connectapi.recommendationaudiencepage getrecommendationaudiences( string communityid);

    static connectapi.recommendationaudiencepage getrecommendationaudiences( string communityid, integer pageparam, integer pagesize);

    static connectapi.recommendationdefinition getrecommendationdefinition( string communityid, string recommendationdefinitionid);

    static connectapi.photo getrecommendationdefinitionphoto( string communityid, string recommendationdefinitionid);

    static connectapi.recommendationdefinitionpage getrecommendationdefinitions( string communityid);

    static connectapi.recommendationcollection getrecommendationforuser( string communityid, string userid, connectapi.recommendationactiontype action, string objectid);

    static connectapi.recommendationcollection getrecommendationsforuser( string communityid, string userid, connectapi.recommendationactiontype action, connectapi.recommendationactiontype contextaction, string contextobjectid, connectapi.recommendationchannel channel, integer maxresults);

    static connectapi.recommendationcollection getrecommendationsforuser( string communityid, string userid, connectapi.recommendationactiontype action, connectapi.recommendationactiontype contextaction, string contextobjectid, integer maxresults);

    static connectapi.recommendationcollection getrecommendationsforuser( string communityid, string userid, connectapi.recommendationactiontype action, string objectcategory, connectapi.recommendationactiontype contextaction, string contextobjectid, connectapi.recommendationchannel channel, integer maxresults);

    static connectapi.recommendationcollection getrecommendationsforuser( string communityid, string userid, connectapi.recommendationactiontype action, string objectcategory, connectapi.recommendationactiontype contextaction, string contextobjectid, integer maxresults);

    static connectapi.recommendationcollection getrecommendationsforuser( string communityid, string userid, connectapi.recommendationactiontype contextaction, string contextobjectid, connectapi.recommendationchannel channel, integer maxresults);

    static connectapi.recommendationcollection getrecommendationsforuser( string communityid, string userid, connectapi.recommendationactiontype contextaction, string contextobjectid, integer maxresults);

    static connectapi.scheduledrecommendation getscheduledrecommendation( string communityid, string scheduledrecommendationid);

    static connectapi.scheduledrecommendationpage getscheduledrecommendations( string communityid);

    static connectapi.scheduledrecommendationpage getscheduledrecommendations( string communityid, connectapi.recommendationchannel channel);

    static void rejectrecommendationforuser( string communityid, string userid, connectapi.recommendationactiontype action, connectapi.recommendedobjecttype objectenum);

    static void rejectrecommendationforuser( string communityid, string userid, connectapi.recommendationactiontype action, string objectid);

    static void settestgetrecommendationforuser( string communityid, string userid, connectapi.recommendationactiontype action, string objectid, connectapi.recommendationcollection result);

    static void settestgetrecommendationsforuser( string communityid, string userid, connectapi.recommendationactiontype action, connectapi.recommendationactiontype contextaction, string contextobjectid, connectapi.recommendationchannel channel, integer maxresults, connectapi.recommendationcollection result);

    static void settestgetrecommendationsforuser( string communityid, string userid, connectapi.recommendationactiontype action, connectapi.recommendationactiontype contextaction, string contextobjectid, integer maxresults, connectapi.recommendationcollection result);

    static void settestgetrecommendationsforuser( string communityid, string userid, connectapi.recommendationactiontype action, string objectcategory, connectapi.recommendationactiontype contextaction, string contextobjectid, connectapi.recommendationchannel channel, integer maxresults, connectapi.recommendationcollection result);

    static void settestgetrecommendationsforuser( string communityid, string userid, connectapi.recommendationactiontype action, string objectcategory, connectapi.recommendationactiontype contextaction, string contextobjectid, integer maxresults, connectapi.recommendationcollection result);

    static void settestgetrecommendationsforuser( string communityid, string userid, connectapi.recommendationactiontype contextaction, string contextobjectid, connectapi.recommendationchannel channel, integer maxresults, connectapi.recommendationcollection result);

    static void settestgetrecommendationsforuser( string communityid, string userid, connectapi.recommendationactiontype contextaction, string contextobjectid, integer maxresults, connectapi.recommendationcollection result);

    static connectapi.recommendationaudience updaterecommendationaudience( string communityid, string recommendationaudienceid, connectapi.recommendationaudienceinput recommendationaudience);

    static connectapi.recommendationdefinition updaterecommendationdefinition( string communityid, string recommendationdefinitionid, connectapi.recommendationdefinitioninput recommendationdefinition);

    static connectapi.recommendationdefinition updaterecommendationdefinition( string communityid, string recommendationdefinitionid, string name, string title, string actionurl, string actionurlname, string explanation);

    static connectapi.photo updaterecommendationdefinitionphoto( string communityid, string recommendationdefinitionid, connectapi.binaryinput fileupload);

    static connectapi.photo updaterecommendationdefinitionphoto( string communityid, string recommendationdefinitionid, string fileid, integer versionnumber);

    static connectapi.photo updaterecommendationdefinitionphotowithattributes( string communityid, string recommendationdefinitionid, connectapi.photoinput photo);

    static connectapi.photo updaterecommendationdefinitionphotowithattributes( string communityid, string recommendationdefinitionid, connectapi.photoinput photo, connectapi.binaryinput fileupload);

    static connectapi.scheduledrecommendation updatescheduledrecommendation( string communityid, string scheduledrecommendationid, connectapi.scheduledrecommendationinput scheduledrecommendation);

    static connectapi.scheduledrecommendation updatescheduledrecommendation( string communityid, string scheduledrecommendationid, integer rank, boolean enabled, string recommendationaudienceid);

}
//////////////////////////////////////////

@namespace('connectapi')
class recommendationscapability extends connectapi.feedelementcapability { 
    list<connectapi._7yabstract_7yrecommendation> items { set; get; }
     recommendationscapability( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum recommendationtype { apps, custom, files, groups, records, topics, users}
//////////////////////////////////////////

@namespace('connectapi')
class recommendedobject extends connectapi.actor { 
    string idorenum { set; get; }
    connectapi.motif motif { set; get; }
     recommendedobject( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum recommendedobjecttype { today}
//////////////////////////////////////////

@namespace('connectapi')
enum recordcolumnorder { leftright, topdown}
//////////////////////////////////////////

@namespace('connectapi')
class recordfield extends connectapi.labeledrecord_7yfield { 
     recordfield( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum recordfieldtype { address, blank, boolean, compound, createdby, currency, date, datetime, email, lastmodifiedby, location, name, number, percent, phone, picklist, reference, text, time}
//////////////////////////////////////////

@namespace('connectapi')
class records { 
    static connectapi.motif getmotif( string communityid, string idorprefix);

    static list<connectapi.batchresult> getmotifbatch( string communityid, list<string> idorprefixlist);

}
//////////////////////////////////////////

@namespace('connectapi')
class recordsnapshotattachment extends connectapi.feeditemattachment { 
    connectapi._7yrecordview recordview { set; get; }
     recordsnapshotattachment( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class recordsnapshotcapability extends connectapi.feedelementcapability { 
    connectapi._7yrecordview recordview { set; get; }
     recordsnapshotcapability( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class recordsummary extends connectapi.abstractrecordview { 
     recordsummary( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class recordsummarylist { 
    list<connectapi._7yactorwithid> records { set; get; }
    string url { set; get; }
     recordsummarylist( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class recordview extends connectapi.abstractrecordview { 
    list<connectapi._7yrecordview_7ysection> sections { set; get; }
     recordview( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class recordviewsection { 
    integer columncount { set; get; }
    connectapi._7yrecordcolumnorder columnorder { set; get; }
    connectapi._7y_7yabstract_7yrecordfield fields { set; get; }
    string heading { set; get; }
    boolean iscollapsible { set; get; }
     recordviewsection( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class reference { 
    string id { set; get; }
    string url { set; get; }
     reference( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class referencerecordfield extends connectapi.labeledrecordfield { 
    connectapi._7yrecordsummary reference { set; get; }
     referencerecordfield( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class referencewithdaterecordfield extends connectapi.labeledrecordfield { 
    datetime datevalue { set; get; }
    connectapi._7yrecordsummary reference { set; get; }
     referencewithdaterecordfield( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class relatedfeedpost extends connectapi.actorwithid { 
    double score { set; get; }
    string title { set; get; }
}
//////////////////////////////////////////

@namespace('connectapi')
class relatedfeedposts { 
    list<connectapi._7yrelatedfeedpost> relatedfeedposts { set; get; }
}
//////////////////////////////////////////

@namespace('connectapi')
enum relatedfeedposttype { answered, bestanswer, generic, unanswered}
//////////////////////////////////////////

@namespace('connectapi')
class relatedquestion extends connectapi.relatedfeedpost { 
    boolean hasbestanswer { set; get; }
    connectapi._7yinteractions_7ycapability interactions { set; get; }
}
//////////////////////////////////////////

@namespace('connectapi')
class reputation { 
    connectapi._7yreputationlevel reputationlevel { set; get; }
    double reputationpoints { set; get; }
    string url { set; get; }
     reputation( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class reputationlevel { 
    string levelimageurl { set; get; }
    string levelname { set; get; }
    integer levelnumber { set; get; }
     reputationlevel( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class requestheader { 
    string name { set; get; }
    string value { set; get; }
     requestheader( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class requestheaderinput { 
    string name { set; get; }
    string value { set; get; }
     requestheaderinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class resourcelinksegment { 
    string url { set; get; }
     resourcelinksegment( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class scheduledrecommendation { 
    connectapi._7yrecommendation_7ychannel channel { set; get; }
    boolean enabled { set; get; }
    string id { set; get; }
    integer rank { set; get; }
    string recommendationaudienceid { set; get; }
    connectapi._7yrecommendation_7ydefinition recommendationdefinitionrepresentation { set; get; }
    string url { set; get; }
     scheduledrecommendation( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class scheduledrecommendationinput { 
    connectapi._7yrecommendation_7ychannel channel { set; get; }
    boolean enabled { set; get; }
    integer rank { set; get; }
    string recommendationaudienceid { set; get; }
    string recommendationdefinitionid { set; get; }
     scheduledrecommendationinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class scheduledrecommendationpage { 
    list<connectapi._7yscheduled_7yrecommendation> scheduledrecommendations { set; get; }
    string url { set; get; }
     scheduledrecommendationpage( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class socialaccount { 
    string handle { set; get; }
    string externalsocial_7yaccountid { set; get; }
    string name { set; get; }
    string profileurl { set; get; }
     socialaccount( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum socialnetworkprovider { facebook, googleplus, instagram, line, linkedin, other, pinterest, sinaweibo, twitter, vkontakte, wechat, whatsapp, youtube}
//////////////////////////////////////////

@namespace('connectapi')
class socialpostcapability extends connectapi.feedelementcapability { 
    connectapi._7ysocialaccount author { set; get; }
    string content { set; get; }
    connectapi._7yuser_7ysummary  deletedby { set; get; }
    connectapi.icon icon { set; get; }
    string id { set; get; }
    boolean isoutbound { set; get; }
    connectapi._7ysocialpost_7ymessagetype messagetype { set; get; }
    string name { set; get; }
    string posturl { set; get; }
    connectapi._7ysocialnetwork_7yprovider provider { set; get; }
    connectapi._7ysocialaccount recipient { set; get; }
    string recipientid { set; get; }
    connectapi._7ysocialpoststatus status { set; get; }
     socialpostcapability( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class socialpoststatus { 
    string message { set; get; }
    connectapi._7ysocialpoststatustype type { set; get; }
     socialpoststatus( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum socialpoststatustype { approvalpending, approvalrecalled, approvalrejected, deleted, failed, pending, replied, sent, unknown}
//////////////////////////////////////////

@namespace('connectapi')
enum socialpost_7ymessagetype { comment, direct, post, privatemessage, reply, retweet, tweet}
//////////////////////////////////////////

@namespace('connectapi')
enum sortorder { ascending, descending}
//////////////////////////////////////////

@namespace('connectapi')
class statuscapability extends connectapi.feedelementcapability { 
    connectapi._7yfeedentitystatus feedentitystatus { set; get; }
    boolean isapprovable_7ybyme { set; get; }
}
//////////////////////////////////////////

@namespace('connectapi')
class statuscapabilityinput extends connectapi.feedelementcapabilityinput { 
    connectapi._7yfeedentitystatus feedentitystatus { set; get; }
}
//////////////////////////////////////////

@namespace('connectapi')
class subscription { 
    connectapi._7y_7yreference community { set; get; }
    string id { set; get; }
    connectapi.actor subject { set; get; }
    connectapi.actor subscriber { set; get; }
    string url { set; get; }
     subscription( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class textsegment extends connectapi.messagesegment { 
     textsegment( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class textsegmentinput extends connectapi.messagesegmentinput { 
    string text { set; get; }
     textsegmentinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class timezone { 
    double gmtoffset { set; get; }
    string name { set; get; }
     timezone( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class topic { 
    datetime createddate { set; get; }
    string description { set; get; }
    string id { set; get; }
    connectapi._7ytopicimages images { set; get; }
    boolean isbeingdeleted { set; get; }
    string name { set; get; }
    string nonlocalizedname { set; get; }
    integer talkingabout { set; get; }
    string url { set; get; }
     topic( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class topicendorsement { 
    connectapi._7yuser_7ysummary endorsee { set; get; }
    string endorsementid { set; get; }
    connectapi._7yuser_7ysummary endorser { set; get; }
    connectapi._7ytopic topic { set; get; }
    string url { set; get; }
}
//////////////////////////////////////////

@namespace('connectapi')
class topicendorsementcollection { 
    string currentpageurl { set; get; }
    string nextpageurl { set; get; }
    string previouspageurl { set; get; }
    list<connectapi._7ytopic> topicendorsements { set; get; }
}
//////////////////////////////////////////

@namespace('connectapi')
class topicimages { 
    string coverimageurl { set; get; }
    string featuredimageurl { set; get; }
     topicimages( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class topicinput { 
    string description { set; get; }
    list<string> idstomerge { set; get; }
    string name { set; get; }
     topicinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class topicnamesinput { 
    list<string> topicnames { set; get; }
    list<string> topicsuggestions { set; get; }
     topicnamesinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class topicpage { 
    string currentpageurl { set; get; }
    string nextpageurl { set; get; }
    list<connectapi._7ytopic> topics { set; get; }
     topicpage( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class topics { 
    static connectapi.topic assigntopic( string communityid, string recordid, string topicid);

    static connectapi.topic assigntopicbyname( string communityid, string recordid, string topicname);

    static connectapi.topic createtopic( string communityid, string name, string description);

    static void deletetopic( string communityid, string topicid);

    static connectapi.chattergroupsummarypage getgroupsrecentlytalkingabouttopic( string communityid, string topicid);

    static connectapi.topicpage getrecentlytalkingabouttopicsforgroup( string communityid, string groupid);

    static connectapi.topicpage getrecentlytalkingabouttopicsforuser( string communityid, string userid);

    static connectapi.topicpage getrelatedtopics( string communityid, string topicid);

    static connectapi.topic gettopic( string communityid, string topicid);

    static connectapi.topicsuggestionpage gettopicsuggestions( string communityid, string recordid);

    static connectapi.topicsuggestionpage gettopicsuggestions( string communityid, string recordid, integer maxresults);

    static connectapi.topicsuggestionpage gettopicsuggestionsfortext( string communityid, string text);

    static connectapi.topicsuggestionpage gettopicsuggestionsfortext( string communityid, string text, integer maxresults);

    static connectapi.topicpage gettopics( string communityid);

    static connectapi.topicpage gettopics( string communityid, connectapi.topicsort sortparam);

    static connectapi.topicpage gettopics( string communityid, integer pageparam, integer pagesize);

    static connectapi.topicpage gettopics( string communityid, integer pageparam, integer pagesize, connectapi.topicsort sortparam);

    static connectapi.topicpage gettopics( string communityid, string q, boolean exactmatch);

    static connectapi.topicpage gettopics( string communityid, string q, connectapi.topicsort sortparam);

    static connectapi.topicpage gettopics( string communityid, string q, integer pageparam, integer pagesize);

    static connectapi.topicpage gettopics( string communityid, string q, integer pageparam, integer pagesize, connectapi.topicsort sortparam);

    static connectapi.topicpage gettopics( string communityid, string recordid);

    static connectapi.topicpage gettopicsorfallbacktorenamedtopics( string communityid, string q, boolean exactmatch, boolean fallbacktorenamedtopics);

    static connectapi.topicpage gettrendingtopics( string communityid);

    static connectapi.topicpage gettrendingtopics( string communityid, integer maxresults);

    static connectapi.topic mergetopics( string communityid, string topicid, list<string> idstomerge);

    static connectapi.topicpage reassigntopicsbyname( string communityid, string recordid, connectapi.topicnamesinput topicnames);

    static void settestgetgroupsrecentlytalkingabouttopic( string communityid, string topicid, connectapi.chattergroupsummarypage result);

    static void settestgetrecentlytalkingabouttopicsforgroup( string communityid, string groupid, connectapi.topicpage result);

    static void settestgetrecentlytalkingabouttopicsforuser( string communityid, string userid, connectapi.topicpage result);

    static void settestgetrelatedtopics( string communityid, string topicid, connectapi.topicpage result);

    static void settestgettopicsuggestions( string communityid, string recordid, connectapi.topicsuggestionpage result);

    static void settestgettopicsuggestions( string communityid, string recordid, integer maxresults, connectapi.topicsuggestionpage result);

    static void settestgettopicsuggestionsfortext( string communityid, string text, connectapi.topicsuggestionpage result);

    static void settestgettopicsuggestionsfortext( string communityid, string text, integer maxresults, connectapi.topicsuggestionpage result);

    static void settestgettrendingtopics( string communityid, connectapi.topicpage result);

    static void settestgettrendingtopics( string communityid, integer maxresults, connectapi.topicpage result);

    static void unassigntopic( string communityid, string recordid, string topicid);

    static connectapi.topic updatetopic( string communityid, string topicid, connectapi.topicinput topic);

}
//////////////////////////////////////////

@namespace('connectapi')
class topicscapability extends connectapi.feedelementcapability { 
    boolean canassigntopics { set; get; }
    list<connectapi._7ytopic> items { set; get; }
     topicscapability( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class topicscapabilityinput { 
    string contexttopic_7yname { set; get; }
    list<string> topics { set; get; }
}
//////////////////////////////////////////

@namespace('connectapi')
enum topicsort { alphaasc, populardesc}
//////////////////////////////////////////

@namespace('connectapi')
class topicsuggestion { 
    connectapi._7ytopic existingtopic { set; get; }
    string name { set; get; }
     topicsuggestion( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class topicsuggestionpage { 
    list<connectapi._7ytopicsuggestion> topicsuggestions { set; get; }
     topicsuggestionpage( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class trackedchangeattachment { 
    list<connectapi._7ytrackedchange_7yitem> changes { set; get; }
     trackedchangeattachment( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class trackedchangebundlecapability extends connectapi.bundlecapability { 
    list<connectapi._7ytrackedchangeitem> changes { set; get; }
     trackedchangebundlecapability( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class trackedchangeitem { 
    string fieldname { set; get; }
    string newvalue { set; get; }
    string oldvalue { set; get; }
     trackedchangeitem( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class trackedchangescapability extends connectapi.feedelementcapability { 
    list<connectapi._7ytrackedchangeitem> changes { set; get; }
     trackedchangescapability( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class unauthenticateduser extends connectapi.actor { 
     unauthenticateduser( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class unreadconversationcount { 
    boolean hasmore { set; get; }
    integer unreadcount { set; get; }
     unreadconversationcount( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class user extends connectapi.actorwithid { 
    string additionallabel { set; get; }
    string communitynickname { set; get; }
    string companyname { set; get; }
    string displayname { set; get; }
    string firstname { set; get; }
    boolean ischatterguest { set; get; }
    boolean isinthiscommunity { set; get; }
    string lastname { set; get; }
    connectapi.photo photo { set; get; }
    connectapi.reputation  reputation { set; get; }
    string title { set; get; }
    connectapi._7yusertype usertype { set; get; }
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class usercapabilities { 
    boolean canchat { set; get; }
    boolean candirectmessage { set; get; }
    boolean canedit { set; get; }
    boolean canfollow { set; get; }
    boolean canviewfeed { set; get; }
    boolean canviewfullprofile { set; get; }
    boolean ismoderator { set; get; }
     usercapabilities( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class userchattersettings { 
    connectapi._7ygroupemail_7yfrequency defaultgroupemailfrequency { set; get; }
     userchattersettings( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class userdetail extends connectapi.user { 
    string aboutme { set; get; }
    connectapi._7yaddress address { set; get; }
    connectapi._7ybannerphoto bannerphoto { set; get; }
    connectapi._7ychatter_7yactivity chatteractivity { set; get; }
    connectapi._7yglobal_7yinfluence chatterinfluence { set; get; }
    string email { set; get; }
    integer followerscount { set; get; }
    connectapi._7yfollowing_7ycounts followingcounts { set; get; }
    integer groupcount { set; get; }
    boolean haschatter { set; get; }
    boolean isactive { set; get; }
    string managerid { set; get; }
    string managername { set; get; }
    list<connectapi._7yphone_7ynumber> phonenumbers { set; get; }
    integer thanksreceived { set; get; }
    string username { set; get; }
     userdetail( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class usergrouppage { 
    string currentpageurl { set; get; }
    list<connectapi._7ychatter_7ygroup_7ysummary> groups { set; get; }
    string nextpageurl { set; get; }
    string previouspageurl { set; get; }
    integer total { set; get; }
     usergrouppage( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class userinput { 
    string aboutme { set; get; }
     userinput( );
    java.core.connect.api.input.connectinputrepresentation converttojavaobject( java.common.api.appversion currentversion);

    boolean equals( object obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class useroauthinfo { 
    connect.oauth_7yproviderinfo availableexternal_7yemailservice { set; get; }
    boolean isauthenticated { set; get; }
}
//////////////////////////////////////////

@namespace('connectapi')
class userpage { 
    integer currentpagetoken { set; get; }
    string currentpageurl { set; get; }
    integer nextpagetoken { set; get; }
    string nextpageurl { set; get; }
    integer previouspagetoken { set; get; }
    string previouspageurl { set; get; }
    list<connectapi._7yuser_7ydetail> users { set; get; }
     userpage( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class userprofile { 
    connectapi.usercapabilities capabilities { set; get; }
    string id { set; get; }
    list<connectapi.userprofiletab> tabs { set; get; }
    string url { set; get; }
    connectapi.userdetail userdetail { set; get; }
     userprofile( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class userprofiles { 
    static void deletebannerphoto( string communityid, string userid);

    static void deletephoto( string communityid, string userid);

    static connectapi.bannerphoto getbannerphoto( string communityid, string userid);

    static connectapi.photo getphoto( string communityid, string userid);

    static connectapi.userprofile getuserprofile( string communityid, string userid);

    static connectapi.bannerphoto setbannerphoto( string communityid, string userid, connectapi.binaryinput fileupload);

    static connectapi.bannerphoto setbannerphoto( string communityid, string userid, string fileid, integer versionnumber);

    static connectapi.bannerphoto setbannerphotowithattributes( string communityid, string userid, connectapi.bannerphotoinput bannerphoto);

    static connectapi.bannerphoto setbannerphotowithattributes( string communityid, string userid, connectapi.bannerphotoinput bannerphoto, connectapi.binaryinput fileupload);

    static connectapi.photo setphoto( string communityid, string userid, connectapi.binaryinput fileupload);

    static connectapi.photo setphoto( string communityid, string userid, string fileid, integer versionnumber);

    static connectapi.photo setphotowithattributes( string communityid, string userid, connectapi.photoinput photo);

    static connectapi.photo setphotowithattributes( string communityid, string userid, connectapi.photoinput photo, connectapi.binaryinput fileupload);

}
//////////////////////////////////////////

@namespace('connectapi')
class userprofiletab { 
    string id { set; get; }
    boolean isdefault { set; get; }
    connectapi._7yuserprofile_7ytabtype tabtype { set; get; }
    string taburl { set; get; }
     userprofiletab( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum userprofiletabtype { customvisualforce, customweb, element, feed, overview}
//////////////////////////////////////////

@namespace('connectapi')
class userreferencepage { 
    string currentpageurl { set; get; }
    string nextpageurl { set; get; }
    string previouspageurl { set; get; }
    string usercount { set; get; }
    list<connectapi._7yreference> users { set; get; }
     userreferencepage( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class usersettings { 
    boolean approvalposts { set; get; }
    boolean canfollow { set; get; }
    boolean canmodifyalldata { set; get; }
    boolean canowngroups { set; get; }
    boolean canviewalldata { set; get; }
    boolean canviewallgroups { set; get; }
    boolean canviewallusers { set; get; }
    boolean canviewcommunityswitcher { set; get; }
    boolean canviewfulluserprofile { set; get; }
    boolean canviewpublicfiles { set; get; }
    string currencysymbol { set; get; }
    boolean externaluser { set; get; }
    integer filesynclimit { set; get; }
    integer filesyncstoragelimit { set; get; }
    integer foldersynclimit { set; get; }
    boolean hasaccesstointernalorg { set; get; }
    boolean haschatter { set; get; }
    boolean hasfilesync { set; get; }
    boolean hasfilesyncmanagedclientautoupdate { set; get; }
    boolean hasrestdataapiaccess { set; get; }
    connectapi._7ytimezone timezone { set; get; }
    string userdefaultcurrencyisocode { set; get; }
    string userid { set; get; }
    string userlocale { set; get; }
     usersettings( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class usersummary extends connectapi.user { 
    boolean isactive { set; get; }
     usersummary( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum usertype { chatterguest, chatteronly, guest, internal, portal, system, undefined}
//////////////////////////////////////////

@namespace('connectapi')
enum workflowprocessstatus { approved, fault, held, noresponse, pending, reassigned, rejected, removed, started}
//////////////////////////////////////////

@namespace('connectapi')
class zone { 
    string description { set; get; }
    string id { set; get; }
    boolean isactive { set; get; }
    boolean ischatteranswers { set; get; }
    string name { set; get; }
    string url { set; get; }
    connectapi._7yzoneshowin visibility { set; get; }
    string visibilityid { set; get; }
     zone( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class zonepage { 
    string currentpageurl { set; get; }
    string nextpageurl { set; get; }
    list<connectapi.zone> zones { set; get; }
     zonepage( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class zones { 
    static connectapi.zone getzone( string communityid, string zoneid);

    static connectapi.zonepage getzones( string communityid);

    static connectapi.zonepage getzones( string communityid, integer pageparam, integer pagesize);

    static connectapi.zonesearchpage searchinzone( string communityid, string zoneid, string q, connectapi.zonesearchresulttype filter);

    static connectapi.zonesearchpage searchinzone( string communityid, string zoneid, string q, connectapi.zonesearchresulttype filter, string language);

    static connectapi.zonesearchpage searchinzone( string communityid, string zoneid, string q, connectapi.zonesearchresulttype filter, string pageparam, integer pagesize);

    static void settestsearchinzone( string communityid, string zoneid, string q, connectapi.zonesearchresulttype filter, connectapi.zonesearchpage result);

    static void settestsearchinzone( string communityid, string zoneid, string q, connectapi.zonesearchresulttype filter, string language, connectapi.zonesearchpage result);

    static void settestsearchinzone( string communityid, string zoneid, string q, connectapi.zonesearchresulttype filter, string pageparam, integer pagesize, connectapi.zonesearchpage result);

}
//////////////////////////////////////////

@namespace('connectapi')
class zonesearchpage { 
    string currentpagetoken { set; get; }
    string currentpageurl { set; get; }
    list<connectapi.zonesearchresult> items { set; get; }
    string nextpagetoken { set; get; }
    string nextpageurl { set; get; }
     zonesearchpage( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
class zonesearchresult { 
    boolean hasbestanswer { set; get; }
    string id { set; get; }
    string title { set; get; }
    connectapi._7yzonesearch_7yresulttype type { set; get; }
    string votecount { set; get; }
     zonesearchresult( );
    boolean equals( object obj);

    double getbuildversion( );

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('connectapi')
enum zonesearchresulttype { }
//////////////////////////////////////////

@namespace('connectapi')
enum zoneshowin { community, internal, portal}
//////////////////////////////////////////

@namespace('connectedclouds')
class invocableactionutils { 
     invocableactionutils( );
    static map<string,any> executeverb( string cloudprovider, string verbname, map<string,any> parameters);

}
//////////////////////////////////////////

@namespace('database')
interface batchable< t > { 
    void execute( database.batchablecontext param1, list<any> param2);

    void finish( database.batchablecontext param1);

    system.iterable<t> start( database.batchablecontext param1);

}
//////////////////////////////////////////

@namespace('database')
interface batchablecontext { 
    id getchildjobid( );

    id getjobid( );

}
//////////////////////////////////////////

@namespace('database')
class batchablecontextimpl { 
    id getchildjobid( );

    id getjobid( );

}
//////////////////////////////////////////

@namespace('database')
class deletedrecord { 
    date deleteddate { set; get; }
    id id { set; get; }
    date getdeleteddate( );

    id getid( );

}
//////////////////////////////////////////

@namespace('database')
class deleteresult { 
    list<database.error> errors { set; get; }
    id id { set; get; }
    boolean success { set; get; }
    list<database.error> geterrors( );

    id getid( );

    boolean issuccess( );

}
//////////////////////////////////////////

@namespace('database')
class dmloptions { 
    boolean allowfieldtruncation { set; get; }
    database.dmloptions.assignmentruleheader assignmentruleheader { set; get; }
    database.dmloptions.duplicateruleheader duplicateruleheader { set; get; }
    database.dmloptions.emailheader emailheader { set; get; }
    database.dmloptions.localeoptions localeoptions { set; get; }
    boolean optallornone { set; get; }
     dmloptions( );
class assignmentruleheader { 
    id assignmentruleid { set; get; }
    boolean usedefaultrule { set; get; }
     assignmentruleheader( );
}
class duplicateruleheader { 
    boolean allowsave { set; get; }
    boolean runascurrentuser { set; get; }
     duplicateruleheader( );
}
class emailheader { 
    boolean triggerautoresponseemail { set; get; }
    boolean triggerotheremail { set; get; }
    boolean triggeruseremail { set; get; }
     emailheader( );
}
}
//////////////////////////////////////////

@namespace('database')
class duplicateerror { 
    datacloud.duplicateresult duplicateresult { set; get; }
    datacloud.duplicateresult getduplicateresult( );

    list<string> getfields( );

    string getmessage( );

    system.statuscode getstatuscode( );

}
//////////////////////////////////////////

@namespace('database')
class emptyrecyclebinresult { 
    list<database.error> errors { set; get; }
    id id { set; get; }
    boolean success { set; get; }
    list<database.error> geterrors( );

    id getid( );

    boolean issuccess( );

}
//////////////////////////////////////////

@namespace('database')
class error { 
    list<string> fields { set; get; }
    string message { set; get; }
    system.statuscode statuscode { set; get; }
    list<string> getfields( );

    string getmessage( );

    system.statuscode getstatuscode( );

}
//////////////////////////////////////////

@namespace('database')
class getdeletedresult { 
    list<database.deletedrecord> deletedrecords { set; get; }
    date earliestdateavailable { set; get; }
    date latestdatecovered { set; get; }
    list<database.deletedrecord> getdeletedrecords( );

    date getearliestdateavailable( );

    date getlatestdatecovered( );

}
//////////////////////////////////////////

@namespace('database')
class getupdatedresult { 
    list<id> ids { set; get; }
    date latestdatecovered { set; get; }
    list<id> getids( );

    date getlatestdatecovered( );

}
//////////////////////////////////////////

@namespace('database')
class leadconvert { 
    id accountid { set; get; }
    id contactid { set; get; }
    string convertedstatus { set; get; }
    boolean donotcreateopportunity { set; get; }
    id leadid { set; get; }
    string opportunityname { set; get; }
    boolean overwriteleadsource { set; get; }
    id ownerid { set; get; }
    boolean sendnotificationemail { set; get; }
     leadconvert( );
    id getaccountid( );

    id getcontactid( );

    string getconvertedstatus( );

    id getleadid( );

    string getopportunityname( );

    id getownerid( );

    boolean isdonotcreateopportunity( );

    boolean isoverwriteleadsource( );

    boolean issendnotificationemail( );

    void setaccountid( id param1);

    void setcontactid( id param1);

    void setconvertedstatus( string param1);

    void setdonotcreateopportunity( boolean param1);

    void setleadid( id param1);

    void setopportunityname( string param1);

    void setoverwriteleadsource( boolean param1);

    void setownerid( id param1);

    void setsendnotificationemail( boolean param1);

}
//////////////////////////////////////////

@namespace('database')
class leadconvertresult { 
    id accountid { set; get; }
    id contactid { set; get; }
    list<database.error> errors { set; get; }
    id leadid { set; get; }
    id opportunityid { set; get; }
    boolean success { set; get; }
    id getaccountid( );

    id getcontactid( );

    list<database.error> geterrors( );

    id getleadid( );

    id getopportunityid( );

    boolean issuccess( );

}
//////////////////////////////////////////

@namespace('database')
class mergerequest { 
    sobject masterrecord { set; get; }
    list<string> recordtomergeids { set; get; }
     mergerequest( );
    sobject getmasterrecord( );

    list<string> getrecordtomergeids( );

    void setmasterrecord( sobject param1);

    void setrecordtomergeids( list<string> param1);

}
//////////////////////////////////////////

@namespace('database')
class mergeresult { 
    list<database.error> errors { set; get; }
    id id { set; get; }
    list<string> mergedrecordids { set; get; }
    boolean success { set; get; }
    list<string> updatedrelatedids { set; get; }
    list<database.error> geterrors( );

    id getid( );

    list<string> getmergedrecordids( );

    list<string> getupdatedrelatedids( );

    boolean issuccess( );

}
//////////////////////////////////////////

@namespace('database')
class querylocator { 
    string getquery( );

    database.querylocatoriterator iterator( );

}
//////////////////////////////////////////

@namespace('database')
class querylocatorchunkiterator { 
    boolean hasnext( );

    list<sobject> next( );

}
//////////////////////////////////////////

@namespace('database')
class querylocatoriterator { 
    boolean hasnext( );

    sobject next( );

}
//////////////////////////////////////////

@namespace('database')
class saveresult { 
    list<database.error> errors { set; get; }
    id id { set; get; }
    boolean success { set; get; }
    list<database.error> geterrors( );

    id getid( );

    boolean issuccess( );

}
//////////////////////////////////////////

@namespace('database')
class undeleteresult { 
    list<database.error> errors { set; get; }
    id id { set; get; }
    boolean success { set; get; }
    list<database.error> geterrors( );

    id getid( );

    boolean issuccess( );

}
//////////////////////////////////////////

@namespace('database')
class upsertresult { 
    boolean created { set; get; }
    list<database.error> errors { set; get; }
    id id { set; get; }
    boolean success { set; get; }
    list<database.error> geterrors( );

    id getid( );

    boolean iscreated( );

    boolean issuccess( );

	// fields added from appendix Resolution Library
    string errormessage { set; get; }
    string externalid { set; get; }
//***    boolean success { set; get; }
    boolean equals( object obj);

    integer hashcode( );

    static list<datasource.order> values( );

    static datasource.tableresult error( string errormessage);

    static datasource.upsertresult failure( string externalid, string errormessage);

    static datasource.upsertresult success( string externalid);

}
//////////////////////////////////////////

@namespace('datacloud')
class additionalinformationmap { 
    string name { set; get; }
    string value { set; get; }
    string getname( );

    string getvalue( );

}
//////////////////////////////////////////

@namespace('datacloud')
class duplicateresult { 
    boolean allowsave { set; get; }
    string duplicaterule { set; get; }
    string duplicateruleentitytype { set; get; }
    string errormessage { set; get; }
    list<datacloud.matchresult> matchresults { set; get; }
    string getduplicaterule( );

    string getduplicateruleentitytype( );

    string geterrormessage( );

    list<datacloud.matchresult> getmatchresults( );

    boolean isallowsave( );

}
//////////////////////////////////////////

@namespace('datacloud')
class fielddiff { 
    string difference { set; get; }
    string name { set; get; }
    string getdifference( );

    string getname( );

}
//////////////////////////////////////////

@namespace('datacloud')
class fielddifferencetype { 
    string name { set; get; }
    string getname( );

}
//////////////////////////////////////////

@namespace('datacloud')
class matchrecord { 
    list<datacloud.additionalinformationmap> additionalinformation { set; get; }
    list<datacloud.fielddiff> fielddiffs { set; get; }
    double matchconfidence { set; get; }
    sobject record { set; get; }
    list<datacloud.additionalinformationmap> getadditionalinformation( );

    list<datacloud.fielddiff> getfielddiffs( );

    double getmatchconfidence( );

    sobject getrecord( );

}
//////////////////////////////////////////

@namespace('datacloud')
class matchresult { 
    string entitytype { set; get; }
    list<database.error> errors { set; get; }
    string matchengine { set; get; }
    list<datacloud.matchrecord> matchrecords { set; get; }
    string rule { set; get; }
    integer size { set; get; }
    boolean success { set; get; }
    string getentitytype( );

    list<database.error> geterrors( );

    string getmatchengine( );

    list<datacloud.matchrecord> getmatchrecords( );

    string getrule( );

    integer getsize( );

    boolean issuccess( );

}
//////////////////////////////////////////

@namespace('dataprotection')
class dbbackupportalconnector { 
     dbbackupportalconnector( );
    void getinstancelist( list<string> instancestofill);

    string getrmanstats( list<string> instancenames, string usermessage, long timeoutmilli);

    string getrmanstats( list<string> instancenames, string usermessage, long timeoutmilli, string soapendpoint);

}
//////////////////////////////////////////

@namespace('dom')
class document { 
     document( );
    dom.xmlnode createrootelement( string name, string namespace, string prefix);

    dom.xmlnode getrootelement( );

    void load( string xml);

    string toxmlstring( );

}
//////////////////////////////////////////

@namespace('dom')
class xmlnode { 
    dom.xmlnode addchildelement( string name, string namespace, string prefix);

    dom.xmlnode addcommentnode( string text);

    dom.xmlnode addtextnode( string text);

    string getattribute( string key, string keynamespace);

    integer getattributecount( );

    string getattributekeyat( integer index);

    string getattributekeynsat( integer index);

    string getattributevalue( string key, string keynamespace);

    string getattributevaluens( string key, string keynamespace);

    dom.xmlnode getchildelement( string name, string namespace);

    list<dom.xmlnode> getchildelements( );

    list<dom.xmlnode> getchildren( );

    string getname( );

    string getnamespace( );

    string getnamespacefor( string prefix);

    dom.xmlnodetype getnodetype( );

    dom.xmlnode getparent( );

    string getprefixfor( string namespace);

    string gettext( );

    boolean removeattribute( string key, string keynamespace);

    boolean removechild( any child);

    void setattribute( string key, string value);

    void setattributens( string key, string value, string keynamespace, string valuenamespace);

    void setnamespace( string prefix, string namespace);

}
//////////////////////////////////////////

@namespace('dom')
enum xmlnodetype { comment, element, text}
//////////////////////////////////////////

@namespace('flow')
class interview { 
    object getvariablevalue( string variablename);

    void start( );

}
//////////////////////////////////////////

@namespace('kbmanagement')
class publishingservice { 
     publishingservice( );
    static void archiveonlinearticle( string articleid, datetime scheduleddate);

    static void assigndraftarticletask( string articleid, string assigneeid, string instructions, datetime duedate, boolean sendemailnotification);

    static void assigndrafttranslationtask( string translationversionid, string assigneeid, string instructions, datetime duedate, boolean sendemailnotification);

    static void cancelscheduledarchivingofarticle( string articleid);

    static void cancelscheduledpublicationofarticle( string articleid);

    static void completetranslation( string articleversionid);

    static void deletearchivedarticle( string articleid);

    static void deletearchivedarticleversion( string articleid, integer versionnumber);

    static void deletedraftarticle( string articleid);

    static void deletedrafttranslation( string articleversionid);

    static string editarchivedarticle( string articleid);

    static string editonlinearticle( string articleid, boolean unpublish);

    static string editpublishedtranslation( string articleid, string language, boolean unpublish);

    static void publisharticle( string articleid, boolean flagasnew);

    static string restoreoldversion( string articleid, integer versionnumber);

    static void scheduleforpublication( string articleid, datetime scheduleddate);

    static void settranslationtoincomplete( string articleversionid);

    static string submitfortranslation( string articleid, string language, string assigneeid, datetime duedate);

}
//////////////////////////////////////////

@namespace('liveagent')
class liveagentrealtimesystem { 
     liveagentrealtimesystem( );
    static void cancelchatrequests( list<string> requests);

    static list<liveagent.livechatroutingresult> routechatrequests( list<liveagent.livechatroutingroute> routes);

    static void setbuttonstatus( string livechatbuttonid, boolean online);

}
//////////////////////////////////////////

@namespace('liveagent')
class livechatrouter { 
    void dorouting( list<liveagent.livechatroutingrequest> param1);

}
//////////////////////////////////////////

@namespace('liveagent')
class livechatroutingrequest { 
     livechatroutingrequest( string chatkey, string livechatbuttonid, string livechattranscriptid);
    string getchatkey( );

    string getlivechatbuttonid( );

    string getlivechattranscriptid( );

}
//////////////////////////////////////////

@namespace('liveagent')
class livechatroutingresult { 
    string getchatkey( );

    liveagent.livechatroutingresulttype getresult( );

    boolean issuccess( );

}
//////////////////////////////////////////

@namespace('liveagent')
enum livechatroutingresulttype { invalid, ok, unavailable}
//////////////////////////////////////////

@namespace('liveagent')
class livechatroutingroute { 
     livechatroutingroute( string chatkey, string userid);
    string getchatkey( );

    string getuserid( );

}
//////////////////////////////////////////

@namespace('messaging')
class email { 
    boolean bccsender { set; get; }
    string emailpriority { set; get; }
    string replyto { set; get; }
    boolean saveasactivity { set; get; }
    string senderdisplayname { set; get; }
    string subject { set; get; }
    boolean usesignature { set; get; }
    boolean getbccsender( );

    string getemailpriority( );

    string getreplyto( );

    boolean getsaveasactivity( );

    string getsenderdisplayname( );

    string getsubject( );

    boolean getusesignature( );

    void setbccsender( boolean param1);

    void setemailpriority( string param1);

    void setreplyto( string param1);

    void setsaveasactivity( boolean param1);

    void setsenderdisplayname( string param1);

    void setsubject( string param1);

    void setusesignature( boolean param1);

}
//////////////////////////////////////////

@namespace('messaging')
class emailattachment { 
    blob body { set; get; }
    string contentid { set; get; }
    string contenttype { set; get; }
    string filename { set; get; }
     emailattachment( );
    blob getbody( );

    string getcontentid( );

    string getcontenttype( );

    string getfilename( );

    void setbody( blob param1);

    void setcontentid( string param1);

    void setcontenttype( string param1);

    void setfilename( string param1);

}
//////////////////////////////////////////

@namespace('messaging')
class emailfileattachment { 
    blob body { set; get; }
    string contenttype { set; get; }
    string filename { set; get; }
    boolean inline { set; get; }
     emailfileattachment( );
    blob getbody( );

    string getcontenttype( );

    string getfilename( );

    boolean getinline( );

    void setbody( blob param1);

    void setcontenttype( string param1);

    void setfilename( string param1);

    void setinline( boolean param1);

}
//////////////////////////////////////////

@namespace('messaging')
class emailtosalesforcehandler { 
     emailtosalesforcehandler( );
}
//////////////////////////////////////////

@namespace('messaging')
class inboundemail { 
    list<inboundemail.binaryattachment> binaryattachments { set; get; }
    list<string> ccaddresses { set; get; }
    string fromaddress { set; get; }
    string fromname { set; get; }
    list<inboundemail.header> headers { set; get; }
    string htmlbody { set; get; }
    boolean htmlbodyistruncated { set; get; }
    string inreplyto { set; get; }
    string messageid { set; get; }
    string plaintextbody { set; get; }
    boolean plaintextbodyistruncated { set; get; }
    list<string> references { set; get; }
    string replyto { set; get; }
    string subject { set; get; }
    list<inboundemail.textattachment> textattachments { set; get; }
    list<string> toaddresses { set; get; }
     inboundemail( );
class binaryattachment { 
    blob body { set; get; }
    string filename { set; get; }
    list<messaging.inboundemail.header> headers { set; get; }
    string mimetypesubtype { set; get; }
     binaryattachment( );
}
class header { 
    string name { set; get; }
    string value { set; get; }
     header( );
}
}
//////////////////////////////////////////

@namespace('messaging')
class inboundemailhandler { 
    messaging.inboundemailresult handleinboundemail( messaging.inboundemail param1, messaging.inboundenvelope param2);

}
//////////////////////////////////////////

@namespace('messaging')
class inboundemailresult { 
    string message { set; get; }
    boolean success { set; get; }
     inboundemailresult( );
}
//////////////////////////////////////////

@namespace('messaging')
class inboundenvelope { 
    string fromaddress { set; get; }
    string toaddress { set; get; }
     inboundenvelope( );
}
//////////////////////////////////////////

@namespace('messaging')
class massemailmessage { 
    string description { set; get; }
    list<id> targetobjectids { set; get; }
    id templateid { set; get; }
    list<id> whatids { set; get; }
     massemailmessage( );
    boolean getbccsender( );

    string getdescription( );

    string getemailpriority( );

    string getreplyto( );

    boolean getsaveasactivity( );

    string getsenderdisplayname( );

    string getsubject( );

    list<id> gettargetobjectids( );

    id gettemplateid( );

    boolean getusesignature( );

    list<id> getwhatids( );

    void setbccsender( boolean param1);

    void setdescription( string param1);

    void setemailpriority( string param1);

    void setreplyto( string param1);

    void setsaveasactivity( boolean param1);

    void setsenderdisplayname( string param1);

    void setsubject( string param1);

    void settargetobjectids( list<id> param1);

    void settemplateid( id param1);

    void setusesignature( boolean param1);

    void setwhatids( list<id> param1);

}
//////////////////////////////////////////

@namespace('messaging')
class pushnotification { 
     pushnotification( );
     pushnotification( map<string,any> payload);
    void send( string application, set<string> users);

    void setpayload( map<string,any> payload);

    void setttl( integer ttl);

}
//////////////////////////////////////////

@namespace('messaging')
class pushnotificationpayload { 
     pushnotificationpayload( );
    static map<string,any> apple( string alert, string sound, integer badgecount, map<string,any> userdata);

    static map<string,any> apple( string alertbody, string actionlockey, string lockey, list<string> locargs, string launchimage, string sound, integer badgecount, map<string,any> userdata);

}
//////////////////////////////////////////

@namespace('messaging')
class sendemailerror { 
    string message { set; get; }
    system.statuscode statuscode { set; get; }
    string targetobjectid { set; get; }
    list<string> getfields( );

    string getmessage( );

    system.statuscode getstatuscode( );

    string gettargetobjectid( );

}
//////////////////////////////////////////

@namespace('messaging')
class sendemailresult { 
    list<messaging.sendemailerror> errors { set; get; }
    boolean success { set; get; }
    list<messaging.sendemailerror> geterrors( );

    boolean issuccess( );

}
//////////////////////////////////////////

@namespace('messaging')
class singleemailmessage extends messaging.email { 
    list<string> bccaddresses { set; get; }
    list<string> ccaddresses { set; get; }
    string charset { set; get; }
    list<string> entityattachments { set; get; }
    list<messaging.emailfileattachment> fileattachments { set; get; }
    string htmlbody { set; get; }
    string inreplyto { set; get; }
    string optoutpolicy { set; get; }
    id orgwideemailaddressid { set; get; }
    string plaintextbody { set; get; }
    string references { set; get; }
    id targetobjectid { set; get; }
    id templateid { set; get; }
    list<string> toaddresses { set; get; }
    boolean treatbodiesastemplate { set; get; }
    boolean treattargetobjectasrecipient { set; get; }
    string usermail { set; get; }
    id whatid { set; get; }
     singleemailmessage( );
    list<string> getbccaddresses( );

    boolean getbccsender( );

    list<string> getccaddresses( );

    string getcharset( );

    string getemailpriority( );

    list<string> getentityattachments( );

    list<messaging.emailfileattachment> getfileattachments( );

    string gethtmlbody( );

    string getinreplyto( );

    string getoptoutpolicy( );

    id getorgwideemailaddressid( );

    string getplaintextbody( );

    string getreferences( );

    string getreplyto( );

    boolean getsaveasactivity( );

    string getsenderdisplayname( );

    string getsubject( );

    id gettargetobjectid( );

    id gettemplateid( );

    list<string> gettoaddresses( );

    boolean getusesignature( );

    id getwhatid( );

    boolean istreatbodiesastemplate( );

    boolean istreattargetobjectasrecipient( );

    boolean isusermail( );

    void setbccaddresses( list<string> param1);

    void setbccsender( boolean param1);

    void setccaddresses( list<string> param1);

    void setcharset( string param1);

    void setemailpriority( string param1);

    void setentityattachments( list<string> param1);

    void setfileattachments( list<messaging.emailfileattachment> param1);

    void sethtmlbody( string param1);

    void setinreplyto( string param1);

    void setoptoutpolicy( string param1);

    void setorgwideemailaddressid( id param1);

    void setplaintextbody( string param1);

    void setreferences( string param1);

    void setreplyto( string param1);

    void setsaveasactivity( boolean param1);

    void setsenderdisplayname( string param1);

    void setsubject( string param1);

    void settargetobjectid( id param1);

    void settemplateid( id param1);

    void settoaddresses( list<string> param1);

    void settreatbodiesastemplate( boolean param1);

    void settreattargetobjectasrecipient( boolean param1);

    void setusesignature( boolean param1);

    void setwhatid( id param1);

}
//////////////////////////////////////////

@namespace('messaging')
class textattachment { 
    string body { set; get; }
    boolean bodyistruncated { set; get; }
    string charset { set; get; }
    string filename { set; get; }
    list<messaging.inboundemail.header> headers { set; get; }
    string mimetypesubtype { set; get; }
     textattachment( );
}
//////////////////////////////////////////

@namespace('package')
class version { 
}
//////////////////////////////////////////

@namespace('predictive')
class analysisexception { 
     analysisexception( );
     analysisexception( exception param1);
     analysisexception( string param1, exception param2);
    string gettypename( );

}
//////////////////////////////////////////

@namespace('predictive')
class basepredictedfieldimpl { 
    string tostring( );

}
//////////////////////////////////////////

@namespace('predictive')
class booleanpredictedfield { 
    boolean getpointestimate( );

    predictive.predictedfieldtype gettype( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('predictive')
class categoricalfieldtreatment { 
     categoricalfieldtreatment( );
    predictive.fieldtreatmenttype gettype( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('predictive')
class datepredictedfield { 
    date getpointestimate( );

    predictive.predictedfieldtype gettype( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('predictive')
class doublepredictedfield { 
    double getpointestimate( );

    predictive.predictedfieldtype gettype( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('predictive')
class fieldtreatment { 
    predictive.fieldtreatmenttype gettype( );

}
//////////////////////////////////////////

@namespace('predictive')
enum fieldtreatmenttype { categorical, number, omitted, presence_flag, set, text, time_delta}
//////////////////////////////////////////

@namespace('predictive')
class itempresencereason { 
    list<string> getitems( );

    predictive.reasontype gettype( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('predictive')
class numberfieldtreatment { 
     numberfieldtreatment( );
    predictive.fieldtreatmenttype gettype( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('predictive')
class objectanalysis { 
    predictive.similarresult findsimilar( predictive.row target, string fieldname);

    string getobjectname( );

    predictive.objectrefreshstatus getrefreshstatus( );

    predictive.predictedresult predict( predictive.row fixed, list<string> predict);

    void refresh( predictive.objecttreatment objecttreatment);

    string tostring( );

}
//////////////////////////////////////////

@namespace('predictive')
class objectanalysisservice { 
     objectanalysisservice( );
    static predictive.objectanalysis get( string objectname);

    static list<predictive.objectanalysis> getall( );

}
//////////////////////////////////////////

@namespace('predictive')
enum objectrefreshstate { failed, running, succeeded}
//////////////////////////////////////////

@namespace('predictive')
class objectrefreshstatus { 
    list<string> getdebuginfo( );

    datetime getendtime( );

    list<string> geterrors( );

    predictive.objecttreatment getobjecttreatment( );

    string getrefreshid( );

    datetime getstarttime( );

    predictive.objectrefreshstate getstate( );

    list<string> getwarnings( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('predictive')
class objecttreatment { 
     objecttreatment( );
     objecttreatment( map<string,predictive.fieldtreatment> fieldtreatments);
    map<string,predictive.fieldtreatment> getfieldtreatments( );

    void setfieldtreatments( map<string,predictive.fieldtreatment> fieldtreatments);

    string tostring( );

}
//////////////////////////////////////////

@namespace('predictive')
class omittedfieldtreatment { 
     omittedfieldtreatment( );
    predictive.fieldtreatmenttype gettype( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('predictive')
class predictedfield { 
    predictive.predictedfieldtype gettype( );

}
//////////////////////////////////////////

@namespace('predictive')
enum predictedfieldtype { predicted_boolean, predicted_date, predicted_double, predicted_string}
//////////////////////////////////////////

@namespace('predictive')
class predictedresult { 
    map<string,predictive.predictedfield> getpredictedfields( );

    list<string> getwarnings( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('predictive')
class predictiveexception { 
     predictiveexception( );
     predictiveexception( exception param1);
     predictiveexception( string param1, exception param2);
    string gettypename( );

}
//////////////////////////////////////////

@namespace('predictive')
class presenceflagfieldtreatment { 
     presenceflagfieldtreatment( );
    predictive.fieldtreatmenttype gettype( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('predictive')
class presencereason { 
    predictive.reasontype gettype( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('predictive')
class queryexception { 
     queryexception( );
     queryexception( exception param1);
     queryexception( string param1, exception param2);
    string gettypename( );

}
//////////////////////////////////////////

@namespace('predictive')
class reason { 
    predictive.reasontype gettype( );

}
//////////////////////////////////////////

@namespace('predictive')
enum reasontype { item_presence, presence, value, word_presence}
//////////////////////////////////////////

@namespace('predictive')
class relatedfield { 
     relatedfield( );
     relatedfield( string fieldname, double score, predictive.reason reason);
    string getfieldname( );

    predictive.reason getreason( );

    double getscore( );

    void setfieldname( string fieldname);

    void setreason( predictive.reason reason);

    void setscore( double score);

    string tostring( );

}
//////////////////////////////////////////

@namespace('predictive')
class relatedresult { 
     relatedresult( );
     relatedresult( list<predictive.relatedfield> relatedfields, list<string> warnings);
    list<predictive.relatedfield> getrelatedfields( );

    list<string> getwarnings( );

    void setrelatedfields( list<predictive.relatedfield> relatedfields);

    void setwarnings( list<string> warnings);

    string tostring( );

}
//////////////////////////////////////////

@namespace('predictive')
class row { 
     row( );
    map<string,any> getcells( );

    void setcells( map<string,any> cells);

    string tostring( );

}
//////////////////////////////////////////

@namespace('predictive')
class setfieldtreatment { 
     setfieldtreatment( );
     setfieldtreatment( string bin);
    string getbin( );

    predictive.fieldtreatmenttype gettype( );

    void setbin( string bin);

    string tostring( );

}
//////////////////////////////////////////

@namespace('predictive')
class similarrecord { 
    id getrecordid( );

    double getscore( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('predictive')
class similarresult { 
    list<predictive.similarrecord> getsimilarrecords( );

    list<string> getwarnings( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('predictive')
class stringpredictedfield { 
    string getpointestimate( );

    predictive.predictedfieldtype gettype( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('predictive')
class textfieldtreatment { 
     textfieldtreatment( );
     textfieldtreatment( string bin);
    string getbin( );

    predictive.fieldtreatmenttype gettype( );

    void setbin( string bin);

    string tostring( );

}
//////////////////////////////////////////

@namespace('predictive')
class timedeltafieldtreatment { 
     timedeltafieldtreatment( );
     timedeltafieldtreatment( string fromfield);
    string getfromfield( );

    predictive.fieldtreatmenttype gettype( );

    void setfromfield( string fromfield);

    string tostring( );

}
//////////////////////////////////////////

@namespace('predictive')
class valuereason { 
    predictive.reasontype gettype( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('predictive')
class wordpresencereason { 
    predictive.reasontype gettype( );

    list<string> getwords( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('process')
interface plugin { 
    process.plugindescriberesult describe( );

    process.pluginresult invoke( process.pluginrequest param1);

}
//////////////////////////////////////////

@namespace('process')
class plugindescriberesult { 
    string description { set; get; }
    list<process.plugindescriberesult.inputparameter> inputparameters { set; get; }
    string name { set; get; }
    list<process.plugindescriberesult.outputparameter> outputparameters { set; get; }
    string tag { set; get; }
     plugindescriberesult( );
class inputparameter { 
    string description { set; get; }
    string name { set; get; }
    process.plugindescriberesult.parametertype parametertype { set; get; }
    boolean required { set; get; }
     inputparameter( string name, process.plugindescriberesult.parametertype parametertype, boolean required);
     inputparameter( string name, string description, process.plugindescriberesult.parametertype parametertype, boolean required);
}
class outputparameter { 
    string description { set; get; }
    string name { set; get; }
    process.plugindescriberesult.parametertype parametertype { set; get; }
     outputparameter( string name, process.plugindescriberesult.parametertype parametertype);
     outputparameter( string name, string description, process.plugindescriberesult.parametertype parametertype);
}
enum parametertype { boolean, date, datetime, decimal, double, float, id, integer, long, string}
}
//////////////////////////////////////////

@namespace('process')
class pluginrequest { 
    map<string,any> inputparameters { set; get; }
     pluginrequest( map<string,any> inputparameters);
}
//////////////////////////////////////////

@namespace('process')
class pluginresult { 
    map<string,any> outputparameters { set; get; }
     pluginresult( map<string,any> outputparameters);
     pluginresult( string outputkey, object outputvalue);
}
//////////////////////////////////////////

@namespace('process')
class sparkplugapi { 
     sparkplugapi( );
    static process.sparkplugapi.sparkplugdescriberesult describeplugin( string classname);

    static list<process.sparkplugapi.sparkplugdescriberesult> describeplugins( );

    static string invokepluginwithjson( string classname, string parameters);

}
//////////////////////////////////////////

@namespace('process')
class sparkplugdescriberesult { 
    list<process.plugindescriberesult.inputparameter> inputparameters { set; get; }
    string name { set; get; }
    list<process.plugindescriberesult.outputparameter> outputparameters { set; get; }
     sparkplugdescriberesult( );
}
//////////////////////////////////////////

@namespace('process')
class sparkplugparameter { 
    string name { set; get; }
    process.plugindescriberesult.parametertype parametertype { set; get; }
    boolean required { set; get; }
     sparkplugparameter( );
}
//////////////////////////////////////////

@namespace('quickaction')
class control { 
    integer getdisplaylines( );

    integer gettaborder( );

    string gettype( );

    string getvalue( );

}
//////////////////////////////////////////

@namespace('quickaction')
class describeavailablequickactionresult { 
    string actionenumorid { set; get; }
    string label { set; get; }
    string name { set; get; }
    string type { set; get; }
    string getactionenumorid( );

    string getlabel( );

    string getname( );

    string gettype( );

}
//////////////////////////////////////////

@namespace('quickaction')
class describelayoutcomponent { 
    integer displaylines { set; get; }
    integer taborder { set; get; }
    string type { set; get; }
    string value { set; get; }
    integer getdisplaylines( );

    integer gettaborder( );

    string gettype( );

    string getvalue( );

}
//////////////////////////////////////////

@namespace('quickaction')
class describelayoutitem { 
    boolean editablefornew { set; get; }
    boolean editableforupdate { set; get; }
    string label { set; get; }
    list<quickaction.describelayoutcomponent> layoutcomponents { set; get; }
    boolean placeholder { set; get; }
    boolean required { set; get; }
    string getlabel( );

    list<quickaction.describelayoutcomponent> getlayoutcomponents( );

    boolean iseditablefornew( );

    boolean iseditableforupdate( );

    boolean isplaceholder( );

    boolean isrequired( );

}
//////////////////////////////////////////

@namespace('quickaction')
class describelayoutrow { 
    list<quickaction.describelayoutitem> layoutitems { set; get; }
    integer numitems { set; get; }
    list<quickaction.describelayoutitem> getlayoutitems( );

    integer getnumitems( );

}
//////////////////////////////////////////

@namespace('quickaction')
class describelayoutsection { 
    integer columns { set; get; }
    string heading { set; get; }
    list<quickaction.describelayoutrow> layoutrows { set; get; }
    id parentlayoutid { set; get; }
    integer rows { set; get; }
    string taborder { set; get; }
    boolean usecollapsiblesection { set; get; }
    boolean useheading { set; get; }
    boolean collapsed { set; get; }
    id layoutsectionid { set; get; }
    integer getcolumns( );

    string getheading( );

    list<quickaction.describelayoutrow> getlayoutrows( );

    id getparentlayoutid( );

    integer getrows( );

    string gettaborder( );

    boolean isusecollapsiblesection( );

    boolean isuseheading( );

}
//////////////////////////////////////////

@namespace('quickaction')
class describequickactiondefaultvalue { 
    string defaultvalue { set; get; }
    string field { set; get; }
    string getdefaultvalue( );

    string getfield( );

}
//////////////////////////////////////////

@namespace('quickaction')
class describequickactionresult { 
    boolean accesslevelrequired { set; get; }
    string canvasapplicationid { set; get; }
    string canvasapplicationname { set; get; }
    list<schema.describecolorresult> colors { set; get; }
    string contextsobjecttype { set; get; }
    list<quickaction.describequickactiondefaultvalue> defaultvalues { set; get; }
    integer height { set; get; }
    string iconname { set; get; }
    list<schema.describeiconresult> icons { set; get; }
    string iconurl { set; get; }
    quickaction.describelayoutsection layout { set; get; }
    string miniiconurl { set; get; }
    boolean showquickactionlcheader { set; get; }
    boolean showquickactionvfheader { set; get; }
    string targetparentfield { set; get; }
    string targetrecordtypeid { set; get; }
    string targetsobjecttype { set; get; }
    string visualforcepagename { set; get; }
    string visualforcepageurl { set; get; }
    integer width { set; get; }
    string lightningcomponentbundleid { set; get; }
    string lightningcomponentbundlename { set; get; }
    string lightningcomponentqualifiedname { set; get; }
    string getaccesslevelrequired( );

    string getactionenumorid( );

    string getcanvasapplicationid( );

    string getcanvasapplicationname( );

    list<schema.describecolorresult> getcolors( );

    string getcontextsobjecttype( );

    list<quickaction.describequickactiondefaultvalue> getdefaultvalues( );

    integer getheight( );

    string geticonname( );

    string geticonurl( );

    list<schema.describeiconresult> geticons( );

    string getlabel( );

    quickaction.describelayoutsection getlayout( );

    string getminiiconurl( );

    string getname( );

    boolean getshowquickactionvfheader( );

    string gettargetparentfield( );

    string gettargetrecordtypeid( );

    string gettargetsobjecttype( );

    string gettype( );

    string getvisualforcepagename( );

    string getvisualforcepageurl( );

    integer getwidth( );

}
//////////////////////////////////////////

@namespace('quickaction')
class emptyspace { 
    integer getdisplaylines( );

    integer gettaborder( );

    string gettype( );

    string getvalue( );

}
//////////////////////////////////////////

@namespace('quickaction')
class expandedlookup { 
    integer getdisplaylines( );

    integer gettaborder( );

    string gettype( );

    string getvalue( );

}
//////////////////////////////////////////

@namespace('quickaction')
class field { 
    integer getdisplaylines( );

    integer gettaborder( );

    string gettype( );

    string getvalue( );

}
//////////////////////////////////////////

@namespace('quickaction')
class fieldlayoutcomponent { 
    integer getdisplaylines( );

    integer gettaborder( );

    string gettype( );

    string getvalue( );

}
//////////////////////////////////////////

@namespace('quickaction')
class quickactiondefaults { 
    string getactionname( );

    string getactiontype( );

    id getcontextid( );

    sobject gettargetsobject( );

}
//////////////////////////////////////////

@namespace('quickaction')
interface quickactiondefaultshandler { 
    void oninitdefaults( list<quickaction.quickactiondefaults> param1);

}
//////////////////////////////////////////

@namespace('quickaction')
class quickactionrequest { 
    id contextid { set; get; }
    string quickactionname { set; get; }
    sobject record { set; get; }
     quickactionrequest( );
    id getcontextid( );

    string getquickactionname( );

    sobject getrecord( );

    void setcontextid( id param1);

    void setquickactionname( string param1);

    void setrecord( sobject param1);

}
//////////////////////////////////////////

@namespace('quickaction')
class quickactionresult { 
    id contextid { set; get; }
    boolean created { set; get; }
    list<database.error> errors { set; get; }
    list<id> ids { set; get; }
    boolean success { set; get; }
    string successmessage { set; get; }
    id getcontextid( );

    list<database.error> geterrors( );

    list<id> getids( );

    string getsuccessmessage( );

    boolean iscreated( );

    boolean issuccess( );

}
//////////////////////////////////////////

@namespace('quickaction')
class quickactiontemplateresult { 
    sobject defaultvalueformulas { set; get; }
    sobject defaultvalues { set; get; }
    list<database.error> errors { set; get; }
    boolean success { set; get; }
    sobject getdefaultvalueformulas( );

    sobject getdefaultvalues( );

    list<database.error> geterrors( );

    boolean issuccess( );

}
//////////////////////////////////////////

@namespace('quickaction')
class reportchartcomponent { 
    boolean cachedata { set; get; }
    string contextfilterablefield { set; get; }
    string error { set; get; }
    boolean hideonerror { set; get; }
    boolean includecontext { set; get; }
    boolean showtitle { set; get; }
    string size { set; get; }
    boolean getcachedata( );

    string getcontextfilterablefield( );

    integer getdisplaylines( );

    string geterror( );

    boolean gethideonerror( );

    boolean getincludecontext( );

    boolean getshowtitle( );

    string getsize( );

    integer gettaborder( );

    string gettype( );

    string getvalue( );

}
//////////////////////////////////////////

@namespace('quickaction')
class scontrol { 
    integer getdisplaylines( );

    integer gettaborder( );

    string gettype( );

    string getvalue( );

}
//////////////////////////////////////////

@namespace('quickaction')
class sendemailquickactiondefaults { 
    string getactionname( );

    string getactiontype( );

    id getcontextid( );

    list<string> getfromaddresslist( );

    id getinreplytoid( );

    sobject gettargetsobject( );

    void setignoretemplatesubject( boolean ignoresubject);

    void setinserttemplatebody( boolean insertbody);

    void settemplateid( id templateid);

}
//////////////////////////////////////////

@namespace('quickaction')
class separator { 
    integer getdisplaylines( );

    integer gettaborder( );

    string gettype( );

    string getvalue( );

}
//////////////////////////////////////////

@namespace('quickaction')
class visualforcepage { 
    boolean showlabel { set; get; }
    boolean showscrollbars { set; get; }
    string suggestedheight { set; get; }
    string suggestedwidth { set; get; }
    string url { set; get; }
    integer getdisplaylines( );

    boolean getshowlabel( );

    boolean getshowscrollbars( );

    string getsuggestedheight( );

    string getsuggestedwidth( );

    integer gettaborder( );

    string gettype( );

    string geturl( );

    string getvalue( );

}
//////////////////////////////////////////

@namespace('reports')
class aggregatecolumn { 
    string getacrossgroupingcontext( );

    reports.columndatatype getdatatype( );

    string getdowngroupingcontext( );

    string getlabel( );

    string getname( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
class bucketfield { 
     bucketfield( );
     bucketfield( reports.buckettype buckettype, string devlopername, string label, boolean nulltreatedaszero, string otherbucketlabel, string sourcecolumnname, list<reports.bucketfieldvalue> values);
    reports.buckettype getbuckettype( );

    string getdevlopername( );

    string getlabel( );

    boolean getnulltreatedaszero( );

    string getotherbucketlabel( );

    string getsourcecolumnname( );

    list<reports.bucketfieldvalue> getvalues( );

    void setbuckettype( string value);

    void setbuckettype( reports.buckettype buckettype);

    void setdevlopername( string devlopername);

    void setlabel( string label);

    void setnulltreatedaszero( boolean nulltreatedaszero);

    void setotherbucketlabel( string otherbucketlabel);

    void setsourcecolumnname( string sourcecolumnname);

    void setvalues( list<reports.bucketfieldvalue> values);

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
class bucketfieldvalue { 
     bucketfieldvalue( );
     bucketfieldvalue( string label, list<string> sourcedimensionvalues, double rangeupperbound);
    string getlabel( );

    double getrangeupperbound( );

    list<string> getsourcedimensionvalues( );

    void setlabel( string label);

    void setrangeupperbound( double rangeupperbound);

    void setsourcedimensionvalues( list<string> sourcedimensionvalues);

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
enum buckettype { number, picklist, text}
//////////////////////////////////////////

@namespace('reports')
enum columndatatype { boolean_data, combobox_data, currency_data, datetime_data, date_data, double_data, email_data, html_data, id_data, int_data, multipicklist_data, percent_data, phone_data, picklist_data, reference_data, string_data, textarea_data, time_data, url_data}
//////////////////////////////////////////

@namespace('reports')
enum columnsortorder { ascending, descending}
//////////////////////////////////////////

@namespace('reports')
class crossfilter { 
     crossfilter( );
     crossfilter( list<reports.reportfilter> criteria, boolean includesobject, string primaryentityfield, string relatedentity, string relatedentityjoinfield);
    list<reports.reportfilter> getcriteria( );

    boolean getincludesobject( );

    string getprimaryentityfield( );

    string getrelatedentity( );

    string getrelatedentityjoinfield( );

    void setcriteria( list<reports.reportfilter> criteria);

    void setincludesobject( boolean includesobject);

    void setprimaryentityfield( string primaryentityfield);

    void setrelatedentity( string relatedentity);

    void setrelatedentityjoinfield( string relatedentityjoinfield);

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
enum csfgrouptype { all, custom, grand_total}
//////////////////////////////////////////

@namespace('reports')
enum dategranularity { day, day_in_month, fiscal_period, fiscal_quarter, fiscal_week, fiscal_year, month, month_in_year, none, quarter, week, year}
//////////////////////////////////////////

@namespace('reports')
class detailcolumn { 
    reports.columndatatype getdatatype( );

    string getlabel( );

    string getname( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
class dimension { 
    list<reports.groupingvalue> getgroupings( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
class evaluatedcondition { 
     evaluatedcondition( string aggregatename, string aggregatelabel, double compareto, double value, string displaycompareto, string displayvalue, reports.evaluatedconditionoperator operator);
    string getaggregatelabel( );

    string getaggregatename( );

    double getcompareto( );

    string getdisplaycompareto( );

    string getdisplayvalue( );

    reports.evaluatedconditionoperator getoperator( );

    double getvalue( );

}
//////////////////////////////////////////

@namespace('reports')
enum evaluatedconditionoperator { equal, greater_than, greater_than_equal, less_than, less_than_equal, not_equal}
//////////////////////////////////////////

@namespace('reports')
class featurenotsupportedexception { 
     featurenotsupportedexception( );
     featurenotsupportedexception( exception param1);
     featurenotsupportedexception( string param1, exception param2);
    string gettypename( );

}
//////////////////////////////////////////

@namespace('reports')
class filteroperator { 
    string getlabel( );

    string getname( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
class filtervalue { 
    string getlabel( );

    string getname( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
enum formulatype { currency, number, percent}
//////////////////////////////////////////

@namespace('reports')
class groupingcolumn { 
    reports.columndatatype getdatatype( );

    integer getgroupinglevel( );

    string getlabel( );

    string getname( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
class groupinginfo { 
     groupinginfo( );
     groupinginfo( string name, reports.columnsortorder sortorder, reports.dategranularity dategranularity, string sortaggregate);
    reports.dategranularity getdategranularity( );

    string getname( );

    string getsortaggregate( );

    reports.columnsortorder getsortorder( );

    void setdategranularity( string value);

    void setdategranularity( reports.dategranularity dategranularity);

    void setname( string name);

    void setsortaggregate( string sortaggregate);

    void setsortorder( string value);

    void setsortorder( reports.columnsortorder sortorder);

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
class groupingvalue { 
    list<reports.groupingvalue> getgroupings( );

    string getkey( );

    string getlabel( );

    object getvalue( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
class instanceaccessexception { 
     instanceaccessexception( );
     instanceaccessexception( exception param1);
     instanceaccessexception( string param1, exception param2);
    string gettypename( );

}
//////////////////////////////////////////

@namespace('reports')
class invalidfilterexception { 
     invalidfilterexception( );
     invalidfilterexception( exception param1);
     invalidfilterexception( string param1);
     invalidfilterexception( string param1, exception param2);
    list<string> getfiltererrors( );

    string gettypename( );

}
//////////////////////////////////////////

@namespace('reports')
class invalidreportmetadataexception { 
     invalidreportmetadataexception( );
     invalidreportmetadataexception( exception param1);
     invalidreportmetadataexception( string param1);
     invalidreportmetadataexception( string param1, exception param2);
    list<string> getreportmetadataerrors( );

    string gettypename( );

}
//////////////////////////////////////////

@namespace('reports')
class invalidsnapshotdateexception { 
     invalidsnapshotdateexception( );
     invalidsnapshotdateexception( exception param1);
     invalidsnapshotdateexception( string param1);
     invalidsnapshotdateexception( string param1, exception param2);
    list<string> getsnapshotdateerrors( );

    string gettypename( );

}
//////////////////////////////////////////

@namespace('reports')
class metadataexception { 
     metadataexception( );
     metadataexception( exception param1);
     metadataexception( string param1, exception param2);
    string gettypename( );

}
//////////////////////////////////////////

@namespace('reports')
interface notificationaction { 
    void execute( reports.notificationactioncontext param1);

}
//////////////////////////////////////////

@namespace('reports')
class notificationactioncontext { 
     notificationactioncontext( reports.reportinstance reportinstance, reports.thresholdinformation thresholdinformation);
    reports.reportinstance getreportinstance( );

    reports.thresholdinformation getthresholdinformation( );

}
//////////////////////////////////////////

@namespace('reports')
class reportcsf { 
     reportcsf( );
     reportcsf( string label, string description, reports.formulatype formulatype, integer decimalplaces, string downgroup, reports.csfgrouptype downgrouptype, string acrossgroup, reports.csfgrouptype acrossgrouptype, string formula);
    string getacrossgroup( );

    reports.csfgrouptype getacrossgrouptype( );

    integer getdecimalplaces( );

    string getdescription( );

    string getdowngroup( );

    reports.csfgrouptype getdowngrouptype( );

    string getformula( );

    reports.formulatype getformulatype( );

    string getlabel( );

    void setacrossgroup( string acrossgroup);

    void setacrossgrouptype( string value);

    void setacrossgrouptype( reports.csfgrouptype acrossgrouptype);

    void setdecimalplaces( integer decimalplaces);

    void setdescription( string description);

    void setdowngroup( string downgroup);

    void setdowngrouptype( string value);

    void setdowngrouptype( reports.csfgrouptype downgrouptype);

    void setformula( string formula);

    void setformulatype( string value);

    void setformulatype( reports.formulatype formulatype);

    void setlabel( string label);

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
class reportcurrency { 
    decimal getamount( );

    string getcurrencycode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
class reportdatacell { 
    string getlabel( );

    object getvalue( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
class reportdescriberesult { 
    reports.reportextendedmetadata getreportextendedmetadata( );

    reports.reportmetadata getreportmetadata( );

    reports.reporttypemetadata getreporttypemetadata( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
class reportdetailrow { 
    list<reports.reportdatacell> getdatacells( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
class reportdivisioninfo { 
    string getdefaultvalue( );

    list<reports.filtervalue> getvalues( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
class reportextendedmetadata { 
    map<string,reports.aggregatecolumn> getaggregatecolumninfo( );

    map<string,reports.detailcolumn> getdetailcolumninfo( );

    map<string,reports.groupingcolumn> getgroupingcolumninfo( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
class reportfact { 
    list<reports.summaryvalue> getaggregates( );

    string getkey( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
class reportfactwithdetails { 
    list<reports.summaryvalue> getaggregates( );

    string getkey( );

    list<reports.reportdetailrow> getrows( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
class reportfactwithsummaries { 
    list<reports.summaryvalue> getaggregates( );

    string getkey( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
class reportfilter { 
     reportfilter( );
     reportfilter( string column, string operator, string value);
    string getcolumn( );

    string getoperator( );

    string getvalue( );

    void setcolumn( string column);

    void setoperator( string operator);

    void setvalue( string value);

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
enum reportformat { matrix, multi_block, summary, tabular}
//////////////////////////////////////////

@namespace('reports')
class reportinstance { 
    datetime getcompletiondate( );

    id getid( );

    id getownerid( );

    id getreportid( );

    reports.reportresults getreportresults( );

    datetime getrequestdate( );

    string getstatus( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
class reportinstanceattributes { 
    datetime getcompletiondate( );

    id getid( );

    id getownerid( );

    datetime getrequestdate( );

    string getstatus( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
class reportmanager { 
     reportmanager( );
    static reports.reportdescriberesult describereport( id reportid);

    static map<string,list<reports.filteroperator>> getdatatypefilteroperatormap( );

    static reports.reportinstance getreportinstance( id instanceid);

    static list<reports.reportinstance> getreportinstances( id reportid);

    static reports.reportinstance runasyncreport( id reportid);

    static reports.reportinstance runasyncreport( id reportid, boolean includedetails);

    static reports.reportinstance runasyncreport( id reportid, reports.reportmetadata rmdata);

    static reports.reportinstance runasyncreport( id reportid, reports.reportmetadata rmdata, boolean includedetails);

    static reports.reportresults runreport( id reportid);

    static reports.reportresults runreport( id reportid, boolean includedetails);

    static reports.reportresults runreport( id reportid, reports.reportmetadata rmdata);

    static reports.reportresults runreport( id reportid, reports.reportmetadata rmdata, boolean includedetails);

}
//////////////////////////////////////////

@namespace('reports')
class reportmetadata { 
     reportmetadata( );
     reportmetadata( string name, string developername, id id, list<reports.groupinginfo> groupingsacross, list<reports.groupinginfo> groupingsdown, list<string> aggregates, list<reports.bucketfield> buckets, list<string> detailcolumns, string reportbooleanfilter, list<reports.reportfilter> reportfilters, list<string> historicalsnapshotdates, reports.reportformat reportformat, reports.reporttype reporttype, string currencycode, string scope, string division, list<reports.sortcolumn> sortby, reports.standarddatefilter standarddatefilter, boolean hasdetailrows, boolean hasrecordcount, list<reports.standardfilter> standardfilters, string description, boolean showsubtotals, boolean showgrandtotal, reports.toprows toprows, map<string,reports.reportcsf> customsummaryformula, list<reports.crossfilter> crossfilters);
    list<string> getaggregates( );

    list<reports.bucketfield> getbuckets( );

    list<reports.crossfilter> getcrossfilters( );

    string getcurrencycode( );

    map<string,reports.reportcsf> getcustomsummaryformula( );

    string getdescription( );

    list<string> getdetailcolumns( );

    string getdevelopername( );

    string getdivision( );

    list<reports.groupinginfo> getgroupingsacross( );

    list<reports.groupinginfo> getgroupingsdown( );

    boolean gethasdetailrows( );

    boolean gethasrecordcount( );

    list<string> gethistoricalsnapshotdates( );

    id getid( );

    string getname( );

    string getreportbooleanfilter( );

    list<reports.reportfilter> getreportfilters( );

    reports.reportformat getreportformat( );

    reports.reporttype getreporttype( );

    string getscope( );

    boolean getshowgrandtotal( );

    boolean getshowsubtotals( );

    list<reports.sortcolumn> getsortby( );

    reports.standarddatefilter getstandarddatefilter( );

    list<reports.standardfilter> getstandardfilters( );

    reports.toprows gettoprows( );

    void setaggregates( list<string> aggregates);

    void setbuckets( list<reports.bucketfield> buckets);

    void setcrossfilters( list<reports.crossfilter> crossfilters);

    void setcurrencycode( string currencycode);

    void setcustomsummaryformula( map<string,reports.reportcsf> customsummaryformula);

    void setdescription( string description);

    void setdetailcolumns( list<string> detailcolumns);

    void setdevelopername( string developername);

    void setdivision( string division);

    void setgroupingsacross( list<reports.groupinginfo> groupingsacross);

    void setgroupingsdown( list<reports.groupinginfo> groupingsdown);

    void sethasdetailrows( boolean hasdetailrows);

    void sethasrecordcount( boolean hasrecordcount);

    void sethistoricalsnapshotdates( list<string> historicalsnapshotdates);

    void setid( id id);

    void setname( string name);

    void setreportbooleanfilter( string reportbooleanfilter);

    void setreportfilters( list<reports.reportfilter> reportfilters);

    void setreportformat( string value);

    void setreportformat( reports.reportformat reportformat);

    void setreporttype( reports.reporttype reporttype);

    void setscope( string scope);

    void setshowgrandtotal( boolean showgrandtotal);

    void setshowsubtotals( boolean showsubtotals);

    void setsortby( list<reports.sortcolumn> sortby);

    void setstandarddatefilter( reports.standarddatefilter standarddatefilter);

    void setstandardfilters( list<reports.standardfilter> standardfilters);

    void settoprows( reports.toprows toprows);

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
class reportresults { 
    boolean getalldata( );

    map<string,reports.reportfact> getfactmap( );

    reports.dimension getgroupingsacross( );

    reports.dimension getgroupingsdown( );

    boolean gethasdetailrows( );

    reports.reportextendedmetadata getreportextendedmetadata( );

    reports.reportmetadata getreportmetadata( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
class reportrunexception { 
     reportrunexception( );
     reportrunexception( exception param1);
     reportrunexception( string param1, exception param2);
    string gettypename( );

}
//////////////////////////////////////////

@namespace('reports')
class reportscopeinfo { 
    string getdefaultvalue( );

    list<reports.reportscopevalue> getvalues( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
class reportscopevalue { 
    boolean getallowsdivision( );

    string getlabel( );

    string getvalue( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
class reporttype { 
     reporttype( );
     reporttype( string type, string label);
    string getlabel( );

    string gettype( );

    void setlabel( string label);

    void settype( string type);

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
class reporttypecolumn { 
    reports.columndatatype getdatatype( );

    list<reports.filtervalue> getfiltervalues( );

    boolean getfilterable( );

    string getlabel( );

    string getname( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
class reporttypecolumncategory { 
    map<string,reports.reporttypecolumn> getcolumns( );

    string getlabel( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
class reporttypemetadata { 
    list<reports.reporttypecolumncategory> getcategories( );

    reports.reportdivisioninfo getdivisioninfo( );

    reports.reportscopeinfo getscopeinfo( );

    list<reports.standarddatefilterdurationgroup> getstandarddatefilterdurationgroups( );

    map<string,reports.standardfilterinfo> getstandardfilterinfos( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
class sortcolumn { 
     sortcolumn( );
     sortcolumn( string sortcolumn, reports.columnsortorder sortorder);
    string getsortcolumn( );

    reports.columnsortorder getsortorder( );

    void setsortcolumn( string sortcolumn);

    void setsortorder( string value);

    void setsortorder( reports.columnsortorder sortorder);

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
class standarddatefilter { 
     standarddatefilter( );
     standarddatefilter( string column, string durationvalue, string startdate, string enddate);
    string getcolumn( );

    string getdurationvalue( );

    string getenddate( );

    string getstartdate( );

    void setcolumn( string column);

    void setdurationvalue( string durationvalue);

    void setenddate( string enddate);

    void setstartdate( string startdate);

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
class standarddatefilterduration { 
    string getenddate( );

    string getlabel( );

    string getstartdate( );

    string getvalue( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
class standarddatefilterdurationgroup { 
    string getlabel( );

    list<reports.standarddatefilterduration> getstandarddatefilterdurations( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
class standardfilter { 
     standardfilter( );
     standardfilter( string name, string value);
    string getname( );

    string getvalue( );

    void setname( string name);

    void setvalue( string value);

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
class standardfilterinfo { 
    string getlabel( );

    reports.standardfiltertype gettype( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
class standardfilterinfopicklist { 
    string getdefaultvalue( );

    list<reports.filtervalue> getfiltervalues( );

    string getlabel( );

    reports.standardfiltertype gettype( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
enum standardfiltertype { picklist}
//////////////////////////////////////////

@namespace('reports')
class summaryvalue { 
    string getlabel( );

    object getvalue( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
class thresholdinformation { 
     thresholdinformation( list<reports.evaluatedcondition> evaluatedconditions);
    list<reports.evaluatedcondition> getevaluatedconditions( );

}
//////////////////////////////////////////

@namespace('reports')
class toprows { 
     toprows( );
     toprows( integer rowlimit, reports.columnsortorder direction);
    reports.columnsortorder getdirection( );

    integer getrowlimit( );

    void setdirection( string value);

    void setdirection( reports.columnsortorder direction);

    void setrowlimit( integer rowlimit);

    string tostring( );

}
//////////////////////////////////////////

@namespace('reports')
class unsupportedoperationexception { 
     unsupportedoperationexception( );
     unsupportedoperationexception( exception param1);
     unsupportedoperationexception( string param1, exception param2);
    string gettypename( );

}
//////////////////////////////////////////

@namespace('schema')
class childrelationship { 
    boolean cascadedelete { set; get; }
    schema.sobjecttype childsobject { set; get; }
    boolean deprecatedandhidden { set; get; }
    schema.sobjectfield field { set; get; }
    string junctionidlistname { set; get; }
    list<schema.sobjecttype> junctionreferenceto { set; get; }
    string relationshipname { set; get; }
    boolean restricteddelete { set; get; }
    schema.sobjecttype getchildsobject( );

    schema.sobjectfield getfield( );

    string getjunctionidlistname( );

    list<schema.sobjecttype> getjunctionreferenceto( );

    string getrelationshipname( );

    boolean iscascadedelete( );

    boolean isdeprecatedandhidden( );

    boolean isrestricteddelete( );

}
//////////////////////////////////////////

@namespace('schema')
class datacategory { 
    list<schema.datacategory> childcategories { set; get; }
    string label { set; get; }
    string name { set; get; }
    list<schema.datacategory> getchildcategories( );

    string getlabel( );

    string getname( );

}
//////////////////////////////////////////

@namespace('schema')
class datacategorygroupsobjecttypepair { 
    string datacategorygroupname { set; get; }
    string sobject { set; get; }
     datacategorygroupsobjecttypepair( );
    string getdatacategorygroupname( );

    string getsobject( );

    void setdatacategorygroupname( string param1);

    void setsobject( string param1);

}
//////////////////////////////////////////

@namespace('schema')
class describecolorresult { 
    string color { set; get; }
    string context { set; get; }
    string theme { set; get; }
    string getcolor( );

    string getcontext( );

    string gettheme( );

}
//////////////////////////////////////////

@namespace('schema')
class describedatacategorygroupresult { 
    integer categorycount { set; get; }
    string description { set; get; }
    string label { set; get; }
    string name { set; get; }
    string sobject { set; get; }
    integer getcategorycount( );

    string getdescription( );

    string getlabel( );

    string getname( );

    string getsobject( );

}
//////////////////////////////////////////

@namespace('schema')
class describedatacategorygroupstructureresult { 
    string description { set; get; }
    string label { set; get; }
    string name { set; get; }
    string sobject { set; get; }
    list<schema.datacategory> topcategories { set; get; }
    string getdescription( );

    string getlabel( );

    string getname( );

    string getsobject( );

    list<schema.datacategory> gettopcategories( );

}
//////////////////////////////////////////

@namespace('schema')
class describefieldresult { 
    boolean accessible { set; get; }
    boolean aggregatable { set; get; }
    boolean autonumber { set; get; }
    integer bytelength { set; get; }
    boolean calculated { set; get; }
    string calculatedformula { set; get; }
    boolean cascadedelete { set; get; }
    boolean casesensitive { set; get; }
    schema.sobjectfield controller { set; get; }
    boolean createable { set; get; }
    boolean custom { set; get; }
    boolean defaultedoncreate { set; get; }
    object defaultvalue { set; get; }
    string defaultvalueformula { set; get; }
    boolean dependentpicklist { set; get; }
    boolean deprecatedandhidden { set; get; }
    integer digits { set; get; }
    boolean displaylocationindecimal { set; get; }
    boolean encrypted { set; get; }
    boolean externalid { set; get; }
    boolean filterable { set; get; }
    schema.filteredlookupinfo filteredlookupinfo { set; get; }
    boolean groupable { set; get; }
    boolean highscalenumber { set; get; }
    boolean htmlformatted { set; get; }
    boolean idlookup { set; get; }
    string inlinehelptext { set; get; }
    string label { set; get; }
    integer length { set; get; }
    string localname { set; get; }
    string mask { set; get; }
    string masktype { set; get; }
    string name { set; get; }
    boolean namefield { set; get; }
    boolean namepointing { set; get; }
    boolean nillable { set; get; }
    boolean permissionable { set; get; }
    list<schema.picklistentry> picklistvalues { set; get; }
    integer precision { set; get; }
    boolean querybydistance { set; get; }
    string referencetargetfield { set; get; }
    list<schema.sobjecttype> referenceto { set; get; }
    string relationshipname { set; get; }
    integer relationshiporder { set; get; }
    boolean restricteddelete { set; get; }
    boolean restrictedpicklist { set; get; }
    integer scale { set; get; }
    schema.soaptype soaptype { set; get; }
    schema.sobjectfield sobjectfield { set; get; }
    boolean sortable { set; get; }
    schema.displaytype type { set; get; }
    boolean unique { set; get; }
    boolean updateable { set; get; }
    boolean writerequiresmasterread { set; get; }
    integer getbytelength( );

    string getcalculatedformula( );

    schema.sobjectfield getcontroller( );

    object getdefaultvalue( );

    string getdefaultvalueformula( );

    integer getdigits( );

    schema.filteredlookupinfo getfilteredlookupinfo( );

    string getinlinehelptext( );

    string getlabel( );

    integer getlength( );

    string getlocalname( );

    string getmask( );

    string getmasktype( );

    string getname( );

    list<schema.picklistentry> getpicklistvalues( );

    integer getprecision( );

    string getreferencetargetfield( );

    list<schema.sobjecttype> getreferenceto( );

    string getrelationshipname( );

    integer getrelationshiporder( );

    integer getscale( );

    schema.soaptype getsoaptype( );

    schema.sobjectfield getsobjectfield( );

    schema.displaytype gettype( );

    boolean isaccessible( );

    boolean isaggregatable( );

    boolean isautonumber( );

    boolean iscalculated( );

    boolean iscascadedelete( );

    boolean iscasesensitive( );

    boolean iscreateable( );

    boolean iscustom( );

    boolean isdefaultedoncreate( );

    boolean isdependentpicklist( );

    boolean isdeprecatedandhidden( );

    boolean isdisplaylocationindecimal( );

    boolean isencrypted( );

    boolean isexternalid( );

    boolean isfilterable( );

    boolean isgroupable( );

    boolean ishighscalenumber( );

    boolean ishtmlformatted( );

    boolean isidlookup( );

    boolean isnamefield( );

    boolean isnamepointing( );

    boolean isnillable( );

    boolean ispermissionable( );

    boolean isquerybydistance( );

    boolean isrestricteddelete( );

    boolean isrestrictedpicklist( );

    boolean issortable( );

    boolean isunique( );

    boolean isupdateable( );

    boolean iswriterequiresmasterread( );

}
//////////////////////////////////////////

@namespace('schema')
class describeiconresult { 
    string contenttype { set; get; }
    integer height { set; get; }
    string theme { set; get; }
    string url { set; get; }
    integer width { set; get; }
    string getcontenttype( );

    integer getheight( );

    string gettheme( );

    string geturl( );

    integer getwidth( );

}
//////////////////////////////////////////

@namespace('schema')
class describesobjectresult { 
    boolean accessible { set; get; }
    list<schema.childrelationship> childrelationships { set; get; }
    boolean createable { set; get; }
    boolean custom { set; get; }
    boolean customsetting { set; get; }
    boolean deletable { set; get; }
    boolean deprecatedandhidden { set; get; }
    boolean feedenabled { set; get; }
    schema.sobjecttypefieldsets fieldsets { set; get; }
    string keyprefix { set; get; }
    string label { set; get; }
    string labelplural { set; get; }
    string localname { set; get; }
    boolean mergeable { set; get; }
    string name { set; get; }
    boolean queryable { set; get; }
    list<schema.recordtypeinfo> recordtypeinfos { set; get; }
    map<id,schema.recordtypeinfo> recordtypeinfosbyid { set; get; }
    map<string,schema.recordtypeinfo> recordtypeinfosbyname { set; get; }
    boolean searchable { set; get; }
    schema.sobjecttype sobjecttype { set; get; }
    boolean undeletable { set; get; }
    boolean updateable { set; get; }
    list<schema.childrelationship> getchildrelationships( );

    schema.sobjecttypefieldsets getfieldsets( );

    string getkeyprefix( );

    string getlabel( );

    string getlabelplural( );

    string getlocalname( );

    string getname( );

    list<schema.recordtypeinfo> getrecordtypeinfos( );

    map<id,schema.recordtypeinfo> getrecordtypeinfosbyid( );

    map<string,schema.recordtypeinfo> getrecordtypeinfosbyname( );

    schema.sobjecttype getsobjecttype( );

    boolean isaccessible( );

    boolean iscreateable( );

    boolean iscustom( );

    boolean iscustomsetting( );

    boolean isdeletable( );

    boolean isdeprecatedandhidden( );

    boolean isfeedenabled( );

    boolean ismergeable( );

    boolean isqueryable( );

    boolean issearchable( );

    boolean isundeletable( );

    boolean isupdateable( );

    /*** fields from appendix file ***/
    schema.sobjecttypefields fields;
    schema.sobjecttypefields getfields( );
    /*****/
}
//////////////////////////////////////////

@namespace('schema')
class describetabresult { 
    list<schema.describecolorresult> colors { set; get; }
    boolean custom { set; get; }
    list<schema.describeiconresult> icons { set; get; }
    string iconurl { set; get; }
    string label { set; get; }
    string miniiconurl { set; get; }
    string name { set; get; }
    string sobjectname { set; get; }
    string url { set; get; }
    list<schema.describecolorresult> getcolors( );

    string geticonurl( );

    list<schema.describeiconresult> geticons( );

    string getlabel( );

    string getminiiconurl( );

    string getname( );

    string getsobjectname( );

    string geturl( );

    boolean iscustom( );

}
//////////////////////////////////////////

@namespace('schema')
class describetabsetresult { 
    string description { set; get; }
    string label { set; get; }
    string logourl { set; get; }
    string namespace { set; get; }
    boolean selected { set; get; }
    list<schema.describetabresult> tabs { set; get; }
    string tabsetid { set; get; }
    string getdescription( );

    string getlabel( );

    string getlogourl( );

    string getnamespace( );

    string gettabsetid( );

    list<schema.describetabresult> gettabs( );

    boolean isselected( );

}
//////////////////////////////////////////

@namespace('schema')
enum displaytype { address, anytype, base64, boolean, combobox, complexvalue, currency, datacategorygroupreference, date, datetime, double, email, encryptedstring, id, integer, location, multipicklist, percent, phone, picklist, reference, sobject, string, textarea, time, url}
//////////////////////////////////////////

@namespace('schema')
class fieldset { 
    string description { set; get; }
    list<schema.fieldsetmember> fields { set; get; }
    string label { set; get; }
    string name { set; get; }
    string namespace { set; get; }
    schema.sobjecttype sobjecttype { set; get; }
    string getdescription( );

    list<schema.fieldsetmember> getfields( );

    string getlabel( );

    string getname( );

    string getnamespace( );

    schema.sobjecttype getsobjecttype( );

}
//////////////////////////////////////////

@namespace('schema')
class fieldsetmember { 
    boolean dbrequired { set; get; }
    string fieldpath { set; get; }
    string label { set; get; }
    boolean required { set; get; }
    schema.displaytype type { set; get; }
    boolean getdbrequired( );

    string getfieldpath( );

    string getlabel( );

    boolean getrequired( );

    schema.displaytype gettype( );

}
//////////////////////////////////////////

@namespace('schema')
class filteredlookupinfo { 
    list<string> controllingfields { set; get; }
    boolean dependent { set; get; }
    boolean optionalfilter { set; get; }
    list<string> getcontrollingfields( );

    boolean isdependent( );

    boolean isoptionalfilter( );

}
//////////////////////////////////////////

@namespace('schema')
class picklistentry { 
    boolean active { set; get; }
    boolean defaultvalue { set; get; }
    string label { set; get; }
    string value { set; get; }
    string getlabel( );

    string getvalue( );

    boolean isactive( );

    boolean isdefaultvalue( );

}
//////////////////////////////////////////

@namespace('schema')
class recordtypeinfo { 
    boolean available { set; get; }
    boolean defaultrecordtypemapping { set; get; }
    boolean master { set; get; }
    string name { set; get; }
    id recordtypeid { set; get; }
    string getname( );

    id getrecordtypeid( );

    boolean isavailable( );

    boolean isdefaultrecordtypemapping( );

    boolean ismaster( );

}
//////////////////////////////////////////

@namespace('schema')
enum soaptype { abstract_placeholder_metadata, access_mapping, account_criteria_based_sharing_rule, account_owner_sharing_rule, account_settings, account_sharing_rules, account_sharing_rule_settings, account_territory_sharing_rule, account_territory_sharing_rules, action_link_group_template, action_link_template, action_override, activities_settings, address, address_settings, add_on_definition, adjustments_settings, agent_config_assignments, agent_config_buttons, agent_config_profile_assignments, agent_config_skills, agent_config_user_assignments, analytics_cloud_component_layout_item, analytic_snapshot, analytic_snapshot_mapping, android_push_application_setup, anytype, apexcodecoverage_coverage, apex_class, apex_component, apex_page, apex_trigger, apex_trigger_coupling, apple_push_application_setup, application, applications, approval_action, approval_entry_criteria, approval_page_field, approval_process, approval_step, approval_step_approver, approval_step_reject_behavior, approval_submitter, approver, app_menu, app_menu_item, array, article_type_channel_display, article_type_template, assignment_rule, assignment_rules, attachment, aura_component, aura_definition_bundle, auth_provider, auto_response_rule, auto_response_rules, base64, base64binary, base_entity_rule, base_entity_rules, base_field_assignment, base_live_agent_metadata, base_permission_metadata, base_sharing_rule, base_visualforce_metadata, boolean, branding, branding_value, business_hours_entry, business_hours_settings, business_process, call_center, call_center_item, call_center_section, campaign_criteria_based_sharing_rule, campaign_owner_sharing_rule, campaign_sharing_rules, canvas_metadata, case_criteria_based_sharing_rule, case_owner_sharing_rule, case_settings, case_sharing_rules, case_team, case_team_role, certificate, channel_layout, channel_layout_item, chart_summary, chatter_answers_reputation_level, chatter_answers_settings, chatter_mobile_settings, cloud_service_provider, cloud_service_provider_api, community, compact_layout, company_settings, component_instance, component_instance_property, connected_app, connected_app_attribute, connected_app_canvas_config, connected_app_ip_range, connected_app_mobile_detail_config, connected_app_oauth_config, connected_app_saml_config, connectivity_attributes_metadata, connectivity_dev_config_metadata, console_component, contact_criteria_based_sharing_rule, contact_owner_sharing_rule, contact_sharing_rules, container, contract_settings, cors_whitelist_origin, countries_and_states, country, criteria_based_sharing_rule, custom_application, custom_application_component, custom_application_components, custom_application_translation, custom_console_components, custom_data_type, custom_data_type_component, custom_data_type_component_translation, custom_data_type_translation, custom_feed_filter, custom_field, custom_field_translation, custom_label, custom_labels, custom_label_translation, custom_metadata, custom_metadata_value, custom_object, custom_object_criteria_based_sharing_rule, custom_object_owner_sharing_rule, custom_object_sharing_rules, custom_object_translation, custom_page_web_link, custom_page_web_link_translation, custom_permission, custom_permission_dependency_required, custom_shortcut, custom_site, custom_tab, custom_tab_translation, dashboard, dashboard_component, dashboard_component_section, dashboard_filter, dashboard_filter_column, dashboard_filter_option, dashboard_folder, dashboard_mobile_settings, dashboard_table_column, data_category, data_category_group, data_pipeline, data_source_settings, date, datetime, default_shortcut, delegate_group, deleted_members, deploy_details, division, document, document_folder, domain_whitelist, double, durable_id_list, edition_definition, email_folder, email_template, email_to_case_routing_address, email_to_case_settings, entitlement_process, entitlement_process_milestone_item, entitlement_process_milestone_time_trigger, entitlement_settings, entitlement_template, entity_implements, escalation_action, escalation_rule, escalation_rules, event_delivery, event_parameter_map, event_subscription, event_type, event_type_parameter, execution_overlay_apex_result, execution_overlay_heapdump, execution_overlay_soql_result, external_data_source, feed_filter_criterion, feed_item_settings, feed_layout, feed_layout_component, feed_layout_filter, field_criteria, field_criterion, field_implements, field_override, field_set, field_set_item, field_value, filter_item, find_similar_opp_filter, fiscal_year_settings, flexi_page, flexi_page_region, float, flow, flow_abstract_parameter, flow_abstract_value_element, flow_action_call, flow_action_call_input_parameter, flow_action_call_output_parameter, flow_apex_plugin_call, flow_apex_plugin_call_input_parameter, flow_apex_plugin_call_output_parameter, flow_assignment, flow_assignment_item, flow_base_element, flow_base_metadata_value, flow_choice, flow_condition, flow_connector, flow_constant, flow_decision, flow_definition, flow_dynamic_choice_set, flow_element, flow_element_reference_or_value, flow_formula, flow_input_field_assignment, flow_input_validation_rule, flow_loop, flow_metadata_value, flow_node, flow_output_field_assignment, flow_record_create, flow_record_delete, flow_record_filter, flow_record_lookup, flow_record_update, flow_rule, flow_screen, flow_screen_field, flow_step, flow_subflow_input_assignment, flow_subflow_output_assignment, flow_text_template, flow_variable, flow_wait, flow_wait_event, flow_wait_event_input_parameter, flow_wait_event_output_parameter, folder, folder_share, forecasting_category_mapping, forecasting_settings, forecasting_type_settings, forecast_range_settings, ftest_complex_type, ftest_first_top_level, ftest_generated_entity_complex_value_type, ftest_generated_entity_complex_value_type2, ftest_second_top_level, global_picklist, global_picklist_value, global_quick_action_translation, group, history_retention_policy, holiday, home_page_component, home_page_layout, id, ideas_settings, idea_reputation_level, included_feature, included_platform_license_definition, included_user_license_definition, installed_package, integer, ip_range, keyboard_shortcuts, keyword, keyword_list, knowledge_answer_settings, knowledge_case_settings, knowledge_communities_settings, knowledge_language, knowledge_language_settings, knowledge_settings, knowledge_sites_settings, layout, layout_column, layout_item, layout_section, layout_section_translation, layout_translation, lead_criteria_based_sharing_rule, lead_owner_sharing_rule, lead_sharing_rules, letterhead, letterhead_header_footer, letterhead_line, licensed_custom_permissions, license_definition, list_placement, list_view, list_view_filter, live_agent_config, live_agent_settings, live_chat_agent_config, live_chat_button, live_chat_button_deployments, live_chat_button_skills, live_chat_deployment, live_chat_deployment_domain_whitelist, live_chat_sensitive_data_rule, location, lookup_filter, lookup_filter_translation, lookup_option, lookup_options_by_object, managed_topic, managed_topics, map_entry, marketing_action_settings, marketing_resource_type, matching_rule, matching_rules, matching_rule_item, metadata, metadata_for_settings, metadata_value, metadata_with_content, metadata_with_only_hardcoded_files, milestone_type, mini_layout, mobile_application_detail, mobile_settings, moderated_entity_field, moderation_rule, module, modules, module_dependencies, module_ref, module_refs, named_credential, named_filter, named_filter_translation, name_settings, network, network_access, network_member_group, network_tab_set, next_automated_approver, no_access_filterable, object_child_translation, object_name_case_value, object_relationship, object_usage, old_sharing_rules, opportunity_criteria_based_sharing_rule, opportunity_list_fields_selected_settings, opportunity_owner_sharing_rule, opportunity_settings, opportunity_sharing_rules, order_settings, org_entity_feature_payload, org_feature_payload, owner_sharing_rule, package, package_branding_settings, package_extension, package_id_mapping, package_localization, package_version, pages_to_open, password_policies, path_assistant, path_assistant_settings, path_assistant_step, permission_set, permission_set_apex_class_access, permission_set_apex_page_access, permission_set_application_visibility, permission_set_custom_permissions, permission_set_external_data_source_access, permission_set_field_permissions, permission_set_object_permissions, permission_set_record_type_visibility, permission_set_tab_setting, permission_set_user_permission, personal_journey_settings, person_list_settings, picklist, picklist_value, picklist_value_translation, platform_action_list, platform_action_list_item, platform_cache_partition, platform_cache_partition_type, platform_license_definition, portal, post_template, primary_tab_components, process_approver, process_definition, process_node, process_transition, product_settings, profile, profile_apex_class_access, profile_apex_page_access, profile_application_visibility, profile_custom_permissions, profile_external_data_source_access, profile_field_level_security, profile_layout_assignment, profile_login_hours, profile_login_ip_range, profile_mapping, profile_object_permissions, profile_record_type_visibility, profile_tab_visibility, profile_user_permission, push_notification, push_notifications, queue, queue_sobject, quick_action, quick_action_layout, quick_action_layout_column, quick_action_layout_item, quick_action_list, quick_action_list_item, quick_action_translation, quotas_settings, quote_settings, record_type, record_types_supported, record_type_picklist_value, record_type_translation, related_content, related_content_item, related_list, related_list_item, relationship_reference_to, remote_site_setting, report, report_aggregate, report_aggregate_reference, report_block_info, report_bucket_field, report_bucket_field_source_value, report_bucket_field_value, report_chart, report_chart_component_layout_item, report_color_range, report_column, report_cross_filter, report_data_category_filter, report_filter, report_filter_item, report_folder, report_grouping, report_historical_selector, report_layout_section, report_param, report_time_frame_filter, report_type, report_type_column, report_type_column_translation, report_type_section_translation, report_type_translation, reputation_branding, reputation_level, reputation_levels, reputation_level_definitions, reputation_points_rule, reputation_points_rules, results_per_page, results_per_page_by_object, role, role_or_territory, rule_entry, saml_sso_config, scontrol, scontrol_translation, search_layouts, search_layout_button, search_layout_buttons_displayed, search_layout_field, search_layout_fields_displayed, search_settings, security_settings, session_settings, setting_item, setting_usage_definition, setting_value, setup_entity_access, shared_to, sharing_base_rule, sharing_criteria_rule, sharing_owner_rule, sharing_reason, sharing_reason_translation, sharing_recalculation, sharing_rules, sharing_set, sharing_territory_rule, sidebar_component, site_dot_com, site_redirect_mapping, site_web_address, skill, skill_assignments, skill_profile_assignments, skill_user_assignments, standard_field_translation, standard_permission_set, state, static_resource, string, subscriber_package_destination_profile, subscriber_package_install_error, subscriber_package_install_errors, subscriber_package_profiles, subscriber_package_profile_mapping, subscriber_package_profile_mappings, subscriber_package_remote_site_setting, subscriber_package_remote_site_settings, subscriber_package_source_profile, subtab_components, summary_layout, summary_layout_item, supervisor_agent_config_skills, symbol_table, synonym_dictionary, synonym_group, s_f_d_c_mobile_settings, territory, territory2, territory2_model, territory2_rule, territory2_rule_association, territory2_rule_item, territory2_settings, territory2_settings_opportunity_filter, territory2_type, time, touch_mobile_settings, transaction_security_action, transaction_security_notification, transaction_security_policy, translations, ui_plugin, user, user_criteria_based_sharing_rule, user_license, user_license_definition, user_mapped, user_membership_sharing_rule, user_sharing_rules, validation_rule, validation_rule_translation, visualization_plugin, visualization_resource, visualization_type, web_link, web_link_common, web_link_translation, web_to_case_settings, weighted_source_category, workflow, workflow_action, workflow_action_reference, workflow_alert, workflow_apex, workflow_chatter_post, workflow_chatter_recipient, workflow_email_recipient, workflow_field_update, workflow_flow_action, workflow_flow_action_parameter, workflow_knowledge_publish, workflow_outbound_message, workflow_quick_create, workflow_rule, workflow_send, workflow_task, workflow_task_translation, workflow_time_trigger, workspace_mapping, workspace_mappings, x_org_hub, x_org_hub_connection, x_org_hub_shared_object, x_org_spoke}
//////////////////////////////////////////

@namespace('schema')
class sobjectfield { 
    schema.describefieldresult getdescribe( );

}
//////////////////////////////////////////

@idiomatic
@namespace('schema')
class sobjecttype { 
    schema.describesobjectresult getdescribe( );

    sobject newsobject( );

    sobject newsobject( id id);

    sobject newsobject( id recordtypeid, boolean loaddefaultvalues);

    schema.sobjectfield getfield( string name);

}
//////////////////////////////////////////

@namespace('search')
class knowledgesuggestionfilter { 
     knowledgesuggestionfilter( );
    void addarticletype( string articletype);

    void adddatacategory( string datacategorygroupname, string datacategoryname);

    void setchannel( string channelname);

    void setdatacategories( map datacategoryfilters);

    void setlanguage( string localecode);

    void setpublishstatus( string publishstatus);

    void setvalidationstatus( string validationstatus);

}
//////////////////////////////////////////

@namespace('search')
class questionsuggestionfilter { 
     questionsuggestionfilter( );
    void addgroupid( string groupid);

    void addnetworkid( string networkid);

    void adduserid( string userid);

    void setgroupids( list<string> groupids);

    void setnetworkids( list<string> networkids);

    void settopicid( string topicid);

    void setuserids( list<string> userids);

}
//////////////////////////////////////////

@namespace('search')
class searchresult { 
    sobject getsobject( );

    string getsnippet( );

    string getsnippet( string field);

}
//////////////////////////////////////////

@namespace('search')
class searchresults { 
    list<search.searchresult> get( string sobjecttype);

}
//////////////////////////////////////////

@namespace('search')
class suggestionoption { 
     suggestionoption( );
    void setfilter( any filter);

    void setlimit( integer limit);

}
//////////////////////////////////////////

@namespace('search')
class suggestionresult { 
    sobject getsobject( );

}
//////////////////////////////////////////

@namespace('search')
class suggestionresults { 
    list<search.suggestionresult> getsuggestionresults( );

    boolean hasmoreresults( );

}
//////////////////////////////////////////

@namespace('site')
class externalusercreateexception { 
     externalusercreateexception( );
     externalusercreateexception( exception param1);
     externalusercreateexception( string param1);
     externalusercreateexception( string param1, exception param2);
    string gettypename( );

    string getmessage( );

    list<string> getdisplaymessages( );

}
//////////////////////////////////////////

@namespace('site')
interface urlrewriter { 
    list<system.pagereference> generateurlfor( list<system.pagereference> param1);

    system.pagereference maprequesturl( system.pagereference param1);

}
//////////////////////////////////////////

@namespace('social')
class inboundsocialposthandler { 
    social.inboundsocialpostresult handleinboundsocialpost( socialpost param1, socialpersona param2, map<string,any> param3);

}
//////////////////////////////////////////

@namespace('social')
class inboundsocialpostresult { 
     inboundsocialpostresult( );
    void setmessage( string message);

    void setsuccess( boolean success);

}
//////////////////////////////////////////

@namespace('support')
interface emailtemplateselector { 
    id getdefaultemailtemplateid( id param1);

}
//////////////////////////////////////////

@namespace('support')
class emailtocasehandler { 
     emailtocasehandler( );
}
//////////////////////////////////////////

@namespace('support')
interface milestonetriggertimecalculator { 
    integer calculatemilestonetriggertime( string param1, string param2);

}
//////////////////////////////////////////

@namespace('system')
class address { 
    string city { set; get; }
    string country { set; get; }
    string countrycode { set; get; }
    string geocodeaccuracy { set; get; }
    string postalcode { set; get; }
    string state { set; get; }
    string statecode { set; get; }
    string street { set; get; }
     address( );
    string getcity( );

    string getcountry( );

    string getcountrycode( );

    double getdistance( system.location other, string unit);

    string getgeocodeaccuracy( );

    double getlatitude( );

    double getlongitude( );

    string getpostalcode( );

    string getstate( );

    string getstatecode( );

    string getstreet( );

}
//////////////////////////////////////////

@namespace('system')
class answers { 
     answers( );
    static list<id> findsimilar( sobject question);

    static void setbestreply( string questionid, string bestreplyid);

}
//////////////////////////////////////////

@namespace('system')
class apexpages { 
    static void addmessage( apexpages.message message);

    static void addmessages( apex_object ex);

    static system.pagereference currentpage( );

    static list<apexpages.message> getmessages( );

    static boolean hasmessages( );

    static boolean hasmessages( apexpages.severity severity);

}
//////////////////////////////////////////

@namespace('system')
class approval { 
     approval( );
    static boolean islocked( id id);

    static map<id,boolean> islocked( list<id> ids);

    static boolean islocked( sobject sobject);

    static map<id,boolean> islocked( list<sobject> sobjects);

    static approval.lockresult lock( id recordid);

    static list<approval.lockresult> lock( list<id> ids);

    static approval.lockresult lock( sobject recordtolock);

    static list<approval.lockresult> lock( list<sobject> recordstolock);

    static approval.lockresult lock( id recordid, boolean allornothing);

    static list<approval.lockresult> lock( list<id> ids, boolean allornothing);

    static approval.lockresult lock( sobject recordtolock, boolean allornothing);

    static list<approval.lockresult> lock( list<sobject> recordstolock, boolean allornothing);

    static approval.processresult process( approval.processrequest approvalrequest);

    static approval.processresult process( approval.processrequest approvalrequest, boolean allornone);

    static list<approval.processresult> process( list<approval.processrequest> approvalrequests);

    static list<approval.processresult> process( list<approval.processrequest> approvalrequests, boolean allornone);

    static approval.unlockresult unlock( id recordid);

    static list<approval.unlockresult> unlock( list<id> ids);

    static approval.unlockresult unlock( sobject recordtounlock);

    static list<approval.unlockresult> unlock( list<sobject> recordstounlock);

    static approval.unlockresult unlock( id recordid, boolean allornothing);

    static list<approval.unlockresult> unlock( list<id> ids, boolean allornothing);

    static approval.unlockresult unlock( sobject recordtounlock, boolean allornothing);

    static list<approval.unlockresult> unlock( list<sobject> recordstounlock, boolean allornothing);

}
//////////////////////////////////////////

@namespace('system')
class assertexception { 
     assertexception( );
     assertexception( exception param1);
     assertexception( string param1);
     assertexception( string param1, exception param2);
    exception getcause( );

    integer getlinenumber( );

    string getmessage( );

    string getstacktracestring( );

    string gettypename( );

    void initcause( exception cause);

    void setmessage( string message);

}
//////////////////////////////////////////

@namespace('system')
class asyncexception { 
     asyncexception( );
     asyncexception( exception param1);
     asyncexception( string param1);
     asyncexception( string param1, exception param2);
    exception getcause( );

    integer getlinenumber( );

    string getmessage( );

    string getstacktracestring( );

    string gettypename( );

    void initcause( exception cause);

    void setmessage( string message);

}
//////////////////////////////////////////

@namespace('system')
class aura { 
    static any getcomponent( );

    static void redirect( apex_object pagereference);

}
//////////////////////////////////////////

@namespace('system')
class blob { 
    integer size( );

    static blob topdf( string o);

    string tostring( );

    static blob valueof( string o);

}
//////////////////////////////////////////

@namespace('system')
class boolean { 
    void adderror( apex_object msg);

    void adderror( apex_object msg, boolean escape);

    void adderror( string msg);

    void adderror( string msg, boolean escape);

    static boolean valueof( object a);

}
//////////////////////////////////////////

@namespace('system')
class businesshours { 
     businesshours( );
    static datetime add( id businesshoursid, datetime startdate, long interval);

    static datetime addgmt( id businesshoursid, datetime startdate, long interval);

    static long diff( string businesshoursid, datetime startdate, datetime enddate);

    static boolean iswithin( string businesshoursid, datetime targetdate);

    static datetime nextstartdate( id businesshoursid, datetime targetdate);

}
//////////////////////////////////////////

@namespace('system')
class calloutexception { 
     calloutexception( );
     calloutexception( exception param1);
     calloutexception( string param1);
     calloutexception( string param1, exception param2);
    exception getcause( );

    integer getlinenumber( );

    string getmessage( );

    string getstacktracestring( );

    string gettypename( );

    void initcause( exception cause);

    void setmessage( string message);

}
//////////////////////////////////////////

@namespace('system')
class canvasexception { 
     canvasexception( );
     canvasexception( exception param1);
     canvasexception( string param1);
     canvasexception( string param1, exception param2);
    exception getcause( );

    integer getlinenumber( );

    string getmessage( );

    string getstacktracestring( );

    string gettypename( );

    void initcause( exception cause);

    void setmessage( string message);

}
//////////////////////////////////////////

@namespace('system')
class cases { 
     cases( );
    static id getcaseidfromemailthreadid( string emailthreadid);

}
//////////////////////////////////////////

@namespace('system')
class communities { 
     communities( );
    static system.pagereference communitieslanding( );

    static system.pagereference communitieslanding( string starturl);

    static system.pagereference forwardtoauthpage( string starturl);

    static string getcss( );

    static system.pagereference internallogin( string starturl);

    static system.pagereference login( string username, string password, string starturl);

}
//////////////////////////////////////////

@namespace('system')
interface comparable { 
    integer compareto( object param1);

}
//////////////////////////////////////////

@namespace('system')
class continuation { 
    string continuationmethod { set; get; }
    integer timeout { set; get; }
    object state { set; get; }
     continuation( integer timeoutinsecs);
    string addhttprequest( system.httprequest request);

    map<string,system.httprequest> getrequests( );

    static system.httpresponse getresponse( string label);

    string tostring( );

}
//////////////////////////////////////////

@namespace('system')
class cookie { 
     cookie( string param1, string param2, string param3, integer param4, boolean param5);
    string getdomain( );

    integer getmaxage( );

    string getname( );

    string getpath( );

    string getvalue( );

    boolean issecure( );

}
//////////////////////////////////////////

@namespace('system')
class crypto { 
     crypto( );
    static blob decrypt( string algorithmname, blob secretkey, blob initializationvector, blob encrypteddata);

    static blob decryptwithmanagediv( string algorithmname, blob secretkey, blob encrypteddata);

    static blob encrypt( string algorithmname, blob secretkey, blob initializationvector, blob cleardata);

    static blob encryptwithmanagediv( string algorithmname, blob secretkey, blob cleardata);

    static blob generateaeskey( integer size);

    static blob generatedigest( string algorithmname, blob input);

    static blob generatemac( string algorithmname, blob input, blob privatekey);

    static integer getrandominteger( );

    static long getrandomlong( );

    static blob sign( string algorithmname, blob input, blob privatekey);

    static blob signwithcertificate( string algorithmname, blob input, string certdevname);

    static void signxml( string algorithmname, dom.xmlnode node, string idattributename, string certdevname);

}
//////////////////////////////////////////

@namespace('system')
class currency { 
    string format( );

    string formatamount( );

    static currency newinstance( decimal amount, string isocode);

}
//////////////////////////////////////////

@namespace('system')
class database { 
    static database.leadconvertresult convertlead( database.leadconvert leadconvert);

    static database.leadconvertresult convertlead( database.leadconvert leadconvert, apex_object dmloptions);

    static database.leadconvertresult convertlead( database.leadconvert leadconvert, boolean allornothing);

    static list<database.leadconvertresult> convertlead( list<database.leadconvert> leadconverts);

    static list<database.leadconvertresult> convertlead( list<database.leadconvert> leadconverts, apex_object dmloptions);

    static list<database.leadconvertresult> convertlead( list<database.leadconvert> leadconverts, boolean allornothing);

    static integer countquery( string query);

    static database.deleteresult delete( id id);

    static database.deleteresult delete( id id, boolean allornothing);

    static list<database.deleteresult> delete( list<id> ids);

    static list<database.deleteresult> delete( list<id> ids, boolean allornothing);

    static list<database.deleteresult> delete( list<sobject> sobjects);

    static list<database.deleteresult> delete( list<sobject> sobjects, boolean allornothing);

    static database.deleteresult delete( sobject sobject);

    static database.deleteresult delete( sobject sobject, boolean allornothing);

    static list<database.emptyrecyclebinresult> emptyrecyclebin( list<id> ids);

    static list<database.emptyrecyclebinresult> emptyrecyclebin( list<sobject> sobjects);

    static database.emptyrecyclebinresult emptyrecyclebin( sobject sobject);

    static string executebatch( apex_object batchable);

    static string executebatch( apex_object batchable, integer batchsize);

    static database.getdeletedresult getdeleted( string sobjecttype, datetime startdate, datetime enddate);

    static database.querylocator getquerylocator( list<sobject> query);

    static database.querylocator getquerylocator( string query);

    static database.getupdatedresult getupdated( string sobjecttype, datetime startdate, datetime enddate);

    static list<database.saveresult> insert( list<sobject> sobjects);

    static list<database.saveresult> insert( list<sobject> sobjects, database.dmloptions dmloptions);

    static list<database.saveresult> insert( list<sobject> sobjects, boolean allornothing);

    static database.saveresult insert( sobject sobject);

    static database.saveresult insert( sobject sobject, database.dmloptions dmloptions);

    static database.saveresult insert( sobject sobject, boolean allornothing);

    static database.mergeresult merge( sobject master, id duplicate);

    static database.mergeresult merge( sobject master, id duplicate, boolean allornothing);

    static list<database.mergeresult> merge( sobject master, list<id> duplicates);

    static list<database.mergeresult> merge( sobject master, list<id> duplicates, boolean allornothing);

    static list<database.mergeresult> merge( sobject master, list<sobject> duplicates);

    static list<database.mergeresult> merge( sobject master, list<sobject> duplicates, boolean allornothing);

    static database.mergeresult merge( sobject master, sobject duplicate);

    static database.mergeresult merge( sobject master, sobject duplicate, boolean allornothing);

    static list<sobject> query( string query);

    static void rollback( system.savepoint savepoint);

    static system.savepoint setsavepoint( );

    static database.undeleteresult undelete( id id);

    static database.undeleteresult undelete( id id, boolean allornothing);

    static list<database.undeleteresult> undelete( list<id> ids);

    static list<database.undeleteresult> undelete( list<id> ids, boolean allornothing);

    static list<database.undeleteresult> undelete( list<sobject> sobjects);

    static list<database.undeleteresult> undelete( list<sobject> sobjects, boolean allornothing);

    static database.undeleteresult undelete( sobject sobject);

    static database.undeleteresult undelete( sobject sobject, boolean allornothing);

    static list<database.saveresult> update( list<sobject> sobjects);

    static list<database.saveresult> update( list<sobject> sobjects, database.dmloptions dmloptions);

    static list<database.saveresult> update( list<sobject> sobjects, boolean allornothing);

    static database.saveresult update( sobject sobject);

    static database.saveresult update( sobject sobject, database.dmloptions dmloptions);

    static database.saveresult update( sobject sobject, boolean allornothing);

    static list<database.upsertresult> upsert( list<sobject> sobjects);

    static list<database.upsertresult> upsert( list<sobject> sobjects, boolean allornothing);

    static list<database.upsertresult> upsert( list<sobject> sobjects, schema.sobjectfield field);

    static list<database.upsertresult> upsert( list<sobject> sobjects, schema.sobjectfield field, boolean allornothing);

    static database.upsertresult upsert( sobject sobject);

    static database.upsertresult upsert( sobject sobject, boolean allornothing);

    static database.upsertresult upsert( sobject sobject, schema.sobjectfield field);

    static database.upsertresult upsert( sobject sobject, schema.sobjectfield field, boolean allornothing);

    static list<database.deleteresult> deleteasync( list<sobject> sobjects, datasource.asyncdeletecallback callback);

    static database.deleteresult deleteasync( sobject sobject, datasource.asyncdeletecallback callback);

    static list<database.deleteresult> deleteasync( list<sobject> sobjects);

    static database.deleteresult deleteasync( sobject sobject);

    static list<database.deleteresult> deleteimmediate( list<sobject> sobjects);

    static database.deleteresult deleteimmediate( sobject sobject);

    static database.deleteresult getasyncdeleteresult( database.deleteresult deleteresult);

    static database.deleteresult getasyncdeleteresult( string asynclocator);

    static string getasynclocator( object result);

    static database.saveresult getasyncsaveresult( database.saveresult saveresult);

    static database.saveresult getasyncsaveresult( string asynclocator);

    static database.saveresult insertasync( sobject sobject);

    static database.saveresult insertasync( sobject sobject, datasource.asyncsavecallback callback);

    static list<database.saveresult> insertasync( list<sobject> sobjects);

    static list<database.saveresult> insertasync( list<sobject> sobjects, datasource.asyncsavecallback callback);

    static database.saveresult insertimmediate( sobject sobject);

    static list<database.saveresult> insertimmediate( list<sobject> sobjects);

    static database.saveresult updateasync( sobject sobject);

    static database.saveresult updateasync( sobject sobject, datasource.asyncsavecallback callback);

    static list<database.saveresult> updateasync( list<sobject> sobjects);

    static list<database.saveresult> updateasync( list<sobject> sobjects, datasource.asyncsavecallback callback);

    static database.saveresult updateimmediate( sobject sobject);

    static list<database.saveresult> updateimmediate( list<sobject> sobjects);

}
//////////////////////////////////////////

@namespace('system')
class date { 
    date adddays( integer days);

    void adderror( apex_object msg);

    void adderror( apex_object msg, boolean escape);

    void adderror( string msg);

    void adderror( string msg, boolean escape);

    date addmonths( integer months);

    date addyears( integer years);

    integer day( );

    integer dayofyear( );

    integer daysbetween( date other);

    static integer daysinmonth( integer year, integer month);

    string format( );

    static boolean isleapyear( integer year);

    boolean issameday( date other);

    integer month( );

    integer monthsbetween( date other);

    static date newinstance( integer year, integer month, integer day);

    static date parse( string str);

    date tostartofmonth( );

    date tostartofweek( );

    static date today( );

    static date valueof( object o);

    static date valueof( string str);

    integer year( );

}
//////////////////////////////////////////

@namespace('system')
class datetime { 
    datetime adddays( integer days);

    void adderror( apex_object msg);

    void adderror( apex_object msg, boolean escape);

    void adderror( string msg);

    void adderror( string msg, boolean escape);

    datetime addhours( integer hours);

    datetime addminutes( integer minutes);

    datetime addmonths( integer months);

    datetime addseconds( integer seconds);

    datetime addyears( integer years);

    date date( );

    date dategmt( );

    integer day( );

    integer daygmt( );

    integer dayofyear( );

    integer dayofyeargmt( );

    string format( );

    string format( string dateformat);

    string format( string dateformat, string timezone);

    string formatgmt( string dateformat);

    string formatlong( );

    long gettime( );

    integer hour( );

    integer hourgmt( );

    boolean issameday( datetime other);

    integer millisecond( );

    integer millisecondgmt( );

    integer minute( );

    integer minutegmt( );

    integer month( );

    integer monthgmt( );

    static datetime newinstance( date date, time time);

    static datetime newinstance( integer year, integer month, integer day);

    static datetime newinstance( integer year, integer month, integer day, integer hour, integer minute, integer second);

    static datetime newinstance( long time);

    static datetime newinstancegmt( date date, time time);

    static datetime newinstancegmt( integer year, integer month, integer day);

    static datetime newinstancegmt( integer year, integer month, integer day, integer hour, integer minute, integer second);

    static datetime now( );

    static datetime parse( string str);

    integer second( );

    integer secondgmt( );

    time time( );

    time timegmt( );

    static datetime valueof( object o);

    static datetime valueof( string str);

    static datetime valueofgmt( string str);

    integer year( );

    integer yeargmt( );

}
//////////////////////////////////////////

@namespace('system')
class decimal { 
    decimal abs( );

    void adderror( apex_object msg);

    void adderror( apex_object msg, boolean escape);

    void adderror( string msg);

    void adderror( string msg, boolean escape);

    decimal divide( decimal divisor, integer scale);

    decimal divide( decimal divisor, integer scale, apex_object roundingmode);

    double doublevalue( );

    string format( );

    integer intvalue( );

    long longvalue( );

    decimal pow( integer exponent);

    integer precision( );

    long round( );

    long round( system.roundingmode roundingmode);

    integer scale( );

    decimal setscale( integer scale);

    decimal setscale( integer scale, system.roundingmode roundingmode);

    decimal striptrailingzeros( );

    string toplainstring( );

    static decimal valueof( double dbl);

    static decimal valueof( long lng);

    static decimal valueof( string str);

}
//////////////////////////////////////////

@namespace('system')
class dmlexception { 
     dmlexception( );
     dmlexception( exception param1);
     dmlexception( string param1);
     dmlexception( string param1, exception param2);
    exception getcause( );

    list<string> getdmlfieldnames( integer index);

    list<schema.sobjectfield> getdmlfields( integer index);

    string getdmlid( integer index);

    integer getdmlindex( integer index);

    string getdmlmessage( integer index);

    string getdmlstatuscode( integer index);

    system.statuscode getdmltype( integer index);

    integer getlinenumber( );

    string getmessage( );

    integer getnumdml( );

    string getstacktracestring( );

    string gettypename( );

    void initcause( exception cause);

    void setmessage( string message);

}
//////////////////////////////////////////

@namespace('system')
class double { 
    void adderror( apex_object msg);

    void adderror( apex_object msg, boolean escape);

    void adderror( string msg);

    void adderror( string msg, boolean escape);

    string format( );

    integer intvalue( );

    long longvalue( );

    long round( );

    static double valueof( object o);

    static double valueof( string str);

}
//////////////////////////////////////////

@namespace('system')
class emailexception { 
     emailexception( );
     emailexception( exception param1);
     emailexception( string param1);
     emailexception( string param1, exception param2);
    exception getcause( );

    list<string> getdmlfieldnames( integer index);

    list<schema.sobjectfield> getdmlfields( integer index);

    string getdmlid( integer index);

    integer getdmlindex( integer index);

    string getdmlmessage( integer index);

    string getdmlstatuscode( integer index);

    system.statuscode getdmltype( integer index);

    integer getlinenumber( );

    string getmessage( );

    integer getnumdml( );

    string getstacktracestring( );

    string gettypename( );

    void initcause( exception cause);

    void setmessage( string message);

}
//////////////////////////////////////////

@namespace('system')
class encodingutil { 
     encodingutil( );
    static blob base64decode( string s);

    static string base64encode( blob s);

    static blob convertfromhex( string input);

    static string converttohex( blob s);

    static string urldecode( string s, string enc);

    static string urlencode( string s, string enc);

}
//////////////////////////////////////////

@namespace('system')
class exception { 
    exception getcause( );

    integer getlinenumber( );

    string getmessage( );

    string getstacktracestring( );

    string gettypename( );

    void initcause( exception cause);

    void setmessage( string message);

}
//////////////////////////////////////////

@namespace('system')
class externalobjectexception { 
     externalobjectexception( );
     externalobjectexception( exception param1);
     externalobjectexception( string param1);
     externalobjectexception( string param1, exception param2);
    exception getcause( );

    integer getlinenumber( );

    string getmessage( );

    string getstacktracestring( );

    string gettypename( );

    void initcause( exception cause);

    void setmessage( string message);

}
//////////////////////////////////////////

@namespace('system')
class finalexception { 
     finalexception( );
     finalexception( exception param1);
     finalexception( string param1);
     finalexception( string param1, exception param2);
    exception getcause( );

    integer getlinenumber( );

    string getmessage( );

    string getstacktracestring( );

    string gettypename( );

    void initcause( exception cause);

    void setmessage( string message);

}
//////////////////////////////////////////

@namespace('system')
class flexqueue { 
    static boolean moveafterjob( id jobtomoveid, id jobinqueueid);

    static boolean movebeforejob( id jobtomoveid, id jobinqueueid);

    static boolean movejobtoend( id jobid);

    static boolean movejobtofront( id jobid);

}
//////////////////////////////////////////

@namespace('system')
class flowexception { 
     flowexception( );
     flowexception( exception param1);
     flowexception( string param1);
     flowexception( string param1, exception param2);
    exception getcause( );

    integer getlinenumber( );

    string getmessage( );

    string getstacktracestring( );

    string gettypename( );

    void initcause( exception cause);

    void setmessage( string message);

}
//////////////////////////////////////////

@namespace('system')
class handledexception { 
     handledexception( );
     handledexception( exception param1);
     handledexception( string param1);
     handledexception( string param1, exception param2);
    exception getcause( );

    integer getlinenumber( );

    string getmessage( );

    string getstacktracestring( );

    string gettypename( );

    void initcause( exception cause);

    void setmessage( string message);

}
//////////////////////////////////////////

@namespace('system')
class http { 
     http( );
    system.httpresponse send( any request);

    string tostring( );

}
//////////////////////////////////////////

@namespace('system')
interface httpcalloutmock { 
    system.httpresponse respond( system.httprequest param1);

}
//////////////////////////////////////////

@namespace('system')
class httprequest { 
     httprequest( );
    string getbody( );

    blob getbodyasblob( );

    dom.document getbodydocument( );

    boolean getcompressed( );

    string getendpoint( );

    string getheader( string key);

    string getmethod( );

    void setbody( string body);

    void setbodyasblob( blob body);

    void setbodydocument( any body);

    void setclientcertificate( string clientcert, string password);

    void setclientcertificatename( string certdevname);

    void setcompressed( boolean compressed);

    void setendpoint( string endpoint);

    void setheader( string key, string value);

    void setmethod( string method);

    void settimeout( integer timeout);

    string tostring( );

}
//////////////////////////////////////////

@namespace('system')
class httpresponse { 
     httpresponse( );
    string getbody( );

    blob getbodyasblob( );

    dom.document getbodydocument( );

    string getheader( string key);

    list<string> getheaderkeys( );

    string getstatus( );

    integer getstatuscode( );

    system.xmlstreamreader getxmlstreamreader( );

    void setbody( string body);

    void setbodyasblob( blob body);

    void setheader( string key, string value);

    void setstatus( string status);

    void setstatuscode( integer statuscode);

    string tostring( );

}
//////////////////////////////////////////

@namespace('system')
class id extends system.string { 
    void adderror( apex_object msg);

    void adderror( apex_object msg, boolean escape);

    void adderror( string msg);

    void adderror( string msg, boolean escape);

    boolean equals( string o);

    schema.sobjecttype getsobjecttype( );

    static id valueof( string str);

}
//////////////////////////////////////////

@namespace('system')
class ideas { 
     ideas( );
    static list<id> findsimilar( sobject idea);

    static list<id> getallrecentreplies( string userid, string communityid);

    static list<id> getreadrecentreplies( string userid, string communityid);

    static list<id> getunreadrecentreplies( string userid, string communityid);

    static void markread( string ideaid);

}
//////////////////////////////////////////

@namespace('system')
interface installhandler { 
    void oninstall( installcontext context);

	// fields added from appendix Resolution Library
    id oninstall( installcontext context);

}
//////////////////////////////////////////

@namespace('system')
class integer { 
    void adderror( apex_object msg);

    void adderror( apex_object msg, boolean escape);

    void adderror( string msg);

    void adderror( string msg, boolean escape);

    string format( );

    static integer valueof( object o);

    static integer valueof( string i);

}
//////////////////////////////////////////

@namespace('system')
class invalidheaderexception { 
     invalidheaderexception( );
     invalidheaderexception( exception param1);
     invalidheaderexception( string param1);
     invalidheaderexception( string param1, exception param2);
    string gettypename( );

}
//////////////////////////////////////////

@namespace('system')
class invalidparametervalueexception { 
     invalidparametervalueexception( string param1, string param2);
    exception getcause( );

    integer getlinenumber( );

    string getmessage( );

    string getstacktracestring( );

    string gettypename( );

    void initcause( exception cause);

    void setmessage( string message);

}
//////////////////////////////////////////

@namespace('system')
class invalidreadonlyuserdmlexception { 
     invalidreadonlyuserdmlexception( );
     invalidreadonlyuserdmlexception( exception param1);
     invalidreadonlyuserdmlexception( string param1);
     invalidreadonlyuserdmlexception( string param1, exception param2);
    exception getcause( );

    integer getlinenumber( );

    string getmessage( );

    string getstacktracestring( );

    string gettypename( );

    void initcause( exception cause);

    void setmessage( string message);

}
//////////////////////////////////////////

@namespace('system')
class iterable< t > { 
    system.iterator<t> iterator( );

}
//////////////////////////////////////////

@namespace('system')
class iterator< t > { 
    boolean hasnext( );

    t next( );

}
//////////////////////////////////////////

@namespace('system')
class json { 
     json( );
    static system.jsongenerator creategenerator( boolean pretty);

    static system.jsonparser createparser( string jsonstring);

    static object deserialize( string jsonstring, system.type apextype);

    static object deserializestrict( string jsonstring, system.type apextype);

    static object deserializeuntyped( string jsonstring);

    static string serialize( object o);

    static string serializepretty( object o);

}
//////////////////////////////////////////

@namespace('system')
class jsonexception { 
     jsonexception( );
     jsonexception( exception param1);
     jsonexception( string param1);
     jsonexception( string param1, exception param2);
    exception getcause( );

    integer getlinenumber( );

    string getmessage( );

    string getstacktracestring( );

    string gettypename( );

    void initcause( exception cause);

    void setmessage( string message);

}
//////////////////////////////////////////

@namespace('system')
class jsongenerator { 
    void close( );

    string getasstring( );

    boolean isclosed( );

    void writeblob( blob b);

    void writeblobfield( string fieldname, blob b);

    void writeboolean( boolean b);

    void writebooleanfield( string fieldname, boolean b);

    void writedate( date d);

    void writedatefield( string fieldname, date d);

    void writedatetime( datetime dt);

    void writedatetimefield( string fieldname, datetime dt);

    void writeendarray( );

    void writeendobject( );

    void writefieldname( string fieldname);

    void writeid( id id);

    void writeidfield( string fieldname, id id);

    void writenull( );

    void writenullfield( string fieldname);

    void writenumber( decimal d);

    void writenumber( double d);

    void writenumber( integer i);

    void writenumber( long lng);

    void writenumberfield( string fieldname, decimal d);

    void writenumberfield( string fieldname, double d);

    void writenumberfield( string fieldname, integer i);

    void writenumberfield( string fieldname, long lng);

    void writeobject( object o);

    void writeobjectfield( string fieldname, object o);

    void writestartarray( );

    void writestartobject( );

    void writestring( string str);

    void writestringfield( string fieldname, string str);

    void writetime( time t);

    void writetimefield( string fieldname, time t);

}
//////////////////////////////////////////

@namespace('system')
class jsonparser { 
    void clearcurrenttoken( );

    blob getblobvalue( );

    boolean getbooleanvalue( );

    string getcurrentname( );

    system.jsontoken getcurrenttoken( );

    datetime getdatetimevalue( );

    date getdatevalue( );

    decimal getdecimalvalue( );

    double getdoublevalue( );

    id getidvalue( );

    integer getintegervalue( );

    system.jsontoken getlastclearedtoken( );

    long getlongvalue( );

    string gettext( );

    time gettimevalue( );

    boolean hascurrenttoken( );

    system.jsontoken nexttoken( );

    system.jsontoken nextvalue( );

    object readvalueas( system.type apextype);

    object readvalueasstrict( system.type apextype);

    void skipchildren( );

}
//////////////////////////////////////////

@namespace('system')
enum jsontoken { end_array, end_object, field_name, not_available, start_array, start_object, value_embedded_object, value_false, value_null, value_number_float, value_number_int, value_string, value_true}
//////////////////////////////////////////

@namespace('system')
class licenseexception { 
     licenseexception( );
     licenseexception( exception param1);
     licenseexception( string param1);
     licenseexception( string param1, exception param2);
    exception getcause( );

    integer getlinenumber( );

    string getmessage( );

    string getstacktracestring( );

    string gettypename( );

    void initcause( exception cause);

    void setmessage( string message);

}
//////////////////////////////////////////

@namespace('system')
class limitexception { 
     limitexception( );
     limitexception( exception param1);
     limitexception( string param1);
     limitexception( string param1, exception param2);
    exception getcause( );

    integer getlinenumber( );

    string getmessage( );

    string getstacktracestring( );

    string gettypename( );

    void initcause( exception cause);

    void setmessage( string message);

}
//////////////////////////////////////////

@namespace('system')
class limits { 
     limits( );
    static integer getaggregatequeries( );

    static integer getlimitaggregatequeries( );

    static integer getasynccalls( );

    static integer getlimitasynccalls( );

    static integer getcallouts( );

    static integer getlimitcallouts( );

    static integer getchildrelationshipsdescribes( );

    static integer getlimitchildrelationshipsdescribes( );

    static integer getcputime( );

    static integer getlimitcputime( );

    static integer getdmlrows( );

    static integer getlimitdmlrows( );

    static integer getdmlstatements( );

    static integer getlimitdmlstatements( );

    static integer getemailinvocations( );

    static integer getlimitemailinvocations( );

    static integer getfieldsdescribes( );

    static integer getlimitfieldsdescribes( );

    static integer getfieldsetsdescribes( );

    static integer getlimitfieldsetsdescribes( );

    static integer getfindsimilarcalls( );

    static integer getlimitfindsimilarcalls( );

    static integer getfuturecalls( );

    static integer getlimitfuturecalls( );

    static integer getheapsize( );

    static integer getlimitheapsize( );

    static integer getmobilepushapexcalls( );

    static integer getlimitmobilepushapexcalls( );

    static integer getpicklistdescribes( );

    static integer getlimitpicklistdescribes( );

    static integer getqueries( );

    static integer getlimitqueries( );

    static integer getlimitquerylocatorrows( );

    static integer getqueryrows( );

    static integer getlimitqueryrows( );

    static integer getqueueablejobs( );

    static integer getlimitqueueablejobs( );

    static integer getrecordtypesdescribes( );

    static integer getlimitrecordtypesdescribes( );

    static integer getrunas( );

    static integer getlimitrunas( );

    static integer getsavepointrollbacks( );

    static integer getlimitsavepointrollbacks( );

    static integer getsavepoints( );

    static integer getlimitsavepoints( );

    static integer getscriptstatements( );

    static integer getlimitscriptstatements( );

    static integer getsoslqueries( );

    static integer getlimitsoslqueries( );

}
//////////////////////////////////////////

@namespace('system')
class list< t > { 
     list( );
     list( integer initialcapacity);
    object add( t element);

    void add( integer index, t element);

    void addall( list<t> elements);

    void addall( set<t> elements);

    void clear( );

    list<t> clone( );

    list<t> deepclone( );

    list<t> deepclone( boolean preserveid);

    list<t> deepclone( boolean preserveid, boolean preservereadonlytimestamps);

    list<t> deepclone( boolean preserveid, boolean preservereadonlytimestamps, boolean preserveautonumbers);

    boolean equals( object obj);

    t get( integer index);

    schema.sobjecttype getsobjecttype( );

    integer hashcode( );

    boolean isempty( );

    iterator<t> iterator( );

    t remove( integer index);

    void set( integer index, t value);

    integer size( );

    void sort( );

	// fields added from appendix Resolution Library
     list( list<t> list);
     list( set<t> set);
    schema.sobjecttype getsobjecttype( );

}
//////////////////////////////////////////

@namespace('system')
class listexception { 
     listexception( );
     listexception( exception param1);
     listexception( string param1);
     listexception( string param1, exception param2);
    exception getcause( );

    integer getlinenumber( );

    string getmessage( );

    string getstacktracestring( );

    string gettypename( );

    void initcause( exception cause);

    void setmessage( string message);

}
//////////////////////////////////////////

@namespace('system')
class location { 
    double latitude { set; get; }
    double longitude { set; get; }
     location( );
    double getdistance( system.location other, string unit);

    double getlatitude( );

    double getlongitude( );

}
//////////////////////////////////////////

@namespace('system')
enum logginglevel { debug, error, fine, finer, finest, info, internal, none, warn}
//////////////////////////////////////////

@namespace('system')
class long { 
    void adderror( apex_object msg);

    void adderror( apex_object msg, boolean escape);

    void adderror( string msg);

    void adderror( string msg, boolean escape);

    string format( );

    integer intvalue( );

    static long valueof( string str);

}
//////////////////////////////////////////

@namespace('system')
class map< k, v > { 
     map( );
     map( list<v> str);
    void clear( );

    map<k,v> clone( );

    boolean containskey( any key);

    map<k,v> deepclone( );

    boolean equals( any obj);

    v get( k key);

    schema.sobjecttype getsobjecttype( );

    integer hashcode( );

    boolean isempty( );

    set<k> keyset( );

    string put( k key, v value);

    void putall( list<v> entries);

    void putall( map<k,v> entries);

    v remove( k key);

    integer size( );

    list<v> values( );

}
//////////////////////////////////////////

@namespace('system')
class matcher { 
    integer end( );

    integer end( integer grp);

    boolean find( );

    boolean find( integer start);

    string group( );

    string group( integer start);

    integer groupcount( );

    boolean hasanchoringbounds( );

    boolean hastransparentbounds( );

    boolean hitend( );

    boolean lookingat( );

    boolean matches( );

    system.pattern pattern( );

    static string quotereplacement( string s);

    system.matcher region( integer start, integer ending);

    integer regionend( );

    integer regionstart( );

    string replaceall( string replacement);

    string replacefirst( string replacement);

    boolean requireend( );

    system.matcher reset( );

    system.matcher reset( string input);

    integer start( );

    integer start( integer grp);

    system.matcher useanchoringbounds( boolean b);

    system.matcher usepattern( system.pattern p);

    system.matcher usetransparentbounds( boolean b);

}
//////////////////////////////////////////

@namespace('system')
class math { 
    static double e;
    static double pi;
     math( );
    static decimal abs( decimal x);

    static double abs( double x);

    static integer abs( integer x);

    static long abs( long x);

    static decimal acos( decimal x);

    static double acos( double x);

    static decimal asin( decimal x);

    static double asin( double x);

    static decimal atan( decimal x);

    static double atan( double x);

    static decimal atan2( decimal x, decimal y);

    static double atan2( double x, double y);

    static decimal cbrt( decimal x);

    static double cbrt( double x);

    static decimal ceil( decimal x);

    static double ceil( double x);

    static decimal cos( decimal x);

    static double cos( double x);

    static decimal cosh( decimal x);

    static double cosh( double x);

    static decimal exp( decimal x);

    static double exp( double x);

    static decimal floor( decimal x);

    static double floor( double x);

    static decimal log( decimal x);

    static double log( double x);

    static decimal log10( decimal x);

    static double log10( double x);

    static decimal max( decimal x, decimal y);

    static double max( double x, double y);

    static integer max( integer x, integer y);

    static long max( long x, long y);

    static decimal min( decimal x, decimal y);

    static double min( double x, double y);

    static integer min( integer x, integer y);

    static long min( long x, long y);

    static integer mod( integer x, integer y);

    static long mod( long x, long y);

    static double pow( double base, double exp);

    static double random( );

    static decimal rint( decimal x);

    static double rint( double x);

    static integer round( decimal x);

    static integer round( double x);

    static long roundtolong( decimal x);

    static long roundtolong( double x);

    static decimal signum( decimal x);

    static double signum( double x);

    static decimal sin( decimal x);

    static double sin( double x);

    static decimal sinh( decimal x);

    static double sinh( double x);

    static decimal sqrt( decimal x);

    static double sqrt( double x);

    static decimal tan( decimal x);

    static double tan( double x);

    static decimal tanh( decimal x);

    static double tanh( double x);

}
//////////////////////////////////////////

@namespace('system')
class mathexception { 
     mathexception( );
     mathexception( exception param1);
     mathexception( string param1);
     mathexception( string param1, exception param2);
    exception getcause( );

    integer getlinenumber( );

    string getmessage( );

    string getstacktracestring( );

    string gettypename( );

    void initcause( exception cause);

    void setmessage( string message);

}
//////////////////////////////////////////

@namespace('system')
class messaging { 
    static void reservemassemailcapacity( integer count);

    static void reservesingleemailcapacity( integer count);

    static list<messaging.sendemailresult> sendemail( list<messaging.email> emailmessages);

    static list<messaging.sendemailresult> sendemail( list<messaging.email> emailmessages, boolean allornothing);

    static list<messaging.sendemailresult> sendemailmessage( list<id> emailmessagesids);

    static list<messaging.sendemailresult> sendemailmessage( list<id> emailmessagesids, boolean allornothing);

}
//////////////////////////////////////////

@namespace('system')
class multistaticresourcecalloutmock { 
     multistaticresourcecalloutmock( );
    system.httpresponse respond( system.httprequest request);

    void setheader( string key, string val);

    void setstaticresource( string url, string staticresourcename);

    void setstatus( string status);

    void setstatuscode( integer code);

}
//////////////////////////////////////////

@namespace('system')
class network { 
     network( );
    static system.pagereference communitieslanding( );

    static system.pagereference forwardtoauthpage( string starturl);

    static system.pagereference forwardtoauthpage( string starturl, string displaytype);

    static string getloginurl( string networkid);

    static string getlogouturl( string networkid);

    static string getnetworkid( );

    static string getselfregurl( string networkid);

    static integer loadallpackagedefaultnetworkdashboardsettings( );

    static integer loadallpackagedefaultnetworkpulsesettings( );

}
//////////////////////////////////////////

@namespace('system')
class noaccessexception { 
     noaccessexception( );
    exception getcause( );

    integer getlinenumber( );

    string getmessage( );

    string getstacktracestring( );

    string gettypename( );

    void initcause( exception cause);

    void setmessage( string message);

}
//////////////////////////////////////////

@namespace('system')
class nodatafoundexception { 
     nodatafoundexception( );
    exception getcause( );

    integer getlinenumber( );

    string getmessage( );

    string getstacktracestring( );

    string gettypename( );

    void initcause( exception cause);

    void setmessage( string message);

}
//////////////////////////////////////////

@namespace('system')
class nosuchelementexception { 
     nosuchelementexception( );
     nosuchelementexception( exception param1);
     nosuchelementexception( string param1);
     nosuchelementexception( string param1, exception param2);
    exception getcause( );

    integer getlinenumber( );

    string getmessage( );

    string getstacktracestring( );

    string gettypename( );

    void initcause( exception cause);

    void setmessage( string message);

}
//////////////////////////////////////////

@namespace('system')
class nullpointerexception { 
     nullpointerexception( );
    exception getcause( );

    integer getlinenumber( );

    string getmessage( );

    string getstacktracestring( );

    string gettypename( );

    void initcause( exception cause);

    void setmessage( string message);

}
//////////////////////////////////////////

@namespace('system')
class object { 
     object( );
    boolean equals( any obj);

    integer hashcode( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('system')
class pagereference { 
     pagereference( sobject param1);
     pagereference( string param1);
    string getanchor( );

    blob getcontent( );

    blob getcontentaspdf( );

    map<string,system.cookie> getcookies( );

    map<string,string> getheaders( );

    map<string,string> getparameters( );

    boolean getredirect( );

    string geturl( );

    system.pagereference setanchor( string anchor);

    void setcookies( list<system.cookie> cookies);

    system.pagereference setredirect( boolean redirect);

}
//////////////////////////////////////////

@namespace('system')
class pattern { 
    static system.pattern compile( string regex);

    system.matcher matcher( string input);

    static boolean matches( string regex, string input);

    string pattern( );

    static string quote( string s);

    list<string> split( string input);

    list<string> split( string input, integer n);

}
//////////////////////////////////////////

@namespace('system')
class platformcacheexception { 
     platformcacheexception( );
     platformcacheexception( exception param1);
     platformcacheexception( string param1);
     platformcacheexception( string param1, exception param2);
    exception getcause( );

    integer getlinenumber( );

    string getmessage( );

    string getstacktracestring( );

    string gettypename( );

    void initcause( exception cause);

    void setmessage( string message);

}
//////////////////////////////////////////

@namespace('system')
class procedureexception { 
     procedureexception( );
     procedureexception( exception param1);
     procedureexception( string param1);
     procedureexception( string param1, exception param2);
    exception getcause( );

    integer getlinenumber( );

    string getmessage( );

    string getstacktracestring( );

    string gettypename( );

    void initcause( exception cause);

    void setmessage( string message);

}
//////////////////////////////////////////

@namespace('system')
class queryexception { 
     queryexception( );
     queryexception( exception param1);
     queryexception( string param1);
     queryexception( string param1, exception param2);
    exception getcause( );

    integer getlinenumber( );

    string getmessage( );

    string getstacktracestring( );

    string gettypename( );

    void initcause( exception cause);

    void setmessage( string message);

}
//////////////////////////////////////////

@namespace('system')
interface queueable { 
    void execute( system.queueablecontext param1);

}
//////////////////////////////////////////

@namespace('system')
interface queueablecontext { 
    id getjobid( );

}
//////////////////////////////////////////

@namespace('system')
class queueablecontextimpl { 
    id getjobid( );

}
//////////////////////////////////////////

@namespace('system')
class quickaction { 
    static list<quickaction.describeavailablequickactionresult> describeavailablequickactions( string parenttype);

    static list<quickaction.describequickactionresult> describequickactions( list<string> actions);

    static quickaction.quickactionresult performquickaction( quickaction.quickactionrequest performquickaction);

    static quickaction.quickactionresult performquickaction( quickaction.quickactionrequest performquickaction, boolean allornothing);

    static list<quickaction.quickactionresult> performquickactions( list<quickaction.quickactionrequest> performquickactions);

    static list<quickaction.quickactionresult> performquickactions( list<quickaction.quickactionrequest> performquickactions, boolean allornothing);

    static quickaction.quickactiontemplateresult retrievequickactiontemplate( string quickactionname, id contextid);

    static list<quickaction.quickactiontemplateresult> retrievequickactiontemplates( list<string> quickactionnames, id contextid);

}
//////////////////////////////////////////

@namespace('system')
class remoteobjectcontroller { 
     remoteobjectcontroller( );
    static map<string,any> create( string type, map<string,any> fields);

    static map<string,any> del( string type, list<string> ids);

    static map<string,any> retrieve( string type, list<string> fields, map<string,any> criteria);

    static map<string,any> updat( string type, list<string> ids, map<string,any> fields);

}
//////////////////////////////////////////

@namespace('system')
class requiredfeaturemissingexception { 
     requiredfeaturemissingexception( );
     requiredfeaturemissingexception( exception param1);
     requiredfeaturemissingexception( string param1);
     requiredfeaturemissingexception( string param1, exception param2);
    exception getcause( );

    integer getlinenumber( );

    string getmessage( );

    string getstacktracestring( );

    string gettypename( );

    void initcause( exception cause);

    void setmessage( string message);

}
//////////////////////////////////////////

@namespace('system')
class resetpasswordresult { 
    Object password;
    string getpassword( );

}
//////////////////////////////////////////

@namespace('system')
class restcontext { 
    restrequest request { set; get; }
    restrequest response { set; get; }
}
//////////////////////////////////////////

@namespace('system')
class restrequest { 
    map<string, string> headers { set; get; }
    string httpmethod { set; get; }
    map<string, string> params { set; get; }
    string remoteaddress { set; get; }
    blob requestbody { set; get; }
    string requesturi { set; get; }
    string resourcepath { set; get; }
     restrequest( );
    void addheader( string name, string value);

    void addparameter( string name, string value);

}
//////////////////////////////////////////

@namespace('system')
class restresponse { 
    map<string,string> headers { set; get; }
    blob responsebody { set; get; }
    integer statuscode { set; get; }
     restresponse( );
    void addheader( string name, string value);

}
//////////////////////////////////////////

@namespace('system')
class sandboxcontext { 
    id organizationid( );

    id sandboxid( );

    string sandboxname( );

}
//////////////////////////////////////////

@namespace('system')
interface sandboxpostcopy { 
    void runapexclass( system.sandboxcontext param1);

}
//////////////////////////////////////////

@namespace('system')
class savepoint { 
}
//////////////////////////////////////////

@namespace('system')
interface schedulable { 
    void execute( system.schedulablecontext param1);

}
//////////////////////////////////////////

@namespace('system')
interface schedulablecontext { 
    id gettriggerid( );

}
//////////////////////////////////////////

@namespace('system')
class schema { 
    static list<schema.describedatacategorygroupstructureresult> describedatacategorygroupstructures( list<schema.datacategorygroupsobjecttypepair> pairs, boolean topcategoriesonly);

    static list<schema.describedatacategorygroupresult> describedatacategorygroups( list<string> sobjects);

    static list<schema.describesobjectresult> describesobjects( list<string> types);

    static list<schema.describetabsetresult> describetabs( );

    static map<string,schema.sobjecttype> getappdescribe( string appname);

    static map<string,schema.sobjecttype> getglobaldescribe( );

    static map<string,schema.sobjecttype> getmoduledescribe( );

    static map<string,schema.sobjecttype> getmoduledescribe( string modulename);

}
//////////////////////////////////////////

@namespace('system')
class search { 
    static search.searchresults find( string searchquery);

    static list<list<sobject>> query( string searchquery);

    static search.suggestionresults suggest( string searchquery, string sobjecttype, apex_object options);

}
//////////////////////////////////////////

@namespace('system')
class searchexception { 
     searchexception( );
     searchexception( exception param1);
     searchexception( string param1);
     searchexception( string param1, exception param2);
    exception getcause( );

    integer getlinenumber( );

    string getmessage( );

    string getstacktracestring( );

    string gettypename( );

    void initcause( exception cause);

    void setmessage( string message);

}
//////////////////////////////////////////

@namespace('system')
class securityexception { 
     securityexception( );
     securityexception( exception param1);
     securityexception( string param1);
     securityexception( string param1, exception param2);
    exception getcause( );

    integer getlinenumber( );

    string getmessage( );

    string getstacktracestring( );

    string gettypename( );

    void initcause( exception cause);

    void setmessage( string message);

}
//////////////////////////////////////////

@namespace('system')
class selectoption { 
     selectoption( string param1, string param2);
     selectoption( string param1, string param2, boolean param3);
    boolean getdisabled( );

    boolean getescapeitem( );

    string getlabel( );

    string getvalue( );

    void setdisabled( boolean disabled);

    void setescapeitem( boolean disabled);

    void setlabel( string label);

    void setvalue( string value);

}
//////////////////////////////////////////

@namespace('system')
class serializationexception { 
     serializationexception( );
     serializationexception( exception param1);
     serializationexception( string param1);
     serializationexception( string param1, exception param2);
    exception getcause( );

    integer getlinenumber( );

    string getmessage( );

    string getstacktracestring( );

    string gettypename( );

    void initcause( exception cause);

    void setmessage( string message);

}
//////////////////////////////////////////

@namespace('system')
class set< t > { 
     set( );
    boolean add( t element);

    boolean addall( list<t> elements);

    boolean addall( set<t> elements);

    void clear( );

    set<t> clone( );

    boolean contains( t element);

    boolean containsall( list<t> elements);

    boolean containsall( set<t> elements);

    boolean equals( any obj);

    integer hashcode( );

    boolean isempty( );

    iterator<t> iterator( );

    boolean remove( t element);

    boolean removeall( list<t> elements);

    boolean removeall( set<t> elements);

    boolean retainall( list<t> elements);

    boolean retainall( set<t> elements);

    integer size( );

	// fields added from appendix Resolution Library
     set( list<t> list);
     set( set<t> set);

}
//////////////////////////////////////////

@namespace('system')
enum setupscope { organization, profile, user}
//////////////////////////////////////////

@namespace('system')
class site { 
     site( );
    static system.pagereference changepassword( string newpassword, string verifynewpassword);

    static system.pagereference changepassword( string newpassword, string verifynewpassword, string oldpassword);

    static id createexternaluser( sobject user, string accountid);

    static id createexternaluser( sobject user, string accountid, string password);

    static id createexternaluser( sobject user, string accountid, string password, boolean sendemailconfirmation);

    static id createpersonaccountportaluser( sobject user, string ownerid, string password);

    static id createpersonaccountportaluser( sobject user, string ownerid, string recordtypeid, string password);

    static id createportaluser( sobject user, string accountid);

    static id createportaluser( sobject user, string accountid, string password);

    static id createportaluser( sobject user, string accountid, string password, boolean sendemailconfirmation);

    static boolean forgotpassword( string username);

    static string getadminemail( );

    static id getadminid( );

    static string getanalyticstrackingcode( );

    static string getbasecustomurl( );

    static string getbaseinsecureurl( );

    static string getbaserequesturl( );

    static string getbasesecureurl( );

    static string getbaseurl( );

    static string getcurrentsiteurl( );

    static string getcustomwebaddress( );

    static string getdomain( );

    static string geterrordescription( );

    static string geterrormessage( );

    static string getmasterlabel( );

    static string getname( );

    static string getoriginalurl( );

    static string getpasswordpolicystatement( );

    static string getpathprefix( );

    static string getprefix( );

    static id getsiteid( );

    static string getsitetype( );

    static string getsitetypelabel( );

    static system.pagereference gettemplate( );

    static boolean isloginenabled( );

    static boolean ispasswordexpired( );

    static boolean isregistrationenabled( );

    static boolean isvalidusername( string username);

    static system.pagereference login( string username, string password, string starturl);

    static void setportaluserasauthprovider( sobject user, string accountid);

    static void validatepassword( sobject user, string password, string confirmpassword);

}
//////////////////////////////////////////

@idiomatic
@namespace('system')
class sobject extends object { 
    id id;
    void adderror( apex_object msg);

    void adderror( apex_object msg, boolean escape);

    void adderror( string msg);

    void adderror( string msg, boolean escape);

    void clear( );

    sobject clone( );

    sobject clone( boolean preserveid);

    sobject clone( boolean preserveid, boolean deep);

    sobject clone( boolean preserveid, boolean deep, boolean preservereadonlytimestamps);

    sobject clone( boolean preserveid, boolean deep, boolean preservereadonlytimestamps, boolean preserveautonumbers);

    object get( schema.sobjectfield field);

    object get( string field);

    id getclonesourceid( );

    database.dmloptions getoptions( );

    string getquickactionname( );

    sobject getsobject( schema.sobjectfield field);

    sobject getsobject( string field);

    schema.sobjecttype getsobjecttype( );

    list<sobject> getsobjects( schema.sobjectfield field);

    list<sobject> getsobjects( string field);

    boolean isclone( );

    object put( schema.sobjectfield field, object value);

    object put( string field, object value);

    sobject putsobject( schema.sobjectfield field, sobject value);

    sobject putsobject( string field, sobject value);

    void recalculateformulas( );

    void setoptions( apex_object options);

	// fields added from appendix Resolution Library
    static schema.sobjecttype sobjecttype;
    static schema.sobjecttypefields fields;


}
//////////////////////////////////////////

@namespace('system')
class sobjectexception { 
     sobjectexception( );
     sobjectexception( exception param1);
     sobjectexception( string param1);
     sobjectexception( string param1, exception param2);
    exception getcause( );

    integer getlinenumber( );

    string getmessage( );

    string getstacktracestring( );

    string gettypename( );

    void initcause( exception cause);

    void setmessage( string message);

}
//////////////////////////////////////////

@namespace('system')
class staticresourcecalloutmock { 
     staticresourcecalloutmock( );
    system.httpresponse respond( system.httprequest request);

    void setheader( string key, string val);

    void setstaticresource( string staticresourcename);

    void setstatus( string status);

    void setstatuscode( integer code);

}
//////////////////////////////////////////

@namespace('system')
enum statuscode { all_or_none_operation_rolled_back, already_in_process, assignee_type_required, aura_compile_error, bad_custom_entity_parent_domain, bcc_not_allowed_if_bcc_compliance_enabled, cannot_cascade_product_active, cannot_change_field_type_of_apex_referenced_field, cannot_change_field_type_of_referenced_field, cannot_create_another_managed_package, cannot_deactivate_division, cannot_delete_global_action_list, cannot_delete_last_dated_conversion_rate, cannot_delete_managed_object, cannot_disable_last_admin, cannot_enable_ip_restrict_requests, cannot_execute_flow_trigger, cannot_freeze_self, cannot_insert_update_activate_entity, cannot_modify_managed_object, cannot_password_lockout, cannot_post_to_archived_group, cannot_rename_apex_referenced_field, cannot_rename_apex_referenced_object, cannot_rename_referenced_field, cannot_rename_referenced_object, cannot_reparent_record, cannot_update_converted_lead, cant_disable_corp_currency, cant_unset_corp_currency, child_share_fails_parent, circular_dependency, clean_service_error, collision_detected, community_not_accessible, conflicting_environment_hub_member, conflicting_sso_user_mapping, custom_apex_error, custom_clob_field_limit_exceeded, custom_entity_or_field_limit, custom_field_index_limit_exceeded, custom_index_exists, custom_link_limit_exceeded, custom_metadata_limit_exceeded, custom_settings_limit_exceeded, custom_tab_limit_exceeded, datacloudaddress_no_records_found, datacloudaddress_processing_error, datacloudaddress_server_error, delete_failed, delete_operation_too_large, delete_required_on_cascade, dependency_exists, duplicates_detected, duplicate_case_solution, duplicate_comm_nickname, duplicate_custom_entity_definition, duplicate_custom_tab_motif, duplicate_developer_name, duplicate_external_id, duplicate_master_label, duplicate_sender_display_name, duplicate_username, duplicate_value, email_address_bounced, email_not_processed_due_to_prior_error, email_opted_out, email_template_formula_error, email_template_mergefield_access_error, email_template_mergefield_error, email_template_mergefield_value_error, email_template_processing_error, empty_scontrol_file_name, entity_failed_iflastmodified_on_update, entity_is_archived, entity_is_deleted, entity_is_locked, entity_save_error, entity_save_validation_error, environment_hub_membership_conflict, environment_hub_membership_error_joining_hub, environment_hub_membership_user_already_in_hub, environment_hub_membership_user_not_org_admin, error_in_mailer, exchange_web_services_url_invalid, failed_activation, field_custom_validation_exception, field_filter_validation_exception, field_integrity_exception, field_keyword_list_match_limit, field_moderation_rule_block, field_not_updatable, file_extension_not_allowed, file_size_limit_exceeded, filtered_lookup_limit_exceeded, find_duplicates_error, functionality_not_enabled, gmail_transport_connection_error, gmail_transport_permission_error, gmail_transport_token_error, gmail_transport_unknown_error, html_file_upload_not_allowed, image_too_large, inactive_owner_or_user, inactive_rule_error, insert_update_delete_not_allowed_during_maintenance, insufficient_access_on_cross_reference_entity, insufficient_access_or_readonly, insufficient_access_to_insightsexternaldata, insufficient_credits, invalid_access_level, invalid_argument_type, invalid_assignee_type, invalid_assignment_rule, invalid_batch_operation, invalid_content_type, invalid_credit_card_info, invalid_cross_reference_key, invalid_cross_reference_type_for_field, invalid_currency_conv_rate, invalid_currency_corp_rate, invalid_currency_iso, invalid_data_category_group_reference, invalid_data_uri, invalid_email_address, invalid_empty_key_owner, invalid_entity_for_match_engine_error, invalid_entity_for_match_operation_error, invalid_environment_hub_member, invalid_event_delivery, invalid_event_publication, invalid_field, invalid_field_for_insert_update, invalid_field_when_using_template, invalid_filter_action, invalid_google_docs_url, invalid_id_field, invalid_inet_address, invalid_input, invalid_lineitem_clone_state, invalid_markup, invalid_master_or_translated_solution, invalid_message_id_reference, invalid_oauth_url, invalid_operation, invalid_operator, invalid_or_null_for_restricted_picklist, invalid_owner, invalid_package_license, invalid_package_version, invalid_partner_network_status, invalid_person_account_operation, invalid_query_locator, invalid_read_only_user_dml, invalid_runtime_value, invalid_save_as_activity_flag, invalid_session_id, invalid_setup_owner, invalid_signup_country, invalid_signup_option, invalid_site_delete_exception, invalid_site_file_imported_exception, invalid_site_file_type_exception, invalid_status, invalid_subdomain, invalid_type, invalid_type_for_operation, invalid_type_on_field_in_record, invalid_userid, ip_range_limit_exceeded, jigsaw_import_limit_exceeded, license_limit_exceeded, light_portal_user_exception, limit_exceeded, malformed_id, manager_not_defined, massmail_retry_limit_exceeded, mass_mail_limit_exceeded, match_definition_error, match_operation_error, match_operation_invalid_engine_error, match_operation_invalid_rule_error, match_operation_missing_engine_error, match_operation_missing_object_type_error, match_operation_missing_options_error, match_operation_missing_rule_error, match_operation_unknown_rule_error, match_operation_unsupported_version_error, match_precondition_failed, match_runtime_error, match_service_error, match_service_timed_out, match_service_unavailable_error, maximum_ccemails_exceeded, maximum_dashboard_components_exceeded, maximum_hierarchy_children_reached, maximum_hierarchy_levels_reached, maximum_size_of_attachment, maximum_size_of_document, max_actions_per_rule_exceeded, max_active_rules_exceeded, max_approval_steps_exceeded, max_formulas_per_rule_exceeded, max_rules_exceeded, max_rule_entries_exceeded, max_task_description_exceeeded, max_tm_rules_exceeded, max_tm_rule_items_exceeded, merge_failed, missing_argument, missing_record, mixed_dml_operation, nonunique_shipping_address, no_applicable_process, no_attachment_permission, no_inactive_division_members, no_mass_mail_permission, no_partner_permission, no_such_user_exists, number_outside_valid_range, num_history_fields_by_sobject_exceeded, opted_out_of_mass_mail, op_with_invalid_user_type_exception, package_license_required, packaging_api_install_failed, packaging_api_uninstall_failed, pali_invalid_action_id, pali_invalid_action_name, pali_invalid_action_type, pal_invalid_entity_id, pal_invalid_flexipage_id, pal_invalid_layout_id, pal_invalid_parameters, pa_api_exception, pa_axis_fault, pa_invalid_id_exception, pa_no_access_exception, pa_no_data_found_exception, pa_uri_syntax_exception, pa_visible_actions_filter_ordering_exception, portal_no_access, portal_user_already_exists_for_contact, private_contact_on_asset, qa_invalid_create_feed_item, qa_invalid_success_message, query_timeout, record_in_use_by_workflow, reputation_minimum_number_not_reached, request_running_too_long, required_feature_missing, required_field_missing, retrieve_exchange_attachment_failed, retrieve_exchange_email_failed, retrieve_exchange_event_failed, self_reference_from_flow, self_reference_from_trigger, share_needed_for_child_owner, single_email_limit_exceeded, standard_price_not_defined, storage_limit_exceeded, string_too_long, subdomain_in_use, tabset_limit_exceeded, template_not_active, template_not_found, territory_realign_in_progress, text_data_outside_supported_charset, too_many_apex_requests, too_many_enum_value, too_many_possible_users_exist, transfer_requires_read, unable_to_lock_row, unavailable_recordtype_exception, undelete_failed, unknown_exception, unsafe_html_content, unspecified_email_address, unsupported_apex_trigger_operaton, unverified_sender_address, user_owns_portal_account_exception, user_with_apex_shares_exception, vf_compile_error, weblink_size_limit_exceeded, weblink_url_invalid, wrong_controller_type, xclean_unexpected_error}
//////////////////////////////////////////

@namespace('system')
class string { 
    string abbreviate( integer maxwidth);

    string abbreviate( integer maxwidth, integer offset);

    void adderror( apex_object msg);

    void adderror( apex_object msg, boolean escape);

    void adderror( string msg);

    void adderror( string msg, boolean escape);

    string capitalize( );

    string center( integer size);

    string center( integer size, string padstr);

    integer charat( integer index);

    integer codepointat( integer index);

    integer codepointbefore( integer index);

    integer codepointcount( integer beginindex, integer endindex);

    integer compareto( string str);

    boolean contains( string str);

    boolean containsany( string validchars);

    boolean containsignorecase( string searchstr);

    boolean containsnone( string invalidchars);

    boolean containsonly( string validchars);

    boolean containswhitespace( );

    integer countmatches( string searchstr);

    string deletewhitespace( );

    string difference( string other);

    boolean endswith( string str);

    boolean endswithignorecase( string suffix);

    boolean equals( object other);

    boolean equalsignorecase( string other);

    string escapecsv( );

    string escapeecmascript( );

    string escapehtml3( );

    string escapehtml4( );

    string escapejava( );

    static string escapesinglequotes( string s);

    string escapeunicode( );

    string escapexml( );

    static string format( string format, list<string> arguments);

    static string fromchararray( list<integer> chararr);

    list<integer> getchars( );

    static string getcommonprefix( list<string> strings);

    integer getlevenshteindistance( string other);

    integer getlevenshteindistance( string other, integer threshold);

    integer hashcode( );

    integer indexof( string str);

    integer indexof( string str, integer startpos);

    integer indexofany( string searchchars);

    integer indexofanybut( string searchchars);

    integer indexofchar( integer ch);

    integer indexofchar( integer ch, integer fromindex);

    integer indexofdifference( string other);

    integer indexofignorecase( string searchstr);

    integer indexofignorecase( string searchstr, integer startpos);

    boolean isalllowercase( );

    boolean isalluppercase( );

    boolean isalpha( );

    boolean isalphaspace( );

    boolean isalphanumeric( );

    boolean isalphanumericspace( );

    boolean isasciiprintable( );

    static boolean isblank( string str);

    static boolean isempty( string str);

    static boolean isnotblank( string str);

    static boolean isnotempty( string str);

    boolean isnumeric( );

    boolean isnumericspace( );

    boolean iswhitespace( );

    static string join( apex_object iterableobj, string separator);

    integer lastindexof( string searchstr, integer startpos);

    integer lastindexof( string str);

    integer lastindexofchar( integer ch);

    integer lastindexofchar( integer ch, integer fromindex);

    integer lastindexofignorecase( string searchstr);

    integer lastindexofignorecase( string searchstr, integer startpos);

    string left( integer len);

    string leftpad( integer len);

    string leftpad( integer len, string padstr);

    integer length( );

    string mid( integer pos, integer len);

    string normalizespace( );

    integer offsetbycodepoints( integer index, integer codepointoffset);

    string overlay( string overlay, integer start, integer end);

    string remove( string toremove);

    string removeend( string toremove);

    string removeendignorecase( string toremove);

    string removestart( string toremove);

    string removestartignorecase( string toremove);

    string repeat( integer numtimes);

    string repeat( string separator, integer numtimes);

    string replace( string target, string replacement);

    string replaceall( string regex, string replacement);

    string replacefirst( string regex, string replacement);

    string reverse( );

    string right( integer len);

    string rightpad( integer len);

    string rightpad( integer len, string padstr);

    list<string> split( string regex);

    list<string> split( string regex, integer limit);

    list<string> splitbycharactertype( );

    list<string> splitbycharactertypecamelcase( );

    boolean startswith( string str);

    boolean startswithignorecase( string prefix);

    string striphtmltags( );

    string substring( integer start);

    string substring( integer start, integer end);

    string substringafter( string separator);

    string substringafterlast( string separator);

    string substringbefore( string separator);

    string substringbeforelast( string separator);

    string substringbetween( string open, string close);

    string substringbetween( string tag);

    string swapcase( );

    string tolowercase( );

    string tolowercase( string locale);

    string touppercase( );

    string touppercase( string locale);

    string trim( );

    string uncapitalize( );

    string unescapecsv( );

    string unescapeecmascript( );

    string unescapehtml3( );

    string unescapehtml4( );

    string unescapejava( );

    string unescapeunicode( );

    string unescapexml( );

    static string valueof( date d);

    static string valueof( datetime dt);

    static string valueof( decimal d);

    static string valueof( double d);

    static string valueof( integer i);

    static string valueof( long l);

    static string valueof( object o);

    static string valueofgmt( datetime dt);

}
//////////////////////////////////////////

@namespace('system')
class stringexception { 
     stringexception( );
     stringexception( exception param1);
     stringexception( string param1);
     stringexception( string param1, exception param2);
    exception getcause( );

    integer getlinenumber( );

    string getmessage( );

    string getstacktracestring( );

    string gettypename( );

    void initcause( exception cause);

    void setmessage( string message);

}
//////////////////////////////////////////

@namespace('system')
class supportpredictiveservice { 
     supportpredictiveservice( );
    static list<id> findsimilarcases( string caseid);

}
//////////////////////////////////////////

@namespace('system')
class system { 
    static void abortjob( string jobid);

    static void assert( boolean condition);

    static void assert( boolean condition, any msg);

    static void assertequals( any expected, any actual);

    static void assertequals( any expected, any actual, any msg);

    static void assertnotequals( any expected, any actual);

    static void assertnotequals( any expected, any actual, any msg);

    static system.pagereference currentpagereference( );

    static long currenttimemillis( );

    static void debug( any o);

    static void debug( system.logginglevel loglevel, any o);

    static id enqueuejob( apex_object queueable);

    static boolean equals( any left, any right);

    static system.applicationreadwritemode getapplicationreadwritemode( );

    static integer hashcode( any obj);

    static boolean isbatch( );

    static boolean isfuture( );

    static boolean isqueueable( );

    static boolean isscheduled( );

    static datetime now( );

    static list<id> process( list<id> workitemids, string action, string commments, string nextapprover);

    static integer purgeoldasyncjobs( date date);

    static system.version requestversion( );

    static system.resetpasswordresult resetpassword( id userid, boolean senduseremail);

    static void runas( package.version version);

    static void runas( sobject user, any block);

    static string schedule( string jobname, string cronexp, apex_object schedulable);

    static string schedulebatch( apex_object batchable, string jobname, integer minutesfromnow);

    static string schedulebatch( apex_object batchable, string jobname, integer minutesfromnow, integer scopesize);

    static void setpassword( id userid, string password);

    static list<id> submit( list<id> ids, string commments, string nextapprover);

    static date today( );

}
//////////////////////////////////////////

@namespace('system')
class test { 
     test( );
    static list<id> enqueuebatchjobs( integer n);

    static list<id> getflexqueueorder( );

    static id getstandardpricebookid( );

    static object invokecontinuationmethod( object controller, system.continuation continuation);

    static component.apex.page invokepage( system.pagereference p);

    static boolean isrunningtest( );

    static list<sobject> loaddata( schema.sobjecttype sobjecttype, string staticresourcename);

    static void setcontinuationresponse( string label, system.httpresponse response);

    static void setcreateddate( id id, datetime dt);

    static void setcurrentpage( object pagereference);

    static void setcurrentpagereference( object pagereference);

    static void setfixedsearchresults( list<string> searchresultsids);

    static void setmock( system.type interfacetype, object mock);

    static void setreadonlyapplicationmode( boolean readonlyapplicationmode);

    static void starttest( );

    static void stoptest( );

    static void testinstall( system.installhandler script, system.version version);

    static void testinstall( system.installhandler script, system.version version, boolean ispush);

    static void testsandboxpostcopyscript( system.sandboxpostcopy script, id organizationid, id sandboxid, string sandboxname);

    static void testuninstall( system.uninstallhandler script);

}
//////////////////////////////////////////

@namespace('system')
class time { 
    void adderror( apex_object msg);

    void adderror( apex_object msg, boolean escape);

    void adderror( string msg);

    void adderror( string msg, boolean escape);

    time addhours( integer hours);

    time addmilliseconds( integer milliseconds);

    time addminutes( integer minutes);

    time addseconds( integer seconds);

    integer hour( );

    integer millisecond( );

    integer minute( );

    static time newinstance( integer hour, integer minute, integer second, integer millisecond);

    integer second( );

}
//////////////////////////////////////////

@namespace('system')
class timezone { 
    string getdisplayname( );

    string getid( );

    integer getoffset( datetime dt);

    static system.timezone gettimezone( string id);

    string tostring( );

}
//////////////////////////////////////////

@namespace('system')
class touchhandledexception { 
     touchhandledexception( string param1);
    exception getcause( );

    integer getlinenumber( );

    string getmessage( );

    string getstacktracestring( );

    string gettypename( );

    void initcause( exception cause);

    void setmessage( string message);

}
//////////////////////////////////////////

@namespace('system')
class type { 
    boolean equals( object o);

    static system.type forname( string clsname);

    static system.type forname( string namespace, string clsname);

    string getname( );

    integer hashcode( );

    object newinstance( );

    string tostring( );

}
//////////////////////////////////////////

@namespace('system')
class typeexception { 
     typeexception( );
     typeexception( exception param1);
     typeexception( string param1);
     typeexception( string param1, exception param2);
    exception getcause( );

    integer getlinenumber( );

    string getmessage( );

    string getstacktracestring( );

    string gettypename( );

    void initcause( exception cause);

    void setmessage( string message);

}
//////////////////////////////////////////

@namespace('system')
class unexpectedexception { 
     unexpectedexception( );
     unexpectedexception( exception param1);
     unexpectedexception( string param1);
     unexpectedexception( string param1, exception param2);
    exception getcause( );

    integer getlinenumber( );

    string getmessage( );

    string getstacktracestring( );

    string gettypename( );

    void initcause( exception cause);

    void setmessage( string message);

}
//////////////////////////////////////////

@namespace('system')
interface uninstallhandler { 
    void onuninstall( uninstallcontext context);

}
//////////////////////////////////////////

@namespace('system')
class unsupportedoperationexception { 
     unsupportedoperationexception( );
     unsupportedoperationexception( exception param1);
     unsupportedoperationexception( string param1);
     unsupportedoperationexception( string param1, exception param2);
    string gettypename( );

}
//////////////////////////////////////////

@namespace('system')
class url { 
     url( string protocol, string host, integer port, string file);
     url( string protocol, string host, string file);
     url( string spec);
     url( system.url context, string spec);
    string getauthority( );

    static system.url getcurrentrequesturl( );

    integer getdefaultport( );

    string getfile( );

    static string getfilefieldurl( string objectid, string fieldname);

    string gethost( );

    string getpath( );

    integer getport( );

    string getprotocol( );

    string getquery( );

    string getref( );

    static system.url getsalesforcebaseurl( );

    string getuserinfo( );

    boolean samefile( system.url other);

    string toexternalform( );

}
//////////////////////////////////////////

@namespace('system')
class userinfo { 
     userinfo( );
    static string getdefaultcurrency( );

    static string getfirstname( );

    static string getlanguage( );

    static string getlastname( );

    static string getlocale( );

    static string getname( );

    static string getorganizationid( );

    static string getorganizationname( );

    static string getprofileid( );

    static string getsessionid( );

    static system.timezone gettimezone( );

    static string getuitheme( );

    static string getuithemedisplayed( );

    static string getuseremail( );

    static string getuserid( );

    static string getusername( );

    static string getuserroleid( );

    static string getusertype( );

    static boolean iscurrentuserlicensed( string namespaceprefix);

    static boolean ismulticurrencyorganization( );

}
//////////////////////////////////////////

@namespace('system')
class version { 
     version( integer param1, integer param2);
     version( integer param1, integer param2, integer param3);
    integer compareto( system.version other);

    integer major( );

    integer minor( );

    integer patch( );

}
//////////////////////////////////////////

@namespace('system')
class visualforceexception { 
     visualforceexception( );
     visualforceexception( exception param1);
     visualforceexception( string param1);
     visualforceexception( string param1, exception param2);
    exception getcause( );

    integer getlinenumber( );

    string getmessage( );

    string getstacktracestring( );

    string gettypename( );

    void initcause( exception cause);

    void setmessage( string message);

}
//////////////////////////////////////////

@namespace('system')
class webservicecallout { 
     webservicecallout( );
    static void invoke( object stub, object request, map<string,object> response, list<string> infoarray);

}
//////////////////////////////////////////

@namespace('system')
interface webservicemock { 
    void doinvoke( object param1, object param2, map<string,any> param3, string param4, string param5, string param6, string param7, string param8, string param9);

}
//////////////////////////////////////////

@namespace('system')
class xmlexception { 
     xmlexception( );
     xmlexception( exception param1);
     xmlexception( string param1);
     xmlexception( string param1, exception param2);
    exception getcause( );

    integer getlinenumber( );

    string getmessage( );

    string getstacktracestring( );

    string gettypename( );

    void initcause( exception cause);

    void setmessage( string message);

}
//////////////////////////////////////////

@namespace('system')
class xmlstreamreader { 
     xmlstreamreader( string param1);
    integer getattributecount( );

    string getattributelocalname( integer index);

    string getattributenamespace( integer index);

    string getattributeprefix( integer index);

    string getattributetype( integer index);

    string getattributevalue( string namespaceuri, string localname);

    string getattributevalueat( integer index);

    system.xmltag geteventtype( );

    string getlocalname( );

    string getlocation( );

    string getnamespace( );

    integer getnamespacecount( );

    string getnamespaceprefix( integer index);

    string getnamespaceuri( string prefix);

    string getnamespaceuriat( integer index);

    string getpidata( );

    string getpitarget( );

    string getprefix( );

    string gettext( );

    string getversion( );

    boolean hasname( );

    boolean hasnext( );

    boolean hastext( );

    boolean ischaracters( );

    boolean isendelement( );

    boolean isstartelement( );

    boolean iswhitespace( );

    integer next( );

    integer nexttag( );

    void setcoalescing( boolean flag);

    void setnamespaceaware( boolean flag);

    string tostring( );

}
//////////////////////////////////////////

@namespace('system')
class xmlstreamwriter { 
     xmlstreamwriter( );
    void close( );

    string getxmlstring( );

    void setdefaultnamespace( string uri);

    void writeattribute( string prefix, string namespaceuri, string localname, string value);

    void writecdata( string data);

    void writecharacters( string text);

    void writecomment( string data);

    void writedefaultnamespace( string namesapceuri);

    void writeemptyelement( string prefix, string localname, string namesapceuri);

    void writeenddocument( );

    void writeendelement( );

    void writenamespace( string prefix, string namesapceuri);

    void writeprocessinginstruction( string target, string data);

    void writestartdocument( string encoding, string version);

    void writestartelement( string prefix, string localname, string namesapceuri);

}
//////////////////////////////////////////

@namespace('system')
enum xmltag { attribute, cdata, characters, comment, dtd, end_document, end_element, entity_declaration, entity_reference, namespace, notation_declaration, processing_instruction, space, start_document, start_element}
//////////////////////////////////////////

@namespace('territorymgmt')
interface opportunityterritory2assignmentfilter { 
    map<id,id> getopportunityterritory2assignments( list<id> param1);

}
//////////////////////////////////////////

@namespace('txnsecurity')
class event { 
    string action { set; get; }
    map<string,string> data { set; get; }
    string entityid { set; get; }
    string entityname { set; get; }
    string organizationid { set; get; }
    string resourcetype { set; get; }
    datetime timestamp { set; get; }
    string userid { set; get; }
     event( string organizationid, string userid, string entityname, string action, string resourcetype, string entityid, datetime timestamp, map<string,string> data);
}
//////////////////////////////////////////

@namespace('txnsecurity')
interface policycondition { 
    boolean evaluate( txnsecurity.event param1);

}
//////////////////////////////////////////

@namespace('userprovisioning')
class collectingbatchable { 
    Object nextreconoffset;
    Object reconoffset;
    Object status;
     collectingbatchable( string reconoffset, string uprid, string connectedappid);
    void execute( database.batchablecontext bc, list<userprovisioningrequest> scope);

    void finish( database.batchablecontext bc);

    map<string,any> flowinputpreprocessing( map<string,any> mymap);

    void flowpostprocessing( flow.interview provisioningflow, sobject thisupr);

    string geteventprefix( );

    string getflowname( );

    string getflownamespace( );

    list<sobject> getperbatchupl( );

    list<userprovisioningrequest> getperbatchupr( );

    map<id,sobject> getuprtonewuplmap( );

    boolean hasflow( );

    void postbatchprocessing( );

    database.querylocator start( database.batchablecontext bc);

}
//////////////////////////////////////////

@namespace('userprovisioning')
class committingbatchable { 
     committingbatchable( string uprid);
    void execute( database.batchablecontext bc, list<sobject> scope);

    void finish( database.batchablecontext bc);

    database.querylocator start( database.batchablecontext bc);

}
//////////////////////////////////////////

@namespace('userprovisioning')
class deletingbatchable { 
     deletingbatchable( string uprid);
    void execute( database.batchablecontext bc, list<sobject> scope);

    void finish( database.batchablecontext bc);

    database.querylocator start( database.batchablecontext bc);

}
//////////////////////////////////////////

@namespace('userprovisioning')
class flowprovisionbase { 
     flowprovisionbase( string uprid);
    string getflowname( );

    string getflownamespace( );

    boolean hasflow( );

}
//////////////////////////////////////////

@namespace('userprovisioning')
class linkingbatchable { 
     linkingbatchable( string uprid);
    void execute( database.batchablecontext bc, list<sobject> scope);

    void finish( database.batchablecontext bc);

    string getflowname( );

    string getflownamespace( );

    boolean hasflow( );

    database.querylocator start( database.batchablecontext bc);

}
//////////////////////////////////////////

@namespace('userprovisioning')
class pluginbatchable { 
     pluginbatchable( list<sobject> newrows);
    void execute( database.batchablecontext bc, list<userprovisioningrequest> scope);

    map<string,any> flowinputpreprocessing( map<string,any> param1);

    void flowpostprocessing( flow.interview param1, sobject param2);

    string geteventprefix( );

    string getflowname( );

    string getflownamespace( );

    list<sobject> getperbatchupl( );

    list<userprovisioningrequest> getperbatchupr( );

    map<id,sobject> getuprtonewuplmap( );

    boolean hasflow( );

    void postbatchprocessing( );

    database.querylocator start( database.batchablecontext bc);

}
//////////////////////////////////////////

@namespace('userprovisioning')
class provisioningbatchable { 
     provisioningbatchable( list<sobject> newrows);
    void execute( database.batchablecontext bc, list<userprovisioningrequest> scope);

    void finish( database.batchablecontext bc);

    map<string,any> flowinputpreprocessing( map<string,any> mymap);

    void flowpostprocessing( flow.interview provisioningflow, sobject thisupr);

    string geteventprefix( );

    string getflowname( );

    string getflownamespace( );

    list<sobject> getperbatchupl( );

    list<userprovisioningrequest> getperbatchupr( );

    map<id,sobject> getuprtonewuplmap( );

    boolean hasflow( );

    void postbatchprocessing( );

    database.querylocator start( database.batchablecontext bc);

}
//////////////////////////////////////////

@namespace('userprovisioning')
class requestingbatchable { 
     requestingbatchable( list<sobject> newrows);
    void execute( database.batchablecontext bc, list<userprovisioningrequest> scope);

    void finish( database.batchablecontext bc);

    database.querylocator start( database.batchablecontext bc);

}
//////////////////////////////////////////

@namespace('userprovisioning')
class upascleaningbatchable { 
     upascleaningbatchable( string uprid);
    void execute( database.batchablecontext bc, list<sobject> scope);

    void finish( database.batchablecontext bc);

    database.querylocator start( database.batchablecontext bc);

}
//////////////////////////////////////////

@namespace('userprovisioning')
class userprovisioninglog { 
     userprovisioninglog( );
    static void log( string userprovisioningrequestid, string details);

    static void log( string userprovisioningrequestid, string externaluserid, string externalusername, string userid, string details);

    static void log( string userprovisioningrequestid, string status, string details);

}
//////////////////////////////////////////

@namespace('userprovisioning')
class userprovisioningplugin { 
     userprovisioningplugin( );
    process.plugindescriberesult builddescribecall( );

    process.plugindescriberesult describe( );

    string getpluginclassname( );

    process.pluginresult invoke( process.pluginrequest param1);

}
//////////////////////////////////////////

@namespace('workflow')
class action { 
    list<workflow.actiondml> invoke( workflow.context param1);

}
//////////////////////////////////////////

@namespace('workflow')
class actiondml { 
    void invoke( );

}
//////////////////////////////////////////

@namespace('workflow')
class context { 
    Object sobjects;
}
//////////////////////////////////////////

        ]]></Text>
        </ResolutionLibrary>
        <ResolutionLibrary formatVersion="17.10" language="apex" filename="DefaultSObjects">
            <Text><![CDATA[
@namespace('schema')
class acceptedeventrelation extends sobject { 
    id id;
    id relationid;  user relation;
    id eventid;  event event;
    datetime respondeddate;
    string response;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    boolean isdeleted;
    string type;
}
//////////////////////////////////////////

@namespace('schema')
class account extends sobject { 
    id id;
    boolean isdeleted;
    id masterrecordid;  account masterrecord;
    string name;
    string type;
    id parentid;  account parent;
    string billingstreet;
    string billingcity;
    string billingstate;
    string billingpostalcode;
    string billingcountry;
    decimal billinglatitude;
    decimal billinglongitude;
    string billinggeocodeaccuracy;
    address billingaddress;
    string shippingstreet;
    string shippingcity;
    string shippingstate;
    string shippingpostalcode;
    string shippingcountry;
    decimal shippinglatitude;
    decimal shippinglongitude;
    string shippinggeocodeaccuracy;
    address shippingaddress;
    string phone;
    string fax;
    string accountnumber;
    string website;
    string photourl;
    string sic;
    string industry;
    decimal annualrevenue;
    integer numberofemployees;
    string ownership;
    string tickersymbol;
    string description;
    string rating;
    string site;
    id ownerid;  user owner;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    date lastactivitydate;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    string jigsaw;
    string jigsawcompanyid;
    string cleanstatus;
    string accountsource;
    string dunsnumber;
    string tradestyle;
    string naicscode;
    string naicsdesc;
    string yearstarted;
    string sicdesc;
    id dandbcompanyid;  dandbcompany dandbcompany;
    string customerpriority__c;
    string sla__c;
    string active__c;
    decimal numberoflocations__c;
    string upsellopportunity__c;
    string slaserialnumber__c;
    date slaexpirationdate__c;
    id event_primary_contact__c;  contact event_primary_contact__r;
            List< account >  childaccounts;

            List< accountcleaninfo >  accountcleaninfos;

            List< accountcontactrole >  accountcontactroles;

            List< accountfeed >  feeds;

            List< accounthistory >  histories;

            List< accountpartner >  accountpartnersfrom;

            List< accountpartner >  accountpartnersto;

            List< accountshare >  shares;

            List< actionplan__c >  action_plans__r;

            List< activityhistory >  activityhistories;

            List< asset >  assets;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< case >  cases;

            List< catalog_order__c >  catalog_orders__r;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contact >  contacts;

            List< contentdistribution >  _19__;

            List< contentdocumentlink >  _20__;

            List< contentversion >  _21__;

            List< contract >  contracts;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< employee_directory_configuration__c >  r00n80000002bfdeeai__r;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< event >  _27__;

            List< event >  events;

            List< event_mdf__c >  event_mdfs__r;

            List< event__c >  events__r;

            List< feedcomment >  _31__;

            List< feeditem >  _32__;

            List< lead >  _33__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< openactivity >  openactivities;

            List< opportunity >  opportunities;

            List< opportunitypartner >  opportunitypartnersto;

            List< order >  orders;

            List< partner >  partnersfrom;

            List< partner >  partnersto;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< speaker__c >  speakers__r;

            List< task >  _45__;

            List< task >  tasks;

            List< topicassignment >  topicassignments;

            List< user >  _48__;

            List< userrole >  _49__;

}
//////////////////////////////////////////

@namespace('schema')
class accountcleaninfo extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id accountid;  account account;
    datetime lastmatcheddate;
    datetime laststatuschangeddate;
    id laststatuschangedbyid;  user laststatuschangedby;
    boolean isinactive;
    string companyname;
    string phone;
    string street;
    string city;
    string state;
    string postalcode;
    string country;
    decimal latitude;
    decimal longitude;
    string geocodeaccuracy;
    address address;
    string website;
    string tickersymbol;
    decimal annualrevenue;
    integer numberofemployees;
    string industry;
    string ownership;
    string dunsnumber;
    string sic;
    string sicdescription;
    string naicscode;
    string naicsdescription;
    string yearstarted;
    string fax;
    string accountsite;
    string description;
    string tradestyle;
    string dandbcompanydunsnumber;
    string dunsrightmatchgrade;
    integer dunsrightmatchconfidence;
    string companystatusdatadotcom;
    boolean isreviewedcompanyname;
    boolean isreviewedphone;
    boolean isreviewedaddress;
    boolean isreviewedwebsite;
    boolean isreviewedtickersymbol;
    boolean isreviewedannualrevenue;
    boolean isreviewednumberofemployees;
    boolean isreviewedindustry;
    boolean isreviewedownership;
    boolean isrevieweddunsnumber;
    boolean isreviewedsic;
    boolean isreviewedsicdescription;
    boolean isreviewednaicscode;
    boolean isreviewednaicsdescription;
    boolean isreviewedyearstarted;
    boolean isreviewedfax;
    boolean isreviewedaccountsite;
    boolean isrevieweddescription;
    boolean isreviewedtradestyle;
    boolean isrevieweddandbcompanydunsnumber;
    boolean isdifferentcompanyname;
    boolean isdifferentphone;
    boolean isdifferentstreet;
    boolean isdifferentcity;
    boolean isdifferentstate;
    boolean isdifferentpostalcode;
    boolean isdifferentcountry;
    boolean isdifferentwebsite;
    boolean isdifferenttickersymbol;
    boolean isdifferentannualrevenue;
    boolean isdifferentnumberofemployees;
    boolean isdifferentindustry;
    boolean isdifferentownership;
    boolean isdifferentdunsnumber;
    boolean isdifferentsic;
    boolean isdifferentsicdescription;
    boolean isdifferentnaicscode;
    boolean isdifferentnaicsdescription;
    boolean isdifferentyearstarted;
    boolean isdifferentfax;
    boolean isdifferentaccountsite;
    boolean isdifferentdescription;
    boolean isdifferenttradestyle;
    boolean isdifferentdandbcompanydunsnumber;
    boolean isdifferentstatecode;
    boolean isdifferentcountrycode;
    boolean cleanedbyjob;
    boolean cleanedbyuser;
    boolean isflaggedwrongcompanyname;
    boolean isflaggedwrongphone;
    boolean isflaggedwrongaddress;
    boolean isflaggedwrongwebsite;
    boolean isflaggedwrongtickersymbol;
    boolean isflaggedwrongannualrevenue;
    boolean isflaggedwrongnumberofemployees;
    boolean isflaggedwrongindustry;
    boolean isflaggedwrongownership;
    boolean isflaggedwrongdunsnumber;
    boolean isflaggedwrongsic;
    boolean isflaggedwrongsicdescription;
    boolean isflaggedwrongnaicscode;
    boolean isflaggedwrongnaicsdescription;
    boolean isflaggedwrongyearstarted;
    boolean isflaggedwrongfax;
    boolean isflaggedwrongaccountsite;
    boolean isflaggedwrongdescription;
    boolean isflaggedwrongtradestyle;
    string datadotcomid;
}
//////////////////////////////////////////

@namespace('schema')
class accountcontactrole extends sobject { 
    id id;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id accountid;  account account;
    id contactid;  contact contact;
    string role;
    boolean isprimary;
}
//////////////////////////////////////////

@namespace('schema')
class accountfeed extends sobject { 
    id id;
    id parentid;  account parent;
    string type;
    id createdbyid;  user createdby;
    datetime createddate;
    boolean isdeleted;
    datetime lastmodifieddate;
    datetime systemmodstamp;
    integer commentcount;
    integer likecount;
    string title;
    string body;
    string linkurl;
    boolean isrichtext;
    id relatedrecordid;
    id insertedbyid;  user insertedby;
            List< feedattachment >  feedattachments;

            List< feedcomment >  feedcomments;

            List< feedlike >  _3__;

            List< feedlike >  feedlikes;

            List< feedpollchoice >  _5__;

            List< feedpollvote >  _6__;

            List< feedtrackedchange >  feedtrackedchanges;

}
//////////////////////////////////////////

@namespace('schema')
class accounthistory extends sobject { 
    id id;
    boolean isdeleted;
    id accountid;  account account;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class accountpartner extends sobject { 
    id id;
    id accountfromid;  account accountfrom;
    id accounttoid;  account accountto;
    id opportunityid;  opportunity opportunity;
    string role;
    boolean isprimary;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    boolean isdeleted;
    id reversepartnerid;
            List< accountpartner >  _1__;

}
//////////////////////////////////////////

@namespace('schema')
class accountshare extends sobject { 
    id id;
    id accountid;  account account;
    id userorgroupid;  user userorgroup;
    string accountaccesslevel;
    string opportunityaccesslevel;
    string caseaccesslevel;
    string contactaccesslevel;
    string rowcause;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    boolean isdeleted;
}
//////////////////////////////////////////

@namespace('schema')
class action_plans_settings__c extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    id setupownerid;  user setupowner;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    boolean chatter_object_brag__c;
    boolean unassigned_task_default__c;
            List< attachedcontentdocument >  attachedcontentdocuments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _4__;

            List< contentdocumentlink >  _5__;

            List< contentversion >  _6__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _10__;

            List< feeditem >  _11__;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class actionlinkgrouptemplate extends sobject { 
    id id;
    boolean isdeleted;
    string developername;
    string language;
    string masterlabel;
    string namespaceprefix;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string executionsallowed;
    integer hoursuntilexpiration;
    string category;
    boolean ispublished;
            List< actionlinktemplate >  actionlinktemplates;

}
//////////////////////////////////////////

@namespace('schema')
class actionlinktemplate extends sobject { 
    id id;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id actionlinkgrouptemplateid;  actionlinkgrouptemplate actionlinkgrouptemplate;
    string labelkey;
    string method;
    string linktype;
    integer position;
    boolean isconfirmationrequired;
    boolean isgroupdefault;
    string uservisibility;
    string useralias;
    string label;
    string actionurl;
    string requestbody;
    string headers;
}
//////////////////////////////////////////

@namespace('schema')
class actionplan__c extends sobject { 
    id id;
    id ownerid;  user owner;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    id account__c;  account account__r;
    id action_plan_template__c;  actionplantemplate__c action_plan_template__r;
    id action_plan__c;  actionplan__c action_plan__r;
    id campaign__c;  campaign campaign__r;
    id case__c;  case case__r;
    id contact__c;  contact contact__r;
    id contract__c;  contract contract__r;
    string description__c;
    id lead__c;  lead lead__r;
    id opportunity__c;  opportunity opportunity__r;
    string skipday__c;
    boolean skipweekends__c;
    date startdate__c;
    string taskrecordtypeid__c;
    string task_status_formula__c;
    string whatid__c;
    decimal completed__c;
    decimal total__c;
            List< aptasktemplate__c >  r00nr0000000vccfmas__r;

            List< actionplan__c >  action_plans__r;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _7__;

            List< contentdocumentlink >  _8__;

            List< contentversion >  _9__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _13__;

            List< feeditem >  _14__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class actionplantemplate__c extends sobject { 
    id id;
    id ownerid;  user owner;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    string description__c;
    string importid__c;
    string skipday__c;
    boolean skipweekends__c;
    string taskrecordtypeid__c;
            List< apttasktemplate__c >  aptasks__r;

            List< actionplan__c >  r00nr0000000vbutmak__r;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _7__;

            List< contentdocumentlink >  _8__;

            List< contentversion >  _9__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _13__;

            List< feeditem >  _14__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class activityhistory extends sobject { 
    id id;
    id accountid;  account account;
    id whoid;  lead who;
    id whatid;  venue__c what;
    string subject;
    boolean istask;
    date activitydate;
    id ownerid;  user owner;
    string status;
    string priority;
    boolean ishighpriority;
    string activitytype;
    boolean isclosed;
    boolean isalldayevent;
    boolean isvisibleinselfservice;
    integer durationinminutes;
    string location;
    string description;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    integer calldurationinseconds;
    string calltype;
    string calldisposition;
    string callobject;
    datetime reminderdatetime;
    boolean isreminderset;
    datetime enddatetime;
    datetime startdatetime;
    string activitysubtype;
    id alternatedetailid;  emailmessage alternatedetail;
    string tasktemplateid__c;
}
//////////////////////////////////////////

@namespace('schema')
class additionalnumber extends sobject { 
    id id;
    boolean isdeleted;
    id callcenterid;
    string name;
    string description;
    string phone;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class aggregateresult extends sobject { 
    id id;
}
//////////////////////////////////////////

@namespace('schema')
class announcement extends sobject { 
    id id;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id feeditemid;  feeditem feeditem;
    datetime expirationdate;
    boolean sendemails;
    boolean isarchived;
    id parentid;  collaborationgroup parent;
            List< collaborationgroup >  _1__;

}
//////////////////////////////////////////

@namespace('schema')
class apexclass extends sobject { 
    id id;
    string namespaceprefix;
    string name;
    decimal apiversion;
    string status;
    boolean isvalid;
    decimal bodycrc;
    string body;
    integer lengthwithoutcomments;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
            List< apextestqueueitem >  _1__;

            List< apextestresult >  _2__;

            List< asyncapexjob >  _3__;

            List< attachedcontentdocument >  _4__;

            List< authprovider >  _5__;

            List< authprovider >  _6__;

            List< combinedattachment >  _7__;

            List< emailservicesfunction >  _8__;

            List< externaldatasource >  _9__;

            List< ownedcontentdocument >  _10__;

            List< samlssoconfig >  _11__;

            List< setupentityaccess >  setupentityaccessitems;

            List< testsuitemembership >  _13__;

}
//////////////////////////////////////////

@namespace('schema')
class apexcomponent extends sobject { 
    id id;
    string namespaceprefix;
    string name;
    decimal apiversion;
    string masterlabel;
    string description;
    string controllertype;
    string controllerkey;
    string markup;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class apexemailnotification extends sobject { 
    id id;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id userid;  user user;
    string email;
}
//////////////////////////////////////////

@namespace('schema')
class apexlog extends sobject { 
    id id;
    id loguserid;  user loguser;
    integer loglength;
    datetime lastmodifieddate;
    string request;
    string operation;
    string application;
    string status;
    integer durationmilliseconds;
    datetime systemmodstamp;
    datetime starttime;
    string location;
            List< apextestresult >  _1__;

}
//////////////////////////////////////////

@namespace('schema')
class apexpage extends sobject { 
    id id;
    string namespaceprefix;
    string name;
    decimal apiversion;
    string masterlabel;
    string description;
    string controllertype;
    string controllerkey;
    boolean isavailableintouch;
    boolean isconfirmationtokenrequired;
    string markup;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
            List< setupentityaccess >  setupentityaccessitems;

            List< weblink >  _2__;

}
//////////////////////////////////////////

@namespace('schema')
class apexpageinfo extends sobject { 
    id id;
    string durableid;
    string apexpageid;
    string name;
    string namespaceprefix;
    decimal apiversion;
    string description;
    boolean isavailableintouch;
}
//////////////////////////////////////////

@namespace('schema')
class apextestqueueitem extends sobject { 
    id id;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime systemmodstamp;
    id apexclassid;  apexclass apexclass;
    string status;
    string extendedstatus;
    id parentjobid;
    id testrunresultid;
            List< apextestresult >  _1__;

}
//////////////////////////////////////////

@namespace('schema')
class apextestresult extends sobject { 
    id id;
    datetime systemmodstamp;
    datetime testtimestamp;
    string outcome;
    id apexclassid;  apexclass apexclass;
    string methodname;
    string message;
    string stacktrace;
    id asyncapexjobid;  asyncapexjob asyncapexjob;
    id queueitemid;  apextestqueueitem queueitem;
    id apexlogid;  apexlog apexlog;
    id apextestrunresultid;  apextestrunresult apextestrunresult;
    integer runtime;
            List< apextestresultlimits >  apextestresults;

}
//////////////////////////////////////////

@namespace('schema')
class apextestresultlimits extends sobject { 
    id id;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id apextestresultid;  apextestresult apextestresult;
    integer soql;
    integer queryrows;
    integer sosl;
    integer dml;
    integer dmlrows;
    integer cpu;
    integer callouts;
    integer email;
    integer asynccalls;
    integer mobilepush;
    string limitcontext;
    string limitexceptions;
}
//////////////////////////////////////////

@namespace('schema')
class apextestrunresult extends sobject { 
    id id;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id asyncapexjobid;  asyncapexjob asyncapexjob;
    id userid;  user user;
    string jobname;
    boolean isalltests;
    string source;
    datetime starttime;
    datetime endtime;
    integer testtime;
    string status;
    integer classesenqueued;
    integer classescompleted;
            List< apextestqueueitem >  _1__;

            List< apextestresult >  _2__;

}
//////////////////////////////////////////

@namespace('schema')
class apextestsuite extends sobject { 
    id id;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string testsuitename;
            List< testsuitemembership >  apexclassjunctions;

}
//////////////////////////////////////////

@namespace('schema')
class apextrigger extends sobject { 
    id id;
    string namespaceprefix;
    string name;
    string tableenumorid;
    boolean usagebeforeinsert;
    boolean usageafterinsert;
    boolean usagebeforeupdate;
    boolean usageafterupdate;
    boolean usagebeforedelete;
    boolean usageafterdelete;
    boolean usageisbulk;
    boolean usageafterundelete;
    decimal apiversion;
    string status;
    boolean isvalid;
    decimal bodycrc;
    string body;
    integer lengthwithoutcomments;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class appmenuitem extends sobject { 
    id id;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    integer sortorder;
    string name;
    string namespaceprefix;
    string label;
    string description;
    string starturl;
    string mobilestarturl;
    string logourl;
    string iconurl;
    string infourl;
    boolean isusingadminauthorization;
    string mobileplatform;
    string mobileminosver;
    string mobiledevicetype;
    boolean isregistereddeviceonly;
    string mobileappver;
    datetime mobileappinstalleddate;
    string mobileappinstalledversion;
    string mobileappbinaryid;
    string mobileappinstallurl;
    boolean canvasenabled;
    string canvasreferenceid;
    string canvasurl;
    string canvasaccessmethod;
    string canvasselectedlocations;
    string canvasoptions;
    string type;
    id applicationid;
    integer usersortorder;
    boolean isvisible;
    boolean isaccessible;
            List< oauthtoken >  _1__;

}
//////////////////////////////////////////

@namespace('schema')
class aptasktemplate__c extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    date lastactivitydate;
    id action_plan__c;  actionplan__c action_plan__r;
    id aptasktemplate__c;  aptasktemplate__c aptasktemplate__r;
    date activitydate__c;
    string comments__c;
    decimal daysfromstart__c;
    string dependent__c;
    string minutes_reminder__c;
    string priority__c;
    boolean reminder__c;
    boolean sendemail__c;
    string status__c;
    string subject__c;
    string time_reminder__c;
    string type__c;
    id user__c;  user user__r;
    decimal taskindex__c;
            List< aptasktemplate__c >  r00nr0000000vcwbmak__r;

            List< activityhistory >  activityhistories;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _7__;

            List< contentdocumentlink >  _8__;

            List< contentversion >  _9__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< event >  events;

            List< feedcomment >  _14__;

            List< feeditem >  _15__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< openactivity >  openactivities;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< task >  tasks;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class apttasktemplate__c extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id action_plan_template__c;  actionplantemplate__c action_plan_template__r;
    id apttasktemplate__c;  apttasktemplate__c apttasktemplate__r;
    string comments__c;
    decimal daysfromstart__c;
    string dependent__c;
    string minutes_reminder__c;
    string priority__c;
    boolean reminder__c;
    boolean sendemail__c;
    string subject__c;
    string time_reminder__c;
    string type__c;
    id user__c;  user user__r;
    decimal taskindex__c;
            List< apttasktemplate__c >  r00nr0000000vavdma0__r;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _6__;

            List< contentdocumentlink >  _7__;

            List< contentversion >  _8__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _12__;

            List< feeditem >  _13__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class asset extends sobject { 
    id id;
    id contactid;  contact contact;
    id accountid;  account account;
    id parentid;  asset parent;
    id rootassetid;  asset rootasset;
    id product2id;  product2 product2;
    boolean iscompetitorproduct;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    boolean isdeleted;
    string name;
    string serialnumber;
    date installdate;
    date purchasedate;
    date usageenddate;
    string status;
    decimal price;
    decimal quantity;
    string description;
    id ownerid;  user owner;
    datetime lastvieweddate;
    datetime lastreferenceddate;
            List< activityhistory >  activityhistories;

            List< asset >  childassets;

            List< asset >  _3__;

            List< assetfeed >  feeds;

            List< assethistory >  histories;

            List< assetshare >  shares;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< case >  cases;

            List< combinedattachment >  combinedattachments;

            List< contentdocumentlink >  _11__;

            List< contentversion >  _12__;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< event >  events;

            List< feedcomment >  _16__;

            List< feeditem >  _17__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< openactivity >  openactivities;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< task >  tasks;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class assetfeed extends sobject { 
    id id;
    id parentid;  asset parent;
    string type;
    id createdbyid;  user createdby;
    datetime createddate;
    boolean isdeleted;
    datetime lastmodifieddate;
    datetime systemmodstamp;
    integer commentcount;
    integer likecount;
    string title;
    string body;
    string linkurl;
    boolean isrichtext;
    id relatedrecordid;
    id insertedbyid;  user insertedby;
            List< feedattachment >  feedattachments;

            List< feedcomment >  feedcomments;

            List< feedlike >  _3__;

            List< feedlike >  feedlikes;

            List< feedpollchoice >  _5__;

            List< feedpollvote >  _6__;

            List< feedtrackedchange >  feedtrackedchanges;

}
//////////////////////////////////////////

@namespace('schema')
class assethistory extends sobject { 
    id id;
    boolean isdeleted;
    id assetid;  asset asset;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class assetshare extends sobject { 
    id id;
    id assetid;  asset asset;
    id userorgroupid;  user userorgroup;
    string assetaccesslevel;
    string rowcause;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    boolean isdeleted;
}
//////////////////////////////////////////

@namespace('schema')
class assignmentrule extends sobject { 
    id id;
    string name;
    string sobjecttype;
    boolean active;
    id createdbyid;  user createdby;
    datetime createddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime lastmodifieddate;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class asyncapexjob extends sobject { 
    id id;
    datetime createddate;
    id createdbyid;  user createdby;
    string jobtype;
    id apexclassid;  apexclass apexclass;
    string status;
    integer jobitemsprocessed;
    integer totaljobitems;
    integer numberoferrors;
    datetime completeddate;
    string methodname;
    string extendedstatus;
    id parentjobid;
    string lastprocessed;
    integer lastprocessedoffset;
            List< apextestqueueitem >  _1__;

            List< apextestresult >  _2__;

            List< apextestrunresult >  asyncapex;

            List< asyncapexjob >  _4__;

            List< flexqueueitem >  _5__;

}
//////////////////////////////////////////

@namespace('schema')
class attachedcontentdocument extends sobject { 
    id id;
    boolean isdeleted;
    id linkedentityid;  myobj__c linkedentity;
    id contentdocumentid;  contentdocument contentdocument;
    string title;
    id createdbyid;  user createdby;
    datetime createddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime lastmodifieddate;
    string filetype;
    integer contentsize;
    string fileextension;
    string contenturl;
    string externaldatasourcename;
    string externaldatasourcetype;
    string sharingoption;
}
//////////////////////////////////////////

@namespace('schema')
class attachment extends sobject { 
    id id;
    boolean isdeleted;
    id parentid;  myobj__c parent;
    string name;
    boolean isprivate;
    string contenttype;
    integer bodylength;
    blob body;
    id ownerid;  user owner;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string description;
}
//////////////////////////////////////////

@namespace('schema')
class auradefinition extends sobject { 
    id id;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id auradefinitionbundleid;  auradefinitionbundle auradefinitionbundle;
    string deftype;
    string format;
    string source;
}
//////////////////////////////////////////

@namespace('schema')
class auradefinitionbundle extends sobject { 
    id id;
    boolean isdeleted;
    string developername;
    string language;
    string masterlabel;
    string namespaceprefix;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    decimal apiversion;
    string description;
            List< auradefinition >  _1__;

}
//////////////////////////////////////////

@namespace('schema')
class authconfig extends sobject { 
    id id;
    boolean isdeleted;
    string developername;
    string language;
    string masterlabel;
    string namespaceprefix;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string url;
    boolean authoptionsusernamepassword;
    boolean authoptionssaml;
    boolean authoptionsauthprovider;
    boolean isactive;
    string type;
            List< authconfigproviders >  authprovidersforconfig;

}
//////////////////////////////////////////

@namespace('schema')
class authconfigproviders extends sobject { 
    id id;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id authconfigid;  authconfig authconfig;
    id authproviderid;  samlssoconfig authprovider;
}
//////////////////////////////////////////

@namespace('schema')
class authprovider extends sobject { 
    id id;
    datetime createddate;
    string providertype;
    string friendlyname;
    string developername;
    id registrationhandlerid;
    id executionuserid;
    string consumerkey;
    string consumersecret;
    string errorurl;
    string authorizeurl;
    string tokenurl;
    string userinfourl;
    string defaultscopes;
    string idtokenissuer;
    boolean optionssendaccesstokeninheader;
    boolean optionssendclientcredentialsinheader;
    boolean optionsincludeorgidinid;
    string iconurl;
    string logouturl;
    id pluginid;
    string custommetadatatyperecord;
            List< authconfigproviders >  _1__;

            List< loginhistory >  _2__;

            List< thirdpartyaccountlink >  _3__;

}
//////////////////////////////////////////

@namespace('schema')
class authsession extends sobject { 
    id id;
    id usersid;  user users;
    datetime createddate;
    datetime lastmodifieddate;
    integer numsecondsvalid;
    string usertype;
    string sourceip;
    string logintype;
    string sessiontype;
    string sessionsecuritylevel;
    string logouturl;
    id parentid;
    id loginhistoryid;  loginhistory loginhistory;
    id logingeoid;  logingeo logingeo;
    boolean iscurrent;
            List< authsession >  _1__;

            List< sessionpermsetactivation >  sessionpermsetactivations;

}
//////////////////////////////////////////

@namespace('schema')
class backgroundoperation extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    datetime submittedat;
    string status;
    string executiongroup;
    string sequencegroup;
    integer sequencenumber;
    id groupleaderid;  backgroundoperation groupleader;
    datetime startedat;
    datetime finishedat;
    string workeruri;
    integer timeout;
    datetime expiresat;
    integer numfollowers;
    datetime processafter;
    string parentkey;
    integer retrylimit;
    integer retrycount;
    integer retrybackoff;
    string error;
            List< backgroundoperation >  mergedoperations;

}
//////////////////////////////////////////

@namespace('schema')
class brandtemplate extends sobject { 
    id id;
    string name;
    string developername;
    boolean isactive;
    string description;
    string value;
    string namespaceprefix;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
            List< emailtemplate >  _1__;

}
//////////////////////////////////////////

@namespace('schema')
class budget_line__c extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    id recordtypeid;  recordtype recordtype;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    date lastactivitydate;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    id program_budget__c;  program_budget__c program_budget__r;
    boolean annual_budget__c;
    decimal budget_line_amount__c;
    id budget_line_owner__c;  user budget_line_owner__r;
    string budget_type__c;
    decimal contractor_budget_amount__c;
    string country__c;
    string department__c;
    string description__c;
    date end_period__c;
    decimal expected_pr__c;
    decimal number_of_quarters__c;
    decimal original_budget_line_amount__c;
    id original_retainer_budget__c;  budget_line__c original_retainer_budget__r;
    string period__c;
    decimal program_budget_amount__c;
    decimal program_remaining_amount__c;
    date recurring_start_date__c;
    id recurring_start_period__c;  period__c recurring_start_period__r;
    boolean recurring__c;
    string region__c;
    string reject_reason__c;
    string retainer_name__c;
    string short_name__c;
    string status__c;
    decimal total_amount_retainer__c;
    decimal uncommitted_approved_budget__c;
    decimal uncommitted_approved_contractor_budget__c;
    decimal rollup_of_contract_purchase_request_amt__c;
    decimal rollup_of_purchase_request_amount__c;
            List< activityhistory >  activityhistories;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< budget_line__history >  histories;

            List< budget_line__c >  budget_lines__r;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _8__;

            List< contentdocumentlink >  _9__;

            List< contentversion >  _10__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< event >  events;

            List< feedcomment >  _15__;

            List< feeditem >  _16__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< openactivity >  openactivities;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< purchase_request__c >  purchase_requests1__r;

            List< task >  tasks;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class budget_line__history extends sobject { 
    id id;
    boolean isdeleted;
    id parentid;  budget_line__c parent;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class budgets__c extends sobject { 
    id id;
    id ownerid;  user owner;
    boolean isdeleted;
    string name;
    id recordtypeid;  recordtype recordtype;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    date lastactivitydate;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    double allocated_to_budget_lines__c;
    double allocated_to_programs__c;
    decimal budget_amount__c;
    string budget_area__c;
    string budget_owner__c;
    decimal contractor_budget_amount__c;
    decimal original_budget_amount__c;
    double percent_spent__c;
    id period__c;  period__c period__r;
    decimal total_budget_program_contractor__c;
    decimal unallocated_budget_line_amount__c;
    decimal unallocated_program_budget_amount__c;
    string budget_owner_name_external__c;
    decimal number_of_contractors__c;
    decimal rollup_of_approved_budget_lines__c;
    decimal rollup_of_contractor_amount_from_program__c;
    decimal rollup_of_program_budget_amount__c;
    decimal rollup_of_purchase_request_amount__c;
    decimal rollup_of_unapproved_budget_lines__c;
            List< activityhistory >  activityhistories;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< budgets__history >  histories;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _7__;

            List< contentdocumentlink >  _8__;

            List< contentversion >  _9__;

            List< department__c >  departments1__r;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< event >  events;

            List< feedcomment >  _15__;

            List< feeditem >  _16__;

            List< incrementals__c >  incrementals__r;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< openactivity >  openactivities;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< program_budget__c >  program_budgets__r;

            List< task >  tasks;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class budgets__history extends sobject { 
    id id;
    boolean isdeleted;
    id parentid;  budgets__c parent;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class businesshours extends sobject { 
    id id;
    string name;
    boolean isactive;
    boolean isdefault;
    time sundaystarttime;
    time sundayendtime;
    time mondaystarttime;
    time mondayendtime;
    time tuesdaystarttime;
    time tuesdayendtime;
    time wednesdaystarttime;
    time wednesdayendtime;
    time thursdaystarttime;
    time thursdayendtime;
    time fridaystarttime;
    time fridayendtime;
    time saturdaystarttime;
    time saturdayendtime;
    string timezonesidkey;
    datetime systemmodstamp;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
}
//////////////////////////////////////////

@namespace('schema')
class businessprocess extends sobject { 
    id id;
    string name;
    string namespaceprefix;
    string description;
    string tableenumorid;
    boolean isactive;
    id createdbyid;  user createdby;
    datetime createddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime lastmodifieddate;
    datetime systemmodstamp;
            List< recordtype >  _1__;

}
//////////////////////////////////////////

@namespace('schema')
class callcenter extends sobject { 
    id id;
    string name;
    string internalname;
    decimal version;
    string adapterurl;
    string customsettings;
    datetime systemmodstamp;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
            List< additionalnumber >  _1__;

            List< user >  _2__;

}
//////////////////////////////////////////

@namespace('schema')
class campaign extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    id parentid;  campaign parent;
    string type;
    string status;
    date startdate;
    date enddate;
    decimal expectedrevenue;
    decimal budgetedcost;
    decimal actualcost;
    double expectedresponse;
    decimal numbersent;
    boolean isactive;
    string description;
    integer numberofleads;
    integer numberofconvertedleads;
    integer numberofcontacts;
    integer numberofresponses;
    integer numberofopportunities;
    integer numberofwonopportunities;
    decimal amountallopportunities;
    decimal amountwonopportunities;
    id ownerid;  user owner;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    date lastactivitydate;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    id campaignmemberrecordtypeid;  recordtype campaignmemberrecordtype;
            List< actionplan__c >  action_plans__r;

            List< activityhistory >  activityhistories;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< campaign >  childcampaigns;

            List< campaignfeed >  feeds;

            List< campaignmember >  campaignmembers;

            List< campaignmemberstatus >  _8__;

            List< campaignshare >  shares;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _12__;

            List< contentdocumentlink >  _13__;

            List< contentversion >  _14__;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< event >  events;

            List< feedcomment >  _18__;

            List< feeditem >  _19__;

            List< openactivity >  openactivities;

            List< opportunity >  opportunities;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< task >  tasks;

            List< topicassignment >  topicassignments;

            List< leadscoring__leadscoringrule__c >  leadscoring__lead_scoring_rules__r;

}
//////////////////////////////////////////

@namespace('schema')
class campaignfeed extends sobject { 
    id id;
    id parentid;  campaign parent;
    string type;
    id createdbyid;  user createdby;
    datetime createddate;
    boolean isdeleted;
    datetime lastmodifieddate;
    datetime systemmodstamp;
    integer commentcount;
    integer likecount;
    string title;
    string body;
    string linkurl;
    boolean isrichtext;
    id relatedrecordid;
    id insertedbyid;  user insertedby;
            List< feedattachment >  feedattachments;

            List< feedcomment >  feedcomments;

            List< feedlike >  _3__;

            List< feedlike >  feedlikes;

            List< feedpollchoice >  _5__;

            List< feedpollvote >  _6__;

            List< feedtrackedchange >  feedtrackedchanges;

}
//////////////////////////////////////////

@namespace('schema')
class campaignmember extends sobject { 
    id id;
    boolean isdeleted;
    id campaignid;  campaign campaign;
    id leadid;  lead lead;
    id contactid;  contact contact;
    string status;
    boolean hasresponded;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    date firstrespondeddate;
    string salutation;
    string name;
    string firstname;
    string lastname;
    string title;
    string street;
    string city;
    string state;
    string postalcode;
    string country;
    string email;
    string phone;
    string fax;
    string mobilephone;
    string description;
    boolean donotcall;
    boolean hasoptedoutofemail;
    boolean hasoptedoutoffax;
    string leadsource;
    string companyoraccount;
    string type;
    id leadorcontactid;
    id leadorcontactownerid;  user leadorcontactowner;
    decimal leadscoring__campaign_score__c;
}
//////////////////////////////////////////

@namespace('schema')
class campaignmemberstatus extends sobject { 
    id id;
    boolean isdeleted;
    id campaignid;
    string label;
    integer sortorder;
    boolean isdefault;
    boolean hasresponded;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class campaignshare extends sobject { 
    id id;
    id campaignid;  campaign campaign;
    id userorgroupid;  user userorgroup;
    string campaignaccesslevel;
    string rowcause;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    boolean isdeleted;
}
//////////////////////////////////////////

@namespace('schema')
class case extends sobject { 
    id id;
    boolean isdeleted;
    string casenumber;
    id contactid;  contact contact;
    id accountid;  account account;
    id assetid;  asset asset;
    id parentid;  case parent;
    string suppliedname;
    string suppliedemail;
    string suppliedphone;
    string suppliedcompany;
    string type;
    string status;
    string reason;
    string origin;
    string subject;
    string priority;
    string description;
    boolean isclosed;
    datetime closeddate;
    boolean isescalated;
    id ownerid;  user owner;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    string engineeringreqnumber__c;
    string slaviolation__c;
    string product__c;
    string potentialliability__c;
            List< actionplan__c >  action_plans__r;

            List< activityhistory >  activityhistories;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< case >  cases;

            List< casecomment >  casecomments;

            List< casecontactrole >  casecontactroles;

            List< casefeed >  feeds;

            List< casehistory >  histories;

            List< caseshare >  shares;

            List< casesolution >  casesolutions;

            List< caseteammember >  teammembers;

            List< caseteamtemplaterecord >  teamtemplaterecords;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _16__;

            List< contentdocumentlink >  _17__;

            List< contentversion >  _18__;

            List< emailmessage >  emailmessages;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< event >  events;

            List< feedcomment >  _23__;

            List< feeditem >  _24__;

            List< openactivity >  openactivities;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< surveytaker__c >  surveytakers__r;

            List< task >  tasks;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class case_swarm_rule__c extends sobject { 
    id id;
    id ownerid;  user owner;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    string case_priority__c;
    string case_status__c;
    string case_type__c;
    string description__c;
    boolean notify_on_swarm__c;
    string type__c;
    id user__c;  user user__r;
            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< case_swarm_rule__history >  histories;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _6__;

            List< contentdocumentlink >  _7__;

            List< contentversion >  _8__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _12__;

            List< feeditem >  _13__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class case_swarm_rule__history extends sobject { 
    id id;
    boolean isdeleted;
    id parentid;  case_swarm_rule__c parent;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class casecomment extends sobject { 
    id id;
    id parentid;  case parent;
    boolean ispublished;
    string commentbody;
    id createdbyid;  user createdby;
    datetime createddate;
    datetime systemmodstamp;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    boolean isdeleted;
}
//////////////////////////////////////////

@namespace('schema')
class casecontactrole extends sobject { 
    id id;
    id casesid;  case cases;
    id contactid;  contact contact;
    string role;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    boolean isdeleted;
}
//////////////////////////////////////////

@namespace('schema')
class casefeed extends sobject { 
    id id;
    id parentid;  case parent;
    string type;
    id createdbyid;  user createdby;
    datetime createddate;
    boolean isdeleted;
    datetime lastmodifieddate;
    datetime systemmodstamp;
    integer commentcount;
    integer likecount;
    string title;
    string body;
    string linkurl;
    boolean isrichtext;
    id relatedrecordid;
    id insertedbyid;  user insertedby;
            List< feedattachment >  feedattachments;

            List< feedcomment >  feedcomments;

            List< feedlike >  _3__;

            List< feedlike >  feedlikes;

            List< feedpollchoice >  _5__;

            List< feedpollvote >  _6__;

            List< feedtrackedchange >  feedtrackedchanges;

}
//////////////////////////////////////////

@namespace('schema')
class casehistory extends sobject { 
    id id;
    boolean isdeleted;
    id caseid;  case case;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class caseshare extends sobject { 
    id id;
    id caseid;  case case;
    id userorgroupid;  user userorgroup;
    string caseaccesslevel;
    string rowcause;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    boolean isdeleted;
}
//////////////////////////////////////////

@namespace('schema')
class casesolution extends sobject { 
    id id;
    id caseid;  case case;
    id solutionid;  solution solution;
    id createdbyid;  user createdby;
    datetime createddate;
    datetime systemmodstamp;
    boolean isdeleted;
}
//////////////////////////////////////////

@namespace('schema')
class casestatus extends sobject { 
    id id;
    string masterlabel;
    string apiname;
    integer sortorder;
    boolean isdefault;
    boolean isclosed;
    id createdbyid;  user createdby;
    datetime createddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime lastmodifieddate;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class caseteammember extends sobject { 
    id id;
    id parentid;  case parent;
    id memberid;  user member;
    id teamtemplatememberid;  caseteamtemplatemember teamtemplatemember;
    id teamroleid;  caseteamrole teamrole;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class caseteamrole extends sobject { 
    id id;
    string name;
    string accesslevel;
    boolean preferencesvisibleincsp;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class caseteamtemplate extends sobject { 
    id id;
    string name;
    string description;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class caseteamtemplatemember extends sobject { 
    id id;
    id teamtemplateid;
    id memberid;
    id teamroleid;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class caseteamtemplaterecord extends sobject { 
    id id;
    id parentid;  case parent;
    id teamtemplateid;  caseteamtemplate teamtemplate;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class catalog_line_item__c extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    date lastactivitydate;
    id catalog_order__c;  catalog_order__c catalog_order__r;
    decimal price__c;
    string product_name__c;
    decimal product_price__c;
    string product_short_description__c;
    id product__c;  product2 product__r;
    decimal quantity__c;
    decimal subtotal__c;
    string vf_image__c;
            List< activityhistory >  activityhistories;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< catalog_line_item__history >  histories;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _7__;

            List< contentdocumentlink >  _8__;

            List< contentversion >  _9__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< event >  events;

            List< feedcomment >  _14__;

            List< feeditem >  _15__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< openactivity >  openactivities;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< task >  tasks;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class catalog_line_item__history extends sobject { 
    id id;
    boolean isdeleted;
    id parentid;  catalog_line_item__c parent;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class catalog_order__c extends sobject { 
    id id;
    id ownerid;  user owner;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    date lastactivitydate;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    id account__c;  account account__r;
    string status__c;
    decimal items__c;
    decimal lines__c;
    decimal total_cost__c;
            List< activityhistory >  activityhistories;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< catalog_line_item__c >  catalog_line_items__r;

            List< catalog_order__history >  histories;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _8__;

            List< contentdocumentlink >  _9__;

            List< contentversion >  _10__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< event >  events;

            List< feedcomment >  _15__;

            List< feeditem >  _16__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< openactivity >  openactivities;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< task >  tasks;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class catalog_order__history extends sobject { 
    id id;
    boolean isdeleted;
    id parentid;  catalog_order__c parent;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class catalog_template__c extends sobject { 
    id id;
    id ownerid;  user owner;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string category_text_color__c;
    string header_left_text_color__c;
    string header_right_text_color__c;
    string subtitle_text_color__c;
    string subtitle_text_size__c;
    string subtitle_text__c;
    string title_text_color__c;
    string title_text_size__c;
    string title_text__c;
            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _5__;

            List< contentdocumentlink >  _6__;

            List< contentversion >  _7__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _11__;

            List< feeditem >  _12__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class categorydata extends sobject { 
    id id;
    id categorynodeid;
    id relatedsobjectid;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class categorynode extends sobject { 
    id id;
    id parentid;
    string masterlabel;
    integer sortorder;
    string sortstyle;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
            List< categorydata >  _1__;

            List< categorynode >  _2__;

}
//////////////////////////////////////////

@namespace('schema')
class chatteractivity extends sobject { 
    id id;
    id parentid;
    integer postcount;
    integer commentcount;
    integer commentreceivedcount;
    integer likereceivedcount;
    integer influencerawrank;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class clientbrowser extends sobject { 
    id id;
    id usersid;  user users;
    string fulluseragent;
    string proxyinfo;
    datetime lastupdate;
    datetime createddate;
}
//////////////////////////////////////////

@namespace('schema')
class cmsfolder__c extends sobject { 
    id id;
    id ownerid;  user owner;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    id parent_cmsfolder__c;  cmsfolder__c parent_cmsfolder__r;
    string site_id__c;
    string type__c;
            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< cmsfolder__c >  cmsfolder__r;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _6__;

            List< contentdocumentlink >  _7__;

            List< contentversion >  _8__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _12__;

            List< feeditem >  _13__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< pagetemplate__c >  pagetemplates__r;

            List< page__c >  pages__r;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< topicassignment >  topicassignments;

            List< web_form__c >  web_forms__r;

}
//////////////////////////////////////////

@namespace('schema')
class cmsforcedomain__c extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    id setupownerid;  user setupowner;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string url__c;
            List< attachedcontentdocument >  attachedcontentdocuments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _4__;

            List< contentdocumentlink >  _5__;

            List< contentversion >  _6__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _10__;

            List< feeditem >  _11__;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class cmsforcesites__c extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    id setupownerid;  user setupowner;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string site_id__c;
    string site_name__c;
    string site_url__c;
            List< attachedcontentdocument >  attachedcontentdocuments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _4__;

            List< contentdocumentlink >  _5__;

            List< contentversion >  _6__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _10__;

            List< feeditem >  _11__;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class collaborationgroup extends sobject { 
    id id;
    string name;
    integer membercount;
    id ownerid;  user owner;
    string collaborationtype;
    string description;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string fullphotourl;
    string mediumphotourl;
    string smallphotourl;
    datetime lastfeedmodifieddate;
    string informationtitle;
    string informationbody;
    boolean hasprivatefieldsaccess;
    boolean canhaveguests;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    boolean isarchived;
    boolean isautoarchivedisabled;
    id announcementid;  announcement announcement;
    string groupemail;
    string bannerphotourl;
    boolean isbroadcast;
            List< announcement >  _1__;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< collaborationgroupfeed >  feeds;

            List< collaborationgroupmember >  groupmembers;

            List< collaborationgroupmemberrequest >  groupmemberrequests;

            List< collaborationgrouprecord >  collaborationgrouprecords;

            List< collaborationinvitation >  _7__;

            List< combinedattachment >  combinedattachments;

            List< contentdocumentlink >  _9__;

            List< contentversion >  _10__;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _12__;

            List< feeditem >  _13__;

}
//////////////////////////////////////////

@namespace('schema')
class collaborationgroupfeed extends sobject { 
    id id;
    id parentid;  collaborationgroup parent;
    string type;
    id createdbyid;  user createdby;
    datetime createddate;
    boolean isdeleted;
    datetime lastmodifieddate;
    datetime systemmodstamp;
    integer commentcount;
    integer likecount;
    string title;
    string body;
    string linkurl;
    boolean isrichtext;
    id relatedrecordid;
    id insertedbyid;  user insertedby;
            List< feedattachment >  feedattachments;

            List< feedcomment >  feedcomments;

            List< feedlike >  _3__;

            List< feedlike >  feedlikes;

            List< feedpollchoice >  _5__;

            List< feedpollvote >  _6__;

            List< feedtrackedchange >  feedtrackedchanges;

}
//////////////////////////////////////////

@namespace('schema')
class collaborationgroupmember extends sobject { 
    id id;
    id collaborationgroupid;  collaborationgroup collaborationgroup;
    id memberid;  user member;
    string collaborationrole;
    string notificationfrequency;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    datetime lastfeedaccessdate;
}
//////////////////////////////////////////

@namespace('schema')
class collaborationgroupmemberrequest extends sobject { 
    id id;
    id collaborationgroupid;  collaborationgroup collaborationgroup;
    id requesterid;  user requester;
    string responsemessage;
    string status;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class collaborationgrouprecord extends sobject { 
    id id;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id collaborationgroupid;  collaborationgroup collaborationgroup;
    id recordid;  myobj__c record;
}
//////////////////////////////////////////

@namespace('schema')
class collaborationinvitation extends sobject { 
    id id;
    id parentid;
    id sharedentityid;
    id inviterid;
    string inviteduseremail;
    string inviteduseremailnormalized;
    string status;
    string optionalmessage;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
            List< collaborationinvitation >  _1__;

}
//////////////////////////////////////////

@namespace('schema')
class combinedattachment extends sobject { 
    id id;
    boolean isdeleted;
    id parentid;  myobj__c parent;
    string recordtype;
    string title;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    string filetype;
    integer contentsize;
    string fileextension;
    string contenturl;
    string externaldatasourcename;
    string externaldatasourcetype;
    string sharingoption;
}
//////////////////////////////////////////

@namespace('schema')
class community extends sobject { 
    id id;
    datetime systemmodstamp;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    string name;
    string description;
    boolean isactive;
    boolean ispublished;
            List< idea >  _1__;

            List< ideacomment >  _2__;

}
//////////////////////////////////////////

@namespace('schema')
class connectedapplication extends sobject { 
    id id;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    boolean optionsallowadminapprovedusersonly;
    boolean optionsrefreshtokenvaliditymetric;
    boolean optionshassessionlevelpolicy;
    string mobilesessiontimeout;
    string pinlength;
    string starturl;
    string mobilestarturl;
    integer refreshtokenvalidityperiod;
            List< installedmobileapp >  installedmobileapps;

            List< setupentityaccess >  setupentityaccessitems;

            List< userappmenucustomization >  _3__;

            List< userprovaccount >  _4__;

            List< userprovaccountstaging >  _5__;

            List< userprovisioningconfig >  _6__;

            List< userprovisioningrequest >  _7__;

            List< verificationhistory >  _8__;

}
//////////////////////////////////////////

@namespace('schema')
class contact extends sobject { 
    id id;
    boolean isdeleted;
    id masterrecordid;  contact masterrecord;
    id accountid;  account account;
    string lastname;
    string firstname;
    string salutation;
    string name;
    string otherstreet;
    string othercity;
    string otherstate;
    string otherpostalcode;
    string othercountry;
    decimal otherlatitude;
    decimal otherlongitude;
    string othergeocodeaccuracy;
    address otheraddress;
    string mailingstreet;
    string mailingcity;
    string mailingstate;
    string mailingpostalcode;
    string mailingcountry;
    decimal mailinglatitude;
    decimal mailinglongitude;
    string mailinggeocodeaccuracy;
    address mailingaddress;
    string phone;
    string fax;
    string mobilephone;
    string homephone;
    string otherphone;
    string assistantphone;
    id reportstoid;  contact reportsto;
    string email;
    string title;
    string department;
    string assistantname;
    string leadsource;
    date birthdate;
    string description;
    id ownerid;  user owner;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    date lastactivitydate;
    datetime lastcurequestdate;
    datetime lastcuupdatedate;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    string emailbouncedreason;
    datetime emailbounceddate;
    boolean isemailbounced;
    string photourl;
    string jigsaw;
    string jigsawcontactid;
    string cleanstatus;
    string level__c;
    string languages__c;
    decimal leadscoring__campaign_score__c;
    decimal leadscoring__lead_score__c;
    decimal leadscoring__total_lead_score__c;
            List< acceptedeventrelation >  acceptedeventrelations;

            List< account >  accounts__r;

            List< accountcontactrole >  accountcontactroles;

            List< actionplan__c >  r00nr0000000vzz8mao__r;

            List< activityhistory >  activityhistories;

            List< asset >  assets;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< campaignmember >  campaignmembers;

            List< campaignmember >  _10__;

            List< case >  cases;

            List< casecontactrole >  casecontactroles;

            List< caseteammember >  _13__;

            List< caseteamtemplatemember >  _14__;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contact >  _17__;

            List< contactcleaninfo >  contactcleaninfos;

            List< contactfeed >  feeds;

            List< contacthistory >  histories;

            List< contactshare >  shares;

            List< contentdistribution >  _22__;

            List< contentdocumentlink >  _23__;

            List< contentversion >  _24__;

            List< contract >  contractssigned;

            List< contractcontactrole >  contractcontactroles;

            List< declinedeventrelation >  declinedeventrelations;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessagerelation >  emailmessagerelations;

            List< emailstatus >  emailstatuses;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< event >  events;

            List< eventrelation >  eventrelations;

            List< event_mdf__c >  event_mdfs__r;

            List< event_registration__c >  registrations__r;

            List< event__c >  events__r;

            List< feedcomment >  _37__;

            List< feeditem >  _38__;

            List< lead >  _39__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< openactivity >  openactivities;

            List< opportunitycontactrole >  opportunitycontactroles;

            List< order >  _44__;

            List< order >  _45__;

            List< order >  _46__;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< speaker__c >  speakers__r;

            List< surveytaker__c >  surveytakers1__r;

            List< task >  tasks;

            List< topicassignment >  topicassignments;

            List< undecidedeventrelation >  undecidedeventrelations;

            List< user >  _54__;

            List< venue__c >  venues1__r;

            List< venue__c >  venues2__r;

            List< venue__c >  venues__r;

}
//////////////////////////////////////////

@namespace('schema')
class contactcleaninfo extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id contactid;  contact contact;
    datetime lastmatcheddate;
    datetime laststatuschangeddate;
    id laststatuschangedbyid;  user laststatuschangedby;
    boolean isinactive;
    string firstname;
    string lastname;
    string email;
    string phone;
    string street;
    string city;
    string state;
    string postalcode;
    string country;
    decimal latitude;
    decimal longitude;
    string geocodeaccuracy;
    address address;
    string title;
    string contactstatusdatadotcom;
    boolean isreviewedname;
    boolean isreviewedemail;
    boolean isreviewedphone;
    boolean isreviewedaddress;
    boolean isreviewedtitle;
    boolean isdifferentfirstname;
    boolean isdifferentlastname;
    boolean isdifferentemail;
    boolean isdifferentphone;
    boolean isdifferentstreet;
    boolean isdifferentcity;
    boolean isdifferentstate;
    boolean isdifferentpostalcode;
    boolean isdifferentcountry;
    boolean isdifferenttitle;
    boolean isdifferentstatecode;
    boolean isdifferentcountrycode;
    boolean cleanedbyjob;
    boolean cleanedbyuser;
    boolean isflaggedwrongname;
    boolean isflaggedwrongemail;
    boolean isflaggedwrongphone;
    boolean isflaggedwrongaddress;
    boolean isflaggedwrongtitle;
    string datadotcomid;
}
//////////////////////////////////////////

@namespace('schema')
class contactfeed extends sobject { 
    id id;
    id parentid;  contact parent;
    string type;
    id createdbyid;  user createdby;
    datetime createddate;
    boolean isdeleted;
    datetime lastmodifieddate;
    datetime systemmodstamp;
    integer commentcount;
    integer likecount;
    string title;
    string body;
    string linkurl;
    boolean isrichtext;
    id relatedrecordid;
    id insertedbyid;  user insertedby;
            List< feedattachment >  feedattachments;

            List< feedcomment >  feedcomments;

            List< feedlike >  _3__;

            List< feedlike >  feedlikes;

            List< feedpollchoice >  _5__;

            List< feedpollvote >  _6__;

            List< feedtrackedchange >  feedtrackedchanges;

}
//////////////////////////////////////////

@namespace('schema')
class contacthistory extends sobject { 
    id id;
    boolean isdeleted;
    id contactid;  contact contact;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class contactshare extends sobject { 
    id id;
    id contactid;  contact contact;
    id userorgroupid;  user userorgroup;
    string contactaccesslevel;
    string rowcause;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    boolean isdeleted;
}
//////////////////////////////////////////

@namespace('schema')
class contentblockitem__c extends sobject { 
    id id;
    id ownerid;  user owner;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    date lastactivitydate;
    string content__c;
    string pagetoitemid__c;
    string type__c;
    id web_form__c;  web_form__c web_form__r;
    decimal times_used__c;
            List< activityhistory >  activityhistories;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _6__;

            List< contentdocumentlink >  _7__;

            List< contentversion >  _8__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< event >  events;

            List< feedcomment >  _13__;

            List< feeditem >  _14__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< openactivity >  openactivities;

            List< pagetoitem__c >  pageitem__r;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< task >  tasks;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class contentdistribution extends sobject { 
    id id;
    datetime createddate;
    id createdbyid;  user createdby;
    id ownerid;  user owner;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string name;
    boolean isdeleted;
    id contentversionid;  contentversion contentversion;
    id contentdocumentid;
    id relatedrecordid;  myobj__c relatedrecord;
    boolean preferencesallowpdfdownload;
    boolean preferencesalloworiginaldownload;
    boolean preferencespasswordrequired;
    boolean preferencesnotifyonvisit;
    boolean preferenceslinklatestversion;
    boolean preferencesallowviewinbrowser;
    boolean preferencesexpires;
    boolean preferencesnotifyrndtncomplete;
    datetime expirydate;
    string password;
    integer viewcount;
    datetime firstviewdate;
    datetime lastviewdate;
    string distributionpublicurl;
            List< contentdistributionview >  contentdistributionviews;

}
//////////////////////////////////////////

@namespace('schema')
class contentdistributionview extends sobject { 
    id id;
    id distributionid;  contentdistribution distribution;
    id parentviewid;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime systemmodstamp;
    boolean isdeleted;
    boolean isinternal;
    boolean isdownload;
            List< contentdistributionview >  _1__;

}
//////////////////////////////////////////

@namespace('schema')
class contentdocument extends sobject { 
    id id;
    id createdbyid;  user createdby;
    datetime createddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime lastmodifieddate;
    boolean isarchived;
    id archivedbyid;
    date archiveddate;
    boolean isdeleted;
    id ownerid;  user owner;
    datetime systemmodstamp;
    string title;
    string publishstatus;
    id latestpublishedversionid;  contentversion latestpublishedversion;
    id parentid;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    string description;
    integer contentsize;
    string filetype;
    string fileextension;
    string sharingoption;
    datetime contentmodifieddate;
            List< attachedcontentdocument >  _1__;

            List< contentdistribution >  contentdistributions;

            List< contentdocumentfeed >  feeds;

            List< contentdocumenthistory >  histories;

            List< contentdocumentlink >  contentdocumentlinks;

            List< contentfoldermember >  _6__;

            List< contentversion >  contentversions;

            List< contentworkspacedoc >  _8__;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedattachment >  _10__;

            List< feedcomment >  _11__;

            List< feeditem >  _12__;

            List< folderedcontentdocument >  _13__;

            List< ownedcontentdocument >  _14__;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class contentdocumentfeed extends sobject { 
    id id;
    id parentid;  contentdocument parent;
    string type;
    id createdbyid;  user createdby;
    datetime createddate;
    boolean isdeleted;
    datetime lastmodifieddate;
    datetime systemmodstamp;
    integer commentcount;
    integer likecount;
    string title;
    string body;
    string linkurl;
    boolean isrichtext;
    id relatedrecordid;
    id insertedbyid;  user insertedby;
            List< feedattachment >  feedattachments;

            List< feedcomment >  feedcomments;

            List< feedlike >  _3__;

            List< feedlike >  feedlikes;

            List< feedpollchoice >  _5__;

            List< feedpollvote >  _6__;

            List< feedtrackedchange >  feedtrackedchanges;

}
//////////////////////////////////////////

@namespace('schema')
class contentdocumenthistory extends sobject { 
    id id;
    boolean isdeleted;
    id contentdocumentid;  contentdocument contentdocument;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class contentdocumentlink extends sobject { 
    id id;
    id linkedentityid;  myobj__c linkedentity;
    id contentdocumentid;  contentdocument contentdocument;
    boolean isdeleted;
    datetime systemmodstamp;
    string sharetype;
    string visibility;
}
//////////////////////////////////////////

@namespace('schema')
class contentfolder extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id parentcontentfolderid;  contentfolder parentcontentfolder;
            List< contentfolder >  _1__;

            List< contentfolderitem >  _2__;

            List< contentfolderlink >  contentfolderlinks;

            List< contentfoldermember >  _4__;

            List< folderedcontentdocument >  _5__;

}
//////////////////////////////////////////

@namespace('schema')
class contentfolderitem extends sobject { 
    id id;
    boolean isdeleted;
    boolean isfolder;
    id parentcontentfolderid;  contentfolder parentcontentfolder;
    string title;
    string filetype;
    integer contentsize;
    string fileextension;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class contentfolderlink extends sobject { 
    id id;
    id parententityid;
    id contentfolderid;  contentfolder contentfolder;
    boolean isdeleted;
}
//////////////////////////////////////////

@namespace('schema')
class contentfoldermember extends sobject { 
    id id;
    id parentcontentfolderid;  contentfolder parentcontentfolder;
    id childrecordid;  contentdocument childrecord;
    boolean isdeleted;
    datetime systemmodstamp;
    id createdbyid;  user createdby;
    datetime createddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime lastmodifieddate;
}
//////////////////////////////////////////

@namespace('schema')
class contentversion extends sobject { 
    id id;
    id contentdocumentid;  contentdocument contentdocument;
    boolean islatest;
    string contenturl;
    string versionnumber;
    string title;
    string description;
    string reasonforchange;
    string sharingoption;
    string pathonclient;
    integer ratingcount;
    boolean isdeleted;
    datetime contentmodifieddate;
    id contentmodifiedbyid;
    integer positiveratingcount;
    integer negativeratingcount;
    integer featuredcontentboost;
    date featuredcontentdate;
    id ownerid;  user owner;
    id createdbyid;  user createdby;
    datetime createddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime lastmodifieddate;
    datetime systemmodstamp;
    string tagcsv;
    string filetype;
    string publishstatus;
    blob versiondata;
    integer contentsize;
    string fileextension;
    id firstpublishlocationid;  myobj__c firstpublishlocation;
    string origin;
    string contentlocation;
    string textpreview;
    string externaldocumentinfo1;
    string externaldocumentinfo2;
    id externaldatasourceid;  externaldatasource externaldatasource;
    string checksum;
    boolean ismajorversion;
            List< accountfeed >  _1__;

            List< assetfeed >  _2__;

            List< campaignfeed >  _3__;

            List< casefeed >  _4__;

            List< collaborationgroupfeed >  _5__;

            List< contactfeed >  _6__;

            List< contentdistribution >  _7__;

            List< contentdocument >  _8__;

            List< contentdocumentfeed >  _9__;

            List< contentversionhistory >  histories;

            List< contractfeed >  _11__;

            List< dashboardcomponentfeed >  _12__;

            List< dashboardfeed >  _13__;

            List< eventfeed >  _14__;

            List< event__feed >  _15__;

            List< feedattachment >  _16__;

            List< feedcomment >  _17__;

            List< feeditem >  _18__;

            List< leadfeed >  _19__;

            List< opportunityfeed >  _20__;

            List< orderfeed >  _21__;

            List< orderitemfeed >  _22__;

            List< product2feed >  _23__;

            List< reportfeed >  _24__;

            List< session__feed >  _25__;

            List< sitefeed >  _26__;

            List< solutionfeed >  _27__;

            List< speaker__feed >  _28__;

            List< taskfeed >  _29__;

            List< topicfeed >  _30__;

            List< userfeed >  _31__;

            List< venue__feed >  _32__;

}
//////////////////////////////////////////

@namespace('schema')
class contentversionhistory extends sobject { 
    id id;
    boolean isdeleted;
    id contentversionid;  contentversion contentversion;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class contentworkspace extends sobject { 
    id id;
    string name;
    string description;
    string tagmodel;
    id createdbyid;  user createdby;
    datetime createddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    datetime lastmodifieddate;
    id defaultrecordtypeid;
    boolean isrestrictcontenttypes;
    boolean isrestrictlinkedcontenttypes;
    datetime lastworkspaceactivitydate;
            List< attachedcontentdocument >  attachedcontentdocuments;

            List< combinedattachment >  combinedattachments;

            List< contentdocument >  _3__;

            List< contentdocumentlink >  _4__;

            List< contentfolderlink >  contentfolderlinks;

            List< contentversion >  _6__;

            List< contentworkspacedoc >  _7__;

}
//////////////////////////////////////////

@namespace('schema')
class contentworkspacedoc extends sobject { 
    id id;
    id contentworkspaceid;  contentworkspace contentworkspace;
    id contentdocumentid;  contentdocument contentdocument;
    datetime createddate;
    datetime systemmodstamp;
    boolean isowner;
    boolean isdeleted;
}
//////////////////////////////////////////

@namespace('schema')
class contract extends sobject { 
    id id;
    id accountid;  account account;
    id pricebook2id;  pricebook2 pricebook2;
    string ownerexpirationnotice;
    date startdate;
    date enddate;
    string billingstreet;
    string billingcity;
    string billingstate;
    string billingpostalcode;
    string billingcountry;
    decimal billinglatitude;
    decimal billinglongitude;
    string billinggeocodeaccuracy;
    address billingaddress;
    integer contractterm;
    id ownerid;  user owner;
    string status;
    id companysignedid;  user companysigned;
    date companysigneddate;
    id customersignedid;  contact customersigned;
    string customersignedtitle;
    date customersigneddate;
    string specialterms;
    id activatedbyid;  user activatedby;
    datetime activateddate;
    string statuscode;
    string description;
    boolean isdeleted;
    string contractnumber;
    datetime lastapproveddate;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    date lastactivitydate;
    datetime lastvieweddate;
    datetime lastreferenceddate;
            List< actionplan__c >  action_plans__r;

            List< activityhistory >  activityhistories;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdocumentlink >  _7__;

            List< contentversion >  _8__;

            List< contractcontactrole >  contractcontactroles;

            List< contractfeed >  feeds;

            List< contracthistory >  histories;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< event >  events;

            List< feedcomment >  _15__;

            List< feeditem >  _16__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< openactivity >  openactivities;

            List< order >  orders;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< task >  tasks;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class contractcontactrole extends sobject { 
    id id;
    id contractid;  contract contract;
    id contactid;  contact contact;
    string role;
    boolean isprimary;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    boolean isdeleted;
}
//////////////////////////////////////////

@namespace('schema')
class contractfeed extends sobject { 
    id id;
    id parentid;  contract parent;
    string type;
    id createdbyid;  user createdby;
    datetime createddate;
    boolean isdeleted;
    datetime lastmodifieddate;
    datetime systemmodstamp;
    integer commentcount;
    integer likecount;
    string title;
    string body;
    string linkurl;
    boolean isrichtext;
    id relatedrecordid;
    id insertedbyid;  user insertedby;
            List< feedattachment >  feedattachments;

            List< feedcomment >  feedcomments;

            List< feedlike >  _3__;

            List< feedlike >  feedlikes;

            List< feedpollchoice >  _5__;

            List< feedpollvote >  _6__;

            List< feedtrackedchange >  feedtrackedchanges;

}
//////////////////////////////////////////

@namespace('schema')
class contracthistory extends sobject { 
    id id;
    boolean isdeleted;
    id contractid;  contract contract;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class contractstatus extends sobject { 
    id id;
    string masterlabel;
    string apiname;
    integer sortorder;
    boolean isdefault;
    string statuscode;
    id createdbyid;  user createdby;
    datetime createddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime lastmodifieddate;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class corswhitelistentry extends sobject { 
    id id;
    boolean isdeleted;
    string developername;
    string language;
    string masterlabel;
    string namespaceprefix;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string urlpattern;
}
//////////////////////////////////////////

@namespace('schema')
class cronjobdetail extends sobject { 
    id id;
    string name;
    string jobtype;
            List< crontrigger >  _1__;

}
//////////////////////////////////////////

@namespace('schema')
class crontrigger extends sobject { 
    id id;
    id cronjobdetailid;  cronjobdetail cronjobdetail;
    datetime nextfiretime;
    datetime previousfiretime;
    string state;
    datetime starttime;
    datetime endtime;
    string cronexpression;
    string timezonesidkey;
    id ownerid;
    id lastmodifiedbyid;  user lastmodifiedby;
    id createdbyid;  user createdby;
    datetime createddate;
    integer timestriggered;
}
//////////////////////////////////////////

@namespace('schema')
class custombrand extends sobject { 
    id id;
    id parentid;
    id createdbyid;  user createdby;
    datetime createddate;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
            List< custombrandasset >  custombrandassets;

}
//////////////////////////////////////////

@namespace('schema')
class custombrandasset extends sobject { 
    id id;
    id custombrandid;  custombrand custombrand;
    string assetcategory;
    string textasset;
    id foreignkeyassetid;
    id createdbyid;  user createdby;
    datetime createddate;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
}
//////////////////////////////////////////

@namespace('schema')
class customobjectuserlicensemetrics extends sobject { 
    id id;
    date metricsdate;
    id userlicenseid;  userlicense userlicense;
    string customobjectid;
    datetime systemmodstamp;
    string customobjecttype;
    string customobjectname;
    integer objectcount;
}
//////////////////////////////////////////

@namespace('schema')
class custompermission extends sobject { 
    id id;
    boolean isdeleted;
    string developername;
    string language;
    string masterlabel;
    string namespaceprefix;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string description;
            List< custompermissiondependency >  custompermissionitem;

            List< custompermissiondependency >  custompermissiondependencyitem;

            List< grantedbylicense >  grantedbylicenses;

            List< setupentityaccess >  setupentityaccessitems;

}
//////////////////////////////////////////

@namespace('schema')
class custompermissiondependency extends sobject { 
    id id;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id custompermissionid;  custompermission custompermission;
    id requiredcustompermissionid;  custompermission requiredcustompermission;
}
//////////////////////////////////////////

@namespace('schema')
class dandbcompany extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string dunsnumber;
    string street;
    string city;
    string state;
    string postalcode;
    string country;
    string geocodeaccuracystandard;
    address address;
    string phone;
    string fax;
    string countryaccesscode;
    string publicindicator;
    string stocksymbol;
    string stockexchange;
    decimal salesvolume;
    string url;
    string outofbusiness;
    decimal employeestotal;
    string fipsmsacode;
    string fipsmsadesc;
    string tradestyle1;
    string yearstarted;
    string mailingstreet;
    string mailingcity;
    string mailingstate;
    string mailingpostalcode;
    string mailingcountry;
    string mailinggeocodeaccuracy;
    address mailingaddress;
    string latitude;
    string longitude;
    string primarysic;
    string primarysicdesc;
    string secondsic;
    string secondsicdesc;
    string thirdsic;
    string thirdsicdesc;
    string fourthsic;
    string fourthsicdesc;
    string fifthsic;
    string fifthsicdesc;
    string sixthsic;
    string sixthsicdesc;
    string primarynaics;
    string primarynaicsdesc;
    string secondnaics;
    string secondnaicsdesc;
    string thirdnaics;
    string thirdnaicsdesc;
    string fourthnaics;
    string fourthnaicsdesc;
    string fifthnaics;
    string fifthnaicsdesc;
    string sixthnaics;
    string sixthnaicsdesc;
    string ownorrent;
    decimal employeeshere;
    string employeesherereliability;
    string salesvolumereliability;
    string currencycode;
    string legalstatus;
    decimal globalultimatetotalemployees;
    string employeestotalreliability;
    string minorityowned;
    string womenowned;
    string smallbusiness;
    string marketingsegmentationcluster;
    string importexportagent;
    string subsidiary;
    string tradestyle2;
    string tradestyle3;
    string tradestyle4;
    string tradestyle5;
    string nationalid;
    string nationalidtype;
    string ustaxid;
    string geocodeaccuracy;
    integer familymembers;
    string marketingprescreen;
    string globalultimatedunsnumber;
    string globalultimatebusinessname;
    string parentorhqdunsnumber;
    string parentorhqbusinessname;
    string domesticultimatedunsnumber;
    string domesticultimatebusinessname;
    string locationstatus;
    string companycurrencyisocode;
    string description;
    integer fortunerank;
    string includedinsnp500;
    integer premisesmeasure;
    string premisesmeasurereliability;
    string premisesmeasureunit;
    decimal employeequantitygrowthrate;
    decimal salesturnovergrowthrate;
    string primarysic8;
    string primarysic8desc;
    string secondsic8;
    string secondsic8desc;
    string thirdsic8;
    string thirdsic8desc;
    string fourthsic8;
    string fourthsic8desc;
    string fifthsic8;
    string fifthsic8desc;
    string sixthsic8;
    string sixthsic8desc;
    integer prioryearemployees;
    decimal prioryearrevenue;
            List< account >  accounts;

            List< lead >  leads;

}
//////////////////////////////////////////

@namespace('schema')
class dashboard extends sobject { 
    id id;
    boolean isdeleted;
    id folderid;  user folder;
    string foldername;
    string title;
    string developername;
    string namespaceprefix;
    string description;
    string leftsize;
    string middlesize;
    string rightsize;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id runninguserid;  user runninguser;
    integer titlecolor;
    integer titlesize;
    integer textcolor;
    integer backgroundstart;
    integer backgroundend;
    string backgrounddirection;
    string type;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    string dashboardresultrefresheddate;
    string dashboardresultrunninguser;
            List< attachedcontentdocument >  attachedcontentdocuments;

            List< combinedattachment >  combinedattachments;

            List< contentdocumentlink >  _3__;

            List< contentversion >  _4__;

            List< dashboardcomponent >  dashboardcomponents;

            List< dashboardfeed >  feeds;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _8__;

            List< feeditem >  _9__;

}
//////////////////////////////////////////

@namespace('schema')
class dashboardcomponent extends sobject { 
    id id;
    string name;
    id dashboardid;  dashboard dashboard;
    id customreportid;
            List< attachedcontentdocument >  attachedcontentdocuments;

            List< combinedattachment >  combinedattachments;

            List< contentdocumentlink >  _3__;

            List< contentversion >  _4__;

            List< dashboardcomponentfeed >  feeds;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _7__;

            List< feeditem >  _8__;

}
//////////////////////////////////////////

@namespace('schema')
class dashboardcomponentfeed extends sobject { 
    id id;
    id parentid;  dashboardcomponent parent;
    string type;
    id createdbyid;  user createdby;
    datetime createddate;
    boolean isdeleted;
    datetime lastmodifieddate;
    datetime systemmodstamp;
    integer commentcount;
    integer likecount;
    string title;
    string body;
    string linkurl;
    boolean isrichtext;
    id relatedrecordid;
    id insertedbyid;  user insertedby;
            List< feedattachment >  feedattachments;

            List< feedcomment >  feedcomments;

            List< feedlike >  _3__;

            List< feedlike >  feedlikes;

            List< feedpollchoice >  _5__;

            List< feedpollvote >  _6__;

            List< feedtrackedchange >  feedtrackedchanges;

}
//////////////////////////////////////////

@namespace('schema')
class dashboardfeed extends sobject { 
    id id;
    id parentid;  dashboard parent;
    string type;
    id createdbyid;  user createdby;
    datetime createddate;
    boolean isdeleted;
    datetime lastmodifieddate;
    datetime systemmodstamp;
    integer commentcount;
    integer likecount;
    string title;
    string body;
    string linkurl;
    boolean isrichtext;
    id relatedrecordid;
    id insertedbyid;  user insertedby;
            List< feedattachment >  feedattachments;

            List< feedcomment >  feedcomments;

            List< feedlike >  _3__;

            List< feedlike >  feedlikes;

            List< feedpollchoice >  _5__;

            List< feedpollvote >  _6__;

            List< feedtrackedchange >  feedtrackedchanges;

}
//////////////////////////////////////////

@namespace('schema')
class datacloudcompany extends sobject { 
    id id;
    string externalid;
    string companyid;
    string name;
    string description;
    boolean isinactive;
    string phone;
    string fax;
    string street;
    string city;
    string state;
    string statecode;
    string country;
    string countrycode;
    string zip;
    string site;
    string industry;
    integer numberofemployees;
    decimal annualrevenue;
    string dunsnumber;
    string naicscode;
    string naicsdesc;
    string sic;
    string sicdesc;
    string ownership;
    boolean isowned;
    string tickersymbol;
    string tradestyle;
    string website;
    string yearstarted;
    integer activecontacts;
    datetime updateddate;
    integer fortunerank;
    string includedinsnp500;
    integer premisesmeasure;
    string premisesmeasurereliability;
    string premisesmeasureunit;
    decimal employeequantitygrowthrate;
    decimal salesturnovergrowthrate;
    integer prioryearemployees;
    decimal prioryearrevenue;
    boolean isincrm;
    string fulladdress;
    string siccodedesc;
}
//////////////////////////////////////////

@namespace('schema')
class datacloudcontact extends sobject { 
    id id;
    string externalid;
    string companyid;
    string contactid;
    string companyname;
    string title;
    boolean isinactive;
    string firstname;
    string lastname;
    string phone;
    string email;
    string street;
    string city;
    string state;
    string country;
    string zip;
    string department;
    string level;
    boolean isowned;
    datetime updateddate;
    boolean isincrm;
            List< datacloudsocialhandle >  socialhandles;

}
//////////////////////////////////////////

@namespace('schema')
class dataclouddandbcompany extends sobject { 
    id id;
    string externalid;
    string name;
    string dunsnumber;
    string companyid;
    string street;
    string city;
    string state;
    string country;
    string zip;
    string phone;
    string fax;
    string countryaccesscode;
    string publicindicator;
    string stocksymbol;
    string stockexchange;
    decimal salesvolume;
    string url;
    string outofbusiness;
    decimal employeestotal;
    string fipsmsacode;
    string fipsmsadesc;
    string tradestyle1;
    string yearstarted;
    string mailingstreet;
    string mailingcity;
    string mailingstate;
    string mailingcountry;
    string mailingzip;
    string latitude;
    string longitude;
    string primarysic;
    string primarysicdesc;
    string secondsic;
    string secondsicdesc;
    string thirdsic;
    string thirdsicdesc;
    string fourthsic;
    string fourthsicdesc;
    string fifthsic;
    string fifthsicdesc;
    string sixthsic;
    string sixthsicdesc;
    string primarynaics;
    string primarynaicsdesc;
    string secondnaics;
    string secondnaicsdesc;
    string thirdnaics;
    string thirdnaicsdesc;
    string fourthnaics;
    string fourthnaicsdesc;
    string fifthnaics;
    string fifthnaicsdesc;
    string sixthnaics;
    string sixthnaicsdesc;
    string ownorrent;
    decimal employeeshere;
    string employeesherereliability;
    string salesvolumereliability;
    string currencycode;
    string legalstatus;
    decimal globalultimatetotalemployees;
    string employeestotalreliability;
    string minorityowned;
    string womenowned;
    string smallbusiness;
    string marketingsegmentationcluster;
    string importexportagent;
    string subsidiary;
    string tradestyle2;
    string tradestyle3;
    string tradestyle4;
    string tradestyle5;
    string nationalid;
    string nationalidtype;
    string ustaxid;
    string geocodeaccuracy;
    integer familymembers;
    string marketingprescreen;
    string globalultimatedunsnumber;
    string globalultimatebusinessname;
    string parentorhqdunsnumber;
    string parentorhqbusinessname;
    string domesticultimatedunsnumber;
    string domesticultimatebusinessname;
    string locationstatus;
    string companycurrencyisocode;
    string description;
    boolean isowned;
    boolean isparent;
    integer fortunerank;
    string includedinsnp500;
    integer premisesmeasure;
    string premisesmeasurereliability;
    string premisesmeasureunit;
    decimal employeequantitygrowthrate;
    decimal salesturnovergrowthrate;
    string primarysic8;
    string primarysic8desc;
    string secondsic8;
    string secondsic8desc;
    string thirdsic8;
    string thirdsic8desc;
    string fourthsic8;
    string fourthsic8desc;
    string fifthsic8;
    string fifthsic8desc;
    string sixthsic8;
    string sixthsic8desc;
    integer prioryearemployees;
    decimal prioryearrevenue;
    string industry;
    decimal revenue;
    boolean isincrm;
    string fulladdress;
    string siccodedesc;
}
//////////////////////////////////////////

@namespace('schema')
class datacloudownedentity extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string datadotcomkey;
    string datacloudentitytype;
    id userid;  user user;
    id purchaseusageid;  datacloudpurchaseusage purchaseusage;
    string purchasetype;
}
//////////////////////////////////////////

@namespace('schema')
class datacloudpurchaseusage extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id userid;  user user;
    string usertype;
    string purchasetype;
    string datacloudentitytype;
    decimal usage;
    string description;
            List< datacloudownedentity >  _1__;

}
//////////////////////////////////////////

@namespace('schema')
class datacloudsocialhandle extends sobject { 
    id id;
    string externalid;
    string datacloudcontactid;  datacloudcontact datacloudcontact;
    string socialid;
    string providername;
    string url;
}
//////////////////////////////////////////

@namespace('schema')
class datastatistics extends sobject { 
    id id;
    string externalid;
    string stattype;
    id userid;  user user;
    string type;
    integer statvalue;
}
//////////////////////////////////////////

@namespace('schema')
class datatype extends sobject { 
    id id;
    string durableid;
    string developername;
    boolean iscomplex;
    string contextservicedatatypeid;
    string contextwsdldatatypeid;
            List< entityparticle >  _1__;

            List< entityparticle >  _2__;

            List< fielddefinition >  _3__;

            List< fielddefinition >  _4__;

}
//////////////////////////////////////////

@namespace('schema')
class dcsocialprofile extends sobject { 
    id id;
    string externalid;
    string contactid;
    string companyname;
    string firstname;
    string lastname;
    string email;
    string city;
    string state;
    string country;
            List< dcsocialprofilehandle >  socialhandles;

}
//////////////////////////////////////////

@namespace('schema')
class dcsocialprofilehandle extends sobject { 
    id id;
    string externalid;
    string dcsocialprofileid;  dcsocialprofile dcsocialprofile;
    string providername;
    string handle;
}
//////////////////////////////////////////

@namespace('schema')
class declinedeventrelation extends sobject { 
    id id;
    id relationid;  user relation;
    id eventid;  event event;
    datetime respondeddate;
    string response;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    boolean isdeleted;
    string type;
}
//////////////////////////////////////////

@namespace('schema')
class department__c extends sobject { 
    id id;
    id ownerid;  user owner;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    date lastactivitydate;
    decimal code__c;
    string description__c;
    id region__c;  budgets__c region__r;
    string status__c;
    string external_name__c;
            List< activityhistory >  activityhistories;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _6__;

            List< contentdocumentlink >  _7__;

            List< contentversion >  _8__;

            List< department__history >  histories;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< event >  events;

            List< feedcomment >  _14__;

            List< feeditem >  _15__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< openactivity >  openactivities;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< purchase_request__c >  purchase_requests__r;

            List< task >  tasks;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class department__history extends sobject { 
    id id;
    boolean isdeleted;
    id parentid;  department__c parent;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class document extends sobject { 
    id id;
    id folderid;  user folder;
    boolean isdeleted;
    string name;
    string developername;
    string namespaceprefix;
    string contenttype;
    string type;
    boolean ispublic;
    integer bodylength;
    blob body;
    string url;
    string description;
    string keywords;
    boolean isinternaluseonly;
    id authorid;  user author;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    boolean isbodysearchable;
    datetime lastvieweddate;
    datetime lastreferenceddate;
            List< custombrandasset >  _1__;

            List< documentattachmentmap >  _2__;

}
//////////////////////////////////////////

@namespace('schema')
class documentattachmentmap extends sobject { 
    id id;
    id parentid;
    id documentid;
    integer documentsequence;
    datetime createddate;
    id createdbyid;  user createdby;
}
//////////////////////////////////////////

@namespace('schema')
class domain extends sobject { 
    id id;
    string domaintype;
    string domain;
    boolean optionsexternalhttps;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
            List< domainsite >  domainsites;

}
//////////////////////////////////////////

@namespace('schema')
class domainsite extends sobject { 
    id id;
    id domainid;  domain domain;
    id siteid;  site site;
    string pathprefix;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class duplicaterecorditem extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id duplicaterecordsetid;  duplicaterecordset duplicaterecordset;
    id recordid;  myobj__c record;
            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

}
//////////////////////////////////////////

@namespace('schema')
class duplicaterecordset extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    id duplicateruleid;  duplicaterule duplicaterule;
    integer recordcount;
            List< duplicaterecorditem >  duplicaterecorditems;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

}
//////////////////////////////////////////

@namespace('schema')
class duplicaterule extends sobject { 
    id id;
    boolean isdeleted;
    string sobjecttype;
    string developername;
    string language;
    string masterlabel;
    string namespaceprefix;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    boolean isactive;
            List< duplicaterecordset >  duplicaterecordsets;

}
//////////////////////////////////////////

@namespace('schema')
class emaildomainkey extends sobject { 
    id id;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string selector;
    string domain;
    string domainmatch;
    boolean isactive;
    string publickey;
    string privatekey;
}
//////////////////////////////////////////

@namespace('schema')
class emailmessage extends sobject { 
    id id;
    id parentid;  case parent;
    id activityid;
    id createdbyid;  user createdby;
    datetime createddate;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string textbody;
    string htmlbody;
    string headers;
    string subject;
    string fromname;
    string fromaddress;
    string toaddress;
    string ccaddress;
    string bccaddress;
    boolean incoming;
    boolean hasattachment;
    string status;
    datetime messagedate;
    boolean isdeleted;
    id replytoemailmessageid;  emailmessage replytoemailmessage;
    boolean isexternallyvisible;
    id relatedtoid;  myobj__c relatedto;
            List< activityhistory >  _1__;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _5__;

            List< contentdocumentlink >  _6__;

            List< emailmessage >  _7__;

            List< emailmessagerelation >  emailmessagerelations;

            List< openactivity >  _9__;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

}
//////////////////////////////////////////

@namespace('schema')
class emailmessagerelation extends sobject { 
    id id;
    id emailmessageid;  emailmessage emailmessage;
    id relationid;  user relation;
    string relationtype;
    string relationaddress;
    string relationobjecttype;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime systemmodstamp;
    boolean isdeleted;
}
//////////////////////////////////////////

@namespace('schema')
class emailservicesaddress extends sobject { 
    id id;
    boolean isactive;
    string localpart;
    string emaildomainname;
    string authorizedsenders;
    id runasuserid;
    id functionid;  emailservicesfunction function;
    id createdbyid;  user createdby;
    datetime createddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime lastmodifieddate;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class emailservicesfunction extends sobject { 
    id id;
    boolean isactive;
    string functionname;
    string authorizedsenders;
    boolean isauthenticationrequired;
    boolean istlsrequired;
    string attachmentoption;
    id apexclassid;
    string overlimitaction;
    string functioninactiveaction;
    string addressinactiveaction;
    string authenticationfailureaction;
    string authorizationfailureaction;
    boolean iserrorroutingenabled;
    string errorroutingaddress;
    boolean istextattachmentsasbinary;
    id createdbyid;  user createdby;
    datetime createddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime lastmodifieddate;
    datetime systemmodstamp;
            List< emailservicesaddress >  addresses;

}
//////////////////////////////////////////

@namespace('schema')
class emailstatus extends sobject { 
    id id;
    id taskid;  task task;
    id whoid;  lead who;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    integer timesopened;
    datetime firstopendate;
    datetime lastopendate;
    string emailtemplatename;
}
//////////////////////////////////////////

@namespace('schema')
class emailtemplate extends sobject { 
    id id;
    string name;
    string developername;
    string namespaceprefix;
    id ownerid;  user owner;
    id folderid;  user folder;
    id brandtemplateid;
    string templatestyle;
    boolean isactive;
    string templatetype;
    string encoding;
    string description;
    string subject;
    string htmlvalue;
    string body;
    integer timesused;
    datetime lastuseddate;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    decimal apiversion;
    string markup;
    string uitype;
    string entitytype;
            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< combinedattachment >  combinedattachments;

            List< contentdocumentlink >  _4__;

            List< documentattachmentmap >  _5__;

}
//////////////////////////////////////////

@namespace('schema')
class employee_directory_configuration__c extends sobject { 
    id id;
    id ownerid;  user owner;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    id account__c;  account account__r;
            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _5__;

            List< contentdocumentlink >  _6__;

            List< contentversion >  _7__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _11__;

            List< feeditem >  _12__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class entitydefinition extends sobject { 
    id id;
    string durableid;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    string qualifiedapiname;
    string namespaceprefix;
    string developername;
    string masterlabel;
    string label;
    string plurallabel;
    string defaultcompactlayoutid;
    boolean iscustomizable;
    boolean isapextriggerable;
    boolean isworkflowenabled;
    boolean isprocessenabled;
    boolean iscompactlayoutable;
    string keyprefix;
    boolean iscustomsetting;
    boolean isdeprecatedandhidden;
    boolean isreplicateable;
    boolean isretrieveable;
    boolean issearchlayoutable;
    boolean issearchable;
    boolean istriggerable;
    boolean isidenabled;
    boolean isevercreatable;
    boolean iseverupdatable;
    boolean iseverdeletable;
    boolean isfeedenabled;
    boolean isqueryable;
    boolean ismruenabled;
    string detailurl;
    string editurl;
    string newurl;
    string editdefinitionurl;
    string helpsettingpagename;
    string helpsettingpageurl;
    string runninguserentityaccessid;  userentityaccess runninguserentityaccess;
    string publisherid;  publisher publisher;
    boolean islayoutable;
    complexvaluetype recordtypessupported;
            List< entityparticle >  particles;

            List< fielddefinition >  fields;

            List< relationshipdomain >  _3__;

            List< relationshipdomain >  relationshipdomains;

            List< relationshipinfo >  childrelationships;

            List< searchlayout >  searchlayouts;

            List< userentityaccess >  _7__;

            List< userfieldaccess >  _8__;

}
//////////////////////////////////////////

@namespace('schema')
class entityparticle extends sobject { 
    id id;
    string durableid;
    string qualifiedapiname;
    string entitydefinitionid;  entitydefinition entitydefinition;
    string fielddefinitionid;  fielddefinition fielddefinition;
    string namespaceprefix;
    string developername;
    string masterlabel;
    string label;
    integer length;
    string datatype;
    string servicedatatypeid;  datatype servicedatatype;
    string valuetypeid;  datatype valuetype;
    string extratypeinfo;
    boolean isautonumber;
    integer bytelength;
    boolean iscasesensitive;
    boolean isunique;
    boolean iscreatable;
    boolean isupdatable;
    boolean isdefaultedoncreate;
    boolean iswriterequiresmasterread;
    boolean iscalculated;
    boolean ishighscalenumber;
    boolean ishtmlformatted;
    boolean isnamefield;
    boolean isnillable;
    boolean ispermissionable;
    boolean isencrypted;
    integer digits;
    string inlinehelptext;
    string relationshipname;
    string referencetargetfield;
    string name;
    string mask;
    string masktype;
    boolean isworkflowfilterable;
    boolean iscompactlayoutable;
    integer precision;
    integer scale;
    boolean isfieldhistorytracked;
    boolean isapifilterable;
    boolean isapisortable;
    boolean isapigroupable;
    boolean islistvisible;
    boolean islayoutable;
    boolean isdependentpicklist;
    boolean isdeprecatedandhidden;
    boolean isdisplaylocationindecimal;
    string defaultvalueformula;
    boolean isidlookup;
    boolean isnamepointing;
    integer relationshiporder;
    complexvaluetype referenceto;
            List< picklistvalueinfo >  picklistvalues;

}
//////////////////////////////////////////

@namespace('schema')
class entitysubscription extends sobject { 
    id id;
    id parentid;  myobj__c parent;
    id subscriberid;  user subscriber;
    id createdbyid;  user createdby;
    datetime createddate;
    boolean isdeleted;
}
//////////////////////////////////////////

@namespace('schema')
class event extends sobject { 
    id id;
    id whoid;  lead who;
    id whatid;  venue__c what;
    string subject;
    string location;
    boolean isalldayevent;
    datetime activitydatetime;
    date activitydate;
    integer durationinminutes;
    datetime startdatetime;
    datetime enddatetime;
    string description;
    id accountid;  account account;
    id ownerid;  user owner;
    boolean isprivate;
    string showas;
    boolean isdeleted;
    boolean ischild;
    boolean isgroupevent;
    string groupeventtype;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    boolean isarchived;
    id recurrenceactivityid;
    boolean isrecurrence;
    datetime recurrencestartdatetime;
    date recurrenceenddateonly;
    string recurrencetimezonesidkey;
    string recurrencetype;
    integer recurrenceinterval;
    integer recurrencedayofweekmask;
    integer recurrencedayofmonth;
    string recurrenceinstance;
    string recurrencemonthofyear;
    datetime reminderdatetime;
    boolean isreminderset;
    string eventsubtype;
    string tasktemplateid__c;
            List< acceptedeventrelation >  acceptedeventrelations;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< combinedattachment >  combinedattachments;

            List< contentdocumentlink >  _5__;

            List< contentversion >  _6__;

            List< declinedeventrelation >  declinedeventrelations;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< event >  recurringevents;

            List< eventfeed >  feeds;

            List< eventrelation >  eventrelations;

            List< feedcomment >  _12__;

            List< feeditem >  _13__;

            List< topicassignment >  topicassignments;

            List< undecidedeventrelation >  undecidedeventrelations;

}
//////////////////////////////////////////

@namespace('schema')
class event__c extends sobject { 
    id id;
    id ownerid;  user owner;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    date lastactivitydate;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    decimal budget_activities__c;
    decimal budget_catering__c;
    decimal budget_contingency__c;
    decimal budget_decor__c;
    decimal budget_other__c;
    decimal budget_printing__c;
    decimal budget_site_rental__c;
    decimal budget_total__c;
    decimal budget_transportation__c;
    double capacity_full__c;
    string event_description__c;
    date event_end_date__c;
    decimal event_evaluation__c;
    id event_manager__c;  user event_manager__r;
    date event_start_date__c;
    string event_type__c;
    id event_vendor_account__c;  account event_vendor_account__r;
    string event_vision__c;
    string event_website__c;
    string final_attendance__c;
    string map_to_venue__c;
    decimal maximum_registration__c;
    decimal net_actual_cost__c;
    decimal net_expected_cost__c;
    string primary_vendor_contact_phone__c;
    id primary_vendor_contact__c;  contact primary_vendor_contact__r;
    string region__c;
    string targeted_attendance__c;
    decimal total_expenses__c;
    string venue_city__c;
    string venue_country__c;
    string venue_postal_code__c;
    string venue_state__c;
    string venue_status__c;
    string venue_street_address_1__c;
    string venue_street_address_2__c;
    id venue__c;  venue__c venue__r;
    decimal expenses_activities__c;
    decimal expenses_catering__c;
    decimal expenses_decor__c;
    decimal expenses_other__c;
    decimal expenses_printing__c;
    decimal expenses_site_rental__c;
    decimal expenses_transportation__c;
    decimal registered_attendees__c;
    decimal total_actual_mdf__c;
    decimal total_expected_mdf__c;
            List< activityhistory >  activityhistories;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _6__;

            List< contentdocumentlink >  _7__;

            List< contentversion >  _8__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< event >  events;

            List< event_expense__c >  event_expenses__r;

            List< event_mdf__c >  event_mdfs__r;

            List< event_registration__c >  registrations__r;

            List< event__feed >  feeds;

            List< event__history >  histories;

            List< feedcomment >  _18__;

            List< feeditem >  _19__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< openactivity >  openactivities;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< task >  tasks;

            List< topicassignment >  topicassignments;

            List< track__c >  tracks__r;

}
//////////////////////////////////////////

@namespace('schema')
class event__feed extends sobject { 
    id id;
    id parentid;  event__c parent;
    string type;
    id createdbyid;  user createdby;
    datetime createddate;
    boolean isdeleted;
    datetime lastmodifieddate;
    datetime systemmodstamp;
    integer commentcount;
    integer likecount;
    string title;
    string body;
    string linkurl;
    boolean isrichtext;
    id relatedrecordid;
    id insertedbyid;  user insertedby;
            List< feedattachment >  feedattachments;

            List< feedcomment >  feedcomments;

            List< feedlike >  _3__;

            List< feedlike >  feedlikes;

            List< feedpollchoice >  _5__;

            List< feedpollvote >  _6__;

            List< feedtrackedchange >  feedtrackedchanges;

}
//////////////////////////////////////////

@namespace('schema')
class event__history extends sobject { 
    id id;
    boolean isdeleted;
    id parentid;  event__c parent;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class event_expense__c extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    id event__c;  event__c event__r;
    string business_purpose__c;
    string city_state__c;
    string comment__c;
    string expense_type__c;
    decimal site_rental__c;
    date transaction_date__c;
    string vendor_name__c;
            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _5__;

            List< contentdocumentlink >  _6__;

            List< contentversion >  _7__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _11__;

            List< feeditem >  _12__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class event_mdf__c extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    id event__c;  event__c event__r;
    string agreement_details__c;
    decimal mdf_amount__c;
    id mdf_partner_account__c;  account mdf_partner_account__r;
    id mdf_partner_contact__c;  contact mdf_partner_contact__r;
    boolean received_payment__c;
            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _5__;

            List< contentdocumentlink >  _6__;

            List< contentversion >  _7__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _11__;

            List< feeditem >  _12__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class event_registration__c extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id event__c;  event__c event__r;
    string attendee_company__c;
    string attendee_mailing_address__c;
    string attendee_mailing_city__c;
    string attendee_mailing_country__c;
    string attendee_mailing_state__c;
    string attendee_mailing_zip_code__c;
    string attendee_mobile_phone__c;
    string attendee_office_phone__c;
    id contact__c;  contact contact__r;
    string dietary_needs__c;
    string name_on_badge__c;
    id primary_track_of_interest__c;  track__c primary_track_of_interest__r;
    string registration_type__c;
    string title_on_badge__c;
            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _5__;

            List< contentdocumentlink >  _6__;

            List< contentversion >  _7__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _11__;

            List< feeditem >  _12__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class eventfeed extends sobject { 
    id id;
    id parentid;  event parent;
    string type;
    id createdbyid;  user createdby;
    datetime createddate;
    boolean isdeleted;
    datetime lastmodifieddate;
    datetime systemmodstamp;
    integer commentcount;
    integer likecount;
    string title;
    string body;
    string linkurl;
    boolean isrichtext;
    id relatedrecordid;
    id insertedbyid;  user insertedby;
            List< feedattachment >  feedattachments;

            List< feedcomment >  feedcomments;

            List< feedlike >  _3__;

            List< feedlike >  feedlikes;

            List< feedpollchoice >  _5__;

            List< feedpollvote >  _6__;

            List< feedtrackedchange >  feedtrackedchanges;

}
//////////////////////////////////////////

@namespace('schema')
class eventlogfile extends sobject { 
    id id;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string eventtype;
    datetime logdate;
    decimal logfilelength;
    string logfilecontenttype;
    decimal apiversion;
    string logfilefieldnames;
    string logfilefieldtypes;
    blob logfile;
}
//////////////////////////////////////////

@namespace('schema')
class eventrelation extends sobject { 
    id id;
    id relationid;  user relation;
    id eventid;  event event;
    string status;
    datetime respondeddate;
    string response;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    boolean isdeleted;
}
//////////////////////////////////////////

@namespace('schema')
class expense__c extends sobject { 
    id id;
    id ownerid;  user owner;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    decimal amount__c;
    string client__c;
    datetime date__c;
    boolean reimbursed__c;
            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _5__;

            List< contentdocumentlink >  _6__;

            List< contentversion >  _7__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _11__;

            List< feeditem >  _12__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class externaldatasource extends sobject { 
    id id;
    boolean isdeleted;
    string developername;
    string language;
    string masterlabel;
    string namespaceprefix;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string type;
    string endpoint;
    string repository;
    boolean iswritable;
    string principaltype;
    string protocol;
    id largeiconid;  staticresource largeicon;
    id smalliconid;  staticresource smallicon;
    string customconfiguration;
            List< contentversion >  _1__;

            List< externaldatauserauth >  userauths;

            List< setupentityaccess >  setupentityaccessitems;

}
//////////////////////////////////////////

@namespace('schema')
class externaldatauserauth extends sobject { 
    id id;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id externaldatasourceid;  namedcredential externaldatasource;
    id userid;  user user;
    string protocol;
    string username;
    string password;
}
//////////////////////////////////////////

@namespace('schema')
class feed_post_swarm_rule__c extends sobject { 
    id id;
    id ownerid;  user owner;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    string description__c;
    string follow_or_unfollow__c;
    boolean notify_on_swarm__c;
    string trigger_text__c;
    id user__c;  user user__r;
            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _5__;

            List< contentdocumentlink >  _6__;

            List< contentversion >  _7__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _11__;

            List< feeditem >  _12__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class feedattachment extends sobject { 
    id id;
    id feedentityid;
    string type;
    id recordid;
    string title;
    string value;
    boolean isdeleted;
}
//////////////////////////////////////////

@namespace('schema')
class feedcomment extends sobject { 
    id id;
    id feeditemid;
    id parentid;
    id createdbyid;  user createdby;
    datetime createddate;
    datetime systemmodstamp;
    integer revision;
    id lasteditbyid;
    datetime lasteditdate;
    string commentbody;
    boolean isdeleted;
    id insertedbyid;  user insertedby;
    string commenttype;
    id relatedrecordid;
            List< feeditem >  _1__;

            List< feedlike >  _2__;

            List< feedrevision >  feedrevisions;

}
//////////////////////////////////////////

@namespace('schema')
class feeditem extends sobject { 
    id id;
    id parentid;  myobj__c parent;
    string type;
    id createdbyid;  user createdby;
    datetime createddate;
    boolean isdeleted;
    datetime lastmodifieddate;
    datetime systemmodstamp;
    integer revision;
    id lasteditbyid;
    datetime lasteditdate;
    integer commentcount;
    integer likecount;
    string title;
    string body;
    string linkurl;
    boolean isrichtext;
    id relatedrecordid;
    id insertedbyid;  user insertedby;
    id bestcommentid;  feedcomment bestcomment;
    boolean hascontent;
    boolean haslink;
    string status;
            List< announcement >  _1__;

            List< feedattachment >  feedattachments;

            List< feedcomment >  feedcomments;

            List< feedlike >  _4__;

            List< feedlike >  feedlikes;

            List< feedpollchoice >  _6__;

            List< feedpollvote >  _7__;

            List< feedrevision >  feedrevisions;

            List< feedtrackedchange >  feedtrackedchanges;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class feedlike extends sobject { 
    id id;
    id feeditemid;
    id feedentityid;
    id createdbyid;  user createdby;
    datetime createddate;
    boolean isdeleted;
    id insertedbyid;  user insertedby;
}
//////////////////////////////////////////

@namespace('schema')
class feedpollchoice extends sobject { 
    id id;
    id feeditemid;
    integer position;
    string choicebody;
    id createdbyid;  user createdby;
    datetime createddate;
    boolean isdeleted;
            List< feedpollvote >  feedpollvotes;

}
//////////////////////////////////////////

@namespace('schema')
class feedpollvote extends sobject { 
    id id;
    id feeditemid;
    id choiceid;  feedpollchoice choice;
    id createdbyid;  user createdby;
    datetime createddate;
    datetime lastmodifieddate;
    boolean isdeleted;
}
//////////////////////////////////////////

@namespace('schema')
class feedrevision extends sobject { 
    id id;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime systemmodstamp;
    boolean isdeleted;
    id feedentityid;
    integer revision;
    string action;
    string editedattribute;
    string value;
    boolean isvaluerichtext;
}
//////////////////////////////////////////

@namespace('schema')
class feedtrackedchange extends sobject { 
    id id;
    id feeditemid;
    string fieldname;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class fielddefinition extends sobject { 
    id id;
    string durableid;
    string qualifiedapiname;
    string entitydefinitionid;  entitydefinition entitydefinition;
    string namespaceprefix;
    string developername;
    string masterlabel;
    string label;
    integer length;
    string datatype;
    string servicedatatypeid;  datatype servicedatatype;
    string valuetypeid;  datatype valuetype;
    string extratypeinfo;
    boolean iscalculated;
    boolean ishighscalenumber;
    boolean ishtmlformatted;
    boolean isnamefield;
    boolean isnillable;
    boolean isworkflowfilterable;
    boolean iscompactlayoutable;
    integer precision;
    integer scale;
    boolean isfieldhistorytracked;
    boolean isindexed;
    boolean isapifilterable;
    boolean isapisortable;
    boolean islistfilterable;
    boolean islistsortable;
    boolean isapigroupable;
    boolean islistvisible;
    string controllingfielddefinitionid;  fielddefinition controllingfielddefinition;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    string publisherid;  publisher publisher;
    string runninguserfieldaccessid;  userfieldaccess runninguserfieldaccess;
    string relationshipname;
    complexvaluetype referenceto;
    string referencetargetfield;
}
//////////////////////////////////////////

@namespace('schema')
class fieldpermissions extends sobject { 
    id id;
    id parentid;  permissionset parent;
    string sobjecttype;
    string field;
    boolean permissionsedit;
    boolean permissionsread;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class fiscalyearsettings extends sobject { 
    id id;
    id periodid;
    date startdate;
    date enddate;
    string name;
    boolean isstandardyear;
    string yeartype;
    string quarterlabelscheme;
    string periodlabelscheme;
    string weeklabelscheme;
    string quarterprefix;
    string periodprefix;
    integer weekstartday;
    string description;
    datetime systemmodstamp;
            List< period >  periods;

}
//////////////////////////////////////////

@namespace('schema')
class flexqueueitem extends sobject { 
    id id;
    string flexqueueitemid;
    string jobtype;
    id asyncapexjobid;  asyncapexjob asyncapexjob;
    integer jobposition;
}
//////////////////////////////////////////

@namespace('schema')
class flowinterview extends sobject { 
    id id;
    id ownerid;  user owner;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string currentelement;
    string interviewlabel;
    string pauselabel;
    string guid;
}
//////////////////////////////////////////

@namespace('schema')
class flowinterviewshare extends sobject { 
    id id;
    id parentid;  flowinterview parent;
    id userorgroupid;  user userorgroup;
    string accesslevel;
    string rowcause;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    boolean isdeleted;
}
//////////////////////////////////////////

@namespace('schema')
class folder extends sobject { 
    id id;
    string name;
    string developername;
    string accesstype;
    boolean isreadonly;
    string type;
    string namespaceprefix;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
            List< dashboard >  _1__;

            List< document >  _2__;

            List< emailtemplate >  _3__;

            List< report >  _4__;

}
//////////////////////////////////////////

@namespace('schema')
class folderedcontentdocument extends sobject { 
    id id;
    boolean isfolder;
    id contentdocumentid;  contentdocument contentdocument;
    id parentcontentfolderid;  contentfolder parentcontentfolder;
    boolean isdeleted;
    string title;
    string filetype;
    integer contentsize;
    string fileextension;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class forecastshare extends sobject { 
    id id;
    id userroleid;
    id userorgroupid;
    string accesslevel;
    boolean cansubmit;
    string rowcause;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
}
//////////////////////////////////////////

@namespace('schema')
class form_field__c extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id web_form__c;  web_form__c web_form__r;
    boolean apirequired__c;
    boolean boolean_value__c;
    decimal currency_value__c;
    datetime datetime_value__c;
    date date_value__c;
    string email_value__c;
    boolean hidden__c;
    string label__c;
    decimal number_value__c;
    decimal order__c;
    double percent_value__c;
    string phone_value__c;
    string picklistentries__c;
    string picklist_value__c;
    boolean required__c;
    string text_area_long_value__c;
    string text_area_value__c;
    string text_value__c;
    string type__c;
    string url_value__c;
    decimal width__c;
            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _5__;

            List< contentdocumentlink >  _6__;

            List< contentversion >  _7__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _11__;

            List< feeditem >  _12__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class grantedbylicense extends sobject { 
    id id;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id permissionsetlicenseid;  permissionsetlicense permissionsetlicense;
    id custompermissionid;  custompermission custompermission;
}
//////////////////////////////////////////

@namespace('schema')
class group extends sobject { 
    id id;
    string name;
    string developername;
    id relatedid;  userrole related;
    string type;
    string email;
    id ownerid;  user owner;
    boolean doessendemailtomembers;
    boolean doesincludebosses;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
            List< accountshare >  _1__;

            List< assetshare >  _2__;

            List< campaignshare >  _3__;

            List< caseshare >  _4__;

            List< contactshare >  _5__;

            List< flowinterviewshare >  _6__;

            List< forecastshare >  _7__;

            List< groupmember >  groupmembers;

            List< groupmember >  _9__;

            List< leadshare >  _10__;

            List< macroshare >  _11__;

            List< opportunityshare >  _12__;

            List< ordershare >  _13__;

            List< queuesobject >  queuesobjects;

            List< streamingchannelshare >  _15__;

            List< todaygoalshare >  _16__;

            List< user >  delegatedusers;

            List< userappmenucustomizationshare >  _18__;

            List< userprovisioningrequestshare >  _19__;

            List< usershare >  _20__;

}
//////////////////////////////////////////

@namespace('schema')
class groupmember extends sobject { 
    id id;
    id groupid;  group group;
    id userorgroupid;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class holiday extends sobject { 
    id id;
    string name;
    string description;
    boolean isallday;
    date activitydate;
    integer starttimeinminutes;
    integer endtimeinminutes;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    boolean isrecurrence;
    date recurrencestartdate;
    date recurrenceenddateonly;
    string recurrencetype;
    integer recurrenceinterval;
    integer recurrencedayofweekmask;
    integer recurrencedayofmonth;
    string recurrenceinstance;
    string recurrencemonthofyear;
}
//////////////////////////////////////////

@namespace('schema')
class idea extends sobject { 
    id id;
    boolean isdeleted;
    string title;
    id recordtypeid;  recordtype recordtype;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    id communityid;  community community;
    string body;
    integer numcomments;
    decimal votescore;
    decimal votetotal;
    string categories;
    string status;
    datetime lastcommentdate;
    id lastcommentid;  ideacomment lastcomment;
    id parentideaid;  idea parentidea;
    boolean ishtml;
    boolean ismerged;
    string creatorfullphotourl;
    string creatorsmallphotourl;
    string creatorname;
            List< idea >  _1__;

            List< ideacomment >  comments;

            List< vote >  votes;

}
//////////////////////////////////////////

@namespace('schema')
class ideacomment extends sobject { 
    id id;
    id ideaid;  idea idea;
    id communityid;
    string commentbody;
    id createdbyid;  user createdby;
    datetime createddate;
    datetime systemmodstamp;
    boolean isdeleted;
    boolean ishtml;
    string creatorfullphotourl;
    string creatorsmallphotourl;
    string creatorname;
    integer upvotes;
            List< idea >  _1__;

            List< vote >  votes;

}
//////////////////////////////////////////

@namespace('schema')
class incrementals__c extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    date lastactivitydate;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    id budget__c;  budgets__c budget__r;
    decimal temp__c;
            List< activityhistory >  activityhistories;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _6__;

            List< contentdocumentlink >  _7__;

            List< contentversion >  _8__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< event >  events;

            List< feedcomment >  _13__;

            List< feeditem >  _14__;

            List< incrementals__history >  histories;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< openactivity >  openactivities;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< task >  tasks;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class incrementals__history extends sobject { 
    id id;
    boolean isdeleted;
    id parentid;  incrementals__c parent;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class installedmobileapp extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string status;
    id userid;  user user;
    id connectedapplicationid;  connectedapplication connectedapplication;
    string version;
}
//////////////////////////////////////////

@namespace('schema')
class knowledgeableuser extends sobject { 
    id id;
    id userid;
    id topicid;
    integer rawrank;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class lead extends sobject { 
    id id;
    boolean isdeleted;
    id masterrecordid;  lead masterrecord;
    string lastname;
    string firstname;
    string salutation;
    string name;
    string title;
    string company;
    string street;
    string city;
    string state;
    string postalcode;
    string country;
    decimal latitude;
    decimal longitude;
    string geocodeaccuracy;
    address address;
    string phone;
    string mobilephone;
    string fax;
    string email;
    string website;
    string photourl;
    string description;
    string leadsource;
    string status;
    string industry;
    string rating;
    decimal annualrevenue;
    integer numberofemployees;
    id ownerid;  user owner;
    boolean isconverted;
    date converteddate;
    id convertedaccountid;  account convertedaccount;
    id convertedcontactid;  contact convertedcontact;
    id convertedopportunityid;  opportunity convertedopportunity;
    boolean isunreadbyowner;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    date lastactivitydate;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    string jigsaw;
    string jigsawcontactid;
    string cleanstatus;
    string companydunsnumber;
    id dandbcompanyid;  dandbcompany dandbcompany;
    string emailbouncedreason;
    datetime emailbounceddate;
    string siccode__c;
    string productinterest__c;
    string primary__c;
    string currentgenerators__c;
    decimal numberoflocations__c;
    decimal leadscoring__campaign_score__c;
    string leadscoring__lead_priority__c;
    decimal leadscoring__lead_score__c;
    decimal leadscoring__total_lead_score__c;
            List< acceptedeventrelation >  acceptedeventrelations;

            List< actionplan__c >  r00nr0000000vzzdma4__r;

            List< activityhistory >  activityhistories;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< campaignmember >  campaignmembers;

            List< campaignmember >  _7__;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _10__;

            List< contentdocumentlink >  _11__;

            List< contentversion >  _12__;

            List< declinedeventrelation >  declinedeventrelations;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessagerelation >  emailmessagerelations;

            List< emailstatus >  emailstatuses;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< event >  events;

            List< eventrelation >  eventrelations;

            List< feedcomment >  _20__;

            List< feeditem >  _21__;

            List< leadcleaninfo >  leadcleaninfos;

            List< leadfeed >  feeds;

            List< leadhistory >  histories;

            List< leadshare >  shares;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< openactivity >  openactivities;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< task >  tasks;

            List< topicassignment >  topicassignments;

            List< undecidedeventrelation >  undecidedeventrelations;

}
//////////////////////////////////////////

@namespace('schema')
class lead_swarm_rule__c extends sobject { 
    id id;
    id ownerid;  user owner;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    string description__c;
    string industry__c;
    string lead_source__c;
    boolean notify_on_swarm__c;
    string rating__c;
    string status__c;
    string type__c;
    id user__c;  user user__r;
            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _5__;

            List< contentdocumentlink >  _6__;

            List< contentversion >  _7__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _11__;

            List< feeditem >  _12__;

            List< lead_swarm_rule__history >  histories;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class lead_swarm_rule__history extends sobject { 
    id id;
    boolean isdeleted;
    id parentid;  lead_swarm_rule__c parent;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class leadcleaninfo extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id leadid;  lead lead;
    datetime lastmatcheddate;
    datetime laststatuschangeddate;
    id laststatuschangedbyid;  user laststatuschangedby;
    boolean isinactive;
    string firstname;
    string lastname;
    string email;
    string phone;
    string street;
    string city;
    string state;
    string postalcode;
    string country;
    decimal latitude;
    decimal longitude;
    string geocodeaccuracy;
    address address;
    string title;
    decimal annualrevenue;
    integer numberofemployees;
    string industry;
    string companyname;
    string companydunsnumber;
    string contactstatusdatadotcom;
    boolean isreviewedname;
    boolean isreviewedemail;
    boolean isreviewedphone;
    boolean isreviewedaddress;
    boolean isreviewedtitle;
    boolean isreviewedannualrevenue;
    boolean isreviewednumberofemployees;
    boolean isreviewedindustry;
    boolean isreviewedcompanyname;
    boolean isreviewedcompanydunsnumber;
    boolean isrevieweddandbcompanydunsnumber;
    boolean isdifferentfirstname;
    boolean isdifferentlastname;
    boolean isdifferentemail;
    boolean isdifferentphone;
    boolean isdifferentstreet;
    boolean isdifferentcity;
    boolean isdifferentstate;
    boolean isdifferentpostalcode;
    boolean isdifferentcountry;
    boolean isdifferenttitle;
    boolean isdifferentannualrevenue;
    boolean isdifferentnumberofemployees;
    boolean isdifferentindustry;
    boolean isdifferentcompanyname;
    boolean isdifferentcompanydunsnumber;
    boolean isdifferentdandbcompanydunsnumber;
    boolean isdifferentstatecode;
    boolean isdifferentcountrycode;
    boolean cleanedbyjob;
    boolean cleanedbyuser;
    string dandbcompanydunsnumber;
    string datadotcomcompanyid;
    boolean isflaggedwrongname;
    boolean isflaggedwrongemail;
    boolean isflaggedwrongphone;
    boolean isflaggedwrongaddress;
    boolean isflaggedwrongtitle;
    boolean isflaggedwrongannualrevenue;
    boolean isflaggedwrongnumberofemployees;
    boolean isflaggedwrongindustry;
    boolean isflaggedwrongcompanyname;
    boolean isflaggedwrongcompanydunsnumber;
    string datadotcomid;
}
//////////////////////////////////////////

@namespace('schema')
class leadfeed extends sobject { 
    id id;
    id parentid;  lead parent;
    string type;
    id createdbyid;  user createdby;
    datetime createddate;
    boolean isdeleted;
    datetime lastmodifieddate;
    datetime systemmodstamp;
    integer commentcount;
    integer likecount;
    string title;
    string body;
    string linkurl;
    boolean isrichtext;
    id relatedrecordid;
    id insertedbyid;  user insertedby;
            List< feedattachment >  feedattachments;

            List< feedcomment >  feedcomments;

            List< feedlike >  _3__;

            List< feedlike >  feedlikes;

            List< feedpollchoice >  _5__;

            List< feedpollvote >  _6__;

            List< feedtrackedchange >  feedtrackedchanges;

}
//////////////////////////////////////////

@namespace('schema')
class leadhistory extends sobject { 
    id id;
    boolean isdeleted;
    id leadid;  lead lead;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class leadscoring__leadscoringrule__c extends sobject { 
    id id;
    id ownerid;  user owner;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    boolean leadscoring__active__c;
    id leadscoring__campaign__c;  campaign leadscoring__campaign__r;
    string leadscoring__field_label__c;
    string leadscoring__field_name__c;
    string leadscoring__operator__c;
    decimal leadscoring__score_change__c;
    string leadscoring__type__c;
    string leadscoring__value__c;
            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _5__;

            List< contentdocumentlink >  _6__;

            List< contentversion >  _7__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _11__;

            List< feeditem >  _12__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< topicassignment >  topicassignments;

            List< leadscoring__leadscoringrule__history >  histories;

}
//////////////////////////////////////////

@namespace('schema')
class leadscoring__leadscoringrule__history extends sobject { 
    id id;
    boolean isdeleted;
    id parentid;  leadscoring__leadscoringrule__c parent;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class leadshare extends sobject { 
    id id;
    id leadid;  lead lead;
    id userorgroupid;  user userorgroup;
    string leadaccesslevel;
    string rowcause;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    boolean isdeleted;
}
//////////////////////////////////////////

@namespace('schema')
class leadstatus extends sobject { 
    id id;
    string masterlabel;
    string apiname;
    integer sortorder;
    boolean isdefault;
    boolean isconverted;
    id createdbyid;  user createdby;
    datetime createddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime lastmodifieddate;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class listview extends sobject { 
    id id;
    string name;
    string developername;
    string namespaceprefix;
    string sobjecttype;
    boolean issoqlcompatible;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    datetime lastvieweddate;
    datetime lastreferenceddate;
            List< listviewchartinstance >  _1__;

            List< userlistview >  _2__;

}
//////////////////////////////////////////

@namespace('schema')
class listviewchart extends sobject { 
    id id;
    boolean isdeleted;
    string sobjecttype;
    string developername;
    string language;
    string masterlabel;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id ownerid;  user owner;
    string charttype;
    string groupingfield;
    string aggregatefield;
    string aggregatetype;
            List< listviewchartinstance >  _1__;

            List< userlistview >  _2__;

}
//////////////////////////////////////////

@namespace('schema')
class listviewchartinstance extends sobject { 
    id id;
    string externalid;
    id listviewchartid;  listviewchart listviewchart;
    string label;
    string developername;
    string sourceentity;
    id listviewcontextid;  listview listviewcontext;
    string charttype;
    boolean islastviewed;
    string dataquery;
    boolean iseditable;
    boolean isdeletable;
    string groupingfield;
    string aggregatefield;
    string aggregatetype;
}
//////////////////////////////////////////

@namespace('schema')
class logingeo extends sobject { 
    id id;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    datetime logintime;
    string countryiso;
    string country;
    decimal latitude;
    decimal longitude;
    string city;
    string postalcode;
    string subdivision;
            List< authsession >  _1__;

            List< loginhistory >  _2__;

            List< verificationhistory >  _3__;

}
//////////////////////////////////////////

@namespace('schema')
class loginhistory extends sobject { 
    id id;
    id userid;
    datetime logintime;
    string logintype;
    string sourceip;
    string loginurl;
    id authenticationserviceid;
    id logingeoid;  logingeo logingeo;
    string tlsprotocol;
    string ciphersuite;
    string browser;
    string platform;
    string status;
    string application;
    string clientversion;
    string apitype;
    string apiversion;
    string countryiso;
            List< authsession >  _1__;

            List< verificationhistory >  _2__;

}
//////////////////////////////////////////

@namespace('schema')
class loginip extends sobject { 
    id id;
    id usersid;  user users;
    string sourceip;
    datetime createddate;
    boolean isauthenticated;
    datetime challengesentdate;
    string challengemethod;
}
//////////////////////////////////////////

@namespace('schema')
class lookedupfromactivity extends sobject { 
    id id;
    id accountid;  account account;
    id whoid;  lead who;
    id whatid;  myobj__c what;
    string subject;
    boolean istask;
    date activitydate;
    id ownerid;  user owner;
    string status;
    string priority;
    boolean ishighpriority;
    string activitytype;
    boolean isclosed;
    boolean isalldayevent;
    boolean isvisibleinselfservice;
    integer durationinminutes;
    string location;
    string description;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    integer calldurationinseconds;
    string calltype;
    string calldisposition;
    string callobject;
    datetime reminderdatetime;
    boolean isreminderset;
    datetime enddatetime;
    datetime startdatetime;
    string activitysubtype;
    string tasktemplateid__c;
}
//////////////////////////////////////////

@namespace('schema')
class macro extends sobject { 
    id id;
    id ownerid;  user owner;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    string description;
            List< macrohistory >  histories;

            List< macroinstruction >  _2__;

}
//////////////////////////////////////////

@namespace('schema')
class macrohistory extends sobject { 
    id id;
    boolean isdeleted;
    id macroid;  macro macro;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class macroinstruction extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id macroid;  macro macro;
    string operation;
    string target;
    string value;
    string valuerecord;
    integer sortorder;
}
//////////////////////////////////////////

@namespace('schema')
class macroshare extends sobject { 
    id id;
    id parentid;  macro parent;
    id userorgroupid;  user userorgroup;
    string accesslevel;
    string rowcause;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    boolean isdeleted;
}
//////////////////////////////////////////

@namespace('schema')
class mailmergetemplate extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    string description;
    string filename;
    integer bodylength;
    blob body;
    datetime lastuseddate;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    boolean securityoptionsattachmentscannedforxss;
    boolean securityoptionsattachmenthasxssthreat;
    boolean securityoptionsattachmentscannedforflash;
    boolean securityoptionsattachmenthasflash;
}
//////////////////////////////////////////

@namespace('schema')
class matchingrule extends sobject { 
    id id;
    boolean isdeleted;
    string sobjecttype;
    string developername;
    string language;
    string masterlabel;
    string namespaceprefix;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string matchengine;
    string booleanfilter;
    string description;
    string rulestatus;
            List< matchingruleitem >  matchingruleitems;

}
//////////////////////////////////////////

@namespace('schema')
class matchingruleitem extends sobject { 
    id id;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id matchingruleid;  matchingrule matchingrule;
    integer sortorder;
    string field;
    string matchingmethod;
    string blankvaluebehavior;
}
//////////////////////////////////////////

@namespace('schema')
class myobj__c extends sobject { 
    id id;
    id ownerid;  user owner;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _5__;

            List< contentdocumentlink >  _6__;

            List< contentversion >  _7__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _11__;

            List< feeditem >  _12__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class name extends sobject { 
    id id;
    string name;
    string lastname;
    string firstname;
    string type;
    string alias;
    id userroleid;  userrole userrole;
    id recordtypeid;  recordtype recordtype;
    boolean isactive;
    id profileid;  profile profile;
    string title;
    string email;
    string phone;
    string username;
    datetime lastvieweddate;
    datetime lastreferenceddate;
}
//////////////////////////////////////////

@namespace('schema')
class namedcredential extends sobject { 
    id id;
    boolean isdeleted;
    string developername;
    string language;
    string masterlabel;
    string namespaceprefix;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string endpoint;
    string principaltype;
    boolean calloutoptionsgenerateauthorizationheader;
    boolean calloutoptionsallowmergefieldsinheader;
    boolean calloutoptionsallowmergefieldsinbody;
            List< externaldatauserauth >  userauths;

            List< setupentityaccess >  setupentityaccessitems;

            List< userprovisioningconfig >  _3__;

}
//////////////////////////////////////////

@namespace('schema')
class note extends sobject { 
    id id;
    boolean isdeleted;
    id parentid;  myobj__c parent;
    string title;
    boolean isprivate;
    string body;
    id ownerid;  user owner;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class noteandattachment extends sobject { 
    id id;
    boolean isdeleted;
    boolean isnote;
    id parentid;  myobj__c parent;
    string title;
    boolean isprivate;
    id ownerid;  user owner;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class oauthtoken extends sobject { 
    id id;
    string accesstoken;
    id userid;  user user;
    string requesttoken;
    datetime createddate;
    string appname;
    datetime lastuseddate;
    integer usecount;
    string deletetoken;
    id appmenuitemid;  appmenuitem appmenuitem;
}
//////////////////////////////////////////

@namespace('schema')
class objectpermissions extends sobject { 
    id id;
    id parentid;  permissionset parent;
    string sobjecttype;
    boolean permissionscreate;
    boolean permissionsread;
    boolean permissionsedit;
    boolean permissionsdelete;
    boolean permissionsviewallrecords;
    boolean permissionsmodifyallrecords;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class openactivity extends sobject { 
    id id;
    id accountid;  account account;
    id whoid;  lead who;
    id whatid;  venue__c what;
    string subject;
    boolean istask;
    date activitydate;
    id ownerid;  user owner;
    string status;
    string priority;
    boolean ishighpriority;
    string activitytype;
    boolean isclosed;
    boolean isalldayevent;
    boolean isvisibleinselfservice;
    integer durationinminutes;
    string location;
    string description;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    integer calldurationinseconds;
    string calltype;
    string calldisposition;
    string callobject;
    datetime reminderdatetime;
    boolean isreminderset;
    datetime enddatetime;
    datetime startdatetime;
    string activitysubtype;
    id alternatedetailid;  emailmessage alternatedetail;
    string tasktemplateid__c;
}
//////////////////////////////////////////

@namespace('schema')
class opportunity extends sobject { 
    id id;
    boolean isdeleted;
    id accountid;  account account;
    boolean isprivate;
    string name;
    string description;
    string stagename;
    decimal amount;
    double probability;
    decimal expectedrevenue;
    decimal totalopportunityquantity;
    date closedate;
    string type;
    string nextstep;
    string leadsource;
    boolean isclosed;
    boolean iswon;
    string forecastcategory;
    string forecastcategoryname;
    id campaignid;  campaign campaign;
    boolean hasopportunitylineitem;
    id pricebook2id;  pricebook2 pricebook2;
    id ownerid;  user owner;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    date lastactivitydate;
    integer fiscalquarter;
    integer fiscalyear;
    string fiscal;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    string deliveryinstallationstatus__c;
    string trackingnumber__c;
    string ordernumber__c;
    string currentgenerators__c;
    string maincompetitors__c;
            List< accountpartner >  accountpartners;

            List< actionplan__c >  r00nr0000000vzzima4__r;

            List< activityhistory >  activityhistories;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _8__;

            List< contentdocumentlink >  _9__;

            List< contentversion >  _10__;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< event >  events;

            List< feedcomment >  _14__;

            List< feeditem >  _15__;

            List< lead >  _16__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< openactivity >  openactivities;

            List< opportunitycompetitor >  opportunitycompetitors;

            List< opportunitycontactrole >  opportunitycontactroles;

            List< opportunityfeed >  feeds;

            List< opportunityfieldhistory >  histories;

            List< opportunityhistory >  opportunityhistories;

            List< opportunitylineitem >  opportunitylineitems;

            List< opportunitypartner >  opportunitypartnersfrom;

            List< opportunityshare >  shares;

            List< partner >  partners;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< rfp__c >  rfps__r;

            List< task >  tasks;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class opportunity_swarm_rule__c extends sobject { 
    id id;
    id ownerid;  user owner;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    date lastactivitydate;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    string description__c;
    boolean notify_on_swarm__c;
    decimal opportunity_amount__c;
    string opportunity_stage__c;
    string opportunity_type__c;
    string type__c;
    id user__c;  user user__r;
            List< activityhistory >  activityhistories;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _6__;

            List< contentdocumentlink >  _7__;

            List< contentversion >  _8__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< event >  events;

            List< feedcomment >  _13__;

            List< feeditem >  _14__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< openactivity >  openactivities;

            List< opportunity_swarm_rule__history >  histories;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< task >  tasks;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class opportunity_swarm_rule__history extends sobject { 
    id id;
    boolean isdeleted;
    id parentid;  opportunity_swarm_rule__c parent;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class opportunitycompetitor extends sobject { 
    id id;
    id opportunityid;  opportunity opportunity;
    string competitorname;
    string strengths;
    string weaknesses;
    id createdbyid;  user createdby;
    datetime createddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime lastmodifieddate;
    datetime systemmodstamp;
    boolean isdeleted;
}
//////////////////////////////////////////

@namespace('schema')
class opportunitycontactrole extends sobject { 
    id id;
    id opportunityid;  opportunity opportunity;
    id contactid;  contact contact;
    string role;
    boolean isprimary;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    boolean isdeleted;
}
//////////////////////////////////////////

@namespace('schema')
class opportunityfeed extends sobject { 
    id id;
    id parentid;  opportunity parent;
    string type;
    id createdbyid;  user createdby;
    datetime createddate;
    boolean isdeleted;
    datetime lastmodifieddate;
    datetime systemmodstamp;
    integer commentcount;
    integer likecount;
    string title;
    string body;
    string linkurl;
    boolean isrichtext;
    id relatedrecordid;
    id insertedbyid;  user insertedby;
            List< feedattachment >  feedattachments;

            List< feedcomment >  feedcomments;

            List< feedlike >  _3__;

            List< feedlike >  feedlikes;

            List< feedpollchoice >  _5__;

            List< feedpollvote >  _6__;

            List< feedtrackedchange >  feedtrackedchanges;

}
//////////////////////////////////////////

@namespace('schema')
class opportunityfieldhistory extends sobject { 
    id id;
    boolean isdeleted;
    id opportunityid;  opportunity opportunity;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class opportunityhistory extends sobject { 
    id id;
    id opportunityid;  opportunity opportunity;
    id createdbyid;  user createdby;
    datetime createddate;
    string stagename;
    decimal amount;
    decimal expectedrevenue;
    date closedate;
    double probability;
    string forecastcategory;
    datetime systemmodstamp;
    boolean isdeleted;
}
//////////////////////////////////////////

@namespace('schema')
class opportunitylineitem extends sobject { 
    id id;
    id opportunityid;  opportunity opportunity;
    integer sortorder;
    id pricebookentryid;  pricebookentry pricebookentry;
    id product2id;  product2 product2;
    string productcode;
    string name;
    decimal quantity;
    decimal totalprice;
    decimal unitprice;
    decimal listprice;
    date servicedate;
    string description;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    boolean isdeleted;
}
//////////////////////////////////////////

@namespace('schema')
class opportunitypartner extends sobject { 
    id id;
    id opportunityid;  opportunity opportunity;
    id accounttoid;  account accountto;
    string role;
    boolean isprimary;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    boolean isdeleted;
    id reversepartnerid;
            List< opportunitypartner >  _1__;

}
//////////////////////////////////////////

@namespace('schema')
class opportunityshare extends sobject { 
    id id;
    id opportunityid;  opportunity opportunity;
    id userorgroupid;  user userorgroup;
    string opportunityaccesslevel;
    string rowcause;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    boolean isdeleted;
}
//////////////////////////////////////////

@namespace('schema')
class opportunitystage extends sobject { 
    id id;
    string masterlabel;
    string apiname;
    boolean isactive;
    integer sortorder;
    boolean isclosed;
    boolean iswon;
    string forecastcategory;
    string forecastcategoryname;
    double defaultprobability;
    string description;
    id createdbyid;  user createdby;
    datetime createddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime lastmodifieddate;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class order extends sobject { 
    id id;
    id ownerid;  user owner;
    id contractid;  contract contract;
    id accountid;  account account;
    id pricebook2id;  pricebook2 pricebook2;
    id originalorderid;  order originalorder;
    date effectivedate;
    date enddate;
    boolean isreductionorder;
    string status;
    string description;
    id customerauthorizedbyid;  contact customerauthorizedby;
    date customerauthorizeddate;
    id companyauthorizedbyid;  user companyauthorizedby;
    date companyauthorizeddate;
    string type;
    string billingstreet;
    string billingcity;
    string billingstate;
    string billingpostalcode;
    string billingcountry;
    decimal billinglatitude;
    decimal billinglongitude;
    string billinggeocodeaccuracy;
    address billingaddress;
    string shippingstreet;
    string shippingcity;
    string shippingstate;
    string shippingpostalcode;
    string shippingcountry;
    decimal shippinglatitude;
    decimal shippinglongitude;
    string shippinggeocodeaccuracy;
    address shippingaddress;
    string name;
    date podate;
    string ponumber;
    string orderreferencenumber;
    id billtocontactid;  contact billtocontact;
    id shiptocontactid;  contact shiptocontact;
    datetime activateddate;
    id activatedbyid;  user activatedby;
    string statuscode;
    string ordernumber;
    decimal totalamount;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    boolean isdeleted;
    datetime systemmodstamp;
    datetime lastvieweddate;
    datetime lastreferenceddate;
            List< activityhistory >  activityhistories;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< combinedattachment >  combinedattachments;

            List< contentdocumentlink >  _5__;

            List< contentversion >  _6__;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< event >  events;

            List< feedcomment >  _10__;

            List< feeditem >  _11__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< openactivity >  openactivities;

            List< order >  orders;

            List< orderfeed >  feeds;

            List< orderhistory >  histories;

            List< orderitem >  orderitems;

            List< ordershare >  shares;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< task >  tasks;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class orderfeed extends sobject { 
    id id;
    id parentid;  order parent;
    string type;
    id createdbyid;  user createdby;
    datetime createddate;
    boolean isdeleted;
    datetime lastmodifieddate;
    datetime systemmodstamp;
    integer commentcount;
    integer likecount;
    string title;
    string body;
    string linkurl;
    boolean isrichtext;
    id relatedrecordid;
    id insertedbyid;  user insertedby;
            List< feedattachment >  feedattachments;

            List< feedcomment >  feedcomments;

            List< feedlike >  _3__;

            List< feedlike >  feedlikes;

            List< feedpollchoice >  _5__;

            List< feedpollvote >  _6__;

            List< feedtrackedchange >  feedtrackedchanges;

}
//////////////////////////////////////////

@namespace('schema')
class orderhistory extends sobject { 
    id id;
    boolean isdeleted;
    id orderid;  order order;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class orderitem extends sobject { 
    id id;
    boolean isdeleted;
    id orderid;  order order;
    id pricebookentryid;  pricebookentry pricebookentry;
    id originalorderitemid;  orderitem originalorderitem;
    decimal availablequantity;
    decimal quantity;
    decimal unitprice;
    decimal listprice;
    date servicedate;
    date enddate;
    string description;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string orderitemnumber;
            List< attachedcontentdocument >  attachedcontentdocuments;

            List< combinedattachment >  combinedattachments;

            List< contentdocumentlink >  _3__;

            List< contentversion >  _4__;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _6__;

            List< feeditem >  _7__;

            List< orderitem >  childorderitems;

            List< orderitemfeed >  feeds;

            List< orderitemhistory >  histories;

}
//////////////////////////////////////////

@namespace('schema')
class orderitemfeed extends sobject { 
    id id;
    id parentid;  orderitem parent;
    string type;
    id createdbyid;  user createdby;
    datetime createddate;
    boolean isdeleted;
    datetime lastmodifieddate;
    datetime systemmodstamp;
    integer commentcount;
    integer likecount;
    string title;
    string body;
    string linkurl;
    boolean isrichtext;
    id relatedrecordid;
    id insertedbyid;  user insertedby;
            List< feedattachment >  feedattachments;

            List< feedcomment >  feedcomments;

            List< feedlike >  _3__;

            List< feedlike >  feedlikes;

            List< feedpollchoice >  _5__;

            List< feedpollvote >  _6__;

            List< feedtrackedchange >  feedtrackedchanges;

}
//////////////////////////////////////////

@namespace('schema')
class orderitemhistory extends sobject { 
    id id;
    boolean isdeleted;
    id orderitemid;  orderitem orderitem;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class ordershare extends sobject { 
    id id;
    id orderid;  order order;
    id userorgroupid;  user userorgroup;
    string orderaccesslevel;
    string rowcause;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    boolean isdeleted;
}
//////////////////////////////////////////

@namespace('schema')
class organization extends sobject { 
    id id;
    string name;
    string division;
    string street;
    string city;
    string state;
    string postalcode;
    string country;
    decimal latitude;
    decimal longitude;
    string geocodeaccuracy;
    address address;
    string phone;
    string fax;
    string primarycontact;
    string defaultlocalesidkey;
    string languagelocalekey;
    boolean receivesinfoemails;
    boolean receivesadmininfoemails;
    boolean preferencesrequireopportunityproducts;
    boolean preferencestransactionsecuritypolicy;
    boolean preferencesterminateoldestsession;
    integer fiscalyearstartmonth;
    boolean usesstartdateasfiscalyearname;
    string defaultaccountaccess;
    string defaultcontactaccess;
    string defaultopportunityaccess;
    string defaultleadaccess;
    string defaultcaseaccess;
    string defaultcalendaraccess;
    string defaultpricebookaccess;
    string defaultcampaignaccess;
    datetime systemmodstamp;
    string compliancebccemail;
    string uiskin;
    string signupcountryisocode;
    datetime trialexpirationdate;
    string organizationtype;
    string namespaceprefix;
    string instancename;
    boolean issandbox;
    string webtocasedefaultorigin;
    integer monthlypageviewsused;
    integer monthlypageviewsentitlement;
    boolean isreadonly;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
            List< attachedcontentdocument >  attachedcontentdocuments;

            List< combinedattachment >  combinedattachments;

            List< contentdocumentlink >  _3__;

            List< custombrand >  custombrands;

            List< emailtemplate >  _5__;

            List< group >  _6__;

            List< report >  _7__;

}
//////////////////////////////////////////

@namespace('schema')
class orgwideemailaddress extends sobject { 
    id id;
    id createdbyid;  user createdby;
    datetime createddate;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string address;
    string displayname;
    boolean isallowallprofiles;
}
//////////////////////////////////////////

@namespace('schema')
class ownedcontentdocument extends sobject { 
    id id;
    boolean isdeleted;
    id ownerid;  user owner;
    id contentdocumentid;  contentdocument contentdocument;
    string title;
    id createdbyid;  user createdby;
    datetime createddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime lastmodifieddate;
    string filetype;
    integer contentsize;
    string fileextension;
    string contenturl;
    string externaldatasourcename;
    string externaldatasourcetype;
}
//////////////////////////////////////////

@namespace('schema')
class packagelicense extends sobject { 
    id id;
    string status;
    boolean isprovisioned;
    integer allowedlicenses;
    integer usedlicenses;
    datetime expirationdate;
    datetime createddate;
    datetime lastmodifieddate;
    datetime systemmodstamp;
    string namespaceprefix;
            List< userpackagelicense >  _1__;

}
//////////////////////////////////////////

@namespace('schema')
class page__c extends sobject { 
    id id;
    id ownerid;  user owner;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    date lastactivitydate;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    decimal cache_expires__c;
    id folder__c;  cmsfolder__c folder__r;
    string friendlyurl__c;
    boolean home_page__c;
    string pagetemplatevfpage__c;
    id pagetemplate__c;  pagetemplate__c pagetemplate__r;
    string site_id__c;
            List< activityhistory >  activityhistories;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _6__;

            List< contentdocumentlink >  _7__;

            List< contentversion >  _8__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< event >  events;

            List< feedcomment >  _13__;

            List< feeditem >  _14__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< openactivity >  openactivities;

            List< pagetoitem__c >  pageitem__r;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< task >  tasks;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class pagetemplate__c extends sobject { 
    id id;
    id ownerid;  user owner;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    date lastactivitydate;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    string contentblocknames__c;
    id folder__c;  cmsfolder__c folder__r;
    string visualforce_page_name__c;
            List< activityhistory >  activityhistories;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _6__;

            List< contentdocumentlink >  _7__;

            List< contentversion >  _8__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< event >  events;

            List< feedcomment >  _13__;

            List< feeditem >  _14__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< openactivity >  openactivities;

            List< page__c >  pages__r;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< task >  tasks;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class pagetoitem__c extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id page__c;  page__c page__r;
    id contentblockitem__c;  contentblockitem__c contentblockitem__r;
    string display_in_contentblock__c;
    decimal order__c;
            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _5__;

            List< contentdocumentlink >  _6__;

            List< contentversion >  _7__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _11__;

            List< feeditem >  _12__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class partner extends sobject { 
    id id;
    id opportunityid;  opportunity opportunity;
    id accountfromid;  account accountfrom;
    id accounttoid;  account accountto;
    string role;
    boolean isprimary;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    boolean isdeleted;
    id reversepartnerid;
            List< partner >  _1__;

}
//////////////////////////////////////////

@namespace('schema')
class partnerrole extends sobject { 
    id id;
    string masterlabel;
    string apiname;
    integer sortorder;
    string reverserole;
    id createdbyid;  user createdby;
    datetime createddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime lastmodifieddate;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class period extends sobject { 
    id id;
    id fiscalyearsettingsid;  fiscalyearsettings fiscalyearsettings;
    string type;
    date startdate;
    date enddate;
    datetime systemmodstamp;
    boolean isforecastperiod;
    string quarterlabel;
    string periodlabel;
    integer number;
    string fullyqualifiedlabel;
            List< fiscalyearsettings >  _1__;

}
//////////////////////////////////////////

@namespace('schema')
class period__c extends sobject { 
    id id;
    id ownerid;  user owner;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    date lastactivitydate;
    date end_date__c;
    date month_1__c;
    date month_2__c;
    date month_3__c;
    decimal number__c;
    id parentperiod__c;  period__c parentperiod__r;
    date start_date__c;
    string type__c;
            List< activityhistory >  activityhistories;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< budget_line__c >  budget_lines__r;

            List< budgets__c >  budgets__r;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _8__;

            List< contentdocumentlink >  _9__;

            List< contentversion >  _10__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< event >  events;

            List< feedcomment >  _15__;

            List< feeditem >  _16__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< openactivity >  openactivities;

            List< period__history >  histories;

            List< period__c >  periods2__r;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< purchase_request__c >  quarter__r;

            List< task >  tasks;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class period__history extends sobject { 
    id id;
    boolean isdeleted;
    id parentid;  period__c parent;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class permissionset extends sobject { 
    id id;
    string name;
    string label;
    id userlicenseid;  userlicense userlicense;
    id profileid;  profile profile;
    boolean isownedbyprofile;
    boolean permissionsemailsingle;
    boolean permissionsemailmass;
    boolean permissionsedittask;
    boolean permissionseditevent;
    boolean permissionsexportreport;
    boolean permissionsimportpersonal;
    boolean permissionsmanageusers;
    boolean permissionseditpublictemplates;
    boolean permissionsmodifyalldata;
    boolean permissionsmanagecases;
    boolean permissionsmassinlineedit;
    boolean permissionseditknowledge;
    boolean permissionsmanageknowledge;
    boolean permissionsmanagesolutions;
    boolean permissionscustomizeapplication;
    boolean permissionseditreadonlyfields;
    boolean permissionsrunreports;
    boolean permissionsviewsetup;
    boolean permissionstransferanyentity;
    boolean permissionsnewreportbuilder;
    boolean permissionsactivatecontract;
    boolean permissionsactivateorder;
    boolean permissionsimportleads;
    boolean permissionsmanageleads;
    boolean permissionstransferanylead;
    boolean permissionsviewalldata;
    boolean permissionseditpublicdocuments;
    boolean permissionsviewencrypteddata;
    boolean permissionseditbrandtemplates;
    boolean permissionsedithtmltemplates;
    boolean permissionschatterinternaluser;
    boolean permissionsmanageencryptionkeys;
    boolean permissionsdeleteactivatedcontract;
    boolean permissionschatterinviteexternalusers;
    boolean permissionssendsitrequests;
    boolean permissionsmanageremoteaccess;
    boolean permissionscanusenewdashboardbuilder;
    boolean permissionsmanagecategories;
    boolean permissionsconvertleads;
    boolean permissionspasswordneverexpires;
    boolean permissionsuseteamreassignwizards;
    boolean permissionseditactivatedorders;
    boolean permissionsinstallpackaging;
    boolean permissionspublishpackaging;
    boolean permissionschatterowngroups;
    boolean permissionseditopplineitemunitprice;
    boolean permissionscreatepackaging;
    boolean permissionsbulkapiharddelete;
    boolean permissionssolutionimport;
    boolean permissionsmanagecallcenters;
    boolean permissionsmanagesynonyms;
    boolean permissionsviewcontent;
    boolean permissionsmanageemailclientconfig;
    boolean permissionsenablenotifications;
    boolean permissionsmanagedataintegrations;
    boolean permissionsdistributefromperswksp;
    boolean permissionsviewdatacategories;
    boolean permissionsmanagedatacategories;
    boolean permissionsauthorapex;
    boolean permissionsmanagemobile;
    boolean permissionsapienabled;
    boolean permissionsmanagecustomreporttypes;
    boolean permissionseditcasecomments;
    boolean permissionstransferanycase;
    boolean permissionscontentadministrator;
    boolean permissionscreateworkspaces;
    boolean permissionsmanagecontentpermissions;
    boolean permissionsmanagecontentproperties;
    boolean permissionsmanagecontenttypes;
    boolean permissionsmanageexchangeconfig;
    boolean permissionsmanageanalyticsnapshots;
    boolean permissionsschedulereports;
    boolean permissionsmanagebusinesshourholidays;
    boolean permissionsmanagedynamicdashboards;
    boolean permissionscustomsidebaronallpages;
    boolean permissionsmanageinteraction;
    boolean permissionsviewmyteamsdashboards;
    boolean permissionsmoderatechatter;
    boolean permissionsresetpasswords;
    boolean permissionsflowuflrequired;
    boolean permissionscaninsertfeedsystemfields;
    boolean permissionsmanageknowledgeimportexport;
    boolean permissionsemailtemplatemanagement;
    boolean permissionsemailadministration;
    boolean permissionsmanagechattermessages;
    boolean permissionsallowemailic;
    boolean permissionschatterfilelink;
    boolean permissionsforcetwofactor;
    boolean permissionsvieweventlogfiles;
    boolean permissionsmanagenetworks;
    boolean permissionsmanageauthproviders;
    boolean permissionsrunflow;
    boolean permissionscreatecustomizedashboards;
    boolean permissionscreatedashboardfolders;
    boolean permissionsviewpublicdashboards;
    boolean permissionsmanagedashbdsinpubfolders;
    boolean permissionscreatecustomizereports;
    boolean permissionscreatereportfolders;
    boolean permissionsviewpublicreports;
    boolean permissionsmanagereportsinpubfolders;
    boolean permissionseditmydashboards;
    boolean permissionseditmyreports;
    boolean permissionsviewallusers;
    boolean permissionsallowuniversalsearch;
    boolean permissionsconnectorgtoenvironmenthub;
    boolean permissionsworkcalibrationuser;
    boolean permissionscreatecustomizefilters;
    boolean permissionsworkdotcomuserperm;
    boolean permissionsgovernnetworks;
    boolean permissionssalesconsole;
    boolean permissionstwofactorapi;
    boolean permissionsdeletetopics;
    boolean permissionsedittopics;
    boolean permissionscreatetopics;
    boolean permissionsassigntopics;
    boolean permissionsidentityenabled;
    boolean permissionsidentityconnect;
    boolean permissionsallowviewknowledge;
    boolean permissionsmanagesearchpromotionrules;
    boolean permissionscustommobileappsaccess;
    boolean permissionsviewhelplink;
    boolean permissionsmanageprofilespermissionsets;
    boolean permissionsassignpermissionsets;
    boolean permissionsmanageroles;
    boolean permissionsmanageipaddresses;
    boolean permissionsmanagesharing;
    boolean permissionsmanageinternalusers;
    boolean permissionsmanagepasswordpolicies;
    boolean permissionsmanageloginaccesspolicies;
    boolean permissionsmanagecustompermissions;
    boolean permissionsmanageunlistedgroups;
    boolean permissionsmodifysecureagents;
    boolean permissionsmanagetwofactor;
    boolean permissionschatterforsharepoint;
    boolean permissionslightningexperienceuser;
    boolean permissionsconfigcustomrecs;
    boolean permissionssubmitmacrosallowed;
    boolean permissionsbulkmacrosallowed;
    boolean permissionsshareinternalarticles;
    boolean permissionsmanagesessionpermissionsets;
    boolean permissionschattereditownpost;
    boolean permissionschattereditownrecordpost;
    boolean permissionsimportcustomobjects;
    boolean permissionsdelegatedtwofactor;
    boolean permissionschattercomposeuicodesnippet;
    boolean permissionsselectfilesfromsalesforce;
    boolean permissionsmoderatenetworkusers;
    boolean permissionsmergetopics;
    boolean permissionsmanagepvtrptsanddashbds;
    boolean permissionscanapprovefeedpost;
    string description;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string namespaceprefix;
    boolean hasactivationrequired;
            List< fieldpermissions >  fieldperms;

            List< objectpermissions >  objectperms;

            List< permissionsetassignment >  assignments;

            List< sessionpermsetactivation >  sessionactivations;

            List< setupentityaccess >  setupentityaccessitems;

}
//////////////////////////////////////////

@namespace('schema')
class permissionsetassignment extends sobject { 
    id id;
    id permissionsetid;  permissionset permissionset;
    id assigneeid;  user assignee;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class permissionsetlicense extends sobject { 
    id id;
    boolean isdeleted;
    string developername;
    string language;
    string masterlabel;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string permissionsetlicensekey;
    integer totallicenses;
    string status;
    date expirationdate;
    boolean maximumpermissionsemailsingle;
    boolean maximumpermissionsemailmass;
    boolean maximumpermissionsedittask;
    boolean maximumpermissionseditevent;
    boolean maximumpermissionsexportreport;
    boolean maximumpermissionsimportpersonal;
    boolean maximumpermissionsmanageusers;
    boolean maximumpermissionseditpublictemplates;
    boolean maximumpermissionsmodifyalldata;
    boolean maximumpermissionsmanagecases;
    boolean maximumpermissionsmassinlineedit;
    boolean maximumpermissionseditknowledge;
    boolean maximumpermissionsmanageknowledge;
    boolean maximumpermissionsmanagesolutions;
    boolean maximumpermissionscustomizeapplication;
    boolean maximumpermissionseditreadonlyfields;
    boolean maximumpermissionsrunreports;
    boolean maximumpermissionsviewsetup;
    boolean maximumpermissionstransferanyentity;
    boolean maximumpermissionsnewreportbuilder;
    boolean maximumpermissionsactivatecontract;
    boolean maximumpermissionsactivateorder;
    boolean maximumpermissionsimportleads;
    boolean maximumpermissionsmanageleads;
    boolean maximumpermissionstransferanylead;
    boolean maximumpermissionsviewalldata;
    boolean maximumpermissionseditpublicdocuments;
    boolean maximumpermissionsviewencrypteddata;
    boolean maximumpermissionseditbrandtemplates;
    boolean maximumpermissionsedithtmltemplates;
    boolean maximumpermissionschatterinternaluser;
    boolean maximumpermissionsmanageencryptionkeys;
    boolean maximumpermissionsdeleteactivatedcontract;
    boolean maximumpermissionschatterinviteexternalusers;
    boolean maximumpermissionssendsitrequests;
    boolean maximumpermissionsmanageremoteaccess;
    boolean maximumpermissionscanusenewdashboardbuilder;
    boolean maximumpermissionsmanagecategories;
    boolean maximumpermissionsconvertleads;
    boolean maximumpermissionspasswordneverexpires;
    boolean maximumpermissionsuseteamreassignwizards;
    boolean maximumpermissionseditactivatedorders;
    boolean maximumpermissionsinstallpackaging;
    boolean maximumpermissionspublishpackaging;
    boolean maximumpermissionschatterowngroups;
    boolean maximumpermissionseditopplineitemunitprice;
    boolean maximumpermissionscreatepackaging;
    boolean maximumpermissionsbulkapiharddelete;
    boolean maximumpermissionssolutionimport;
    boolean maximumpermissionsmanagecallcenters;
    boolean maximumpermissionsmanagesynonyms;
    boolean maximumpermissionsviewcontent;
    boolean maximumpermissionsmanageemailclientconfig;
    boolean maximumpermissionsenablenotifications;
    boolean maximumpermissionsmanagedataintegrations;
    boolean maximumpermissionsdistributefromperswksp;
    boolean maximumpermissionsviewdatacategories;
    boolean maximumpermissionsmanagedatacategories;
    boolean maximumpermissionsauthorapex;
    boolean maximumpermissionsmanagemobile;
    boolean maximumpermissionsapienabled;
    boolean maximumpermissionsmanagecustomreporttypes;
    boolean maximumpermissionseditcasecomments;
    boolean maximumpermissionstransferanycase;
    boolean maximumpermissionscontentadministrator;
    boolean maximumpermissionscreateworkspaces;
    boolean maximumpermissionsmanagecontentpermissions;
    boolean maximumpermissionsmanagecontentproperties;
    boolean maximumpermissionsmanagecontenttypes;
    boolean maximumpermissionsmanageexchangeconfig;
    boolean maximumpermissionsmanageanalyticsnapshots;
    boolean maximumpermissionsschedulereports;
    boolean maximumpermissionsmanagebusinesshourholidays;
    boolean maximumpermissionsmanagedynamicdashboards;
    boolean maximumpermissionscustomsidebaronallpages;
    boolean maximumpermissionsmanageinteraction;
    boolean maximumpermissionsviewmyteamsdashboards;
    boolean maximumpermissionsmoderatechatter;
    boolean maximumpermissionsresetpasswords;
    boolean maximumpermissionsflowuflrequired;
    boolean maximumpermissionscaninsertfeedsystemfields;
    boolean maximumpermissionsmanageknowledgeimportexport;
    boolean maximumpermissionsemailtemplatemanagement;
    boolean maximumpermissionsemailadministration;
    boolean maximumpermissionsmanagechattermessages;
    boolean maximumpermissionsallowemailic;
    boolean maximumpermissionschatterfilelink;
    boolean maximumpermissionsforcetwofactor;
    boolean maximumpermissionsvieweventlogfiles;
    boolean maximumpermissionsmanagenetworks;
    boolean maximumpermissionsmanageauthproviders;
    boolean maximumpermissionsrunflow;
    boolean maximumpermissionscreatecustomizedashboards;
    boolean maximumpermissionscreatedashboardfolders;
    boolean maximumpermissionsviewpublicdashboards;
    boolean maximumpermissionsmanagedashbdsinpubfolders;
    boolean maximumpermissionscreatecustomizereports;
    boolean maximumpermissionscreatereportfolders;
    boolean maximumpermissionsviewpublicreports;
    boolean maximumpermissionsmanagereportsinpubfolders;
    boolean maximumpermissionseditmydashboards;
    boolean maximumpermissionseditmyreports;
    boolean maximumpermissionsviewallusers;
    boolean maximumpermissionsallowuniversalsearch;
    boolean maximumpermissionsconnectorgtoenvironmenthub;
    boolean maximumpermissionsworkcalibrationuser;
    boolean maximumpermissionscreatecustomizefilters;
    boolean maximumpermissionsworkdotcomuserperm;
    boolean maximumpermissionsgovernnetworks;
    boolean maximumpermissionssalesconsole;
    boolean maximumpermissionstwofactorapi;
    boolean maximumpermissionsdeletetopics;
    boolean maximumpermissionsedittopics;
    boolean maximumpermissionscreatetopics;
    boolean maximumpermissionsassigntopics;
    boolean maximumpermissionsidentityenabled;
    boolean maximumpermissionsidentityconnect;
    boolean maximumpermissionsallowviewknowledge;
    boolean maximumpermissionsmanagesearchpromotionrules;
    boolean maximumpermissionscustommobileappsaccess;
    boolean maximumpermissionsviewhelplink;
    boolean maximumpermissionsmanageprofilespermissionsets;
    boolean maximumpermissionsassignpermissionsets;
    boolean maximumpermissionsmanageroles;
    boolean maximumpermissionsmanageipaddresses;
    boolean maximumpermissionsmanagesharing;
    boolean maximumpermissionsmanageinternalusers;
    boolean maximumpermissionsmanagepasswordpolicies;
    boolean maximumpermissionsmanageloginaccesspolicies;
    boolean maximumpermissionsmanagecustompermissions;
    boolean maximumpermissionsmanageunlistedgroups;
    boolean maximumpermissionsmodifysecureagents;
    boolean maximumpermissionsmanagetwofactor;
    boolean maximumpermissionschatterforsharepoint;
    boolean maximumpermissionslightningexperienceuser;
    boolean maximumpermissionsconfigcustomrecs;
    boolean maximumpermissionssubmitmacrosallowed;
    boolean maximumpermissionsbulkmacrosallowed;
    boolean maximumpermissionsshareinternalarticles;
    boolean maximumpermissionsmanagesessionpermissionsets;
    boolean maximumpermissionschattereditownpost;
    boolean maximumpermissionschattereditownrecordpost;
    boolean maximumpermissionsimportcustomobjects;
    boolean maximumpermissionsdelegatedtwofactor;
    boolean maximumpermissionschattercomposeuicodesnippet;
    boolean maximumpermissionsselectfilesfromsalesforce;
    boolean maximumpermissionsmoderatenetworkusers;
    boolean maximumpermissionsmergetopics;
    boolean maximumpermissionsmanagepvtrptsanddashbds;
    boolean maximumpermissionscanapprovefeedpost;
    integer usedlicenses;
            List< grantedbylicense >  grantedbylicenses;

            List< permissionsetlicenseassign >  permissionsetlicenseassignments;

}
//////////////////////////////////////////

@namespace('schema')
class permissionsetlicenseassign extends sobject { 
    id id;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id permissionsetlicenseid;  permissionsetlicense permissionsetlicense;
    id assigneeid;  user assignee;
}
//////////////////////////////////////////

@namespace('schema')
class picklistvalueinfo extends sobject { 
    id id;
    string durableid;
    string value;
    string label;
    boolean isdefaultvalue;
    boolean isactive;
    string validfor;
    string entityparticleid;  entityparticle entityparticle;
}
//////////////////////////////////////////

@namespace('schema')
class platformaction extends sobject { 
    id id;
    string externalid;
    datetime lastmodifieddate;
    string label;
    string type;
    string subtype;
    string apiname;
    string actiontarget;
    string actiontargettype;
    string confirmationmessage;
    id groupid;
    boolean isgroupdefault;
    string category;
    string invocationstatus;
    id invokedbyuserid;  user invokedbyuser;
    string sourceentity;
    string actionlistcontext;
    string deviceformat;
    string iconcontenttype;
    integer iconheight;
    integer iconwidth;
    string iconurl;
    string primarycolor;
    string relatedsourceentity;
    string section;
}
//////////////////////////////////////////

@namespace('schema')
class platformcachepartition extends sobject { 
    id id;
    boolean isdeleted;
    string developername;
    string language;
    string masterlabel;
    string namespaceprefix;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string description;
    boolean isdefaultpartition;
            List< platformcachepartitiontype >  platforcachepartitiontypes;

}
//////////////////////////////////////////

@namespace('schema')
class platformcachepartitiontype extends sobject { 
    id id;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id platformcachepartitionid;  platformcachepartition platformcachepartition;
    string cachetype;
    integer allocatedcapacity;
    integer allocatedpurchasedcapacity;
    integer allocatedtrialcapacity;
}
//////////////////////////////////////////

@namespace('schema')
class pr_change__c extends sobject { 
    id id;
    id ownerid;  user owner;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    decimal change_amount__c;
    date change_order_date__c;
    string change_order_pr__c;
    string pr_change_reason__c;
    id purchase_request__c;  purchase_request__c purchase_request__r;
            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _5__;

            List< contentdocumentlink >  _6__;

            List< contentversion >  _7__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _11__;

            List< feeditem >  _12__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< pr_change__history >  histories;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class pr_change__history extends sobject { 
    id id;
    boolean isdeleted;
    id parentid;  pr_change__c parent;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class pricebook2 extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    boolean isactive;
    string description;
    boolean isstandard;
            List< contract >  contracts;

            List< opportunity >  opportunities;

            List< order >  orders;

            List< pricebook2history >  histories;

            List< pricebookentry >  pricebookentries;

}
//////////////////////////////////////////

@namespace('schema')
class pricebook2history extends sobject { 
    id id;
    boolean isdeleted;
    id pricebook2id;  pricebook2 pricebook2;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class pricebookentry extends sobject { 
    id id;
    string name;
    id pricebook2id;  pricebook2 pricebook2;
    id product2id;  product2 product2;
    decimal unitprice;
    boolean isactive;
    boolean usestandardprice;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string productcode;
    boolean isdeleted;
            List< opportunitylineitem >  opportunitylineitems;

            List< orderitem >  orderitems;

}
//////////////////////////////////////////

@namespace('schema')
class processdefinition extends sobject { 
    id id;
    string name;
    string developername;
    string type;
    string description;
    string tableenumorid;
    string locktype;
    string state;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
            List< processinstance >  _1__;

            List< processnode >  _2__;

}
//////////////////////////////////////////

@namespace('schema')
class processinstance extends sobject { 
    id id;
    id processdefinitionid;  processdefinition processdefinition;
    id targetobjectid;  myobj__c targetobject;
    string status;
    datetime completeddate;
    id lastactorid;  user lastactor;
    decimal elapsedtimeindays;
    decimal elapsedtimeinhours;
    decimal elapsedtimeinminutes;
    id submittedbyid;  user submittedby;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
            List< processinstancehistory >  stepsandworkitems;

            List< processinstancenode >  nodes;

            List< processinstancestep >  steps;

            List< processinstanceworkitem >  workitems;

}
//////////////////////////////////////////

@namespace('schema')
class processinstancehistory extends sobject { 
    id id;
    boolean ispending;
    id processinstanceid;  processinstance processinstance;
    id targetobjectid;  myobj__c targetobject;
    string stepstatus;
    id processnodeid;  processnode processnode;
    id originalactorid;  user originalactor;
    id actorid;  user actor;
    integer reminderssent;
    decimal elapsedtimeindays;
    decimal elapsedtimeinhours;
    decimal elapsedtimeinminutes;
    string comments;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class processinstancenode extends sobject { 
    id id;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id processinstanceid;  processinstance processinstance;
    id processnodeid;  processnode processnode;
    string nodestatus;
    datetime completeddate;
    id lastactorid;  user lastactor;
    string processnodename;
    decimal elapsedtimeindays;
    decimal elapsedtimeinhours;
    decimal elapsedtimeinminutes;
}
//////////////////////////////////////////

@namespace('schema')
class processinstancestep extends sobject { 
    id id;
    id processinstanceid;  processinstance processinstance;
    string stepstatus;
    id originalactorid;  user originalactor;
    id actorid;  user actor;
    string comments;
    id stepnodeid;
    decimal elapsedtimeindays;
    decimal elapsedtimeinhours;
    decimal elapsedtimeinminutes;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class processinstanceworkitem extends sobject { 
    id id;
    id processinstanceid;  processinstance processinstance;
    id originalactorid;  user originalactor;
    id actorid;  user actor;
    decimal elapsedtimeindays;
    decimal elapsedtimeinhours;
    decimal elapsedtimeinminutes;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class processnode extends sobject { 
    id id;
    string name;
    string developername;
    id processdefinitionid;  processdefinition processdefinition;
    string description;
    datetime systemmodstamp;
            List< processinstancehistory >  _1__;

            List< processinstancenode >  _2__;

            List< processinstancestep >  _3__;

}
//////////////////////////////////////////

@namespace('schema')
class product2 extends sobject { 
    id id;
    string name;
    string productcode;
    string description;
    boolean isactive;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string family;
    boolean isdeleted;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    string blurb__c;
    decimal default_price__c;
    string image_display__c;
    string image_document_id__c;
    string inventory__c;
    boolean mobile_ready__c;
    string vf_image__c;
            List< activityhistory >  activityhistories;

            List< asset >  assets;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< catalog_line_item__c >  catalog_line_items__r;

            List< combinedattachment >  combinedattachments;

            List< contentdocumentlink >  _7__;

            List< contentversion >  _8__;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< event >  events;

            List< feedcomment >  _12__;

            List< feeditem >  _13__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< openactivity >  openactivities;

            List< opportunitylineitem >  _17__;

            List< pricebookentry >  pricebookentries;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< product2feed >  feeds;

            List< product2history >  histories;

            List< task >  tasks;

}
//////////////////////////////////////////

@namespace('schema')
class product2feed extends sobject { 
    id id;
    id parentid;  product2 parent;
    string type;
    id createdbyid;  user createdby;
    datetime createddate;
    boolean isdeleted;
    datetime lastmodifieddate;
    datetime systemmodstamp;
    integer commentcount;
    integer likecount;
    string title;
    string body;
    string linkurl;
    boolean isrichtext;
    id relatedrecordid;
    id insertedbyid;  user insertedby;
            List< feedattachment >  feedattachments;

            List< feedcomment >  feedcomments;

            List< feedlike >  _3__;

            List< feedlike >  feedlikes;

            List< feedpollchoice >  _5__;

            List< feedpollvote >  _6__;

            List< feedtrackedchange >  feedtrackedchanges;

}
//////////////////////////////////////////

@namespace('schema')
class product2history extends sobject { 
    id id;
    boolean isdeleted;
    id product2id;  product2 product2;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class profile extends sobject { 
    id id;
    string name;
    boolean permissionsemailsingle;
    boolean permissionsemailmass;
    boolean permissionsedittask;
    boolean permissionseditevent;
    boolean permissionsexportreport;
    boolean permissionsimportpersonal;
    boolean permissionsmanageusers;
    boolean permissionseditpublictemplates;
    boolean permissionsmodifyalldata;
    boolean permissionsmanagecases;
    boolean permissionsmassinlineedit;
    boolean permissionseditknowledge;
    boolean permissionsmanageknowledge;
    boolean permissionsmanagesolutions;
    boolean permissionscustomizeapplication;
    boolean permissionseditreadonlyfields;
    boolean permissionsrunreports;
    boolean permissionsviewsetup;
    boolean permissionstransferanyentity;
    boolean permissionsnewreportbuilder;
    boolean permissionsactivatecontract;
    boolean permissionsactivateorder;
    boolean permissionsimportleads;
    boolean permissionsmanageleads;
    boolean permissionstransferanylead;
    boolean permissionsviewalldata;
    boolean permissionseditpublicdocuments;
    boolean permissionsviewencrypteddata;
    boolean permissionseditbrandtemplates;
    boolean permissionsedithtmltemplates;
    boolean permissionschatterinternaluser;
    boolean permissionsmanageencryptionkeys;
    boolean permissionsdeleteactivatedcontract;
    boolean permissionschatterinviteexternalusers;
    boolean permissionssendsitrequests;
    boolean permissionsmanageremoteaccess;
    boolean permissionscanusenewdashboardbuilder;
    boolean permissionsmanagecategories;
    boolean permissionsconvertleads;
    boolean permissionspasswordneverexpires;
    boolean permissionsuseteamreassignwizards;
    boolean permissionseditactivatedorders;
    boolean permissionsinstallmultiforce;
    boolean permissionspublishmultiforce;
    boolean permissionschatterowngroups;
    boolean permissionseditopplineitemunitprice;
    boolean permissionscreatemultiforce;
    boolean permissionsbulkapiharddelete;
    boolean permissionssolutionimport;
    boolean permissionsmanagecallcenters;
    boolean permissionsmanagesynonyms;
    boolean permissionsviewcontent;
    boolean permissionsmanageemailclientconfig;
    boolean permissionsenablenotifications;
    boolean permissionsmanagedataintegrations;
    boolean permissionsdistributefromperswksp;
    boolean permissionsviewdatacategories;
    boolean permissionsmanagedatacategories;
    boolean permissionsauthorapex;
    boolean permissionsmanagemobile;
    boolean permissionsapienabled;
    boolean permissionsmanagecustomreporttypes;
    boolean permissionseditcasecomments;
    boolean permissionstransferanycase;
    boolean permissionscontentadministrator;
    boolean permissionscreateworkspaces;
    boolean permissionsmanagecontentpermissions;
    boolean permissionsmanagecontentproperties;
    boolean permissionsmanagecontenttypes;
    boolean permissionsmanageexchangeconfig;
    boolean permissionsmanageanalyticsnapshots;
    boolean permissionsschedulereports;
    boolean permissionsmanagebusinesshourholidays;
    boolean permissionsmanagedynamicdashboards;
    boolean permissionscustomsidebaronallpages;
    boolean permissionsmanageinteraction;
    boolean permissionsviewmyteamsdashboards;
    boolean permissionsmoderatechatter;
    boolean permissionsresetpasswords;
    boolean permissionsflowuflrequired;
    boolean permissionscaninsertfeedsystemfields;
    boolean permissionsmanageknowledgeimportexport;
    boolean permissionsemailtemplatemanagement;
    boolean permissionsemailadministration;
    boolean permissionsmanagechattermessages;
    boolean permissionsallowemailic;
    boolean permissionschatterfilelink;
    boolean permissionsforcetwofactor;
    boolean permissionsvieweventlogfiles;
    boolean permissionsmanagenetworks;
    boolean permissionsmanageauthproviders;
    boolean permissionsrunflow;
    boolean permissionscreatecustomizedashboards;
    boolean permissionscreatedashboardfolders;
    boolean permissionsviewpublicdashboards;
    boolean permissionsmanagedashbdsinpubfolders;
    boolean permissionscreatecustomizereports;
    boolean permissionscreatereportfolders;
    boolean permissionsviewpublicreports;
    boolean permissionsmanagereportsinpubfolders;
    boolean permissionseditmydashboards;
    boolean permissionseditmyreports;
    boolean permissionsviewallusers;
    boolean permissionsallowuniversalsearch;
    boolean permissionsconnectorgtoenvironmenthub;
    boolean permissionsworkcalibrationuser;
    boolean permissionscreatecustomizefilters;
    boolean permissionsworkdotcomuserperm;
    boolean permissionsgovernnetworks;
    boolean permissionssalesconsole;
    boolean permissionstwofactorapi;
    boolean permissionsdeletetopics;
    boolean permissionsedittopics;
    boolean permissionscreatetopics;
    boolean permissionsassigntopics;
    boolean permissionsidentityenabled;
    boolean permissionsidentityconnect;
    boolean permissionsallowviewknowledge;
    boolean permissionsmanagesearchpromotionrules;
    boolean permissionscustommobileappsaccess;
    boolean permissionsviewhelplink;
    boolean permissionsmanageprofilespermissionsets;
    boolean permissionsassignpermissionsets;
    boolean permissionsmanageroles;
    boolean permissionsmanageipaddresses;
    boolean permissionsmanagesharing;
    boolean permissionsmanageinternalusers;
    boolean permissionsmanagepasswordpolicies;
    boolean permissionsmanageloginaccesspolicies;
    boolean permissionsmanagecustompermissions;
    boolean permissionsmanageunlistedgroups;
    boolean permissionsmodifysecureagents;
    boolean permissionsmanagetwofactor;
    boolean permissionschatterforsharepoint;
    boolean permissionslightningexperienceuser;
    boolean permissionsconfigcustomrecs;
    boolean permissionssubmitmacrosallowed;
    boolean permissionsbulkmacrosallowed;
    boolean permissionsshareinternalarticles;
    boolean permissionsmanagesessionpermissionsets;
    boolean permissionschattereditownpost;
    boolean permissionschattereditownrecordpost;
    boolean permissionsimportcustomobjects;
    boolean permissionsdelegatedtwofactor;
    boolean permissionschattercomposeuicodesnippet;
    boolean permissionsselectfilesfromsalesforce;
    boolean permissionsmoderatenetworkusers;
    boolean permissionsmergetopics;
    boolean permissionsmanagepvtrptsanddashbds;
    boolean permissionscanapprovefeedpost;
    id userlicenseid;  userlicense userlicense;
    string usertype;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string description;
    datetime lastvieweddate;
    datetime lastreferenceddate;
            List< name >  _1__;

            List< permissionset >  _2__;

            List< recentlyviewed >  _3__;

            List< user >  users;

}
//////////////////////////////////////////

@namespace('schema')
class program_budget__c extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    id recordtypeid;  recordtype recordtype;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    date lastactivitydate;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    id budget_owner__c;  budgets__c budget_owner__r;
    string budget_area__c;
    decimal budget_owner_amount_remaining__c;
    decimal budget_owner_amount__c;
    decimal contractor_budget_amount__c;
    string description__c;
    decimal program_budget_amount__c;
    string program_budget_external__c;
    id program_owner__c;  user program_owner__r;
    string program_type__c;
    decimal proposed_budget__c;
    string region__c;
    string short_name__c;
    decimal unallocated_budget_line_amount__c;
    decimal uncommitted_approved_budget_remaining__c;
    decimal contingency_amounts__c;
    decimal number_of_contractors__c;
    decimal rollup_of_budget_lines__c;
    decimal rollup_of_contractor_budget_lines__c;
    decimal rollup_of_purchase_request_amount__c;
    decimal rollup_of_unapproved_budget_lines__c;
    decimal rollup_of_uncommitted_approved_budget__c;
            List< activityhistory >  activityhistories;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< budget_line__c >  budget_lines1__r;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _7__;

            List< contentdocumentlink >  _8__;

            List< contentversion >  _9__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< event >  events;

            List< feedcomment >  _14__;

            List< feeditem >  _15__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< openactivity >  openactivities;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< program_budget__history >  histories;

            List< task >  tasks;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class program_budget__history extends sobject { 
    id id;
    boolean isdeleted;
    id parentid;  program_budget__c parent;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class publisher extends sobject { 
    id id;
    string durableid;
    string name;
    string namespaceprefix;
    boolean issalesforce;
    integer majorversion;
    integer minorversion;
            List< entitydefinition >  installedentitydefinitions;

            List< fielddefinition >  installedfielddefinitions;

}
//////////////////////////////////////////

@namespace('schema')
class purchase_request__c extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    id recordtypeid;  recordtype recordtype;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    date lastactivitydate;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    id budget_line__c;  budget_line__c budget_line__r;
    string alert_sourcing__c;
    boolean approved_by_strategic_sourcer__c;
    boolean approved_in_oracle__c;
    decimal apr_amt_contractor__c;
    decimal apr_amt__c;
    decimal aug_amt_contractor__c;
    decimal aug_amt__c;
    decimal budget_line_approved_amount__c;
    decimal budget_line_unrequested_amount__c;
    string category_code__c;
    string category__c;
    decimal change_request_amount__c;
    decimal contractor_change_request_amount__c;
    string country_code__c;
    string country__c;
    date date_goods_services_will_be_delivered__c;
    date date_of_planned_expense__c;
    decimal dec_amt_contractor__c;
    decimal dec_amt__c;
    decimal department_code__c;
    id department__c;  department__c department__r;
    string description__c;
    decimal feb_amt_contractor__c;
    decimal feb_amt__c;
    string gl_segment__c;
    decimal jan_amt_contractor__c;
    decimal jan_amt__c;
    decimal jul_amt_contractro__c;
    decimal jul_amt__c;
    decimal jun_amt_contractor__c;
    decimal jun_amt__c;
    decimal mar_amt_contractor__c;
    decimal mar_amt__c;
    decimal may_amt_contractor__c;
    decimal may_amt__c;
    decimal month_1_amt_contr__c;
    decimal month_1_amt__c;
    decimal month_2_amt_contr__c;
    decimal month_2_amt__c;
    decimal month_3_amt_contr__c;
    decimal month_3_amt__c;
    string notes__c;
    decimal nov_amt_contractor__c;
    decimal nov_amt__c;
    decimal oct_amt_contractor__c;
    decimal oct_amt__c;
    string po__c;
    string pr__c;
    boolean prepaid_expense__c;
    boolean pro_serv__c;
    decimal purchase_request_amount__c;
    decimal purchase_request_contractor_amount__c;
    id quarter__c;  period__c quarter__r;
    string reason_for_increase_decrease__c;
    boolean recurring__c;
    string region__c;
    string request_action__c;
    boolean request_new_vendor_setup__c;
    id requester__c;  user requester__r;
    id secondary_requestor__c;  user secondary_requestor__r;
    decimal sep_amt_contractor__c;
    decimal sep_amt__c;
    string status__c;
    decimal total_contractor_pr_amount_with_changes__c;
    decimal total_pr_amount_with_changes__c;
    string vendor_placeholder__c;
            List< activityhistory >  activityhistories;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _6__;

            List< contentdocumentlink >  _7__;

            List< contentversion >  _8__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< event >  events;

            List< feedcomment >  _13__;

            List< feeditem >  _14__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< openactivity >  openactivities;

            List< pr_change__c >  pr_changes1__r;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< purchase_request__history >  histories;

            List< task >  tasks;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class purchase_request__history extends sobject { 
    id id;
    boolean isdeleted;
    id parentid;  purchase_request__c parent;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class pushtopic extends sobject { 
    id id;
    string name;
    string query;
    decimal apiversion;
    boolean isactive;
    string notifyforfields;
    string notifyforoperations;
    string description;
    boolean notifyforoperationcreate;
    boolean notifyforoperationupdate;
    boolean notifyforoperationdelete;
    boolean notifyforoperationundelete;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class question__c extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id rfp__c;  rfp__c rfp__r;
    id response__c;  response__c response__r;
    boolean original_response__c;
    boolean override_warning__c;
    string question__c;
    string response_status__c;
    string source__c;
            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _5__;

            List< contentdocumentlink >  _6__;

            List< contentversion >  _7__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _11__;

            List< feeditem >  _12__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class queuesobject extends sobject { 
    id id;
    id queueid;  group queue;
    string sobjecttype;
    id createdbyid;  user createdby;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class recentlyviewed extends sobject { 
    id id;
    string name;
    string lastname;
    string firstname;
    string type;
    string alias;
    id userroleid;  userrole userrole;
    id recordtypeid;  recordtype recordtype;
    boolean isactive;
    id profileid;  profile profile;
    string title;
    string email;
    string phone;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    string language;
}
//////////////////////////////////////////

@namespace('schema')
class reclaimbudgetcs__c extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    id setupownerid;  user setupowner;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string error_amount_must_be_greater_than_zero__c;
    string error_amount_must_not_be_empty__c;
    string error_budget_line_level_2__c;
    string error_budget_line_level_3__c;
    string error_budget_line_level__c;
    string error_budget_owner_level_2__c;
    string error_budget_owner_level_3__c;
    string error_budget_owner_level__c;
    string error_enter_a_valid_amount_number__c;
    string error_indicate_level__c;
    string error_no_contingency_budget__c;
    string error_program_budget_level_2__c;
    string error_program_budget_level_3__c;
    string error_program_budget_level__c;
    string error_request_can_not_be_processed__c;
    string error_updating__c;
    date fyend__c;
    date fystart__c;
    string managernoteinui1__c;
    string managernoteinui2__c;
    string public_group_allowed__c;
    date q1end__c;
    date q1start__c;
    date q2end__c;
    date q2start__c;
    date q3end__c;
    date q3start__c;
    date q4end__c;
    date q4start__c;
    string user_not_allowed_to_reclaim__c;
            List< attachedcontentdocument >  attachedcontentdocuments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _4__;

            List< contentdocumentlink >  _5__;

            List< contentversion >  _6__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _10__;

            List< feeditem >  _11__;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class reclaimed_transaction__c extends sobject { 
    id id;
    id ownerid;  user owner;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    date lastactivitydate;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    decimal amount__c;
    string budget_id__c;
    string budget_level__c;
    string budget_name__c;
    string budget_url__c;
    date date__c;
    string reason__c;
    id user__c;  user user__r;
            List< activityhistory >  activityhistories;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _6__;

            List< contentdocumentlink >  _7__;

            List< contentversion >  _8__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< event >  events;

            List< feedcomment >  _13__;

            List< feeditem >  _14__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< openactivity >  openactivities;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< reclaimed_transaction__history >  histories;

            List< task >  tasks;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class reclaimed_transaction__history extends sobject { 
    id id;
    boolean isdeleted;
    id parentid;  reclaimed_transaction__c parent;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class recordtype extends sobject { 
    id id;
    string name;
    string developername;
    string namespaceprefix;
    string description;
    id businessprocessid;
    string sobjecttype;
    boolean isactive;
    id createdbyid;  user createdby;
    datetime createddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime lastmodifieddate;
    datetime systemmodstamp;
            List< campaign >  _1__;

            List< contentworkspace >  _2__;

            List< name >  _3__;

            List< recentlyviewed >  _4__;

}
//////////////////////////////////////////

@namespace('schema')
class relationshipdomain extends sobject { 
    id id;
    string durableid;
    string parentsobjectid;  entitydefinition parentsobject;
    string childsobjectid;  entitydefinition childsobject;
    string fieldid;  fielddefinition field;
    string relationshipinfoid;  relationshipinfo relationshipinfo;
    string relationshipname;
    boolean iscascadedelete;
    boolean isdeprecatedandhidden;
    boolean isrestricteddelete;
    complexvaluetype junctionidlistnames;
}
//////////////////////////////////////////

@namespace('schema')
class relationshipinfo extends sobject { 
    id id;
    string durableid;
    string childsobjectid;  entitydefinition childsobject;
    string fieldid;  fielddefinition field;
    boolean iscascadedelete;
    boolean isdeprecatedandhidden;
    boolean isrestricteddelete;
    complexvaluetype junctionidlistnames;
            List< relationshipdomain >  relationshipdomains;

}
//////////////////////////////////////////

@namespace('schema')
class report extends sobject { 
    id id;
    id ownerid;  user owner;
    string foldername;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    boolean isdeleted;
    string name;
    string description;
    string developername;
    string namespaceprefix;
    datetime lastrundate;
    datetime systemmodstamp;
    string format;
    datetime lastvieweddate;
    datetime lastreferenceddate;
            List< attachedcontentdocument >  attachedcontentdocuments;

            List< combinedattachment >  combinedattachments;

            List< contentdocumentlink >  _3__;

            List< contentversion >  _4__;

            List< dashboardcomponent >  _5__;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _7__;

            List< feeditem >  _8__;

            List< reportfeed >  feeds;

}
//////////////////////////////////////////

@namespace('schema')
class reportfeed extends sobject { 
    id id;
    id parentid;  report parent;
    string type;
    id createdbyid;  user createdby;
    datetime createddate;
    boolean isdeleted;
    datetime lastmodifieddate;
    datetime systemmodstamp;
    integer commentcount;
    integer likecount;
    string title;
    string body;
    string linkurl;
    boolean isrichtext;
    id relatedrecordid;
    id insertedbyid;  user insertedby;
            List< feedattachment >  feedattachments;

            List< feedcomment >  feedcomments;

            List< feedlike >  _3__;

            List< feedlike >  feedlikes;

            List< feedpollchoice >  _5__;

            List< feedpollvote >  _6__;

            List< feedtrackedchange >  feedtrackedchanges;

}
//////////////////////////////////////////

@namespace('schema')
class response__c extends sobject { 
    id id;
    id ownerid;  user owner;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    date lastactivitydate;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    decimal age_days__c;
    date last_reviewed__c;
    decimal last_used_days_ago__c;
    date next_review_date__c;
    id originating_rfp__c;  rfp__c originating_rfp__r;
    decimal periodic_review_days__c;
    decimal popularity_index__c;
    string response_text__c;
    string status__c;
    string tempresponseid__c;
    datetime most_recent_use__c;
    decimal times_used__c;
    decimal used_more_than_once_in_an_rfp__c;
            List< activityhistory >  activityhistories;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _6__;

            List< contentdocumentlink >  _7__;

            List< contentversion >  _8__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< event >  events;

            List< feedcomment >  _13__;

            List< feeditem >  _14__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< openactivity >  openactivities;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< question__c >  questions__r;

            List< response__history >  histories;

            List< task >  tasks;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class response__history extends sobject { 
    id id;
    boolean isdeleted;
    id parentid;  response__c parent;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class restexplorerconfig__c extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    id setupownerid;  user setupowner;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string value__c;
            List< attachedcontentdocument >  attachedcontentdocuments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _4__;

            List< contentdocumentlink >  _5__;

            List< contentversion >  _6__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _10__;

            List< feeditem >  _11__;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class rfp__c extends sobject { 
    id id;
    id ownerid;  user owner;
    boolean isdeleted;
    string name;
    id recordtypeid;  recordtype recordtype;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    date lastactivitydate;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    datetime deadline_approaching_warning__c;
    datetime due_date__c;
    id opportunity__c;  opportunity opportunity__r;
    string rfp_url__c;
    decimal reminder_days__c;
    string status__c;
    decimal total_responses__c;
    string type__c;
    decimal existing_responses__c;
    decimal new_responses__c;
            List< activityhistory >  activityhistories;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _6__;

            List< contentdocumentlink >  _7__;

            List< contentversion >  _8__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< event >  events;

            List< feedcomment >  _13__;

            List< feeditem >  _14__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< openactivity >  openactivities;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< question__c >  questions__r;

            List< rfp__history >  histories;

            List< response__c >  responses__r;

            List< task >  tasks;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class rfp__history extends sobject { 
    id id;
    boolean isdeleted;
    id parentid;  rfp__c parent;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class room__c extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    date lastactivitydate;
    id venue__c;  venue__c venue__r;
    decimal room_capacity__c;
    string room_setup__c;
            List< activityhistory >  activityhistories;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _6__;

            List< contentdocumentlink >  _7__;

            List< contentversion >  _8__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< event >  events;

            List< feedcomment >  _13__;

            List< feeditem >  _14__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< openactivity >  openactivities;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< room__history >  histories;

            List< session__c >  sessions__r;

            List< task >  tasks;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class room__history extends sobject { 
    id id;
    boolean isdeleted;
    id parentid;  room__c parent;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class samlssoconfig extends sobject { 
    id id;
    boolean isdeleted;
    string developername;
    string language;
    string masterlabel;
    string namespaceprefix;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string version;
    string issuer;
    boolean optionsspinitbinding;
    boolean optionsuserprovisioning;
    string attributeformat;
    string attributename;
    string audience;
    string identitymapping;
    string identitylocation;
    id samljithandlerid;  apexclass samljithandler;
    id executionuserid;  user executionuser;
    string loginurl;
    string logouturl;
    string errorurl;
    string validationcert;
    string requestsignaturemethod;
            List< authconfigproviders >  _1__;

            List< loginhistory >  _2__;

}
//////////////////////////////////////////

@namespace('schema')
class scontrol extends sobject { 
    id id;
    string name;
    string developername;
    string description;
    string encodingkey;
    string htmlwrapper;
    string filename;
    integer bodylength;
    blob binary;
    string contentsource;
    boolean supportscaching;
    string namespaceprefix;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
            List< weblink >  _1__;

}
//////////////////////////////////////////

@namespace('schema')
class searchlayout extends sobject { 
    id id;
    string durableid;
    string label;
    string layouttype;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    string entitydefinitionid;  entitydefinition entitydefinition;
    complexvaluetype fieldsdisplayed;
    complexvaluetype buttonsdisplayed;
}
//////////////////////////////////////////

@namespace('schema')
class searchpromotionrule extends sobject { 
    id id;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string query;
}
//////////////////////////////////////////

@namespace('schema')
class secureagent extends sobject { 
    id id;
    boolean isdeleted;
    string developername;
    string language;
    string masterlabel;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string agentkey;
    id proxyuserid;  user proxyuser;
    id secureagentsclusterid;  secureagentscluster secureagentscluster;
    integer priority;
            List< secureagentplugin >  secureagentplugins;

}
//////////////////////////////////////////

@namespace('schema')
class secureagentplugin extends sobject { 
    id id;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id secureagentid;  secureagent secureagent;
    string pluginname;
    string plugintype;
    string requestedversion;
    datetime updatewindowstart;
    datetime updatewindowend;
            List< secureagentpluginproperty >  secureagentpluginproperties;

}
//////////////////////////////////////////

@namespace('schema')
class secureagentpluginproperty extends sobject { 
    id id;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id secureagentpluginid;  secureagentplugin secureagentplugin;
    string propertyname;
    string propertyvalue;
}
//////////////////////////////////////////

@namespace('schema')
class secureagentscluster extends sobject { 
    id id;
    boolean isdeleted;
    string developername;
    string language;
    string masterlabel;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string description;
            List< secureagent >  _1__;

}
//////////////////////////////////////////

@namespace('schema')
class session__c extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    date lastactivitydate;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    id track__c;  track__c track__r;
    boolean a_v_form__c;
    string all_speakers_identified__c;
    decimal attendance__c;
    string audio_url__c;
    string audio_visual_requirements__c;
    string level__c;
    string link_to_event__c;
    boolean publish_to_web__c;
    string room_setup__c;
    id room__c;  room__c room__r;
    string session_abstract__c;
    string session_code__c;
    date session_date__c;
    string session_format__c;
    string session_notes__c;
    decimal session_rating__c;
    string session_slot__c;
    string session_status__c;
    string session_theme__c;
    string session_time__c;
    string slides_url__c;
    string sponsor__c;
    string sponsored__c;
    decimal of_survey_responses__c;
            List< activityhistory >  activityhistories;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _6__;

            List< contentdocumentlink >  _7__;

            List< contentversion >  _8__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< event >  events;

            List< feedcomment >  _13__;

            List< feeditem >  _14__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< openactivity >  openactivities;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< session__feed >  feeds;

            List< session__history >  histories;

            List< speaker__c >  speakers__r;

            List< task >  tasks;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class session__feed extends sobject { 
    id id;
    id parentid;  session__c parent;
    string type;
    id createdbyid;  user createdby;
    datetime createddate;
    boolean isdeleted;
    datetime lastmodifieddate;
    datetime systemmodstamp;
    integer commentcount;
    integer likecount;
    string title;
    string body;
    string linkurl;
    boolean isrichtext;
    id relatedrecordid;
    id insertedbyid;  user insertedby;
            List< feedattachment >  feedattachments;

            List< feedcomment >  feedcomments;

            List< feedlike >  _3__;

            List< feedlike >  feedlikes;

            List< feedpollchoice >  _5__;

            List< feedpollvote >  _6__;

            List< feedtrackedchange >  feedtrackedchanges;

}
//////////////////////////////////////////

@namespace('schema')
class session__history extends sobject { 
    id id;
    boolean isdeleted;
    id parentid;  session__c parent;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class sessionpermsetactivation extends sobject { 
    id id;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id authsessionid;  authsession authsession;
    id permissionsetid;  permissionset permissionset;
    id userid;  user user;
    string description;
}
//////////////////////////////////////////

@namespace('schema')
class setupaudittrail extends sobject { 
    id id;
    string action;
    string section;
    datetime createddate;
    id createdbyid;  user createdby;
    string display;
    string delegateuser;
}
//////////////////////////////////////////

@namespace('schema')
class setupentityaccess extends sobject { 
    id id;
    id parentid;  permissionset parent;
    id setupentityid;
    string setupentitytype;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class site extends sobject { 
    id id;
    string name;
    string subdomain;
    string urlpathprefix;
    id guestuserid;  user guestuser;
    string status;
    id adminid;  user admin;
    boolean optionsenablefeeds;
    boolean optionsrequirehttps;
    boolean optionsallowhomepage;
    boolean optionsallowstandardideaspages;
    boolean optionsallowstandardsearch;
    boolean optionsallowstandardlookups;
    boolean optionsallowstandardanswerspages;
    boolean optionsallowguestsupportapi;
    string description;
    string masterlabel;
    string analyticstrackingcode;
    string sitetype;
    string clickjackprotectionlevel;
    integer dailybandwidthlimit;
    integer dailybandwidthused;
    integer dailyrequesttimelimit;
    integer dailyrequesttimeused;
    integer monthlypageviewsentitlement;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
            List< attachedcontentdocument >  attachedcontentdocuments;

            List< combinedattachment >  combinedattachments;

            List< contentdocumentlink >  _3__;

            List< contentversion >  _4__;

            List< domainsite >  sitedomainpaths;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _7__;

            List< feeditem >  _8__;

            List< sitefeed >  feeds;

            List< sitehistory >  histories;

}
//////////////////////////////////////////

@namespace('schema')
class sitefeed extends sobject { 
    id id;
    id parentid;  site parent;
    string type;
    id createdbyid;  user createdby;
    datetime createddate;
    boolean isdeleted;
    datetime lastmodifieddate;
    datetime systemmodstamp;
    integer commentcount;
    integer likecount;
    string title;
    string body;
    string linkurl;
    boolean isrichtext;
    id relatedrecordid;
    id insertedbyid;  user insertedby;
            List< feedattachment >  feedattachments;

            List< feedcomment >  feedcomments;

            List< feedlike >  _3__;

            List< feedlike >  feedlikes;

            List< feedpollchoice >  _5__;

            List< feedpollvote >  _6__;

            List< feedtrackedchange >  feedtrackedchanges;

}
//////////////////////////////////////////

@namespace('schema')
class sitehistory extends sobject { 
    id id;
    boolean isdeleted;
    id siteid;  site site;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class solution extends sobject { 
    id id;
    boolean isdeleted;
    string solutionnumber;
    string solutionname;
    boolean ispublished;
    boolean ispublishedinpublickb;
    string status;
    boolean isreviewed;
    string solutionnote;
    id ownerid;  user owner;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    integer timesused;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    boolean ishtml;
            List< activityhistory >  activityhistories;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< casesolution >  casesolutions;

            List< categorydata >  _5__;

            List< combinedattachment >  combinedattachments;

            List< contentdocumentlink >  _7__;

            List< contentversion >  _8__;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< event >  events;

            List< feedcomment >  _12__;

            List< feeditem >  _13__;

            List< openactivity >  openactivities;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< solutionfeed >  feeds;

            List< solutionhistory >  histories;

            List< task >  tasks;

            List< topicassignment >  topicassignments;

            List< vote >  votes;

}
//////////////////////////////////////////

@namespace('schema')
class solutionfeed extends sobject { 
    id id;
    id parentid;  solution parent;
    string type;
    id createdbyid;  user createdby;
    datetime createddate;
    boolean isdeleted;
    datetime lastmodifieddate;
    datetime systemmodstamp;
    integer commentcount;
    integer likecount;
    string title;
    string body;
    string linkurl;
    boolean isrichtext;
    id relatedrecordid;
    id insertedbyid;  user insertedby;
            List< feedattachment >  feedattachments;

            List< feedcomment >  feedcomments;

            List< feedlike >  _3__;

            List< feedlike >  feedlikes;

            List< feedpollchoice >  _5__;

            List< feedpollvote >  _6__;

            List< feedtrackedchange >  feedtrackedchanges;

}
//////////////////////////////////////////

@namespace('schema')
class solutionhistory extends sobject { 
    id id;
    boolean isdeleted;
    id solutionid;  solution solution;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class solutionstatus extends sobject { 
    id id;
    string masterlabel;
    string apiname;
    integer sortorder;
    boolean isdefault;
    boolean isreviewed;
    id createdbyid;  user createdby;
    datetime createddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime lastmodifieddate;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class speaker__c extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    date lastactivitydate;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    id session__c;  session__c session__r;
    id account__c;  account account__r;
    string best_practice_story_brief_description__c;
    string biography__c;
    boolean gift__c;
    string hero_slide__c;
    id internal_handler__c;  user internal_handler__r;
    string link_to_event__c;
    string partner__c;
    boolean publish_to_web__c;
    string release_form__c;
    string speak_hierarchy__c;
    id speaker_contact__c;  contact speaker_contact__r;
    string speaker_details__c;
    string speaker_display_name__c;
    string speaker_image__c;
    decimal speaker_rating__c;
    string speaker_status__c;
    string speaker_type__c;
    string topic_expertise__c;
    id track__c;  track__c track__r;
            List< activityhistory >  activityhistories;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _6__;

            List< contentdocumentlink >  _7__;

            List< contentversion >  _8__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< event >  events;

            List< feedcomment >  _13__;

            List< feeditem >  _14__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< openactivity >  openactivities;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< speaker__feed >  feeds;

            List< speaker__history >  histories;

            List< task >  tasks;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class speaker__feed extends sobject { 
    id id;
    id parentid;  speaker__c parent;
    string type;
    id createdbyid;  user createdby;
    datetime createddate;
    boolean isdeleted;
    datetime lastmodifieddate;
    datetime systemmodstamp;
    integer commentcount;
    integer likecount;
    string title;
    string body;
    string linkurl;
    boolean isrichtext;
    id relatedrecordid;
    id insertedbyid;  user insertedby;
            List< feedattachment >  feedattachments;

            List< feedcomment >  feedcomments;

            List< feedlike >  _3__;

            List< feedlike >  feedlikes;

            List< feedpollchoice >  _5__;

            List< feedpollvote >  _6__;

            List< feedtrackedchange >  feedtrackedchanges;

}
//////////////////////////////////////////

@namespace('schema')
class speaker__history extends sobject { 
    id id;
    boolean isdeleted;
    id parentid;  speaker__c parent;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class staticresource extends sobject { 
    id id;
    string namespaceprefix;
    string name;
    string contenttype;
    integer bodylength;
    blob body;
    string description;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string cachecontrol;
            List< externaldatasource >  _1__;

            List< externaldatasource >  _2__;

}
//////////////////////////////////////////

@namespace('schema')
class stop_word__c extends sobject { 
    id id;
    id ownerid;  user owner;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    boolean custom_word__c;
            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _5__;

            List< contentdocumentlink >  _6__;

            List< contentversion >  _7__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _11__;

            List< feeditem >  _12__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class streamingchannel extends sobject { 
    id id;
    id ownerid;  user owner;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    boolean isdynamic;
    string description;
            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

}
//////////////////////////////////////////

@namespace('schema')
class streamingchannelshare extends sobject { 
    id id;
    id parentid;  streamingchannel parent;
    id userorgroupid;  user userorgroup;
    string accesslevel;
    string rowcause;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    boolean isdeleted;
}
//////////////////////////////////////////

@idiomatic
@namespace('schema')
class survey__c extends sobject { 
    id id;
    id ownerid;  user owner;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    boolean hide_survey_name__c;
    string submit_response__c;
    string survey_container_css__c;
    string survey_header__c;
    string thank_you_text__c;
    string url__c;
    string thankyoulink__c;
    string thankyoutext__c;
            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _5__;

            List< contentdocumentlink >  _6__;

            List< contentversion >  _7__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _11__;

            List< feeditem >  _12__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< surveytaker__c >  surveytakers1__r;

            List< survey_question__c >  surveyquestions__r;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class survey_question__c extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id survey__c;  survey__c survey__r;
    string choices__c;
    decimal ordernumber__c;
    string question__c;
    boolean required__c;
    string type__c;
    decimal total_responses__c;
            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _5__;

            List< contentdocumentlink >  _6__;

            List< contentversion >  _7__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _11__;

            List< feeditem >  _12__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< surveyquestionresponse__c >  survey_question_answers__r;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class surveyquestionresponse__c extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id survey_question__c;  survey_question__c survey_question__r;
    id surveytaker__c;  surveytaker__c surveytaker__r;
    string response__c;
    decimal of_time_question_was_responded_to__c;
            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _5__;

            List< contentdocumentlink >  _6__;

            List< contentversion >  _7__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _11__;

            List< feeditem >  _12__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class surveytaker__c extends sobject { 
    id id;
    id ownerid;  user owner;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    id case__c;  case case__r;
    id contact__c;  contact contact__r;
    id survey__c;  survey__c survey__r;
    string taken__c;
    id user__c;  user user__r;
            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _5__;

            List< contentdocumentlink >  _6__;

            List< contentversion >  _7__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _11__;

            List< feeditem >  _12__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< surveyquestionresponse__c >  survey_question_answers__r;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class task extends sobject { 
    id id;
    id whoid;  lead who;
    id whatid;  venue__c what;
    string subject;
    date activitydate;
    string status;
    string priority;
    boolean ishighpriority;
    id ownerid;  user owner;
    string description;
    boolean isdeleted;
    id accountid;  account account;
    boolean isclosed;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    boolean isarchived;
    integer calldurationinseconds;
    string calltype;
    string calldisposition;
    string callobject;
    datetime reminderdatetime;
    boolean isreminderset;
    id recurrenceactivityid;
    boolean isrecurrence;
    date recurrencestartdateonly;
    date recurrenceenddateonly;
    string recurrencetimezonesidkey;
    string recurrencetype;
    integer recurrenceinterval;
    integer recurrencedayofweekmask;
    integer recurrencedayofmonth;
    string recurrenceinstance;
    string recurrencemonthofyear;
    string recurrenceregeneratedtype;
    string tasksubtype;
    string tasktemplateid__c;
            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< combinedattachment >  combinedattachments;

            List< contentdocumentlink >  _4__;

            List< contentversion >  _5__;

            List< emailmessage >  _6__;

            List< emailstatus >  _7__;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _9__;

            List< feeditem >  _10__;

            List< task >  recurringtasks;

            List< taskfeed >  feeds;

            List< topicassignment >  topicassignments;

	// fields added from appendix Resolution Library
    string type;

}
//////////////////////////////////////////

@namespace('schema')
class taskfeed extends sobject { 
    id id;
    id parentid;  task parent;
    string type;
    id createdbyid;  user createdby;
    datetime createddate;
    boolean isdeleted;
    datetime lastmodifieddate;
    datetime systemmodstamp;
    integer commentcount;
    integer likecount;
    string title;
    string body;
    string linkurl;
    boolean isrichtext;
    id relatedrecordid;
    id insertedbyid;  user insertedby;
            List< feedattachment >  feedattachments;

            List< feedcomment >  feedcomments;

            List< feedlike >  _3__;

            List< feedlike >  feedlikes;

            List< feedpollchoice >  _5__;

            List< feedpollvote >  _6__;

            List< feedtrackedchange >  feedtrackedchanges;

}
//////////////////////////////////////////

@namespace('schema')
class taskpriority extends sobject { 
    id id;
    string masterlabel;
    string apiname;
    integer sortorder;
    boolean isdefault;
    boolean ishighpriority;
    id createdbyid;  user createdby;
    datetime createddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime lastmodifieddate;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class taskstatus extends sobject { 
    id id;
    string masterlabel;
    string apiname;
    integer sortorder;
    boolean isdefault;
    boolean isclosed;
    id createdbyid;  user createdby;
    datetime createddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime lastmodifieddate;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class tenantsecret extends sobject { 
    id id;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string description;
    blob secretvalue;
    integer version;
    string status;
}
//////////////////////////////////////////

@namespace('schema')
class tenantusageentitlement extends sobject { 
    id id;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string resourcegroupkey;
    string setting;
    date startdate;
    date enddate;
    decimal currentamountallowed;
    string frequency;
    boolean ispersistentresource;
    boolean hasrollover;
    double overagegrace;
    decimal amountused;
    datetime usagedate;
    string masterlabel;
}
//////////////////////////////////////////

@namespace('schema')
class test__c extends sobject { 
    id id;
    id ownerid;  user owner;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    boolean checkbox__c;
    decimal currency__c;
    datetime datetime__c;
    date date__c;
    string email__c;
    decimal number__c;
    double percent__c;
    string phone__c;
    string picklistmulti__c;
    string picklist__c;
    string text_area_long__c;
    string text_area__c;
    string text__c;
    string url__c;
    id web_form__c;  web_form__c web_form__r;
            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _5__;

            List< contentdocumentlink >  _6__;

            List< contentversion >  _7__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _11__;

            List< feeditem >  _12__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class testsuitemembership extends sobject { 
    id id;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id apextestsuiteid;  apextestsuite apextestsuite;
    id apexclassid;  apexclass apexclass;
}
//////////////////////////////////////////

@namespace('schema')
class thirdpartyaccountlink extends sobject { 
    id id;
    string thirdpartyaccountlinkkey;
    id userid;  user user;
    id ssoproviderid;  authprovider ssoprovider;
    string handle;
    string remoteidentifier;
    string provider;
    string ssoprovidername;
    boolean isnotssousable;
}
//////////////////////////////////////////

@namespace('schema')
class todaygoal extends sobject { 
    id id;
    id ownerid;  user owner;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    decimal value;
    id userid;  user user;
}
//////////////////////////////////////////

@namespace('schema')
class todaygoalshare extends sobject { 
    id id;
    id parentid;  todaygoal parent;
    id userorgroupid;  user userorgroup;
    string accesslevel;
    string rowcause;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    boolean isdeleted;
}
//////////////////////////////////////////

@namespace('schema')
class topic extends sobject { 
    id id;
    string name;
    string description;
    datetime createddate;
    id createdbyid;  user createdby;
    integer talkingabout;
    datetime systemmodstamp;
            List< contentdocumentlink >  _1__;

            List< contentversion >  _2__;

            List< custombrand >  custombrands;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _5__;

            List< feeditem >  _6__;

            List< knowledgeableuser >  _7__;

            List< topicassignment >  _8__;

            List< topicfeed >  feeds;

}
//////////////////////////////////////////

@namespace('schema')
class topicassignment extends sobject { 
    id id;
    id topicid;  topic topic;
    id entityid;  myobj__c entity;
    string entitykeyprefix;
    string entitytype;
    datetime createddate;
    id createdbyid;  user createdby;
    boolean isdeleted;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class topicfeed extends sobject { 
    id id;
    id parentid;  topic parent;
    string type;
    id createdbyid;  user createdby;
    datetime createddate;
    boolean isdeleted;
    datetime lastmodifieddate;
    datetime systemmodstamp;
    integer commentcount;
    integer likecount;
    string title;
    string body;
    string linkurl;
    boolean isrichtext;
    id relatedrecordid;
    id insertedbyid;  user insertedby;
            List< feedattachment >  feedattachments;

            List< feedcomment >  feedcomments;

            List< feedlike >  _3__;

            List< feedlike >  feedlikes;

            List< feedpollchoice >  _5__;

            List< feedpollvote >  _6__;

            List< feedtrackedchange >  feedtrackedchanges;

}
//////////////////////////////////////////

@namespace('schema')
class track__c extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    date lastactivitydate;
    id event__c;  event__c event__r;
    string key_takeaways__c;
    boolean publish_to_web__c;
    string track_category__c;
    string track_description__c;
    string track_status__c;
    string track_website__c;
            List< activityhistory >  activityhistories;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _6__;

            List< contentdocumentlink >  _7__;

            List< contentversion >  _8__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< event >  events;

            List< event_registration__c >  registrations__r;

            List< feedcomment >  _14__;

            List< feeditem >  _15__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< openactivity >  openactivities;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< session__c >  sessions__r;

            List< speaker__c >  speakers__r;

            List< task >  tasks;

            List< topicassignment >  topicassignments;

            List< track__history >  histories;

}
//////////////////////////////////////////

@namespace('schema')
class track__history extends sobject { 
    id id;
    boolean isdeleted;
    id parentid;  track__c parent;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class undecidedeventrelation extends sobject { 
    id id;
    id relationid;  user relation;
    id eventid;  event event;
    datetime respondeddate;
    string response;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    boolean isdeleted;
    string type;
}
//////////////////////////////////////////

@namespace('schema')
class user extends sobject { 
    id id;
    string username;
    string lastname;
    string firstname;
    string name;
    string companyname;
    string division;
    string department;
    string title;
    string street;
    string city;
    string state;
    string postalcode;
    string country;
    decimal latitude;
    decimal longitude;
    string geocodeaccuracy;
    address address;
    string email;
    boolean emailpreferencesautobcc;
    boolean emailpreferencesautobccstayintouch;
    boolean emailpreferencesstayintouchreminder;
    string senderemail;
    string sendername;
    string signature;
    string stayintouchsubject;
    string stayintouchsignature;
    string stayintouchnote;
    string phone;
    string fax;
    string mobilephone;
    string alias;
    string communitynickname;
    string badgetext;
    boolean isactive;
    string timezonesidkey;
    id userroleid;  userrole userrole;
    string localesidkey;
    boolean receivesinfoemails;
    boolean receivesadmininfoemails;
    string emailencodingkey;
    id profileid;  profile profile;
    string usertype;
    string languagelocalekey;
    string employeenumber;
    id delegatedapproverid;
    id managerid;  user manager;
    datetime lastlogindate;
    datetime lastpasswordchangedate;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    datetime offlinetrialexpirationdate;
    datetime offlinepdatrialexpirationdate;
    boolean userpermissionsmarketinguser;
    boolean userpermissionsofflineuser;
    boolean userpermissionscallcenterautologin;
    boolean userpermissionsmobileuser;
    boolean userpermissionssfcontentuser;
    boolean userpermissionsknowledgeuser;
    boolean userpermissionsinteractionuser;
    boolean userpermissionssupportuser;
    boolean userpermissionsjigsawprospectinguser;
    boolean userpermissionssiteforcecontributoruser;
    boolean userpermissionssiteforcepublisheruser;
    boolean userpermissionschatteranswersuser;
    boolean userpermissionsworkdotcomuserfeature;
    boolean forecastenabled;
    boolean userpreferencesactivityreminderspopup;
    boolean userpreferenceseventreminderscheckboxdefault;
    boolean userpreferencestaskreminderscheckboxdefault;
    boolean userpreferencesremindersoundoff;
    boolean userpreferencesdisableallfeedsemail;
    boolean userpreferencesdisablefollowersemail;
    boolean userpreferencesdisableprofilepostemail;
    boolean userpreferencesdisablechangecommentemail;
    boolean userpreferencesdisablelatercommentemail;
    boolean userpreferencesdisprofpostcommentemail;
    boolean userpreferencescontentnoemail;
    boolean userpreferencescontentemailasandwhen;
    boolean userpreferencesapexpagesdevelopermode;
    boolean userpreferenceshidecsngetchattermobiletask;
    boolean userpreferencesdisablementionspostemail;
    boolean userpreferencesdismentionscommentemail;
    boolean userpreferenceshidecsndesktoptask;
    boolean userpreferenceshidechatteronboardingsplash;
    boolean userpreferenceshidesecondchatteronboardingsplash;
    boolean userpreferencesdiscommentafterlikeemail;
    boolean userpreferencesdisablelikeemail;
    boolean userpreferencessortfeedbycomment;
    boolean userpreferencesdisablemessageemail;
    boolean userpreferencesjigsawlistuser;
    boolean userpreferencesdisablebookmarkemail;
    boolean userpreferencesdisablesharepostemail;
    boolean userpreferencesenableautosubforfeeds;
    boolean userpreferencesdisablefilesharenotificationsforapi;
    boolean userpreferencesshowtitletoexternalusers;
    boolean userpreferencesshowmanagertoexternalusers;
    boolean userpreferencesshowemailtoexternalusers;
    boolean userpreferencesshowworkphonetoexternalusers;
    boolean userpreferencesshowmobilephonetoexternalusers;
    boolean userpreferencesshowfaxtoexternalusers;
    boolean userpreferencesshowstreetaddresstoexternalusers;
    boolean userpreferencesshowcitytoexternalusers;
    boolean userpreferencesshowstatetoexternalusers;
    boolean userpreferencesshowpostalcodetoexternalusers;
    boolean userpreferencesshowcountrytoexternalusers;
    boolean userpreferencesshowprofilepictoguestusers;
    boolean userpreferencesshowtitletoguestusers;
    boolean userpreferencesshowcitytoguestusers;
    boolean userpreferencesshowstatetoguestusers;
    boolean userpreferencesshowpostalcodetoguestusers;
    boolean userpreferencesshowcountrytoguestusers;
    boolean userpreferencesdisablefeedbackemail;
    boolean userpreferencesdisableworkemail;
    boolean userpreferenceshides1browserui;
    boolean userpreferencesdisableendorsementemail;
    boolean userpreferencespathassistantcollapsed;
    boolean userpreferencescachediagnostics;
    boolean userpreferencesshowemailtoguestusers;
    boolean userpreferencesshowmanagertoguestusers;
    boolean userpreferencesshowworkphonetoguestusers;
    boolean userpreferencesshowmobilephonetoguestusers;
    boolean userpreferencesshowfaxtoguestusers;
    boolean userpreferencesshowstreetaddresstoguestusers;
    boolean userpreferenceslightningexperiencepreferred;
    boolean userpreferencespreviewlightning;
    boolean userpreferenceshideenduseronboardingassistantmodal;
    boolean userpreferenceshidelightningmigrationmodal;
    boolean userpreferenceshidesfxwelcomemat;
    boolean userpreferenceshidebiggerphotocallout;
    id contactid;  contact contact;
    id accountid;  account account;
    id callcenterid;
    string extension;
    string federationidentifier;
    string aboutme;
    string fullphotourl;
    string smallphotourl;
    string mediumphotourl;
    string digestfrequency;
    string defaultgroupnotificationfrequency;
    integer jigsawimportlimitoverride;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    string bannerphotourl;
    boolean isprofilephotoactive;
            List< apttasktemplate__c >  _1__;

            List< apttasktemplate__c >  _2__;

            List< apttasktemplate__c >  r00nr0000000vd65mac__r;

            List< aptasktemplate__c >  _4__;

            List< aptasktemplate__c >  _5__;

            List< aptasktemplate__c >  r00nr0000000vd7nmas__r;

            List< acceptedeventrelation >  _7__;

            List< acceptedeventrelation >  _8__;

            List< acceptedeventrelation >  acceptedeventrelations;

            List< account >  _10__;

            List< account >  _11__;

            List< account >  _12__;

            List< accountcleaninfo >  _13__;

            List< accountcleaninfo >  _14__;

            List< accountcleaninfo >  accountcleaninforeviewers;

            List< accountcontactrole >  _16__;

            List< accountcontactrole >  _17__;

            List< accountfeed >  _18__;

            List< accountfeed >  _19__;

            List< accounthistory >  _20__;

            List< accountpartner >  _21__;

            List< accountpartner >  _22__;

            List< accountshare >  _23__;

            List< accountshare >  _24__;

            List< actionlinkgrouptemplate >  _25__;

            List< actionlinkgrouptemplate >  _26__;

            List< actionlinktemplate >  _27__;

            List< actionlinktemplate >  _28__;

            List< actionplantemplate__c >  _29__;

            List< actionplantemplate__c >  _30__;

            List< actionplantemplate__c >  _31__;

            List< actionplan__c >  _32__;

            List< actionplan__c >  _33__;

            List< actionplan__c >  _34__;

            List< activityhistory >  _35__;

            List< activityhistory >  _36__;

            List< activityhistory >  _37__;

            List< additionalnumber >  _38__;

            List< additionalnumber >  _39__;

            List< announcement >  _40__;

            List< announcement >  _41__;

            List< apexclass >  _42__;

            List< apexclass >  _43__;

            List< apexcomponent >  _44__;

            List< apexcomponent >  _45__;

            List< apexemailnotification >  _46__;

            List< apexemailnotification >  _47__;

            List< apexemailnotification >  _48__;

            List< apexlog >  _49__;

            List< apexpage >  _50__;

            List< apexpage >  _51__;

            List< apextestqueueitem >  _52__;

            List< apextestresultlimits >  _53__;

            List< apextestresultlimits >  _54__;

            List< apextestrunresult >  _55__;

            List< apextestrunresult >  _56__;

            List< apextestrunresult >  _57__;

            List< apextestsuite >  _58__;

            List< apextestsuite >  _59__;

            List< apextrigger >  _60__;

            List< apextrigger >  _61__;

            List< appmenuitem >  _62__;

            List< appmenuitem >  _63__;

            List< asset >  _64__;

            List< asset >  _65__;

            List< asset >  _66__;

            List< assetfeed >  _67__;

            List< assetfeed >  _68__;

            List< assethistory >  _69__;

            List< assetshare >  _70__;

            List< assetshare >  _71__;

            List< assignmentrule >  _72__;

            List< assignmentrule >  _73__;

            List< asyncapexjob >  _74__;

            List< attachedcontentdocument >  _75__;

            List< attachedcontentdocument >  _76__;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  _78__;

            List< attachment >  _79__;

            List< attachment >  _80__;

            List< auradefinition >  _81__;

            List< auradefinition >  _82__;

            List< auradefinitionbundle >  _83__;

            List< auradefinitionbundle >  _84__;

            List< authconfig >  _85__;

            List< authconfig >  _86__;

            List< authconfigproviders >  _87__;

            List< authconfigproviders >  _88__;

            List< authprovider >  _89__;

            List< authsession >  _90__;

            List< backgroundoperation >  _91__;

            List< backgroundoperation >  _92__;

            List< brandtemplate >  _93__;

            List< brandtemplate >  _94__;

            List< budget_line__history >  _95__;

            List< budget_line__c >  budget_lines__r;

            List< budget_line__c >  _97__;

            List< budget_line__c >  _98__;

            List< budgets__history >  _99__;

            List< budgets__c >  _100__;

            List< budgets__c >  _101__;

            List< budgets__c >  _102__;

            List< businesshours >  _103__;

            List< businesshours >  _104__;

            List< businessprocess >  _105__;

            List< businessprocess >  _106__;

            List< cmsfolder__c >  _107__;

            List< cmsfolder__c >  _108__;

            List< cmsfolder__c >  _109__;

            List< callcenter >  _110__;

            List< callcenter >  _111__;

            List< campaign >  _112__;

            List< campaign >  _113__;

            List< campaign >  _114__;

            List< campaignfeed >  _115__;

            List< campaignfeed >  _116__;

            List< campaignmember >  _117__;

            List< campaignmember >  _118__;

            List< campaignmember >  _119__;

            List< campaignmemberstatus >  _120__;

            List< campaignmemberstatus >  _121__;

            List< campaignshare >  _122__;

            List< campaignshare >  _123__;

            List< case >  _124__;

            List< case >  _125__;

            List< case >  _126__;

            List< casecomment >  _127__;

            List< casecomment >  _128__;

            List< casecontactrole >  _129__;

            List< casecontactrole >  _130__;

            List< casefeed >  _131__;

            List< casefeed >  _132__;

            List< casehistory >  _133__;

            List< caseshare >  _134__;

            List< caseshare >  _135__;

            List< casesolution >  _136__;

            List< casestatus >  _137__;

            List< casestatus >  _138__;

            List< caseteammember >  _139__;

            List< caseteammember >  _140__;

            List< caseteammember >  _141__;

            List< caseteamrole >  _142__;

            List< caseteamrole >  _143__;

            List< caseteamtemplate >  _144__;

            List< caseteamtemplate >  _145__;

            List< caseteamtemplatemember >  _146__;

            List< caseteamtemplatemember >  _147__;

            List< caseteamtemplatemember >  _148__;

            List< caseteamtemplaterecord >  _149__;

            List< case_swarm_rule__history >  _150__;

            List< case_swarm_rule__c >  _151__;

            List< case_swarm_rule__c >  _152__;

            List< case_swarm_rule__c >  _153__;

            List< case_swarm_rule__c >  case_swarm_rules__r;

            List< catalog_line_item__history >  _155__;

            List< catalog_line_item__c >  _156__;

            List< catalog_line_item__c >  _157__;

            List< catalog_order__history >  _158__;

            List< catalog_order__c >  _159__;

            List< catalog_order__c >  _160__;

            List< catalog_order__c >  _161__;

            List< catalog_template__c >  _162__;

            List< catalog_template__c >  _163__;

            List< catalog_template__c >  _164__;

            List< categorydata >  _165__;

            List< categorydata >  _166__;

            List< categorynode >  _167__;

            List< categorynode >  _168__;

            List< chatteractivity >  _169__;

            List< clientbrowser >  _170__;

            List< collaborationgroup >  _171__;

            List< collaborationgroup >  _172__;

            List< collaborationgroup >  _173__;

            List< collaborationgroupfeed >  _174__;

            List< collaborationgroupfeed >  _175__;

            List< collaborationgroupmember >  _176__;

            List< collaborationgroupmember >  _177__;

            List< collaborationgroupmember >  groupmemberships;

            List< collaborationgroupmemberrequest >  _179__;

            List< collaborationgroupmemberrequest >  _180__;

            List< collaborationgroupmemberrequest >  groupmembershiprequests;

            List< collaborationgrouprecord >  _182__;

            List< collaborationgrouprecord >  _183__;

            List< collaborationinvitation >  _184__;

            List< collaborationinvitation >  _185__;

            List< collaborationinvitation >  _186__;

            List< collaborationinvitation >  _187__;

            List< combinedattachment >  _188__;

            List< combinedattachment >  _189__;

            List< combinedattachment >  combinedattachments;

            List< community >  _191__;

            List< community >  _192__;

            List< connectedapplication >  _193__;

            List< connectedapplication >  _194__;

            List< contact >  _195__;

            List< contact >  _196__;

            List< contact >  _197__;

            List< contactcleaninfo >  _198__;

            List< contactcleaninfo >  _199__;

            List< contactcleaninfo >  contactcleaninforeviewers;

            List< contactfeed >  _201__;

            List< contactfeed >  _202__;

            List< contacthistory >  _203__;

            List< contactshare >  _204__;

            List< contactshare >  _205__;

            List< contentblockitem__c >  _206__;

            List< contentblockitem__c >  _207__;

            List< contentblockitem__c >  _208__;

            List< contentdistribution >  _209__;

            List< contentdistribution >  _210__;

            List< contentdistribution >  _211__;

            List< contentdistributionview >  _212__;

            List< contentdocument >  _213__;

            List< contentdocument >  _214__;

            List< contentdocument >  _215__;

            List< contentdocument >  _216__;

            List< contentdocumentfeed >  _217__;

            List< contentdocumentfeed >  _218__;

            List< contentdocumenthistory >  _219__;

            List< contentdocumentlink >  _220__;

            List< contentfolder >  _221__;

            List< contentfolder >  _222__;

            List< contentfolderitem >  _223__;

            List< contentfolderitem >  _224__;

            List< contentfoldermember >  _225__;

            List< contentfoldermember >  _226__;

            List< contentversion >  _227__;

            List< contentversion >  _228__;

            List< contentversion >  _229__;

            List< contentversion >  _230__;

            List< contentversion >  _231__;

            List< contentversionhistory >  _232__;

            List< contentworkspace >  _233__;

            List< contentworkspace >  _234__;

            List< contract >  _235__;

            List< contract >  contractssigned;

            List< contract >  _237__;

            List< contract >  _238__;

            List< contract >  _239__;

            List< contractcontactrole >  _240__;

            List< contractcontactrole >  _241__;

            List< contractfeed >  _242__;

            List< contractfeed >  _243__;

            List< contracthistory >  _244__;

            List< contractstatus >  _245__;

            List< contractstatus >  _246__;

            List< corswhitelistentry >  _247__;

            List< corswhitelistentry >  _248__;

            List< crontrigger >  _249__;

            List< crontrigger >  _250__;

            List< crontrigger >  _251__;

            List< custombrand >  _252__;

            List< custombrand >  _253__;

            List< custombrandasset >  _254__;

            List< custombrandasset >  _255__;

            List< custompermission >  _256__;

            List< custompermission >  _257__;

            List< custompermissiondependency >  _258__;

            List< custompermissiondependency >  _259__;

            List< dandbcompany >  _260__;

            List< dandbcompany >  _261__;

            List< dashboard >  _262__;

            List< dashboard >  _263__;

            List< dashboard >  _264__;

            List< dashboard >  _265__;

            List< dashboardcomponentfeed >  _266__;

            List< dashboardcomponentfeed >  _267__;

            List< dashboardfeed >  _268__;

            List< dashboardfeed >  _269__;

            List< datastatistics >  _270__;

            List< datacloudownedentity >  _271__;

            List< datacloudownedentity >  _272__;

            List< datacloudownedentity >  _273__;

            List< datacloudpurchaseusage >  _274__;

            List< datacloudpurchaseusage >  _275__;

            List< datacloudpurchaseusage >  _276__;

            List< declinedeventrelation >  _277__;

            List< declinedeventrelation >  _278__;

            List< declinedeventrelation >  declinedeventrelations;

            List< department__history >  _280__;

            List< department__c >  _281__;

            List< department__c >  _282__;

            List< department__c >  _283__;

            List< document >  _284__;

            List< document >  _285__;

            List< document >  _286__;

            List< document >  _287__;

            List< documentattachmentmap >  _288__;

            List< domain >  _289__;

            List< domain >  _290__;

            List< domainsite >  _291__;

            List< domainsite >  _292__;

            List< duplicaterecorditem >  _293__;

            List< duplicaterecorditem >  _294__;

            List< duplicaterecordset >  _295__;

            List< duplicaterecordset >  _296__;

            List< duplicaterule >  _297__;

            List< duplicaterule >  _298__;

            List< emaildomainkey >  _299__;

            List< emaildomainkey >  _300__;

            List< emailmessage >  _301__;

            List< emailmessage >  _302__;

            List< emailmessagerelation >  _303__;

            List< emailmessagerelation >  emailmessagerelations;

            List< emailservicesaddress >  _305__;

            List< emailservicesaddress >  _306__;

            List< emailservicesaddress >  _307__;

            List< emailservicesfunction >  _308__;

            List< emailservicesfunction >  _309__;

            List< emailstatus >  _310__;

            List< emailstatus >  _311__;

            List< emailtemplate >  _312__;

            List< emailtemplate >  _313__;

            List< emailtemplate >  _314__;

            List< emailtemplate >  _315__;

            List< employee_directory_configuration__c >  _316__;

            List< employee_directory_configuration__c >  _317__;

            List< employee_directory_configuration__c >  _318__;

            List< entitydefinition >  _319__;

            List< entitysubscription >  _320__;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< entitysubscription >  feedsubscriptions;

            List< event >  _323__;

            List< event >  _324__;

            List< event >  _325__;

            List< eventfeed >  _326__;

            List< eventfeed >  _327__;

            List< eventlogfile >  _328__;

            List< eventlogfile >  _329__;

            List< eventrelation >  _330__;

            List< eventrelation >  _331__;

            List< eventrelation >  eventrelations;

            List< event_expense__c >  _333__;

            List< event_expense__c >  _334__;

            List< event_mdf__c >  _335__;

            List< event_mdf__c >  _336__;

            List< event_registration__c >  _337__;

            List< event_registration__c >  _338__;

            List< event__feed >  _339__;

            List< event__feed >  _340__;

            List< event__history >  _341__;

            List< event__c >  _342__;

            List< event__c >  events__r;

            List< event__c >  _344__;

            List< event__c >  _345__;

            List< expense__c >  _346__;

            List< expense__c >  _347__;

            List< expense__c >  _348__;

            List< externaldatasource >  _349__;

            List< externaldatasource >  _350__;

            List< externaldatauserauth >  _351__;

            List< externaldatauserauth >  _352__;

            List< externaldatauserauth >  externaldatauserauths;

            List< feedcomment >  _354__;

            List< feedcomment >  _355__;

            List< feedcomment >  _356__;

            List< feedcomment >  _357__;

            List< feeditem >  _358__;

            List< feeditem >  _359__;

            List< feeditem >  _360__;

            List< feeditem >  _361__;

            List< feedlike >  _362__;

            List< feedlike >  _363__;

            List< feedpollchoice >  _364__;

            List< feedpollvote >  _365__;

            List< feedrevision >  _366__;

            List< feed_post_swarm_rule__c >  _367__;

            List< feed_post_swarm_rule__c >  _368__;

            List< feed_post_swarm_rule__c >  _369__;

            List< feed_post_swarm_rule__c >  feed_post_swarm_rules__r;

            List< fielddefinition >  _371__;

            List< flowinterview >  _372__;

            List< flowinterview >  _373__;

            List< flowinterview >  _374__;

            List< flowinterviewshare >  _375__;

            List< flowinterviewshare >  _376__;

            List< folder >  _377__;

            List< folder >  _378__;

            List< folderedcontentdocument >  _379__;

            List< folderedcontentdocument >  _380__;

            List< forecastshare >  _381__;

            List< forecastshare >  _382__;

            List< form_field__c >  _383__;

            List< form_field__c >  _384__;

            List< grantedbylicense >  _385__;

            List< grantedbylicense >  _386__;

            List< group >  _387__;

            List< group >  _388__;

            List< group >  _389__;

            List< group >  _390__;

            List< groupmember >  _391__;

            List< holiday >  _392__;

            List< holiday >  _393__;

            List< idea >  _394__;

            List< idea >  _395__;

            List< ideacomment >  _396__;

            List< incrementals__history >  _397__;

            List< incrementals__c >  _398__;

            List< incrementals__c >  _399__;

            List< installedmobileapp >  _400__;

            List< installedmobileapp >  _401__;

            List< installedmobileapp >  installedmobileapps;

            List< knowledgeableuser >  _403__;

            List< lead >  _404__;

            List< lead >  _405__;

            List< lead >  _406__;

            List< leadcleaninfo >  _407__;

            List< leadcleaninfo >  _408__;

            List< leadcleaninfo >  leadcleaninforeviewers;

            List< leadfeed >  _410__;

            List< leadfeed >  _411__;

            List< leadhistory >  _412__;

            List< leadshare >  _413__;

            List< leadshare >  _414__;

            List< leadstatus >  _415__;

            List< leadstatus >  _416__;

            List< lead_swarm_rule__history >  _417__;

            List< lead_swarm_rule__c >  _418__;

            List< lead_swarm_rule__c >  _419__;

            List< lead_swarm_rule__c >  _420__;

            List< lead_swarm_rule__c >  lead_swarm_rules__r;

            List< listview >  _422__;

            List< listview >  _423__;

            List< listviewchart >  _424__;

            List< listviewchart >  _425__;

            List< listviewchart >  _426__;

            List< logingeo >  _427__;

            List< logingeo >  _428__;

            List< loginhistory >  _429__;

            List< loginip >  _430__;

            List< macro >  _431__;

            List< macro >  _432__;

            List< macro >  _433__;

            List< macrohistory >  _434__;

            List< macroinstruction >  _435__;

            List< macroinstruction >  _436__;

            List< macroshare >  _437__;

            List< macroshare >  _438__;

            List< mailmergetemplate >  _439__;

            List< mailmergetemplate >  _440__;

            List< matchingrule >  _441__;

            List< matchingrule >  _442__;

            List< matchingruleitem >  _443__;

            List< matchingruleitem >  _444__;

            List< namedcredential >  _445__;

            List< namedcredential >  _446__;

            List< note >  _447__;

            List< note >  _448__;

            List< note >  _449__;

            List< noteandattachment >  _450__;

            List< noteandattachment >  _451__;

            List< noteandattachment >  _452__;

            List< oauthtoken >  _453__;

            List< objectpermissions >  _454__;

            List< objectpermissions >  _455__;

            List< openactivity >  _456__;

            List< openactivity >  _457__;

            List< openactivity >  _458__;

            List< opportunity >  _459__;

            List< opportunity >  _460__;

            List< opportunity >  _461__;

            List< opportunitycompetitor >  _462__;

            List< opportunitycompetitor >  _463__;

            List< opportunitycontactrole >  _464__;

            List< opportunitycontactrole >  _465__;

            List< opportunityfeed >  _466__;

            List< opportunityfeed >  _467__;

            List< opportunityfieldhistory >  _468__;

            List< opportunityhistory >  _469__;

            List< opportunitylineitem >  _470__;

            List< opportunitylineitem >  _471__;

            List< opportunitypartner >  _472__;

            List< opportunitypartner >  _473__;

            List< opportunityshare >  _474__;

            List< opportunityshare >  _475__;

            List< opportunitystage >  _476__;

            List< opportunitystage >  _477__;

            List< opportunity_swarm_rule__history >  _478__;

            List< opportunity_swarm_rule__c >  _479__;

            List< opportunity_swarm_rule__c >  _480__;

            List< opportunity_swarm_rule__c >  _481__;

            List< opportunity_swarm_rule__c >  opportunity_swarm_rules__r;

            List< order >  _483__;

            List< order >  _484__;

            List< order >  _485__;

            List< order >  _486__;

            List< order >  _487__;

            List< orderfeed >  _488__;

            List< orderfeed >  _489__;

            List< orderhistory >  _490__;

            List< orderitem >  _491__;

            List< orderitem >  _492__;

            List< orderitemfeed >  _493__;

            List< orderitemfeed >  _494__;

            List< orderitemhistory >  _495__;

            List< ordershare >  _496__;

            List< ordershare >  _497__;

            List< orgwideemailaddress >  _498__;

            List< orgwideemailaddress >  _499__;

            List< organization >  _500__;

            List< organization >  _501__;

            List< ownedcontentdocument >  _502__;

            List< ownedcontentdocument >  _503__;

            List< ownedcontentdocument >  ownedcontentdocuments;

            List< pr_change__history >  _505__;

            List< pr_change__c >  _506__;

            List< pr_change__c >  _507__;

            List< pr_change__c >  _508__;

            List< pagetemplate__c >  _509__;

            List< pagetemplate__c >  _510__;

            List< pagetemplate__c >  _511__;

            List< pagetoitem__c >  _512__;

            List< pagetoitem__c >  _513__;

            List< page__c >  _514__;

            List< page__c >  _515__;

            List< page__c >  _516__;

            List< partner >  _517__;

            List< partner >  _518__;

            List< partnerrole >  _519__;

            List< partnerrole >  _520__;

            List< period__history >  _521__;

            List< period__c >  _522__;

            List< period__c >  _523__;

            List< period__c >  _524__;

            List< permissionset >  _525__;

            List< permissionset >  _526__;

            List< permissionsetassignment >  permissionsetassignments;

            List< permissionsetlicense >  _528__;

            List< permissionsetlicense >  _529__;

            List< permissionsetlicenseassign >  permissionsetlicenseassignments;

            List< permissionsetlicenseassign >  _531__;

            List< permissionsetlicenseassign >  _532__;

            List< platformaction >  _533__;

            List< platformcachepartition >  _534__;

            List< platformcachepartition >  _535__;

            List< platformcachepartitiontype >  _536__;

            List< platformcachepartitiontype >  _537__;

            List< pricebook2 >  _538__;

            List< pricebook2 >  _539__;

            List< pricebook2history >  _540__;

            List< pricebookentry >  _541__;

            List< pricebookentry >  _542__;

            List< processdefinition >  _543__;

            List< processdefinition >  _544__;

            List< processinstance >  _545__;

            List< processinstance >  _546__;

            List< processinstance >  _547__;

            List< processinstance >  _548__;

            List< processinstancehistory >  _549__;

            List< processinstancehistory >  _550__;

            List< processinstancehistory >  _551__;

            List< processinstancenode >  _552__;

            List< processinstancenode >  _553__;

            List< processinstancenode >  _554__;

            List< processinstancestep >  _555__;

            List< processinstancestep >  _556__;

            List< processinstancestep >  _557__;

            List< processinstanceworkitem >  _558__;

            List< processinstanceworkitem >  _559__;

            List< processinstanceworkitem >  _560__;

            List< product2 >  _561__;

            List< product2 >  _562__;

            List< product2feed >  _563__;

            List< product2feed >  _564__;

            List< product2history >  _565__;

            List< profile >  _566__;

            List< profile >  _567__;

            List< program_budget__history >  _568__;

            List< program_budget__c >  _569__;

            List< program_budget__c >  _570__;

            List< program_budget__c >  program_budgets__r;

            List< purchase_request__history >  _572__;

            List< purchase_request__c >  _573__;

            List< purchase_request__c >  _574__;

            List< purchase_request__c >  purchase_requests__r;

            List< purchase_request__c >  purchase_requests1__r;

            List< pushtopic >  _577__;

            List< pushtopic >  _578__;

            List< question__c >  _579__;

            List< question__c >  _580__;

            List< queuesobject >  _581__;

            List< rfp__history >  _582__;

            List< rfp__c >  _583__;

            List< rfp__c >  _584__;

            List< rfp__c >  _585__;

            List< reclaimed_transaction__history >  _586__;

            List< reclaimed_transaction__c >  _587__;

            List< reclaimed_transaction__c >  _588__;

            List< reclaimed_transaction__c >  _589__;

            List< reclaimed_transaction__c >  reclaimed_transactions__r;

            List< recordtype >  _591__;

            List< recordtype >  _592__;

            List< report >  _593__;

            List< report >  _594__;

            List< report >  _595__;

            List< reportfeed >  _596__;

            List< reportfeed >  _597__;

            List< response__history >  _598__;

            List< response__c >  _599__;

            List< response__c >  _600__;

            List< response__c >  _601__;

            List< room__history >  _602__;

            List< room__c >  _603__;

            List< room__c >  _604__;

            List< samlssoconfig >  _605__;

            List< samlssoconfig >  _606__;

            List< samlssoconfig >  _607__;

            List< scontrol >  _608__;

            List< scontrol >  _609__;

            List< searchlayout >  _610__;

            List< searchpromotionrule >  _611__;

            List< searchpromotionrule >  _612__;

            List< secureagent >  _613__;

            List< secureagent >  _614__;

            List< secureagent >  _615__;

            List< secureagentplugin >  _616__;

            List< secureagentplugin >  _617__;

            List< secureagentpluginproperty >  _618__;

            List< secureagentpluginproperty >  _619__;

            List< secureagentscluster >  _620__;

            List< secureagentscluster >  _621__;

            List< sessionpermsetactivation >  _622__;

            List< sessionpermsetactivation >  _623__;

            List< sessionpermsetactivation >  sessionpermsetactivations;

            List< session__feed >  _625__;

            List< session__feed >  _626__;

            List< session__history >  _627__;

            List< session__c >  _628__;

            List< session__c >  _629__;

            List< setupaudittrail >  _630__;

            List< site >  usersites;

            List< site >  _632__;

            List< site >  _633__;

            List< site >  _634__;

            List< sitefeed >  _635__;

            List< sitefeed >  _636__;

            List< sitehistory >  _637__;

            List< solution >  _638__;

            List< solution >  _639__;

            List< solution >  _640__;

            List< solutionfeed >  _641__;

            List< solutionfeed >  _642__;

            List< solutionhistory >  _643__;

            List< solutionstatus >  _644__;

            List< solutionstatus >  _645__;

            List< speaker__feed >  _646__;

            List< speaker__feed >  _647__;

            List< speaker__history >  _648__;

            List< speaker__c >  _649__;

            List< speaker__c >  speakers__r;

            List< speaker__c >  _651__;

            List< staticresource >  _652__;

            List< staticresource >  _653__;

            List< stop_word__c >  _654__;

            List< stop_word__c >  _655__;

            List< stop_word__c >  _656__;

            List< streamingchannel >  _657__;

            List< streamingchannel >  _658__;

            List< streamingchannel >  _659__;

            List< streamingchannelshare >  _660__;

            List< streamingchannelshare >  _661__;

            List< surveyquestionresponse__c >  _662__;

            List< surveyquestionresponse__c >  _663__;

            List< surveytaker__c >  _664__;

            List< surveytaker__c >  _665__;

            List< surveytaker__c >  _666__;

            List< surveytaker__c >  surveys_taken__r;

            List< survey_question__c >  _668__;

            List< survey_question__c >  _669__;

            List< survey__c >  _670__;

            List< survey__c >  _671__;

            List< survey__c >  _672__;

            List< task >  _673__;

            List< task >  _674__;

            List< task >  _675__;

            List< taskfeed >  _676__;

            List< taskfeed >  _677__;

            List< taskpriority >  _678__;

            List< taskpriority >  _679__;

            List< taskstatus >  _680__;

            List< taskstatus >  _681__;

            List< tenantsecret >  _682__;

            List< tenantsecret >  _683__;

            List< tenantusageentitlement >  _684__;

            List< tenantusageentitlement >  _685__;

            List< testsuitemembership >  _686__;

            List< testsuitemembership >  _687__;

            List< test__c >  _688__;

            List< test__c >  _689__;

            List< test__c >  _690__;

            List< thirdpartyaccountlink >  _691__;

            List< todaygoal >  _692__;

            List< todaygoal >  _693__;

            List< todaygoal >  _694__;

            List< todaygoal >  _695__;

            List< todaygoalshare >  _696__;

            List< todaygoalshare >  _697__;

            List< topic >  _698__;

            List< topicassignment >  _699__;

            List< topicfeed >  _700__;

            List< topicfeed >  _701__;

            List< track__history >  _702__;

            List< track__c >  _703__;

            List< track__c >  _704__;

            List< undecidedeventrelation >  _705__;

            List< undecidedeventrelation >  _706__;

            List< undecidedeventrelation >  undecidedeventrelations;

            List< user >  _708__;

            List< user >  delegatedusers;

            List< user >  _710__;

            List< user >  managedusers;

            List< userappmenucustomization >  _712__;

            List< userappmenucustomization >  _713__;

            List< userappmenucustomization >  _714__;

            List< userappmenucustomizationshare >  _715__;

            List< userappmenucustomizationshare >  _716__;

            List< userentityaccess >  userentityaccessrights;

            List< userfeed >  _718__;

            List< userfeed >  _719__;

            List< userfeed >  feeds;

            List< userfieldaccess >  userfieldaccessrights;

            List< userlistview >  _722__;

            List< userlistview >  _723__;

            List< userlistview >  _724__;

            List< userlistviewcriterion >  _725__;

            List< userlistviewcriterion >  _726__;

            List< userlogin >  _727__;

            List< userlogin >  _728__;

            List< userpackagelicense >  _729__;

            List< userpackagelicense >  _730__;

            List< userpackagelicense >  _731__;

            List< userpreference >  userpreferences;

            List< userprovaccount >  _733__;

            List< userprovaccount >  _734__;

            List< userprovaccount >  _735__;

            List< userprovaccountstaging >  _736__;

            List< userprovaccountstaging >  _737__;

            List< userprovaccountstaging >  _738__;

            List< userprovmocktarget >  _739__;

            List< userprovmocktarget >  _740__;

            List< userprovisioningconfig >  _741__;

            List< userprovisioningconfig >  _742__;

            List< userprovisioninglog >  _743__;

            List< userprovisioninglog >  _744__;

            List< userprovisioninglog >  _745__;

            List< userprovisioningrequest >  _746__;

            List< userprovisioningrequest >  _747__;

            List< userprovisioningrequest >  _748__;

            List< userprovisioningrequest >  _749__;

            List< userprovisioningrequest >  _750__;

            List< userprovisioningrequestshare >  _751__;

            List< userprovisioningrequestshare >  _752__;

            List< userrecordaccess >  _753__;

            List< userrole >  _754__;

            List< userrole >  _755__;

            List< userrole >  _756__;

            List< usershare >  _757__;

            List< usershare >  shares;

            List< usershare >  _759__;

            List< venue__feed >  _760__;

            List< venue__feed >  _761__;

            List< venue__history >  _762__;

            List< venue__c >  _763__;

            List< venue__c >  _764__;

            List< venue__c >  _765__;

            List< verificationhistory >  _766__;

            List< verificationhistory >  _767__;

            List< verificationhistory >  _768__;

            List< vote >  _769__;

            List< weblink >  _770__;

            List< weblink >  _771__;

            List< web_form__c >  _772__;

            List< web_form__c >  _773__;

            List< web_form__c >  _774__;

            List< leadscoring__leadscoringrule__history >  _775__;

            List< leadscoring__leadscoringrule__c >  _776__;

            List< leadscoring__leadscoringrule__c >  _777__;

            List< leadscoring__leadscoringrule__c >  _778__;

            List< myobj__c >  _779__;

            List< myobj__c >  _780__;

            List< myobj__c >  _781__;

}
//////////////////////////////////////////

@namespace('schema')
class userappmenucustomization extends sobject { 
    id id;
    id ownerid;  user owner;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id applicationid;  connectedapplication application;
    integer sortorder;
}
//////////////////////////////////////////

@namespace('schema')
class userappmenucustomizationshare extends sobject { 
    id id;
    id parentid;  userappmenucustomization parent;
    id userorgroupid;  user userorgroup;
    string accesslevel;
    string rowcause;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    boolean isdeleted;
}
//////////////////////////////////////////

@namespace('schema')
class userappmenuitem extends sobject { 
    id id;
    string appmenuitemid;
    id applicationid;
    string label;
    string description;
    string name;
    integer usersortorder;
    integer sortorder;
    string type;
    string logourl;
    string iconurl;
    string infourl;
    string starturl;
    string mobilestarturl;
    boolean isvisible;
    boolean isusingadminauthorization;
}
//////////////////////////////////////////

@namespace('schema')
class userentityaccess extends sobject { 
    id id;
    string durableid;
    id userid;  user user;
    boolean ismergeable;
    boolean isupdatable;
    boolean isactivateable;
    boolean isreadable;
    boolean iscreatable;
    boolean iseditable;
    boolean isdeletable;
    boolean isundeletable;
    boolean isflsupdatable;
    string entitydefinitionid;  entitydefinition entitydefinition;
            List< entitydefinition >  _1__;

}
//////////////////////////////////////////

@namespace('schema')
class userfeed extends sobject { 
    id id;
    id parentid;  user parent;
    string type;
    id createdbyid;  user createdby;
    datetime createddate;
    boolean isdeleted;
    datetime lastmodifieddate;
    datetime systemmodstamp;
    integer commentcount;
    integer likecount;
    string title;
    string body;
    string linkurl;
    boolean isrichtext;
    id relatedrecordid;
    id insertedbyid;  user insertedby;
            List< feedattachment >  feedattachments;

            List< feedcomment >  feedcomments;

            List< feedlike >  _3__;

            List< feedlike >  feedlikes;

            List< feedpollchoice >  _5__;

            List< feedpollvote >  _6__;

            List< feedtrackedchange >  feedtrackedchanges;

}
//////////////////////////////////////////

@namespace('schema')
class userfieldaccess extends sobject { 
    id id;
    string durableid;
    id userid;  user user;
    boolean isupdatable;
    boolean iscreatable;
    boolean isaccessible;
    string entitydefinitionid;  entitydefinition entitydefinition;
    string fielddefinitionid;  fielddefinition fielddefinition;
            List< fielddefinition >  _1__;

}
//////////////////////////////////////////

@namespace('schema')
class userlicense extends sobject { 
    id id;
    string licensedefinitionkey;
    string name;
    integer monthlyloginsused;
    integer monthlyloginsentitlement;
    datetime systemmodstamp;
            List< customobjectuserlicensemetrics >  _1__;

            List< permissionset >  _2__;

            List< profile >  _3__;

}
//////////////////////////////////////////

@namespace('schema')
class userlistview extends sobject { 
    id id;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id userid;  user user;
    id listviewid;  listview listview;
    string sobjecttype;
    string lastviewedchart;
            List< userlistviewcriterion >  _1__;

}
//////////////////////////////////////////

@namespace('schema')
class userlistviewcriterion extends sobject { 
    id id;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id userlistviewid;  userlistview userlistview;
    integer sortorder;
    string columnname;
    string operation;
    string value;
}
//////////////////////////////////////////

@namespace('schema')
class userlogin extends sobject { 
    id id;
    id userid;
    boolean isfrozen;
    boolean ispasswordlocked;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
}
//////////////////////////////////////////

@namespace('schema')
class userpackagelicense extends sobject { 
    id id;
    id packagelicenseid;  packagelicense packagelicense;
    id userid;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class userpreference extends sobject { 
    id id;
    id userid;
    string preference;
    string value;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class userprovaccount extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id salesforceuserid;  user salesforceuser;
    id connectedappid;  connectedapplication connectedapp;
    string externaluserid;
    string externalusername;
    string externalemail;
    string externalfirstname;
    string externallastname;
    string linkstate;
    string status;
    datetime deleteddate;
    boolean isknownlink;
            List< userprovisioningrequest >  _1__;

}
//////////////////////////////////////////

@namespace('schema')
class userprovaccountstaging extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id connectedappid;  connectedapplication connectedapp;
    id salesforceuserid;  user salesforceuser;
    string externaluserid;
    string externalusername;
    string externalemail;
    string externalfirstname;
    string externallastname;
    string linkstate;
    string status;
}
//////////////////////////////////////////

@namespace('schema')
class userprovisioningconfig extends sobject { 
    id id;
    boolean isdeleted;
    string developername;
    string language;
    string masterlabel;
    string namespaceprefix;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id connectedappid;  connectedapplication connectedapp;
    string notes;
    boolean enabled;
    string approvalrequired;
    string useraccountmapping;
    string enabledoperations;
    string onupdateattributes;
    datetime lastrecondatetime;
    id namedcredentialid;  namedcredential namedcredential;
    string reconfilter;
            List< userprovisioningrequest >  _1__;

}
//////////////////////////////////////////

@namespace('schema')
class userprovisioninglog extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id userprovisioningrequestid;  userprovisioningrequest userprovisioningrequest;
    string externaluserid;
    string externalusername;
    id userid;  user user;
    string status;
    string details;
}
//////////////////////////////////////////

@namespace('schema')
class userprovisioningrequest extends sobject { 
    id id;
    id ownerid;  user owner;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    id salesforceuserid;  user salesforceuser;
    string externaluserid;
    string appname;
    string state;
    string operation;
    datetime scheduledate;
    id connectedappid;  connectedapplication connectedapp;
    id userprovconfigid;  userprovisioningconfig userprovconfig;
    id userprovaccountid;  userprovaccount userprovaccount;
    string approvalstatus;
    id managerid;  user manager;
    integer retrycount;
    id parentid;  userprovisioningrequest parent;
            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< userprovisioninglog >  _3__;

            List< userprovisioningrequest >  _4__;

}
//////////////////////////////////////////

@namespace('schema')
class userprovisioningrequestshare extends sobject { 
    id id;
    id parentid;  userprovisioningrequest parent;
    id userorgroupid;  user userorgroup;
    string accesslevel;
    string rowcause;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    boolean isdeleted;
}
//////////////////////////////////////////

@namespace('schema')
class userprovmocktarget extends sobject { 
    id id;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string externaluserid;
    string externalusername;
    string externalemail;
    string externalfirstname;
    string externallastname;
}
//////////////////////////////////////////

@namespace('schema')
class userrecordaccess extends sobject { 
    id id;
    id userid;
    string recordid;
    boolean hasreadaccess;
    boolean haseditaccess;
    boolean hasdeleteaccess;
    boolean hastransferaccess;
    boolean hasallaccess;
    string maxaccesslevel;
            List< apttasktemplate__c >  _1__;

            List< aptasktemplate__c >  _2__;

            List< account >  _3__;

            List< accountcleaninfo >  _4__;

            List< actionplantemplate__c >  _5__;

            List< actionplan__c >  _6__;

            List< announcement >  _7__;

            List< asset >  _8__;

            List< backgroundoperation >  _9__;

            List< budget_line__c >  _10__;

            List< budgets__c >  _11__;

            List< cmsfolder__c >  _12__;

            List< campaign >  _13__;

            List< case >  _14__;

            List< case_swarm_rule__c >  _15__;

            List< catalog_line_item__c >  _16__;

            List< catalog_order__c >  _17__;

            List< catalog_template__c >  _18__;

            List< collaborationgrouprecord >  _19__;

            List< contact >  _20__;

            List< contactcleaninfo >  _21__;

            List< contentblockitem__c >  _22__;

            List< contentfolder >  _23__;

            List< contract >  _24__;

            List< dandbcompany >  _25__;

            List< datacloudownedentity >  _26__;

            List< datacloudpurchaseusage >  _27__;

            List< department__c >  _28__;

            List< duplicaterecorditem >  _29__;

            List< duplicaterecordset >  _30__;

            List< employee_directory_configuration__c >  _31__;

            List< event_expense__c >  _32__;

            List< event_mdf__c >  _33__;

            List< event_registration__c >  _34__;

            List< event__c >  _35__;

            List< expense__c >  _36__;

            List< feed_post_swarm_rule__c >  _37__;

            List< flowinterview >  _38__;

            List< folder >  _39__;

            List< form_field__c >  _40__;

            List< idea >  _41__;

            List< incrementals__c >  _42__;

            List< installedmobileapp >  _43__;

            List< lead >  _44__;

            List< leadcleaninfo >  _45__;

            List< lead_swarm_rule__c >  _46__;

            List< macro >  _47__;

            List< macroinstruction >  _48__;

            List< opportunity >  _49__;

            List< opportunitylineitem >  _50__;

            List< opportunity_swarm_rule__c >  _51__;

            List< order >  _52__;

            List< orderitem >  _53__;

            List< pr_change__c >  _54__;

            List< pagetemplate__c >  _55__;

            List< pagetoitem__c >  _56__;

            List< page__c >  _57__;

            List< period__c >  _58__;

            List< pricebook2 >  _59__;

            List< processinstancenode >  _60__;

            List< product2 >  _61__;

            List< program_budget__c >  _62__;

            List< purchase_request__c >  _63__;

            List< question__c >  _64__;

            List< rfp__c >  _65__;

            List< reclaimed_transaction__c >  _66__;

            List< response__c >  _67__;

            List< room__c >  _68__;

            List< searchpromotionrule >  _69__;

            List< session__c >  _70__;

            List< solution >  _71__;

            List< speaker__c >  _72__;

            List< stop_word__c >  _73__;

            List< streamingchannel >  _74__;

            List< surveyquestionresponse__c >  _75__;

            List< surveytaker__c >  _76__;

            List< survey_question__c >  _77__;

            List< survey__c >  _78__;

            List< test__c >  _79__;

            List< todaygoal >  _80__;

            List< track__c >  _81__;

            List< userappmenucustomization >  _82__;

            List< userprovaccount >  _83__;

            List< userprovaccountstaging >  _84__;

            List< userprovmocktarget >  _85__;

            List< userprovisioninglog >  _86__;

            List< userprovisioningrequest >  _87__;

            List< venue__c >  _88__;

            List< web_form__c >  _89__;

            List< leadscoring__leadscoringrule__c >  _90__;

            List< myobj__c >  _91__;

}
//////////////////////////////////////////

@namespace('schema')
class userrole extends sobject { 
    id id;
    string name;
    id parentroleid;
    string rollupdescription;
    string opportunityaccessforaccountowner;
    string caseaccessforaccountowner;
    string contactaccessforaccountowner;
    id forecastuserid;
    boolean mayforecastmanagershare;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    string developername;
    id portalaccountid;
    string portaltype;
    id portalaccountownerid;
            List< forecastshare >  _1__;

            List< group >  _2__;

            List< name >  _3__;

            List< recentlyviewed >  _4__;

            List< user >  users;

            List< userrole >  _6__;

}
//////////////////////////////////////////

@namespace('schema')
class usershare extends sobject { 
    id id;
    id userid;  user user;
    id userorgroupid;  user userorgroup;
    string useraccesslevel;
    string rowcause;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    boolean isactive;
}
//////////////////////////////////////////

@namespace('schema')
class venue__c extends sobject { 
    id id;
    id ownerid;  user owner;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    date lastactivitydate;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    string city__c;
    id contact_2__c;  contact contact_2__r;
    id contact_3__c;  contact contact_3__r;
    string country__c;
    string location_information__c;
    string map_to_venue__c;
    string notes__c;
    string postal_code_zip__c;
    string primary_contact_email__c;
    string primary_contact_phone__c;
    string primary_contact_title__c;
    id primary_contact__c;  contact primary_contact__r;
    string state__c;
    string street_address_1__c;
    string street_address_2__c;
    string venue_capacity__c;
    string venue_type__c;
            List< activityhistory >  activityhistories;

            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentdistribution >  _6__;

            List< contentdocumentlink >  _7__;

            List< contentversion >  _8__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< event >  events;

            List< event__c >  events__r;

            List< feedcomment >  _14__;

            List< feeditem >  _15__;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< openactivity >  openactivities;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< room__c >  rooms__r;

            List< task >  tasks;

            List< topicassignment >  topicassignments;

            List< venue__feed >  feeds;

            List< venue__history >  histories;

}
//////////////////////////////////////////

@namespace('schema')
class venue__feed extends sobject { 
    id id;
    id parentid;  venue__c parent;
    string type;
    id createdbyid;  user createdby;
    datetime createddate;
    boolean isdeleted;
    datetime lastmodifieddate;
    datetime systemmodstamp;
    integer commentcount;
    integer likecount;
    string title;
    string body;
    string linkurl;
    boolean isrichtext;
    id relatedrecordid;
    id insertedbyid;  user insertedby;
            List< feedattachment >  feedattachments;

            List< feedcomment >  feedcomments;

            List< feedlike >  _3__;

            List< feedlike >  feedlikes;

            List< feedpollchoice >  _5__;

            List< feedpollvote >  _6__;

            List< feedtrackedchange >  feedtrackedchanges;

}
//////////////////////////////////////////

@namespace('schema')
class venue__history extends sobject { 
    id id;
    boolean isdeleted;
    id parentid;  venue__c parent;
    id createdbyid;  user createdby;
    datetime createddate;
    string field;
    object oldvalue;
    object newvalue;
}
//////////////////////////////////////////

@namespace('schema')
class verificationhistory extends sobject { 
    id id;
    boolean isdeleted;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    integer eventgroup;
    datetime verificationtime;
    string verificationmethod;
    id userid;  user user;
    string activity;
    string status;
    id loginhistoryid;  loginhistory loginhistory;
    string sourceip;
    id logingeoid;  logingeo logingeo;
    string remarks;
    id resourceid;  connectedapplication resource;
    string policy;
}
//////////////////////////////////////////

@namespace('schema')
class vote extends sobject { 
    id id;
    boolean isdeleted;
    id parentid;  solution parent;
    string type;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime systemmodstamp;
}
//////////////////////////////////////////

@namespace('schema')
class web_form__c extends sobject { 
    id id;
    id ownerid;  user owner;
    boolean isdeleted;
    string name;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
    datetime lastvieweddate;
    datetime lastreferenceddate;
    string background_color__c;
    string description__c;
    id folder__c;  cmsfolder__c folder__r;
    string object_label__c;
    string object_name__c;
    string return_url__c;
    string save_button_text__c;
    boolean savedbywebformeditor__c;
    string text_color__c;
    string title__c;
    string web_form_id__c;
            List< attachedcontentdocument >  attachedcontentdocuments;

            List< attachment >  attachments;

            List< collaborationgrouprecord >  recordassociatedgroups;

            List< combinedattachment >  combinedattachments;

            List< contentblockitem__c >  contentblockitems__r;

            List< contentdistribution >  _6__;

            List< contentdocumentlink >  _7__;

            List< contentversion >  _8__;

            List< duplicaterecorditem >  duplicaterecorditems;

            List< emailmessage >  emails;

            List< entitysubscription >  feedsubscriptionsforentity;

            List< feedcomment >  _12__;

            List< feeditem >  _13__;

            List< form_field__c >  r00n70000002dioreak__r;

            List< note >  notes;

            List< noteandattachment >  notesandattachments;

            List< processinstance >  processinstances;

            List< processinstancehistory >  processsteps;

            List< test__c >  tests__r;

            List< topicassignment >  topicassignments;

}
//////////////////////////////////////////

@namespace('schema')
class weblink extends sobject { 
    id id;
    string pageorsobjecttype;
    string name;
    boolean isprotected;
    string url;
    string encodingkey;
    string linktype;
    string opentype;
    integer height;
    integer width;
    boolean showslocation;
    boolean hasscrollbars;
    boolean hastoolbar;
    boolean hasmenubar;
    boolean showsstatus;
    boolean isresizable;
    string position;
    id scontrolid;
    string masterlabel;
    string description;
    string displaytype;
    boolean requirerowselection;
    string namespaceprefix;
    datetime createddate;
    id createdbyid;  user createdby;
    datetime lastmodifieddate;
    id lastmodifiedbyid;  user lastmodifiedby;
    datetime systemmodstamp;
}
//////////////////////////////////////////

        ]]></Text>
        </ResolutionLibrary>
        <ResolutionLibrary formatVersion="17.10" language="apex" filename="VFTypes">
            <Text><![CDATA[
@namespace('vfstd')
class analyticsreportchart extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    boolean hideonerror;
    boolean rendered;
    string reportid;
    boolean showrefreshbutton;
    string size;
    void set_hideonerror( object v);

    boolean get_hideonerror( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_reportid( object v);

    string get_reportid( );

    void set_showrefreshbutton( object v);

    boolean get_showrefreshbutton( );

    void set_size( object v);

    string get_size( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexactionfunction extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    apexpages.action action;
    string focus;
    string id;
    boolean immediate;
    string name;
    string namespace;
    string onbeforedomupdate;
    string oncomplete;
    boolean rendered;
    object rerender;
    string status;
    integer timeout;
    void set_action( object v);

    apexpages.action get_action( );

    void set_focus( object v);

    string get_focus( );

    void set_id( object v);

    string get_id( );

    void set_immediate( object v);

    boolean get_immediate( );

    void set_name( object v);

    string get_name( );

    void set_namespace( object v);

    string get_namespace( );

    void set_onbeforedomupdate( object v);

    string get_onbeforedomupdate( );

    void set_oncomplete( object v);

    string get_oncomplete( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_rerender( object v);

    object get_rerender( );

    void set_status( object v);

    string get_status( );

    void set_timeout( object v);

    integer get_timeout( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexactionpoller extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    apexpages.action action;
    boolean enabled;
    string id;
    integer interval;
    string oncomplete;
    string onsubmit;
    boolean rendered;
    object rerender;
    string status;
    integer timeout;
    void set_action( object v);

    apexpages.action get_action( );

    void set_enabled( object v);

    boolean get_enabled( );

    void set_id( object v);

    string get_id( );

    void set_interval( object v);

    integer get_interval( );

    void set_oncomplete( object v);

    string get_oncomplete( );

    void set_onsubmit( object v);

    string get_onsubmit( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_rerender( object v);

    object get_rerender( );

    void set_status( object v);

    string get_status( );

    void set_timeout( object v);

    integer get_timeout( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexactionregion extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    boolean immediate;
    boolean rendered;
    boolean renderregiononly;
    void set_id( object v);

    string get_id( );

    void set_immediate( object v);

    boolean get_immediate( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_renderregiononly( object v);

    boolean get_renderregiononly( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexactionstatus extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string dir;
    string id;
    string lang;
    string layout;
    string onclick;
    string ondblclick;
    string onkeydown;
    string onkeypress;
    string onkeyup;
    string onmousedown;
    string onmousemove;
    string onmouseout;
    string onmouseover;
    string onmouseup;
    string onstart;
    string onstop;
    boolean rendered;
    string startstyle;
    string startstyleclass;
    string starttext;
    string stopstyle;
    string stopstyleclass;
    string stoptext;
    string style;
    string styleclass;
    string title;
    void set_dir( object v);

    string get_dir( );

    void set_id( object v);

    string get_id( );

    void set_lang( object v);

    string get_lang( );

    void set_layout( object v);

    string get_layout( );

    void set_onclick( object v);

    string get_onclick( );

    void set_ondblclick( object v);

    string get_ondblclick( );

    void set_onkeydown( object v);

    string get_onkeydown( );

    void set_onkeypress( object v);

    string get_onkeypress( );

    void set_onkeyup( object v);

    string get_onkeyup( );

    void set_onmousedown( object v);

    string get_onmousedown( );

    void set_onmousemove( object v);

    string get_onmousemove( );

    void set_onmouseout( object v);

    string get_onmouseout( );

    void set_onmouseover( object v);

    string get_onmouseover( );

    void set_onmouseup( object v);

    string get_onmouseup( );

    void set_onstart( object v);

    string get_onstart( );

    void set_onstop( object v);

    string get_onstop( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_startstyle( object v);

    string get_startstyle( );

    void set_startstyleclass( object v);

    string get_startstyleclass( );

    void set_starttext( object v);

    string get_starttext( );

    void set_stopstyle( object v);

    string get_stopstyle( );

    void set_stopstyleclass( object v);

    string get_stopstyleclass( );

    void set_stoptext( object v);

    string get_stoptext( );

    void set_style( object v);

    string get_style( );

    void set_styleclass( object v);

    string get_styleclass( );

    void set_title( object v);

    string get_title( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexactionsupport extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    apexpages.action action;
    boolean disabled;
    boolean disabledefault;
    string event;
    string focus;
    string id;
    boolean immediate;
    string onbeforedomupdate;
    string oncomplete;
    string onsubmit;
    boolean rendered;
    object rerender;
    string status;
    integer timeout;
    void set_action( object v);

    apexpages.action get_action( );

    void set_disabled( object v);

    boolean get_disabled( );

    void set_disabledefault( object v);

    boolean get_disabledefault( );

    void set_event( object v);

    string get_event( );

    void set_focus( object v);

    string get_focus( );

    void set_id( object v);

    string get_id( );

    void set_immediate( object v);

    boolean get_immediate( );

    void set_onbeforedomupdate( object v);

    string get_onbeforedomupdate( );

    void set_oncomplete( object v);

    string get_oncomplete( );

    void set_onsubmit( object v);

    string get_onsubmit( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_rerender( object v);

    object get_rerender( );

    void set_status( object v);

    string get_status( );

    void set_timeout( object v);

    integer get_timeout( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexareaseries extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string axis;
    string colorset;
    boolean highlight;
    integer highlightlinewidth;
    string highlightopacity;
    string highlightstrokecolor;
    string id;
    string opacity;
    boolean rendered;
    string rendererfn;
    boolean showinlegend;
    boolean tips;
    string title;
    string xfield;
    string yfield;
    void set_axis( object v);

    string get_axis( );

    void set_colorset( object v);

    string get_colorset( );

    void set_highlight( object v);

    boolean get_highlight( );

    void set_highlightlinewidth( object v);

    integer get_highlightlinewidth( );

    void set_highlightopacity( object v);

    string get_highlightopacity( );

    void set_highlightstrokecolor( object v);

    string get_highlightstrokecolor( );

    void set_id( object v);

    string get_id( );

    void set_opacity( object v);

    string get_opacity( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_rendererfn( object v);

    string get_rendererfn( );

    void set_showinlegend( object v);

    boolean get_showinlegend( );

    void set_tips( object v);

    boolean get_tips( );

    void set_title( object v);

    string get_title( );

    void set_xfield( object v);

    string get_xfield( );

    void set_yfield( object v);

    string get_yfield( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexattribute extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string access;
    object assignto;
    string default;
    string description;
    boolean encode;
    string id;
    string name;
    boolean required;
    string type;
    void set_access( object v);

    string get_access( );

    void set_assignto( object v);

    object get_assignto( );

    void set_default( object v);

    string get_default( );

    void set_description( object v);

    string get_description( );

    void set_encode( object v);

    boolean get_encode( );

    void set_id( object v);

    string get_id( );

    void set_name( object v);

    string get_name( );

    void set_required( object v);

    boolean get_required( );

    void set_type( object v);

    string get_type( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexaxis extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    integer dashsize;
    string fields;
    boolean grid;
    boolean gridfill;
    string id;
    integer margin;
    integer maximum;
    integer minimum;
    string position;
    boolean rendered;
    integer steps;
    string title;
    string type;
    void set_dashsize( object v);

    integer get_dashsize( );

    void set_fields( object v);

    string get_fields( );

    void set_grid( object v);

    boolean get_grid( );

    void set_gridfill( object v);

    boolean get_gridfill( );

    void set_id( object v);

    string get_id( );

    void set_margin( object v);

    integer get_margin( );

    void set_maximum( object v);

    integer get_maximum( );

    void set_minimum( object v);

    integer get_minimum( );

    void set_position( object v);

    string get_position( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_steps( object v);

    integer get_steps( );

    void set_title( object v);

    string get_title( );

    void set_type( object v);

    string get_type( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexbarseries extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string axis;
    string colorset;
    boolean colorsprogresswithinseries;
    integer groupgutter;
    integer gutter;
    boolean highlight;
    string highlightcolor;
    integer highlightlinewidth;
    string highlightopacity;
    string highlightstroke;
    string id;
    string orientation;
    boolean rendered;
    string rendererfn;
    boolean showinlegend;
    boolean stacked;
    boolean tips;
    string title;
    string xfield;
    integer xpadding;
    string yfield;
    integer ypadding;
    void set_axis( object v);

    string get_axis( );

    void set_colorset( object v);

    string get_colorset( );

    void set_colorsprogresswithinseries( object v);

    boolean get_colorsprogresswithinseries( );

    void set_groupgutter( object v);

    integer get_groupgutter( );

    void set_gutter( object v);

    integer get_gutter( );

    void set_highlight( object v);

    boolean get_highlight( );

    void set_highlightcolor( object v);

    string get_highlightcolor( );

    void set_highlightlinewidth( object v);

    integer get_highlightlinewidth( );

    void set_highlightopacity( object v);

    string get_highlightopacity( );

    void set_highlightstroke( object v);

    string get_highlightstroke( );

    void set_id( object v);

    string get_id( );

    void set_orientation( object v);

    string get_orientation( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_rendererfn( object v);

    string get_rendererfn( );

    void set_showinlegend( object v);

    boolean get_showinlegend( );

    void set_stacked( object v);

    boolean get_stacked( );

    void set_tips( object v);

    boolean get_tips( );

    void set_title( object v);

    string get_title( );

    void set_xfield( object v);

    string get_xfield( );

    void set_xpadding( object v);

    integer get_xpadding( );

    void set_yfield( object v);

    string get_yfield( );

    void set_ypadding( object v);

    integer get_ypadding( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexcanvasapp extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string applicationname;
    string border;
    string canvasid;
    string containerid;
    string developername;
    string entityfields;
    string height;
    string id;
    string maxheight;
    string maxwidth;
    string namespaceprefix;
    string oncanvasapperror;
    string oncanvasappload;
    string parameters;
    boolean rendered;
    string scrolling;
    string width;
    void set_applicationname( object v);

    string get_applicationname( );

    void set_border( object v);

    string get_border( );

    void set_canvasid( object v);

    string get_canvasid( );

    void set_containerid( object v);

    string get_containerid( );

    void set_developername( object v);

    string get_developername( );

    void set_entityfields( object v);

    string get_entityfields( );

    void set_height( object v);

    string get_height( );

    void set_id( object v);

    string get_id( );

    void set_maxheight( object v);

    string get_maxheight( );

    void set_maxwidth( object v);

    string get_maxwidth( );

    void set_namespaceprefix( object v);

    string get_namespaceprefix( );

    void set_oncanvasapperror( object v);

    string get_oncanvasapperror( );

    void set_oncanvasappload( object v);

    string get_oncanvasappload( );

    void set_parameters( object v);

    string get_parameters( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_scrolling( object v);

    string get_scrolling( );

    void set_width( object v);

    string get_width( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexchart extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    boolean animate;
    string background;
    string colorset;
    object data;
    boolean floating;
    string height;
    boolean hidden;
    string id;
    boolean legend;
    string name;
    boolean rendered;
    string renderto;
    boolean resizable;
    string theme;
    string width;
    void set_animate( object v);

    boolean get_animate( );

    void set_background( object v);

    string get_background( );

    void set_colorset( object v);

    string get_colorset( );

    void set_data( object v);

    object get_data( );

    void set_floating( object v);

    boolean get_floating( );

    void set_height( object v);

    string get_height( );

    void set_hidden( object v);

    boolean get_hidden( );

    void set_id( object v);

    string get_id( );

    void set_legend( object v);

    boolean get_legend( );

    void set_name( object v);

    string get_name( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_renderto( object v);

    string get_renderto( );

    void set_resizable( object v);

    boolean get_resizable( );

    void set_theme( object v);

    string get_theme( );

    void set_width( object v);

    string get_width( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexchartlabel extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string color;
    string display;
    string field;
    string font;
    string id;
    integer minmargin;
    string orientation;
    boolean rendered;
    string rendererfn;
    integer rotate;
    void set_color( object v);

    string get_color( );

    void set_display( object v);

    string get_display( );

    void set_field( object v);

    string get_field( );

    void set_font( object v);

    string get_font( );

    void set_id( object v);

    string get_id( );

    void set_minmargin( object v);

    integer get_minmargin( );

    void set_orientation( object v);

    string get_orientation( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_rendererfn( object v);

    string get_rendererfn( );

    void set_rotate( object v);

    integer get_rotate( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexcharttips extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    integer height;
    string id;
    string labelfield;
    boolean rendered;
    string rendererfn;
    boolean trackmouse;
    string valuefield;
    integer width;
    void set_height( object v);

    integer get_height( );

    void set_id( object v);

    string get_id( );

    void set_labelfield( object v);

    string get_labelfield( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_rendererfn( object v);

    string get_rendererfn( );

    void set_trackmouse( object v);

    boolean get_trackmouse( );

    void set_valuefield( object v);

    string get_valuefield( );

    void set_width( object v);

    integer get_width( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexcolumn extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    boolean breakbefore;
    integer colspan;
    string dir;
    string footerclass;
    string footercolspan;
    string footerdir;
    string footerlang;
    string footeronclick;
    string footerondblclick;
    string footeronkeydown;
    string footeronkeypress;
    string footeronkeyup;
    string footeronmousedown;
    string footeronmousemove;
    string footeronmouseout;
    string footeronmouseover;
    string footeronmouseup;
    string footerstyle;
    string footertitle;
    string footervalue;
    string headerclass;
    string headercolspan;
    string headerdir;
    string headerlang;
    string headeronclick;
    string headerondblclick;
    string headeronkeydown;
    string headeronkeypress;
    string headeronkeyup;
    string headeronmousedown;
    string headeronmousemove;
    string headeronmouseout;
    string headeronmouseover;
    string headeronmouseup;
    string headerstyle;
    string headertitle;
    string headervalue;
    string id;
    string lang;
    string onclick;
    string ondblclick;
    string onkeydown;
    string onkeypress;
    string onkeyup;
    string onmousedown;
    string onmousemove;
    string onmouseout;
    string onmouseover;
    string onmouseup;
    boolean rendered;
    integer rowspan;
    string style;
    string styleclass;
    string title;
    string value;
    string width;
    void set_breakbefore( object v);

    boolean get_breakbefore( );

    void set_colspan( object v);

    integer get_colspan( );

    void set_dir( object v);

    string get_dir( );

    void set_footerclass( object v);

    string get_footerclass( );

    void set_footercolspan( object v);

    string get_footercolspan( );

    void set_footerdir( object v);

    string get_footerdir( );

    void set_footerlang( object v);

    string get_footerlang( );

    void set_footeronclick( object v);

    string get_footeronclick( );

    void set_footerondblclick( object v);

    string get_footerondblclick( );

    void set_footeronkeydown( object v);

    string get_footeronkeydown( );

    void set_footeronkeypress( object v);

    string get_footeronkeypress( );

    void set_footeronkeyup( object v);

    string get_footeronkeyup( );

    void set_footeronmousedown( object v);

    string get_footeronmousedown( );

    void set_footeronmousemove( object v);

    string get_footeronmousemove( );

    void set_footeronmouseout( object v);

    string get_footeronmouseout( );

    void set_footeronmouseover( object v);

    string get_footeronmouseover( );

    void set_footeronmouseup( object v);

    string get_footeronmouseup( );

    void set_footerstyle( object v);

    string get_footerstyle( );

    void set_footertitle( object v);

    string get_footertitle( );

    void set_footervalue( object v);

    string get_footervalue( );

    void set_headerclass( object v);

    string get_headerclass( );

    void set_headercolspan( object v);

    string get_headercolspan( );

    void set_headerdir( object v);

    string get_headerdir( );

    void set_headerlang( object v);

    string get_headerlang( );

    void set_headeronclick( object v);

    string get_headeronclick( );

    void set_headerondblclick( object v);

    string get_headerondblclick( );

    void set_headeronkeydown( object v);

    string get_headeronkeydown( );

    void set_headeronkeypress( object v);

    string get_headeronkeypress( );

    void set_headeronkeyup( object v);

    string get_headeronkeyup( );

    void set_headeronmousedown( object v);

    string get_headeronmousedown( );

    void set_headeronmousemove( object v);

    string get_headeronmousemove( );

    void set_headeronmouseout( object v);

    string get_headeronmouseout( );

    void set_headeronmouseover( object v);

    string get_headeronmouseover( );

    void set_headeronmouseup( object v);

    string get_headeronmouseup( );

    void set_headerstyle( object v);

    string get_headerstyle( );

    void set_headertitle( object v);

    string get_headertitle( );

    void set_headervalue( object v);

    string get_headervalue( );

    void set_id( object v);

    string get_id( );

    void set_lang( object v);

    string get_lang( );

    void set_onclick( object v);

    string get_onclick( );

    void set_ondblclick( object v);

    string get_ondblclick( );

    void set_onkeydown( object v);

    string get_onkeydown( );

    void set_onkeypress( object v);

    string get_onkeypress( );

    void set_onkeyup( object v);

    string get_onkeyup( );

    void set_onmousedown( object v);

    string get_onmousedown( );

    void set_onmousemove( object v);

    string get_onmousemove( );

    void set_onmouseout( object v);

    string get_onmouseout( );

    void set_onmouseover( object v);

    string get_onmouseover( );

    void set_onmouseup( object v);

    string get_onmouseup( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_rowspan( object v);

    integer get_rowspan( );

    void set_style( object v);

    string get_style( );

    void set_styleclass( object v);

    string get_styleclass( );

    void set_title( object v);

    string get_title( );

    void set_value( object v);

    string get_value( );

    void set_width( object v);

    string get_width( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexcommandbutton extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string accesskey;
    apexpages.action action;
    string alt;
    string dir;
    boolean disabled;
    string id;
    string image;
    boolean immediate;
    string lang;
    string onblur;
    string onclick;
    string oncomplete;
    string ondblclick;
    string onfocus;
    string onkeydown;
    string onkeypress;
    string onkeyup;
    string onmousedown;
    string onmousemove;
    string onmouseout;
    string onmouseover;
    string onmouseup;
    boolean rendered;
    object rerender;
    string status;
    string style;
    string styleclass;
    string tabindex;
    integer timeout;
    string title;
    object value;
    void set_accesskey( object v);

    string get_accesskey( );

    void set_action( object v);

    apexpages.action get_action( );

    void set_alt( object v);

    string get_alt( );

    void set_dir( object v);

    string get_dir( );

    void set_disabled( object v);

    boolean get_disabled( );

    void set_id( object v);

    string get_id( );

    void set_image( object v);

    string get_image( );

    void set_immediate( object v);

    boolean get_immediate( );

    void set_lang( object v);

    string get_lang( );

    void set_onblur( object v);

    string get_onblur( );

    void set_onclick( object v);

    string get_onclick( );

    void set_oncomplete( object v);

    string get_oncomplete( );

    void set_ondblclick( object v);

    string get_ondblclick( );

    void set_onfocus( object v);

    string get_onfocus( );

    void set_onkeydown( object v);

    string get_onkeydown( );

    void set_onkeypress( object v);

    string get_onkeypress( );

    void set_onkeyup( object v);

    string get_onkeyup( );

    void set_onmousedown( object v);

    string get_onmousedown( );

    void set_onmousemove( object v);

    string get_onmousemove( );

    void set_onmouseout( object v);

    string get_onmouseout( );

    void set_onmouseover( object v);

    string get_onmouseover( );

    void set_onmouseup( object v);

    string get_onmouseup( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_rerender( object v);

    object get_rerender( );

    void set_status( object v);

    string get_status( );

    void set_style( object v);

    string get_style( );

    void set_styleclass( object v);

    string get_styleclass( );

    void set_tabindex( object v);

    string get_tabindex( );

    void set_timeout( object v);

    integer get_timeout( );

    void set_title( object v);

    string get_title( );

    void set_value( object v);

    object get_value( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexcommandlink extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string accesskey;
    apexpages.action action;
    string charset;
    string coords;
    string dir;
    string hreflang;
    string id;
    boolean immediate;
    string lang;
    string onblur;
    string onclick;
    string oncomplete;
    string ondblclick;
    string onfocus;
    string onkeydown;
    string onkeypress;
    string onkeyup;
    string onmousedown;
    string onmousemove;
    string onmouseout;
    string onmouseover;
    string onmouseup;
    string rel;
    boolean rendered;
    object rerender;
    string rev;
    string shape;
    string status;
    string style;
    string styleclass;
    string tabindex;
    string target;
    integer timeout;
    string title;
    string type;
    object value;
    void set_accesskey( object v);

    string get_accesskey( );

    void set_action( object v);

    apexpages.action get_action( );

    void set_charset( object v);

    string get_charset( );

    void set_coords( object v);

    string get_coords( );

    void set_dir( object v);

    string get_dir( );

    void set_hreflang( object v);

    string get_hreflang( );

    void set_id( object v);

    string get_id( );

    void set_immediate( object v);

    boolean get_immediate( );

    void set_lang( object v);

    string get_lang( );

    void set_onblur( object v);

    string get_onblur( );

    void set_onclick( object v);

    string get_onclick( );

    void set_oncomplete( object v);

    string get_oncomplete( );

    void set_ondblclick( object v);

    string get_ondblclick( );

    void set_onfocus( object v);

    string get_onfocus( );

    void set_onkeydown( object v);

    string get_onkeydown( );

    void set_onkeypress( object v);

    string get_onkeypress( );

    void set_onkeyup( object v);

    string get_onkeyup( );

    void set_onmousedown( object v);

    string get_onmousedown( );

    void set_onmousemove( object v);

    string get_onmousemove( );

    void set_onmouseout( object v);

    string get_onmouseout( );

    void set_onmouseover( object v);

    string get_onmouseover( );

    void set_onmouseup( object v);

    string get_onmouseup( );

    void set_rel( object v);

    string get_rel( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_rerender( object v);

    object get_rerender( );

    void set_rev( object v);

    string get_rev( );

    void set_shape( object v);

    string get_shape( );

    void set_status( object v);

    string get_status( );

    void set_style( object v);

    string get_style( );

    void set_styleclass( object v);

    string get_styleclass( );

    void set_tabindex( object v);

    string get_tabindex( );

    void set_target( object v);

    string get_target( );

    void set_timeout( object v);

    integer get_timeout( );

    void set_title( object v);

    string get_title( );

    void set_type( object v);

    string get_type( );

    void set_value( object v);

    object get_value( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexcomponent extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string access;
    boolean allowdml;
    string controller;
    string extensions;
    string id;
    string language;
    string layout;
    boolean rendered;
    boolean selfclosing;
    void set_access( object v);

    string get_access( );

    void set_allowdml( object v);

    boolean get_allowdml( );

    void set_controller( object v);

    string get_controller( );

    void set_extensions( object v);

    string get_extensions( );

    void set_id( object v);

    string get_id( );

    void set_language( object v);

    string get_language( );

    void set_layout( object v);

    string get_layout( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_selfclosing( object v);

    boolean get_selfclosing( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexcomponentbody extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    boolean rendered;
    void set_id( object v);

    string get_id( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexcomponentexample extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    apexpages.pagereference demopage;
    string description;
    apexpages.pagereference examplepage;
    string id;
    string imageurl;
    string name;
    boolean rendered;
    void set_demopage( object v);

    apexpages.pagereference get_demopage( );

    void set_description( object v);

    string get_description( );

    void set_examplepage( object v);

    apexpages.pagereference get_examplepage( );

    void set_id( object v);

    string get_id( );

    void set_imageurl( object v);

    string get_imageurl( );

    void set_name( object v);

    string get_name( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexcomposition extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string rendered;
    apexpages.pagereference template;
    void set_rendered( object v);

    string get_rendered( );

    void set_template( object v);

    apexpages.pagereference get_template( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexdatalist extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string dir;
    integer first;
    string id;
    string lang;
    string onclick;
    string ondblclick;
    string onkeydown;
    string onkeypress;
    string onkeyup;
    string onmousedown;
    string onmousemove;
    string onmouseout;
    string onmouseover;
    string onmouseup;
    boolean rendered;
    integer rows;
    string style;
    string styleclass;
    string title;
    string type;
    object value;
    string var;
    void set_dir( object v);

    string get_dir( );

    void set_first( object v);

    integer get_first( );

    void set_id( object v);

    string get_id( );

    void set_lang( object v);

    string get_lang( );

    void set_onclick( object v);

    string get_onclick( );

    void set_ondblclick( object v);

    string get_ondblclick( );

    void set_onkeydown( object v);

    string get_onkeydown( );

    void set_onkeypress( object v);

    string get_onkeypress( );

    void set_onkeyup( object v);

    string get_onkeyup( );

    void set_onmousedown( object v);

    string get_onmousedown( );

    void set_onmousemove( object v);

    string get_onmousemove( );

    void set_onmouseout( object v);

    string get_onmouseout( );

    void set_onmouseover( object v);

    string get_onmouseover( );

    void set_onmouseup( object v);

    string get_onmouseup( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_rows( object v);

    integer get_rows( );

    void set_style( object v);

    string get_style( );

    void set_styleclass( object v);

    string get_styleclass( );

    void set_title( object v);

    string get_title( );

    void set_type( object v);

    string get_type( );

    void set_value( object v);

    object get_value( );

    void set_var( object v);

    string get_var( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexdatatable extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string align;
    string bgcolor;
    string border;
    string captionclass;
    string captionstyle;
    string cellpadding;
    string cellspacing;
    string columnclasses;
    integer columns;
    string columnswidth;
    string dir;
    integer first;
    string footerclass;
    string frame;
    string headerclass;
    string id;
    string lang;
    string onclick;
    string ondblclick;
    string onkeydown;
    string onkeypress;
    string onkeyup;
    string onmousedown;
    string onmousemove;
    string onmouseout;
    string onmouseover;
    string onmouseup;
    string onrowclick;
    string onrowdblclick;
    string onrowmousedown;
    string onrowmousemove;
    string onrowmouseout;
    string onrowmouseover;
    string onrowmouseup;
    boolean rendered;
    string rowclasses;
    integer rows;
    string rules;
    string style;
    string styleclass;
    string summary;
    string title;
    object value;
    string var;
    string width;
    void set_align( object v);

    string get_align( );

    void set_bgcolor( object v);

    string get_bgcolor( );

    void set_border( object v);

    string get_border( );

    void set_captionclass( object v);

    string get_captionclass( );

    void set_captionstyle( object v);

    string get_captionstyle( );

    void set_cellpadding( object v);

    string get_cellpadding( );

    void set_cellspacing( object v);

    string get_cellspacing( );

    void set_columnclasses( object v);

    string get_columnclasses( );

    void set_columns( object v);

    integer get_columns( );

    void set_columnswidth( object v);

    string get_columnswidth( );

    void set_dir( object v);

    string get_dir( );

    void set_first( object v);

    integer get_first( );

    void set_footerclass( object v);

    string get_footerclass( );

    void set_frame( object v);

    string get_frame( );

    void set_headerclass( object v);

    string get_headerclass( );

    void set_id( object v);

    string get_id( );

    void set_lang( object v);

    string get_lang( );

    void set_onclick( object v);

    string get_onclick( );

    void set_ondblclick( object v);

    string get_ondblclick( );

    void set_onkeydown( object v);

    string get_onkeydown( );

    void set_onkeypress( object v);

    string get_onkeypress( );

    void set_onkeyup( object v);

    string get_onkeyup( );

    void set_onmousedown( object v);

    string get_onmousedown( );

    void set_onmousemove( object v);

    string get_onmousemove( );

    void set_onmouseout( object v);

    string get_onmouseout( );

    void set_onmouseover( object v);

    string get_onmouseover( );

    void set_onmouseup( object v);

    string get_onmouseup( );

    void set_onrowclick( object v);

    string get_onrowclick( );

    void set_onrowdblclick( object v);

    string get_onrowdblclick( );

    void set_onrowmousedown( object v);

    string get_onrowmousedown( );

    void set_onrowmousemove( object v);

    string get_onrowmousemove( );

    void set_onrowmouseout( object v);

    string get_onrowmouseout( );

    void set_onrowmouseover( object v);

    string get_onrowmouseover( );

    void set_onrowmouseup( object v);

    string get_onrowmouseup( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_rowclasses( object v);

    string get_rowclasses( );

    void set_rows( object v);

    integer get_rows( );

    void set_rules( object v);

    string get_rules( );

    void set_style( object v);

    string get_style( );

    void set_styleclass( object v);

    string get_styleclass( );

    void set_summary( object v);

    string get_summary( );

    void set_title( object v);

    string get_title( );

    void set_value( object v);

    object get_value( );

    void set_var( object v);

    string get_var( );

    void set_width( object v);

    string get_width( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexdefine extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string name;
    void set_name( object v);

    string get_name( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexdescription extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
}
//////////////////////////////////////////

@namespace('vfstd')
class apexdetail extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    boolean inlineedit;
    string oncomplete;
    boolean relatedlist;
    boolean relatedlisthover;
    boolean rendered;
    object rerender;
    boolean showchatter;
    string subject;
    boolean title;
    void set_id( object v);

    string get_id( );

    void set_inlineedit( object v);

    boolean get_inlineedit( );

    void set_oncomplete( object v);

    string get_oncomplete( );

    void set_relatedlist( object v);

    boolean get_relatedlist( );

    void set_relatedlisthover( object v);

    boolean get_relatedlisthover( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_rerender( object v);

    object get_rerender( );

    void set_showchatter( object v);

    boolean get_showchatter( );

    void set_subject( object v);

    string get_subject( );

    void set_title( object v);

    boolean get_title( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexdynamiccomponent extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    boolean invokeafteraction;
    boolean rendered;
    void set_id( object v);

    string get_id( );

    void set_invokeafteraction( object v);

    boolean get_invokeafteraction( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexemailpublisher extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    boolean autocollapsebody;
    string bccvisibility;
    string ccvisibility;
    string emailbody;
    string emailbodyformat;
    string emailbodyheight;
    boolean enablequicktext;
    id entityid;
    boolean expandableheader;
    string fromaddresses;
    string fromvisibility;
    string id;
    string onsubmitfailure;
    string onsubmitsuccess;
    boolean rendered;
    object rerender;
    string sendbuttonname;
    boolean showadditionalfields;
    boolean showattachments;
    boolean showsendbutton;
    boolean showtemplates;
    string subject;
    string subjectvisibility;
    string submitfunctionname;
    string title;
    string toaddresses;
    string tovisibility;
    boolean verticalresize;
    string width;
    void set_autocollapsebody( object v);

    boolean get_autocollapsebody( );

    void set_bccvisibility( object v);

    string get_bccvisibility( );

    void set_ccvisibility( object v);

    string get_ccvisibility( );

    void set_emailbody( object v);

    string get_emailbody( );

    void set_emailbodyformat( object v);

    string get_emailbodyformat( );

    void set_emailbodyheight( object v);

    string get_emailbodyheight( );

    void set_enablequicktext( object v);

    boolean get_enablequicktext( );

    void set_entityid( object v);

    id get_entityid( );

    void set_expandableheader( object v);

    boolean get_expandableheader( );

    void set_fromaddresses( object v);

    string get_fromaddresses( );

    void set_fromvisibility( object v);

    string get_fromvisibility( );

    void set_id( object v);

    string get_id( );

    void set_onsubmitfailure( object v);

    string get_onsubmitfailure( );

    void set_onsubmitsuccess( object v);

    string get_onsubmitsuccess( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_rerender( object v);

    object get_rerender( );

    void set_sendbuttonname( object v);

    string get_sendbuttonname( );

    void set_showadditionalfields( object v);

    boolean get_showadditionalfields( );

    void set_showattachments( object v);

    boolean get_showattachments( );

    void set_showsendbutton( object v);

    boolean get_showsendbutton( );

    void set_showtemplates( object v);

    boolean get_showtemplates( );

    void set_subject( object v);

    string get_subject( );

    void set_subjectvisibility( object v);

    string get_subjectvisibility( );

    void set_submitfunctionname( object v);

    string get_submitfunctionname( );

    void set_title( object v);

    string get_title( );

    void set_toaddresses( object v);

    string get_toaddresses( );

    void set_tovisibility( object v);

    string get_tovisibility( );

    void set_verticalresize( object v);

    boolean get_verticalresize( );

    void set_width( object v);

    string get_width( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexenhancedlist extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    boolean customizable;
    integer height;
    string id;
    string listid;
    string oncomplete;
    boolean rendered;
    object rerender;
    integer rowsperpage;
    string type;
    integer width;
    void set_customizable( object v);

    boolean get_customizable( );

    void set_height( object v);

    integer get_height( );

    void set_id( object v);

    string get_id( );

    void set_listid( object v);

    string get_listid( );

    void set_oncomplete( object v);

    string get_oncomplete( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_rerender( object v);

    object get_rerender( );

    void set_rowsperpage( object v);

    integer get_rowsperpage( );

    void set_type( object v);

    string get_type( );

    void set_width( object v);

    integer get_width( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexfacet extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string name;
    void set_name( object v);

    string get_name( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexflash extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string flashvars;
    string height;
    string id;
    boolean loop;
    boolean play;
    boolean rendered;
    string src;
    string width;
    void set_flashvars( object v);

    string get_flashvars( );

    void set_height( object v);

    string get_height( );

    void set_id( object v);

    string get_id( );

    void set_loop( object v);

    boolean get_loop( );

    void set_play( object v);

    boolean get_play( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_src( object v);

    string get_src( );

    void set_width( object v);

    string get_width( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexform extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string accept;
    string acceptcharset;
    string dir;
    string enctype;
    boolean forcessl;
    string id;
    string lang;
    string onclick;
    string ondblclick;
    string onkeydown;
    string onkeypress;
    string onkeyup;
    string onmousedown;
    string onmousemove;
    string onmouseout;
    string onmouseover;
    string onmouseup;
    string onreset;
    string onsubmit;
    boolean prependid;
    boolean rendered;
    string style;
    string styleclass;
    string target;
    string title;
    void set_accept( object v);

    string get_accept( );

    void set_acceptcharset( object v);

    string get_acceptcharset( );

    void set_dir( object v);

    string get_dir( );

    void set_enctype( object v);

    string get_enctype( );

    void set_forcessl( object v);

    boolean get_forcessl( );

    void set_id( object v);

    string get_id( );

    void set_lang( object v);

    string get_lang( );

    void set_onclick( object v);

    string get_onclick( );

    void set_ondblclick( object v);

    string get_ondblclick( );

    void set_onkeydown( object v);

    string get_onkeydown( );

    void set_onkeypress( object v);

    string get_onkeypress( );

    void set_onkeyup( object v);

    string get_onkeyup( );

    void set_onmousedown( object v);

    string get_onmousedown( );

    void set_onmousemove( object v);

    string get_onmousemove( );

    void set_onmouseout( object v);

    string get_onmouseout( );

    void set_onmouseover( object v);

    string get_onmouseover( );

    void set_onmouseup( object v);

    string get_onmouseup( );

    void set_onreset( object v);

    string get_onreset( );

    void set_onsubmit( object v);

    string get_onsubmit( );

    void set_prependid( object v);

    boolean get_prependid( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_style( object v);

    string get_style( );

    void set_styleclass( object v);

    string get_styleclass( );

    void set_target( object v);

    string get_target( );

    void set_title( object v);

    string get_title( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexgaugeseries extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string colorset;
    string datafield;
    integer donut;
    boolean highlight;
    string id;
    string labelfield;
    boolean needle;
    boolean rendered;
    string rendererfn;
    boolean tips;
    void set_colorset( object v);

    string get_colorset( );

    void set_datafield( object v);

    string get_datafield( );

    void set_donut( object v);

    integer get_donut( );

    void set_highlight( object v);

    boolean get_highlight( );

    void set_id( object v);

    string get_id( );

    void set_labelfield( object v);

    string get_labelfield( );

    void set_needle( object v);

    boolean get_needle( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_rendererfn( object v);

    string get_rendererfn( );

    void set_tips( object v);

    boolean get_tips( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexiframe extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    boolean frameborder;
    string height;
    string id;
    boolean rendered;
    boolean scrolling;
    string src;
    string title;
    string width;
    void set_frameborder( object v);

    boolean get_frameborder( );

    void set_height( object v);

    string get_height( );

    void set_id( object v);

    string get_id( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_scrolling( object v);

    boolean get_scrolling( );

    void set_src( object v);

    string get_src( );

    void set_title( object v);

    string get_title( );

    void set_width( object v);

    string get_width( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apeximage extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string alt;
    string dir;
    string height;
    string id;
    boolean ismap;
    string lang;
    string longdesc;
    string onclick;
    string ondblclick;
    string onkeydown;
    string onkeypress;
    string onkeyup;
    string onmousedown;
    string onmousemove;
    string onmouseout;
    string onmouseover;
    string onmouseup;
    boolean rendered;
    string style;
    string styleclass;
    string title;
    string url;
    string usemap;
    object value;
    string width;
    void set_alt( object v);

    string get_alt( );

    void set_dir( object v);

    string get_dir( );

    void set_height( object v);

    string get_height( );

    void set_id( object v);

    string get_id( );

    void set_ismap( object v);

    boolean get_ismap( );

    void set_lang( object v);

    string get_lang( );

    void set_longdesc( object v);

    string get_longdesc( );

    void set_onclick( object v);

    string get_onclick( );

    void set_ondblclick( object v);

    string get_ondblclick( );

    void set_onkeydown( object v);

    string get_onkeydown( );

    void set_onkeypress( object v);

    string get_onkeypress( );

    void set_onkeyup( object v);

    string get_onkeyup( );

    void set_onmousedown( object v);

    string get_onmousedown( );

    void set_onmousemove( object v);

    string get_onmousemove( );

    void set_onmouseout( object v);

    string get_onmouseout( );

    void set_onmouseover( object v);

    string get_onmouseover( );

    void set_onmouseup( object v);

    string get_onmouseup( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_style( object v);

    string get_style( );

    void set_styleclass( object v);

    string get_styleclass( );

    void set_title( object v);

    string get_title( );

    void set_url( object v);

    string get_url( );

    void set_usemap( object v);

    string get_usemap( );

    void set_value( object v);

    object get_value( );

    void set_width( object v);

    string get_width( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexinclude extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    apexpages.pagereference pagename;
    boolean rendered;
    void set_id( object v);

    string get_id( );

    void set_pagename( object v);

    apexpages.pagereference get_pagename( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexincludelightning extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    boolean rendered;
    void set_id( object v);

    string get_id( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexincludescript extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    boolean loadonready;
    object value;
    void set_id( object v);

    string get_id( );

    void set_loadonready( object v);

    boolean get_loadonready( );

    void set_value( object v);

    object get_value( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexinlineeditsupport extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string changedstyleclass;
    boolean disabled;
    string event;
    object hideonedit;
    string id;
    boolean rendered;
    string resetfunction;
    object showonedit;
    void set_changedstyleclass( object v);

    string get_changedstyleclass( );

    void set_disabled( object v);

    boolean get_disabled( );

    void set_event( object v);

    string get_event( );

    void set_hideonedit( object v);

    object get_hideonedit( );

    void set_id( object v);

    string get_id( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_resetfunction( object v);

    string get_resetfunction( );

    void set_showonedit( object v);

    object get_showonedit( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexinput extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string accesskey;
    string alt;
    string dir;
    boolean disabled;
    string id;
    string label;
    string lang;
    object list;
    string onblur;
    string onchange;
    string onclick;
    string ondblclick;
    string onfocus;
    string onkeydown;
    string onkeypress;
    string onkeyup;
    string onmousedown;
    string onmousemove;
    string onmouseout;
    string onmouseover;
    string onmouseup;
    boolean rendered;
    boolean required;
    integer size;
    string style;
    string styleclass;
    string tabindex;
    string title;
    string type;
    object value;
    void set_accesskey( object v);

    string get_accesskey( );

    void set_alt( object v);

    string get_alt( );

    void set_dir( object v);

    string get_dir( );

    void set_disabled( object v);

    boolean get_disabled( );

    void set_id( object v);

    string get_id( );

    void set_label( object v);

    string get_label( );

    void set_lang( object v);

    string get_lang( );

    void set_list( object v);

    object get_list( );

    void set_onblur( object v);

    string get_onblur( );

    void set_onchange( object v);

    string get_onchange( );

    void set_onclick( object v);

    string get_onclick( );

    void set_ondblclick( object v);

    string get_ondblclick( );

    void set_onfocus( object v);

    string get_onfocus( );

    void set_onkeydown( object v);

    string get_onkeydown( );

    void set_onkeypress( object v);

    string get_onkeypress( );

    void set_onkeyup( object v);

    string get_onkeyup( );

    void set_onmousedown( object v);

    string get_onmousedown( );

    void set_onmousemove( object v);

    string get_onmousemove( );

    void set_onmouseout( object v);

    string get_onmouseout( );

    void set_onmouseover( object v);

    string get_onmouseover( );

    void set_onmouseup( object v);

    string get_onmouseup( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_required( object v);

    boolean get_required( );

    void set_size( object v);

    integer get_size( );

    void set_style( object v);

    string get_style( );

    void set_styleclass( object v);

    string get_styleclass( );

    void set_tabindex( object v);

    string get_tabindex( );

    void set_title( object v);

    string get_title( );

    void set_type( object v);

    string get_type( );

    void set_value( object v);

    object get_value( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexinputcheckbox extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string accesskey;
    string dir;
    boolean disabled;
    string id;
    boolean immediate;
    string label;
    string lang;
    string onblur;
    string onchange;
    string onclick;
    string ondblclick;
    string onfocus;
    string onkeydown;
    string onkeypress;
    string onkeyup;
    string onmousedown;
    string onmousemove;
    string onmouseout;
    string onmouseover;
    string onmouseup;
    string onselect;
    boolean rendered;
    boolean required;
    boolean selected;
    string style;
    string styleclass;
    string tabindex;
    string title;
    object value;
    void set_accesskey( object v);

    string get_accesskey( );

    void set_dir( object v);

    string get_dir( );

    void set_disabled( object v);

    boolean get_disabled( );

    void set_id( object v);

    string get_id( );

    void set_immediate( object v);

    boolean get_immediate( );

    void set_label( object v);

    string get_label( );

    void set_lang( object v);

    string get_lang( );

    void set_onblur( object v);

    string get_onblur( );

    void set_onchange( object v);

    string get_onchange( );

    void set_onclick( object v);

    string get_onclick( );

    void set_ondblclick( object v);

    string get_ondblclick( );

    void set_onfocus( object v);

    string get_onfocus( );

    void set_onkeydown( object v);

    string get_onkeydown( );

    void set_onkeypress( object v);

    string get_onkeypress( );

    void set_onkeyup( object v);

    string get_onkeyup( );

    void set_onmousedown( object v);

    string get_onmousedown( );

    void set_onmousemove( object v);

    string get_onmousemove( );

    void set_onmouseout( object v);

    string get_onmouseout( );

    void set_onmouseover( object v);

    string get_onmouseover( );

    void set_onmouseup( object v);

    string get_onmouseup( );

    void set_onselect( object v);

    string get_onselect( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_required( object v);

    boolean get_required( );

    void set_selected( object v);

    boolean get_selected( );

    void set_style( object v);

    string get_style( );

    void set_styleclass( object v);

    string get_styleclass( );

    void set_tabindex( object v);

    string get_tabindex( );

    void set_title( object v);

    string get_title( );

    void set_value( object v);

    object get_value( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexinputfield extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    string label;
    object list;
    string onblur;
    string onchange;
    string onclick;
    string ondblclick;
    string onfocus;
    string onkeydown;
    string onkeypress;
    string onkeyup;
    string onmousedown;
    string onmousemove;
    string onmouseout;
    string onmouseover;
    string onmouseup;
    string onselect;
    boolean rendered;
    boolean required;
    boolean showdatepicker;
    string style;
    string styleclass;
    integer taborderhint;
    string type;
    object value;
    void set_id( object v);

    string get_id( );

    void set_label( object v);

    string get_label( );

    void set_list( object v);

    object get_list( );

    void set_onblur( object v);

    string get_onblur( );

    void set_onchange( object v);

    string get_onchange( );

    void set_onclick( object v);

    string get_onclick( );

    void set_ondblclick( object v);

    string get_ondblclick( );

    void set_onfocus( object v);

    string get_onfocus( );

    void set_onkeydown( object v);

    string get_onkeydown( );

    void set_onkeypress( object v);

    string get_onkeypress( );

    void set_onkeyup( object v);

    string get_onkeyup( );

    void set_onmousedown( object v);

    string get_onmousedown( );

    void set_onmousemove( object v);

    string get_onmousemove( );

    void set_onmouseout( object v);

    string get_onmouseout( );

    void set_onmouseover( object v);

    string get_onmouseover( );

    void set_onmouseup( object v);

    string get_onmouseup( );

    void set_onselect( object v);

    string get_onselect( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_required( object v);

    boolean get_required( );

    void set_showdatepicker( object v);

    boolean get_showdatepicker( );

    void set_style( object v);

    string get_style( );

    void set_styleclass( object v);

    string get_styleclass( );

    void set_taborderhint( object v);

    integer get_taborderhint( );

    void set_type( object v);

    string get_type( );

    void set_value( object v);

    object get_value( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexinputfile extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string accept;
    string accesskey;
    string alt;
    string contenttype;
    string dir;
    boolean disabled;
    string filename;
    integer filesize;
    string id;
    string lang;
    string onblur;
    string onchange;
    string onclick;
    string ondblclick;
    string onfocus;
    string onkeydown;
    string onkeypress;
    string onkeyup;
    string onmousedown;
    string onmousemove;
    string onmouseout;
    string onmouseover;
    boolean rendered;
    boolean required;
    integer size;
    string style;
    string styleclass;
    integer tabindex;
    string title;
    blob value;
    void set_accept( object v);

    string get_accept( );

    void set_accesskey( object v);

    string get_accesskey( );

    void set_alt( object v);

    string get_alt( );

    void set_contenttype( object v);

    string get_contenttype( );

    void set_dir( object v);

    string get_dir( );

    void set_disabled( object v);

    boolean get_disabled( );

    void set_filename( object v);

    string get_filename( );

    void set_filesize( object v);

    integer get_filesize( );

    void set_id( object v);

    string get_id( );

    void set_lang( object v);

    string get_lang( );

    void set_onblur( object v);

    string get_onblur( );

    void set_onchange( object v);

    string get_onchange( );

    void set_onclick( object v);

    string get_onclick( );

    void set_ondblclick( object v);

    string get_ondblclick( );

    void set_onfocus( object v);

    string get_onfocus( );

    void set_onkeydown( object v);

    string get_onkeydown( );

    void set_onkeypress( object v);

    string get_onkeypress( );

    void set_onkeyup( object v);

    string get_onkeyup( );

    void set_onmousedown( object v);

    string get_onmousedown( );

    void set_onmousemove( object v);

    string get_onmousemove( );

    void set_onmouseout( object v);

    string get_onmouseout( );

    void set_onmouseover( object v);

    string get_onmouseover( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_required( object v);

    boolean get_required( );

    void set_size( object v);

    integer get_size( );

    void set_style( object v);

    string get_style( );

    void set_styleclass( object v);

    string get_styleclass( );

    void set_tabindex( object v);

    integer get_tabindex( );

    void set_title( object v);

    string get_title( );

    void set_value( object v);

    blob get_value( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexinputhidden extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    boolean immediate;
    boolean rendered;
    boolean required;
    object value;
    void set_id( object v);

    string get_id( );

    void set_immediate( object v);

    boolean get_immediate( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_required( object v);

    boolean get_required( );

    void set_value( object v);

    object get_value( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexinputsecret extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string accesskey;
    string alt;
    string dir;
    boolean disabled;
    string id;
    boolean immediate;
    string label;
    string lang;
    integer maxlength;
    string onblur;
    string onchange;
    string onclick;
    string ondblclick;
    string onfocus;
    string onkeydown;
    string onkeypress;
    string onkeyup;
    string onmousedown;
    string onmousemove;
    string onmouseout;
    string onmouseover;
    string onmouseup;
    string onselect;
    boolean readonly;
    boolean redisplay;
    boolean rendered;
    boolean required;
    integer size;
    string style;
    string styleclass;
    string tabindex;
    string title;
    object value;
    void set_accesskey( object v);

    string get_accesskey( );

    void set_alt( object v);

    string get_alt( );

    void set_dir( object v);

    string get_dir( );

    void set_disabled( object v);

    boolean get_disabled( );

    void set_id( object v);

    string get_id( );

    void set_immediate( object v);

    boolean get_immediate( );

    void set_label( object v);

    string get_label( );

    void set_lang( object v);

    string get_lang( );

    void set_maxlength( object v);

    integer get_maxlength( );

    void set_onblur( object v);

    string get_onblur( );

    void set_onchange( object v);

    string get_onchange( );

    void set_onclick( object v);

    string get_onclick( );

    void set_ondblclick( object v);

    string get_ondblclick( );

    void set_onfocus( object v);

    string get_onfocus( );

    void set_onkeydown( object v);

    string get_onkeydown( );

    void set_onkeypress( object v);

    string get_onkeypress( );

    void set_onkeyup( object v);

    string get_onkeyup( );

    void set_onmousedown( object v);

    string get_onmousedown( );

    void set_onmousemove( object v);

    string get_onmousemove( );

    void set_onmouseout( object v);

    string get_onmouseout( );

    void set_onmouseover( object v);

    string get_onmouseover( );

    void set_onmouseup( object v);

    string get_onmouseup( );

    void set_onselect( object v);

    string get_onselect( );

    void set_readonly( object v);

    boolean get_readonly( );

    void set_redisplay( object v);

    boolean get_redisplay( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_required( object v);

    boolean get_required( );

    void set_size( object v);

    integer get_size( );

    void set_style( object v);

    string get_style( );

    void set_styleclass( object v);

    string get_styleclass( );

    void set_tabindex( object v);

    string get_tabindex( );

    void set_title( object v);

    string get_title( );

    void set_value( object v);

    object get_value( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexinputtext extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string accesskey;
    string alt;
    string dir;
    boolean disabled;
    string id;
    string label;
    string lang;
    object list;
    integer maxlength;
    string onblur;
    string onchange;
    string onclick;
    string ondblclick;
    string onfocus;
    string onkeydown;
    string onkeypress;
    string onkeyup;
    string onmousedown;
    string onmousemove;
    string onmouseout;
    string onmouseover;
    string onmouseup;
    boolean rendered;
    boolean required;
    integer size;
    string style;
    string styleclass;
    string tabindex;
    string title;
    object value;
    void set_accesskey( object v);

    string get_accesskey( );

    void set_alt( object v);

    string get_alt( );

    void set_dir( object v);

    string get_dir( );

    void set_disabled( object v);

    boolean get_disabled( );

    void set_id( object v);

    string get_id( );

    void set_label( object v);

    string get_label( );

    void set_lang( object v);

    string get_lang( );

    void set_list( object v);

    object get_list( );

    void set_maxlength( object v);

    integer get_maxlength( );

    void set_onblur( object v);

    string get_onblur( );

    void set_onchange( object v);

    string get_onchange( );

    void set_onclick( object v);

    string get_onclick( );

    void set_ondblclick( object v);

    string get_ondblclick( );

    void set_onfocus( object v);

    string get_onfocus( );

    void set_onkeydown( object v);

    string get_onkeydown( );

    void set_onkeypress( object v);

    string get_onkeypress( );

    void set_onkeyup( object v);

    string get_onkeyup( );

    void set_onmousedown( object v);

    string get_onmousedown( );

    void set_onmousemove( object v);

    string get_onmousemove( );

    void set_onmouseout( object v);

    string get_onmouseout( );

    void set_onmouseover( object v);

    string get_onmouseover( );

    void set_onmouseup( object v);

    string get_onmouseup( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_required( object v);

    boolean get_required( );

    void set_size( object v);

    integer get_size( );

    void set_style( object v);

    string get_style( );

    void set_styleclass( object v);

    string get_styleclass( );

    void set_tabindex( object v);

    string get_tabindex( );

    void set_title( object v);

    string get_title( );

    void set_value( object v);

    object get_value( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexinputtextarea extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string accesskey;
    integer cols;
    string dir;
    boolean disabled;
    string id;
    string label;
    string lang;
    string onblur;
    string onchange;
    string onclick;
    string ondblclick;
    string onfocus;
    string onkeydown;
    string onkeypress;
    string onkeyup;
    string onmousedown;
    string onmousemove;
    string onmouseout;
    string onmouseover;
    string onmouseup;
    string onselect;
    boolean readonly;
    boolean rendered;
    boolean required;
    boolean richtext;
    integer rows;
    string style;
    string styleclass;
    string tabindex;
    string title;
    object value;
    void set_accesskey( object v);

    string get_accesskey( );

    void set_cols( object v);

    integer get_cols( );

    void set_dir( object v);

    string get_dir( );

    void set_disabled( object v);

    boolean get_disabled( );

    void set_id( object v);

    string get_id( );

    void set_label( object v);

    string get_label( );

    void set_lang( object v);

    string get_lang( );

    void set_onblur( object v);

    string get_onblur( );

    void set_onchange( object v);

    string get_onchange( );

    void set_onclick( object v);

    string get_onclick( );

    void set_ondblclick( object v);

    string get_ondblclick( );

    void set_onfocus( object v);

    string get_onfocus( );

    void set_onkeydown( object v);

    string get_onkeydown( );

    void set_onkeypress( object v);

    string get_onkeypress( );

    void set_onkeyup( object v);

    string get_onkeyup( );

    void set_onmousedown( object v);

    string get_onmousedown( );

    void set_onmousemove( object v);

    string get_onmousemove( );

    void set_onmouseout( object v);

    string get_onmouseout( );

    void set_onmouseover( object v);

    string get_onmouseover( );

    void set_onmouseup( object v);

    string get_onmouseup( );

    void set_onselect( object v);

    string get_onselect( );

    void set_readonly( object v);

    boolean get_readonly( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_required( object v);

    boolean get_required( );

    void set_richtext( object v);

    boolean get_richtext( );

    void set_rows( object v);

    integer get_rows( );

    void set_style( object v);

    string get_style( );

    void set_styleclass( object v);

    string get_styleclass( );

    void set_tabindex( object v);

    string get_tabindex( );

    void set_title( object v);

    string get_title( );

    void set_value( object v);

    object get_value( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexinsert extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string name;
    void set_name( object v);

    string get_name( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexlegend extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string font;
    string id;
    integer padding;
    string position;
    boolean rendered;
    integer spacing;
    void set_font( object v);

    string get_font( );

    void set_id( object v);

    string get_id( );

    void set_padding( object v);

    integer get_padding( );

    void set_position( object v);

    string get_position( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_spacing( object v);

    integer get_spacing( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexlineseries extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string axis;
    boolean fill;
    string fillcolor;
    boolean highlight;
    string highlightstrokewidth;
    string id;
    string markerfill;
    integer markersize;
    string markertype;
    string opacity;
    boolean rendered;
    string rendererfn;
    boolean showinlegend;
    integer smooth;
    string strokecolor;
    string strokewidth;
    boolean tips;
    string title;
    string xfield;
    string yfield;
    void set_axis( object v);

    string get_axis( );

    void set_fill( object v);

    boolean get_fill( );

    void set_fillcolor( object v);

    string get_fillcolor( );

    void set_highlight( object v);

    boolean get_highlight( );

    void set_highlightstrokewidth( object v);

    string get_highlightstrokewidth( );

    void set_id( object v);

    string get_id( );

    void set_markerfill( object v);

    string get_markerfill( );

    void set_markersize( object v);

    integer get_markersize( );

    void set_markertype( object v);

    string get_markertype( );

    void set_opacity( object v);

    string get_opacity( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_rendererfn( object v);

    string get_rendererfn( );

    void set_showinlegend( object v);

    boolean get_showinlegend( );

    void set_smooth( object v);

    integer get_smooth( );

    void set_strokecolor( object v);

    string get_strokecolor( );

    void set_strokewidth( object v);

    string get_strokewidth( );

    void set_tips( object v);

    boolean get_tips( );

    void set_title( object v);

    string get_title( );

    void set_xfield( object v);

    string get_xfield( );

    void set_yfield( object v);

    string get_yfield( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexlistviews extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    boolean rendered;
    string type;
    void set_id( object v);

    string get_id( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_type( object v);

    string get_type( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexlogcallpublisher extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    boolean autocollapsebody;
    id entityid;
    string id;
    string logcallbody;
    string logcallbodyheight;
    string onsubmitfailure;
    string onsubmitsuccess;
    boolean rendered;
    object rerender;
    boolean showadditionalfields;
    boolean showsubmitbutton;
    string submitbuttonname;
    string submitfunctionname;
    string title;
    string width;
    void set_autocollapsebody( object v);

    boolean get_autocollapsebody( );

    void set_entityid( object v);

    id get_entityid( );

    void set_id( object v);

    string get_id( );

    void set_logcallbody( object v);

    string get_logcallbody( );

    void set_logcallbodyheight( object v);

    string get_logcallbodyheight( );

    void set_onsubmitfailure( object v);

    string get_onsubmitfailure( );

    void set_onsubmitsuccess( object v);

    string get_onsubmitsuccess( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_rerender( object v);

    object get_rerender( );

    void set_showadditionalfields( object v);

    boolean get_showadditionalfields( );

    void set_showsubmitbutton( object v);

    boolean get_showsubmitbutton( );

    void set_submitbuttonname( object v);

    string get_submitbuttonname( );

    void set_submitfunctionname( object v);

    string get_submitfunctionname( );

    void set_title( object v);

    string get_title( );

    void set_width( object v);

    string get_width( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexmap extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    object center;
    string height;
    string id;
    string maptype;
    boolean rendered;
    boolean showonlyactiveinfowindow;
    string width;
    integer zoomlevel;
    void set_center( object v);

    object get_center( );

    void set_height( object v);

    string get_height( );

    void set_id( object v);

    string get_id( );

    void set_maptype( object v);

    string get_maptype( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_showonlyactiveinfowindow( object v);

    boolean get_showonlyactiveinfowindow( );

    void set_width( object v);

    string get_width( );

    void set_zoomlevel( object v);

    integer get_zoomlevel( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexmapinfowindow extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    integer maxwidth;
    boolean rendered;
    void set_id( object v);

    string get_id( );

    void set_maxwidth( object v);

    integer get_maxwidth( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexmapmarker extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string icon;
    string id;
    object position;
    boolean rendered;
    string title;
    void set_icon( object v);

    string get_icon( );

    void set_id( object v);

    string get_id( );

    void set_position( object v);

    object get_position( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_title( object v);

    string get_title( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexmessage extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string dir;
    string id;
    string lang;
    boolean rendered;
    string style;
    string styleclass;
    string title;
    void set_dir( object v);

    string get_dir( );

    void set_id( object v);

    string get_id( );

    void set_lang( object v);

    string get_lang( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_style( object v);

    string get_style( );

    void set_styleclass( object v);

    string get_styleclass( );

    void set_title( object v);

    string get_title( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexmessages extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string dir;
    boolean globalonly;
    string id;
    string lang;
    string layout;
    boolean rendered;
    string style;
    string styleclass;
    string title;
    void set_dir( object v);

    string get_dir( );

    void set_globalonly( object v);

    boolean get_globalonly( );

    void set_id( object v);

    string get_id( );

    void set_lang( object v);

    string get_lang( );

    void set_layout( object v);

    string get_layout( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_style( object v);

    string get_style( );

    void set_styleclass( object v);

    string get_styleclass( );

    void set_title( object v);

    string get_title( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexmilestonetracker extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string entityid;
    string id;
    boolean rendered;
    void set_entityid( object v);

    string get_entityid( );

    void set_id( object v);

    string get_id( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexoutputfield extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string dir;
    string id;
    string label;
    string lang;
    boolean rendered;
    string style;
    string styleclass;
    string title;
    object value;
    void set_dir( object v);

    string get_dir( );

    void set_id( object v);

    string get_id( );

    void set_label( object v);

    string get_label( );

    void set_lang( object v);

    string get_lang( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_style( object v);

    string get_style( );

    void set_styleclass( object v);

    string get_styleclass( );

    void set_title( object v);

    string get_title( );

    void set_value( object v);

    object get_value( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexoutputlabel extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string accesskey;
    string dir;
    boolean escape;
    string id;
    string lang;
    string onblur;
    string onclick;
    string ondblclick;
    string onfocus;
    string onkeydown;
    string onkeypress;
    string onkeyup;
    string onmousedown;
    string onmousemove;
    string onmouseout;
    string onmouseover;
    string onmouseup;
    boolean rendered;
    string style;
    string styleclass;
    string tabindex;
    string title;
    object value;
    void set_accesskey( object v);

    string get_accesskey( );

    void set_dir( object v);

    string get_dir( );

    void set_escape( object v);

    boolean get_escape( );

    void set_id( object v);

    string get_id( );

    void set_lang( object v);

    string get_lang( );

    void set_onblur( object v);

    string get_onblur( );

    void set_onclick( object v);

    string get_onclick( );

    void set_ondblclick( object v);

    string get_ondblclick( );

    void set_onfocus( object v);

    string get_onfocus( );

    void set_onkeydown( object v);

    string get_onkeydown( );

    void set_onkeypress( object v);

    string get_onkeypress( );

    void set_onkeyup( object v);

    string get_onkeyup( );

    void set_onmousedown( object v);

    string get_onmousedown( );

    void set_onmousemove( object v);

    string get_onmousemove( );

    void set_onmouseout( object v);

    string get_onmouseout( );

    void set_onmouseover( object v);

    string get_onmouseover( );

    void set_onmouseup( object v);

    string get_onmouseup( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_style( object v);

    string get_style( );

    void set_styleclass( object v);

    string get_styleclass( );

    void set_tabindex( object v);

    string get_tabindex( );

    void set_title( object v);

    string get_title( );

    void set_value( object v);

    object get_value( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexoutputlink extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string accesskey;
    string charset;
    string coords;
    string dir;
    boolean disabled;
    string hreflang;
    string id;
    string lang;
    string onblur;
    string onclick;
    string ondblclick;
    string onfocus;
    string onkeydown;
    string onkeypress;
    string onkeyup;
    string onmousedown;
    string onmousemove;
    string onmouseout;
    string onmouseover;
    string onmouseup;
    string rel;
    boolean rendered;
    string rev;
    string shape;
    string style;
    string styleclass;
    string tabindex;
    string target;
    string title;
    string type;
    object value;
    void set_accesskey( object v);

    string get_accesskey( );

    void set_charset( object v);

    string get_charset( );

    void set_coords( object v);

    string get_coords( );

    void set_dir( object v);

    string get_dir( );

    void set_disabled( object v);

    boolean get_disabled( );

    void set_hreflang( object v);

    string get_hreflang( );

    void set_id( object v);

    string get_id( );

    void set_lang( object v);

    string get_lang( );

    void set_onblur( object v);

    string get_onblur( );

    void set_onclick( object v);

    string get_onclick( );

    void set_ondblclick( object v);

    string get_ondblclick( );

    void set_onfocus( object v);

    string get_onfocus( );

    void set_onkeydown( object v);

    string get_onkeydown( );

    void set_onkeypress( object v);

    string get_onkeypress( );

    void set_onkeyup( object v);

    string get_onkeyup( );

    void set_onmousedown( object v);

    string get_onmousedown( );

    void set_onmousemove( object v);

    string get_onmousemove( );

    void set_onmouseout( object v);

    string get_onmouseout( );

    void set_onmouseover( object v);

    string get_onmouseover( );

    void set_onmouseup( object v);

    string get_onmouseup( );

    void set_rel( object v);

    string get_rel( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_rev( object v);

    string get_rev( );

    void set_shape( object v);

    string get_shape( );

    void set_style( object v);

    string get_style( );

    void set_styleclass( object v);

    string get_styleclass( );

    void set_tabindex( object v);

    string get_tabindex( );

    void set_target( object v);

    string get_target( );

    void set_title( object v);

    string get_title( );

    void set_type( object v);

    string get_type( );

    void set_value( object v);

    object get_value( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexoutputpanel extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string dir;
    string id;
    string lang;
    string layout;
    string onclick;
    string ondblclick;
    string onkeydown;
    string onkeypress;
    string onkeyup;
    string onmousedown;
    string onmousemove;
    string onmouseout;
    string onmouseover;
    string onmouseup;
    boolean rendered;
    string style;
    string styleclass;
    string title;
    void set_dir( object v);

    string get_dir( );

    void set_id( object v);

    string get_id( );

    void set_lang( object v);

    string get_lang( );

    void set_layout( object v);

    string get_layout( );

    void set_onclick( object v);

    string get_onclick( );

    void set_ondblclick( object v);

    string get_ondblclick( );

    void set_onkeydown( object v);

    string get_onkeydown( );

    void set_onkeypress( object v);

    string get_onkeypress( );

    void set_onkeyup( object v);

    string get_onkeyup( );

    void set_onmousedown( object v);

    string get_onmousedown( );

    void set_onmousemove( object v);

    string get_onmousemove( );

    void set_onmouseout( object v);

    string get_onmouseout( );

    void set_onmouseover( object v);

    string get_onmouseover( );

    void set_onmouseup( object v);

    string get_onmouseup( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_style( object v);

    string get_style( );

    void set_styleclass( object v);

    string get_styleclass( );

    void set_title( object v);

    string get_title( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexoutputtext extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string dir;
    boolean escape;
    string id;
    string label;
    string lang;
    boolean rendered;
    string style;
    string styleclass;
    string title;
    object value;
    void set_dir( object v);

    string get_dir( );

    void set_escape( object v);

    boolean get_escape( );

    void set_id( object v);

    string get_id( );

    void set_label( object v);

    string get_label( );

    void set_lang( object v);

    string get_lang( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_style( object v);

    string get_style( );

    void set_styleclass( object v);

    string get_styleclass( );

    void set_title( object v);

    string get_title( );

    void set_value( object v);

    object get_value( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexpage extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    apexpages.action action;
    double apiversion;
    boolean applybodytag;
    boolean applyhtmltag;
    boolean cache;
    string contenttype;
    string controller;
    boolean deferlastcommanduntilready;
    string doctype;
    integer expires;
    string extensions;
    string id;
    string label;
    string language;
    string manifest;
    string name;
    string pagestyle;
    boolean readonly;
    string recordsetname;
    string recordsetvar;
    string renderas;
    boolean rendered;
    boolean setup;
    boolean showchat;
    boolean showheader;
    boolean showquickactionvfheader;
    boolean sidebar;
    string standardcontroller;
    boolean standardstylesheets;
    string tabstyle;
    string title;
    boolean wizard;
    void set_action( object v);

    apexpages.action get_action( );

    void set_apiversion( object v);

    double get_apiversion( );

    void set_applybodytag( object v);

    boolean get_applybodytag( );

    void set_applyhtmltag( object v);

    boolean get_applyhtmltag( );

    void set_cache( object v);

    boolean get_cache( );

    void set_contenttype( object v);

    string get_contenttype( );

    void set_controller( object v);

    string get_controller( );

    void set_deferlastcommanduntilready( object v);

    boolean get_deferlastcommanduntilready( );

    void set_doctype( object v);

    string get_doctype( );

    void set_expires( object v);

    integer get_expires( );

    void set_extensions( object v);

    string get_extensions( );

    void set_id( object v);

    string get_id( );

    void set_label( object v);

    string get_label( );

    void set_language( object v);

    string get_language( );

    void set_manifest( object v);

    string get_manifest( );

    void set_name( object v);

    string get_name( );

    void set_pagestyle( object v);

    string get_pagestyle( );

    void set_readonly( object v);

    boolean get_readonly( );

    void set_recordsetname( object v);

    string get_recordsetname( );

    void set_recordsetvar( object v);

    string get_recordsetvar( );

    void set_renderas( object v);

    string get_renderas( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_setup( object v);

    boolean get_setup( );

    void set_showchat( object v);

    boolean get_showchat( );

    void set_showheader( object v);

    boolean get_showheader( );

    void set_showquickactionvfheader( object v);

    boolean get_showquickactionvfheader( );

    void set_sidebar( object v);

    boolean get_sidebar( );

    void set_standardcontroller( object v);

    string get_standardcontroller( );

    void set_standardstylesheets( object v);

    boolean get_standardstylesheets( );

    void set_tabstyle( object v);

    string get_tabstyle( );

    void set_title( object v);

    string get_title( );

    void set_wizard( object v);

    boolean get_wizard( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexpageblock extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string dir;
    string helptitle;
    string helpurl;
    string id;
    string lang;
    string mode;
    string onclick;
    string ondblclick;
    string onkeydown;
    string onkeypress;
    string onkeyup;
    string onmousedown;
    string onmousemove;
    string onmouseout;
    string onmouseover;
    string onmouseup;
    boolean rendered;
    string tabstyle;
    string title;
    void set_dir( object v);

    string get_dir( );

    void set_helptitle( object v);

    string get_helptitle( );

    void set_helpurl( object v);

    string get_helpurl( );

    void set_id( object v);

    string get_id( );

    void set_lang( object v);

    string get_lang( );

    void set_mode( object v);

    string get_mode( );

    void set_onclick( object v);

    string get_onclick( );

    void set_ondblclick( object v);

    string get_ondblclick( );

    void set_onkeydown( object v);

    string get_onkeydown( );

    void set_onkeypress( object v);

    string get_onkeypress( );

    void set_onkeyup( object v);

    string get_onkeyup( );

    void set_onmousedown( object v);

    string get_onmousedown( );

    void set_onmousemove( object v);

    string get_onmousemove( );

    void set_onmouseout( object v);

    string get_onmouseout( );

    void set_onmouseover( object v);

    string get_onmouseover( );

    void set_onmouseup( object v);

    string get_onmouseup( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_tabstyle( object v);

    string get_tabstyle( );

    void set_title( object v);

    string get_title( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexpageblockbuttons extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string dir;
    string id;
    string lang;
    string location;
    string onclick;
    string ondblclick;
    string onkeydown;
    string onkeypress;
    string onkeyup;
    string onmousedown;
    string onmousemove;
    string onmouseout;
    string onmouseover;
    string onmouseup;
    boolean rendered;
    string style;
    string styleclass;
    string title;
    void set_dir( object v);

    string get_dir( );

    void set_id( object v);

    string get_id( );

    void set_lang( object v);

    string get_lang( );

    void set_location( object v);

    string get_location( );

    void set_onclick( object v);

    string get_onclick( );

    void set_ondblclick( object v);

    string get_ondblclick( );

    void set_onkeydown( object v);

    string get_onkeydown( );

    void set_onkeypress( object v);

    string get_onkeypress( );

    void set_onkeyup( object v);

    string get_onkeyup( );

    void set_onmousedown( object v);

    string get_onmousedown( );

    void set_onmousemove( object v);

    string get_onmousemove( );

    void set_onmouseout( object v);

    string get_onmouseout( );

    void set_onmouseover( object v);

    string get_onmouseover( );

    void set_onmouseup( object v);

    string get_onmouseup( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_style( object v);

    string get_style( );

    void set_styleclass( object v);

    string get_styleclass( );

    void set_title( object v);

    string get_title( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexpageblocksection extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    boolean collapsible;
    integer columns;
    string dir;
    string id;
    string lang;
    string onclick;
    string ondblclick;
    string onkeydown;
    string onkeypress;
    string onkeyup;
    string onmousedown;
    string onmousemove;
    string onmouseout;
    string onmouseover;
    string onmouseup;
    boolean rendered;
    boolean showheader;
    string title;
    void set_collapsible( object v);

    boolean get_collapsible( );

    void set_columns( object v);

    integer get_columns( );

    void set_dir( object v);

    string get_dir( );

    void set_id( object v);

    string get_id( );

    void set_lang( object v);

    string get_lang( );

    void set_onclick( object v);

    string get_onclick( );

    void set_ondblclick( object v);

    string get_ondblclick( );

    void set_onkeydown( object v);

    string get_onkeydown( );

    void set_onkeypress( object v);

    string get_onkeypress( );

    void set_onkeyup( object v);

    string get_onkeyup( );

    void set_onmousedown( object v);

    string get_onmousedown( );

    void set_onmousemove( object v);

    string get_onmousemove( );

    void set_onmouseout( object v);

    string get_onmouseout( );

    void set_onmouseover( object v);

    string get_onmouseover( );

    void set_onmouseup( object v);

    string get_onmouseup( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_showheader( object v);

    boolean get_showheader( );

    void set_title( object v);

    string get_title( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexpageblocksectionitem extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string datastyle;
    string datastyleclass;
    string datatitle;
    string dir;
    string helptext;
    string id;
    string labelstyle;
    string labelstyleclass;
    string labeltitle;
    string lang;
    string ondataclick;
    string ondatadblclick;
    string ondatakeydown;
    string ondatakeypress;
    string ondatakeyup;
    string ondatamousedown;
    string ondatamousemove;
    string ondatamouseout;
    string ondatamouseover;
    string ondatamouseup;
    string onlabelclick;
    string onlabeldblclick;
    string onlabelkeydown;
    string onlabelkeypress;
    string onlabelkeyup;
    string onlabelmousedown;
    string onlabelmousemove;
    string onlabelmouseout;
    string onlabelmouseover;
    string onlabelmouseup;
    boolean rendered;
    void set_datastyle( object v);

    string get_datastyle( );

    void set_datastyleclass( object v);

    string get_datastyleclass( );

    void set_datatitle( object v);

    string get_datatitle( );

    void set_dir( object v);

    string get_dir( );

    void set_helptext( object v);

    string get_helptext( );

    void set_id( object v);

    string get_id( );

    void set_labelstyle( object v);

    string get_labelstyle( );

    void set_labelstyleclass( object v);

    string get_labelstyleclass( );

    void set_labeltitle( object v);

    string get_labeltitle( );

    void set_lang( object v);

    string get_lang( );

    void set_ondataclick( object v);

    string get_ondataclick( );

    void set_ondatadblclick( object v);

    string get_ondatadblclick( );

    void set_ondatakeydown( object v);

    string get_ondatakeydown( );

    void set_ondatakeypress( object v);

    string get_ondatakeypress( );

    void set_ondatakeyup( object v);

    string get_ondatakeyup( );

    void set_ondatamousedown( object v);

    string get_ondatamousedown( );

    void set_ondatamousemove( object v);

    string get_ondatamousemove( );

    void set_ondatamouseout( object v);

    string get_ondatamouseout( );

    void set_ondatamouseover( object v);

    string get_ondatamouseover( );

    void set_ondatamouseup( object v);

    string get_ondatamouseup( );

    void set_onlabelclick( object v);

    string get_onlabelclick( );

    void set_onlabeldblclick( object v);

    string get_onlabeldblclick( );

    void set_onlabelkeydown( object v);

    string get_onlabelkeydown( );

    void set_onlabelkeypress( object v);

    string get_onlabelkeypress( );

    void set_onlabelkeyup( object v);

    string get_onlabelkeyup( );

    void set_onlabelmousedown( object v);

    string get_onlabelmousedown( );

    void set_onlabelmousemove( object v);

    string get_onlabelmousemove( );

    void set_onlabelmouseout( object v);

    string get_onlabelmouseout( );

    void set_onlabelmouseover( object v);

    string get_onlabelmouseover( );

    void set_onlabelmouseup( object v);

    string get_onlabelmouseup( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexpageblocktable extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string align;
    string bgcolor;
    string border;
    string captionclass;
    string captionstyle;
    string cellpadding;
    string cellspacing;
    string columnclasses;
    integer columns;
    string columnswidth;
    string dir;
    integer first;
    string footerclass;
    string frame;
    string headerclass;
    string id;
    string lang;
    string onclick;
    string ondblclick;
    string onkeydown;
    string onkeypress;
    string onkeyup;
    string onmousedown;
    string onmousemove;
    string onmouseout;
    string onmouseover;
    string onmouseup;
    string onrowclick;
    string onrowdblclick;
    string onrowmousedown;
    string onrowmousemove;
    string onrowmouseout;
    string onrowmouseover;
    string onrowmouseup;
    boolean rendered;
    string rowclasses;
    integer rows;
    string rules;
    string style;
    string styleclass;
    string summary;
    string title;
    object value;
    string var;
    string width;
    void set_align( object v);

    string get_align( );

    void set_bgcolor( object v);

    string get_bgcolor( );

    void set_border( object v);

    string get_border( );

    void set_captionclass( object v);

    string get_captionclass( );

    void set_captionstyle( object v);

    string get_captionstyle( );

    void set_cellpadding( object v);

    string get_cellpadding( );

    void set_cellspacing( object v);

    string get_cellspacing( );

    void set_columnclasses( object v);

    string get_columnclasses( );

    void set_columns( object v);

    integer get_columns( );

    void set_columnswidth( object v);

    string get_columnswidth( );

    void set_dir( object v);

    string get_dir( );

    void set_first( object v);

    integer get_first( );

    void set_footerclass( object v);

    string get_footerclass( );

    void set_frame( object v);

    string get_frame( );

    void set_headerclass( object v);

    string get_headerclass( );

    void set_id( object v);

    string get_id( );

    void set_lang( object v);

    string get_lang( );

    void set_onclick( object v);

    string get_onclick( );

    void set_ondblclick( object v);

    string get_ondblclick( );

    void set_onkeydown( object v);

    string get_onkeydown( );

    void set_onkeypress( object v);

    string get_onkeypress( );

    void set_onkeyup( object v);

    string get_onkeyup( );

    void set_onmousedown( object v);

    string get_onmousedown( );

    void set_onmousemove( object v);

    string get_onmousemove( );

    void set_onmouseout( object v);

    string get_onmouseout( );

    void set_onmouseover( object v);

    string get_onmouseover( );

    void set_onmouseup( object v);

    string get_onmouseup( );

    void set_onrowclick( object v);

    string get_onrowclick( );

    void set_onrowdblclick( object v);

    string get_onrowdblclick( );

    void set_onrowmousedown( object v);

    string get_onrowmousedown( );

    void set_onrowmousemove( object v);

    string get_onrowmousemove( );

    void set_onrowmouseout( object v);

    string get_onrowmouseout( );

    void set_onrowmouseover( object v);

    string get_onrowmouseover( );

    void set_onrowmouseup( object v);

    string get_onrowmouseup( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_rowclasses( object v);

    string get_rowclasses( );

    void set_rows( object v);

    integer get_rows( );

    void set_rules( object v);

    string get_rules( );

    void set_style( object v);

    string get_style( );

    void set_styleclass( object v);

    string get_styleclass( );

    void set_summary( object v);

    string get_summary( );

    void set_title( object v);

    string get_title( );

    void set_value( object v);

    object get_value( );

    void set_var( object v);

    string get_var( );

    void set_width( object v);

    string get_width( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexpagemessage extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string detail;
    boolean escape;
    string id;
    boolean rendered;
    string severity;
    integer strength;
    string summary;
    string title;
    void set_detail( object v);

    string get_detail( );

    void set_escape( object v);

    boolean get_escape( );

    void set_id( object v);

    string get_id( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_severity( object v);

    string get_severity( );

    void set_strength( object v);

    integer get_strength( );

    void set_summary( object v);

    string get_summary( );

    void set_title( object v);

    string get_title( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexpagemessages extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    boolean escape;
    string id;
    boolean rendered;
    boolean showdetail;
    void set_escape( object v);

    boolean get_escape( );

    void set_id( object v);

    string get_id( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_showdetail( object v);

    boolean get_showdetail( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexpanelbar extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string contentclass;
    string contentstyle;
    string headerclass;
    string headerclassactive;
    string headerstyle;
    string headerstyleactive;
    string height;
    string id;
    object items;
    boolean rendered;
    string style;
    string styleclass;
    string switchtype;
    object value;
    string var;
    string width;
    void set_contentclass( object v);

    string get_contentclass( );

    void set_contentstyle( object v);

    string get_contentstyle( );

    void set_headerclass( object v);

    string get_headerclass( );

    void set_headerclassactive( object v);

    string get_headerclassactive( );

    void set_headerstyle( object v);

    string get_headerstyle( );

    void set_headerstyleactive( object v);

    string get_headerstyleactive( );

    void set_height( object v);

    string get_height( );

    void set_id( object v);

    string get_id( );

    void set_items( object v);

    object get_items( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_style( object v);

    string get_style( );

    void set_styleclass( object v);

    string get_styleclass( );

    void set_switchtype( object v);

    string get_switchtype( );

    void set_value( object v);

    object get_value( );

    void set_var( object v);

    string get_var( );

    void set_width( object v);

    string get_width( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexpanelbaritem extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string contentclass;
    string contentstyle;
    string expanded;
    string headerclass;
    string headerclassactive;
    string headerstyle;
    string headerstyleactive;
    string id;
    string label;
    object name;
    string onenter;
    string onleave;
    boolean rendered;
    void set_contentclass( object v);

    string get_contentclass( );

    void set_contentstyle( object v);

    string get_contentstyle( );

    void set_expanded( object v);

    string get_expanded( );

    void set_headerclass( object v);

    string get_headerclass( );

    void set_headerclassactive( object v);

    string get_headerclassactive( );

    void set_headerstyle( object v);

    string get_headerstyle( );

    void set_headerstyleactive( object v);

    string get_headerstyleactive( );

    void set_id( object v);

    string get_id( );

    void set_label( object v);

    string get_label( );

    void set_name( object v);

    object get_name( );

    void set_onenter( object v);

    string get_onenter( );

    void set_onleave( object v);

    string get_onleave( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexpanelgrid extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string bgcolor;
    integer border;
    string captionclass;
    string captionstyle;
    string cellpadding;
    string cellspacing;
    string columnclasses;
    integer columns;
    string dir;
    string footerclass;
    string frame;
    string headerclass;
    string id;
    string lang;
    string onclick;
    string ondblclick;
    string onkeydown;
    string onkeypress;
    string onkeyup;
    string onmousedown;
    string onmousemove;
    string onmouseout;
    string onmouseover;
    string onmouseup;
    boolean rendered;
    string rowclasses;
    string rules;
    string style;
    string styleclass;
    string summary;
    string title;
    string width;
    void set_bgcolor( object v);

    string get_bgcolor( );

    void set_border( object v);

    integer get_border( );

    void set_captionclass( object v);

    string get_captionclass( );

    void set_captionstyle( object v);

    string get_captionstyle( );

    void set_cellpadding( object v);

    string get_cellpadding( );

    void set_cellspacing( object v);

    string get_cellspacing( );

    void set_columnclasses( object v);

    string get_columnclasses( );

    void set_columns( object v);

    integer get_columns( );

    void set_dir( object v);

    string get_dir( );

    void set_footerclass( object v);

    string get_footerclass( );

    void set_frame( object v);

    string get_frame( );

    void set_headerclass( object v);

    string get_headerclass( );

    void set_id( object v);

    string get_id( );

    void set_lang( object v);

    string get_lang( );

    void set_onclick( object v);

    string get_onclick( );

    void set_ondblclick( object v);

    string get_ondblclick( );

    void set_onkeydown( object v);

    string get_onkeydown( );

    void set_onkeypress( object v);

    string get_onkeypress( );

    void set_onkeyup( object v);

    string get_onkeyup( );

    void set_onmousedown( object v);

    string get_onmousedown( );

    void set_onmousemove( object v);

    string get_onmousemove( );

    void set_onmouseout( object v);

    string get_onmouseout( );

    void set_onmouseover( object v);

    string get_onmouseover( );

    void set_onmouseup( object v);

    string get_onmouseup( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_rowclasses( object v);

    string get_rowclasses( );

    void set_rules( object v);

    string get_rules( );

    void set_style( object v);

    string get_style( );

    void set_styleclass( object v);

    string get_styleclass( );

    void set_summary( object v);

    string get_summary( );

    void set_title( object v);

    string get_title( );

    void set_width( object v);

    string get_width( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexpanelgroup extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    string layout;
    boolean rendered;
    string style;
    string styleclass;
    void set_id( object v);

    string get_id( );

    void set_layout( object v);

    string get_layout( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_style( object v);

    string get_style( );

    void set_styleclass( object v);

    string get_styleclass( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexparam extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    string name;
    object assignto;
    object value;
    void set_id( object v);

    string get_id( );

    void set_name( object v);

    string get_name( );

    void set_assignto( object v);

    object get_assignto( );

    void set_value( object v);

    object get_value( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexpieseries extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string colorset;
    string datafield;
    integer donut;
    boolean highlight;
    string id;
    string labelfield;
    boolean rendered;
    string rendererfn;
    boolean showinlegend;
    boolean tips;
    void set_colorset( object v);

    string get_colorset( );

    void set_datafield( object v);

    string get_datafield( );

    void set_donut( object v);

    integer get_donut( );

    void set_highlight( object v);

    boolean get_highlight( );

    void set_id( object v);

    string get_id( );

    void set_labelfield( object v);

    string get_labelfield( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_rendererfn( object v);

    string get_rendererfn( );

    void set_showinlegend( object v);

    boolean get_showinlegend( );

    void set_tips( object v);

    boolean get_tips( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexradarseries extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string fill;
    boolean highlight;
    string id;
    string markerfill;
    integer markersize;
    string markertype;
    integer opacity;
    boolean rendered;
    boolean showinlegend;
    string strokecolor;
    integer strokewidth;
    boolean tips;
    string title;
    string xfield;
    string yfield;
    void set_fill( object v);

    string get_fill( );

    void set_highlight( object v);

    boolean get_highlight( );

    void set_id( object v);

    string get_id( );

    void set_markerfill( object v);

    string get_markerfill( );

    void set_markersize( object v);

    integer get_markersize( );

    void set_markertype( object v);

    string get_markertype( );

    void set_opacity( object v);

    integer get_opacity( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_showinlegend( object v);

    boolean get_showinlegend( );

    void set_strokecolor( object v);

    string get_strokecolor( );

    void set_strokewidth( object v);

    integer get_strokewidth( );

    void set_tips( object v);

    boolean get_tips( );

    void set_title( object v);

    string get_title( );

    void set_xfield( object v);

    string get_xfield( );

    void set_yfield( object v);

    string get_yfield( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexrelatedlist extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    string list;
    integer pagesize;
    boolean rendered;
    string subject;
    string title;
    void set_id( object v);

    string get_id( );

    void set_list( object v);

    string get_list( );

    void set_pagesize( object v);

    integer get_pagesize( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_subject( object v);

    string get_subject( );

    void set_title( object v);

    string get_title( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexremoteobjectfield extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    string jsshorthand;
    string name;
    boolean rendered;
    void set_id( object v);

    string get_id( );

    void set_jsshorthand( object v);

    string get_jsshorthand( );

    void set_name( object v);

    string get_name( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexremoteobjectmodel extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string create;
    string fields;
    string id;
    string jsshorthand;
    string name;
    boolean rendered;
    string retrieve;
    void set_create( object v);

    string get_create( );

    void set_fields( object v);

    string get_fields( );

    void set_id( object v);

    string get_id( );

    void set_jsshorthand( object v);

    string get_jsshorthand( );

    void set_name( object v);

    string get_name( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_retrieve( object v);

    string get_retrieve( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexremoteobjects extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string create;
    string id;
    string jsnamespace;
    boolean rendered;
    string retrieve;
    void set_create( object v);

    string get_create( );

    void set_id( object v);

    string get_id( );

    void set_jsnamespace( object v);

    string get_jsnamespace( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_retrieve( object v);

    string get_retrieve( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexrepeat extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    integer first;
    string id;
    boolean rendered;
    integer rows;
    object value;
    string var;
    void set_first( object v);

    integer get_first( );

    void set_id( object v);

    string get_id( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_rows( object v);

    integer get_rows( );

    void set_value( object v);

    object get_value( );

    void set_var( object v);

    string get_var( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexscatterseries extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string axis;
    boolean highlight;
    string id;
    string markerfill;
    integer markersize;
    string markertype;
    boolean rendered;
    string rendererfn;
    boolean showinlegend;
    boolean tips;
    string title;
    string xfield;
    string yfield;
    void set_axis( object v);

    string get_axis( );

    void set_highlight( object v);

    boolean get_highlight( );

    void set_id( object v);

    string get_id( );

    void set_markerfill( object v);

    string get_markerfill( );

    void set_markersize( object v);

    integer get_markersize( );

    void set_markertype( object v);

    string get_markertype( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_rendererfn( object v);

    string get_rendererfn( );

    void set_showinlegend( object v);

    boolean get_showinlegend( );

    void set_tips( object v);

    boolean get_tips( );

    void set_title( object v);

    string get_title( );

    void set_xfield( object v);

    string get_xfield( );

    void set_yfield( object v);

    string get_yfield( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexscontrol extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string controlname;
    integer height;
    string id;
    boolean rendered;
    boolean scrollbars;
    object subject;
    integer width;
    void set_controlname( object v);

    string get_controlname( );

    void set_height( object v);

    integer get_height( );

    void set_id( object v);

    string get_id( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_scrollbars( object v);

    boolean get_scrollbars( );

    void set_subject( object v);

    object get_subject( );

    void set_width( object v);

    integer get_width( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexsectionheader extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string description;
    string help;
    string id;
    string printurl;
    boolean rendered;
    string subtitle;
    string title;
    void set_description( object v);

    string get_description( );

    void set_help( object v);

    string get_help( );

    void set_id( object v);

    string get_id( );

    void set_printurl( object v);

    string get_printurl( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_subtitle( object v);

    string get_subtitle( );

    void set_title( object v);

    string get_title( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexselectcheckboxes extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string accesskey;
    integer border;
    boolean bordervisible;
    string dir;
    boolean disabled;
    string disabledclass;
    string enabledclass;
    string id;
    boolean immediate;
    string label;
    string lang;
    string layout;
    boolean legendinvisible;
    string legendtext;
    string onblur;
    string onchange;
    string onclick;
    string ondblclick;
    string onfocus;
    string onkeydown;
    string onkeypress;
    string onkeyup;
    string onmousedown;
    string onmousemove;
    string onmouseout;
    string onmouseover;
    string onmouseup;
    string onselect;
    boolean readonly;
    boolean rendered;
    boolean required;
    string style;
    string styleclass;
    string tabindex;
    string title;
    object value;
    void set_accesskey( object v);

    string get_accesskey( );

    void set_border( object v);

    integer get_border( );

    void set_bordervisible( object v);

    boolean get_bordervisible( );

    void set_dir( object v);

    string get_dir( );

    void set_disabled( object v);

    boolean get_disabled( );

    void set_disabledclass( object v);

    string get_disabledclass( );

    void set_enabledclass( object v);

    string get_enabledclass( );

    void set_id( object v);

    string get_id( );

    void set_immediate( object v);

    boolean get_immediate( );

    void set_label( object v);

    string get_label( );

    void set_lang( object v);

    string get_lang( );

    void set_layout( object v);

    string get_layout( );

    void set_legendinvisible( object v);

    boolean get_legendinvisible( );

    void set_legendtext( object v);

    string get_legendtext( );

    void set_onblur( object v);

    string get_onblur( );

    void set_onchange( object v);

    string get_onchange( );

    void set_onclick( object v);

    string get_onclick( );

    void set_ondblclick( object v);

    string get_ondblclick( );

    void set_onfocus( object v);

    string get_onfocus( );

    void set_onkeydown( object v);

    string get_onkeydown( );

    void set_onkeypress( object v);

    string get_onkeypress( );

    void set_onkeyup( object v);

    string get_onkeyup( );

    void set_onmousedown( object v);

    string get_onmousedown( );

    void set_onmousemove( object v);

    string get_onmousemove( );

    void set_onmouseout( object v);

    string get_onmouseout( );

    void set_onmouseover( object v);

    string get_onmouseover( );

    void set_onmouseup( object v);

    string get_onmouseup( );

    void set_onselect( object v);

    string get_onselect( );

    void set_readonly( object v);

    boolean get_readonly( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_required( object v);

    boolean get_required( );

    void set_style( object v);

    string get_style( );

    void set_styleclass( object v);

    string get_styleclass( );

    void set_tabindex( object v);

    string get_tabindex( );

    void set_title( object v);

    string get_title( );

    void set_value( object v);

    object get_value( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexselectlist extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string accesskey;
    string dir;
    boolean disabled;
    string disabledclass;
    string enabledclass;
    string id;
    string label;
    string lang;
    boolean multiselect;
    string onblur;
    string onchange;
    string onclick;
    string ondblclick;
    string onfocus;
    string onkeydown;
    string onkeypress;
    string onkeyup;
    string onmousedown;
    string onmousemove;
    string onmouseout;
    string onmouseover;
    string onmouseup;
    string onselect;
    boolean readonly;
    boolean rendered;
    boolean required;
    integer size;
    string style;
    string styleclass;
    string tabindex;
    string title;
    object value;
    void set_accesskey( object v);

    string get_accesskey( );

    void set_dir( object v);

    string get_dir( );

    void set_disabled( object v);

    boolean get_disabled( );

    void set_disabledclass( object v);

    string get_disabledclass( );

    void set_enabledclass( object v);

    string get_enabledclass( );

    void set_id( object v);

    string get_id( );

    void set_label( object v);

    string get_label( );

    void set_lang( object v);

    string get_lang( );

    void set_multiselect( object v);

    boolean get_multiselect( );

    void set_onblur( object v);

    string get_onblur( );

    void set_onchange( object v);

    string get_onchange( );

    void set_onclick( object v);

    string get_onclick( );

    void set_ondblclick( object v);

    string get_ondblclick( );

    void set_onfocus( object v);

    string get_onfocus( );

    void set_onkeydown( object v);

    string get_onkeydown( );

    void set_onkeypress( object v);

    string get_onkeypress( );

    void set_onkeyup( object v);

    string get_onkeyup( );

    void set_onmousedown( object v);

    string get_onmousedown( );

    void set_onmousemove( object v);

    string get_onmousemove( );

    void set_onmouseout( object v);

    string get_onmouseout( );

    void set_onmouseover( object v);

    string get_onmouseover( );

    void set_onmouseup( object v);

    string get_onmouseup( );

    void set_onselect( object v);

    string get_onselect( );

    void set_readonly( object v);

    boolean get_readonly( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_required( object v);

    boolean get_required( );

    void set_size( object v);

    integer get_size( );

    void set_style( object v);

    string get_style( );

    void set_styleclass( object v);

    string get_styleclass( );

    void set_tabindex( object v);

    string get_tabindex( );

    void set_title( object v);

    string get_title( );

    void set_value( object v);

    object get_value( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexselectoption extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string dir;
    string id;
    string itemdescription;
    boolean itemdisabled;
    boolean itemescaped;
    string itemlabel;
    object itemvalue;
    string lang;
    string onclick;
    string ondblclick;
    string onkeydown;
    string onkeypress;
    string onkeyup;
    string onmousedown;
    string onmousemove;
    string onmouseout;
    string onmouseover;
    string onmouseup;
    boolean rendered;
    string style;
    string styleclass;
    string title;
    object value;
    void set_dir( object v);

    string get_dir( );

    void set_id( object v);

    string get_id( );

    void set_itemdescription( object v);

    string get_itemdescription( );

    void set_itemdisabled( object v);

    boolean get_itemdisabled( );

    void set_itemescaped( object v);

    boolean get_itemescaped( );

    void set_itemlabel( object v);

    string get_itemlabel( );

    void set_itemvalue( object v);

    object get_itemvalue( );

    void set_lang( object v);

    string get_lang( );

    void set_onclick( object v);

    string get_onclick( );

    void set_ondblclick( object v);

    string get_ondblclick( );

    void set_onkeydown( object v);

    string get_onkeydown( );

    void set_onkeypress( object v);

    string get_onkeypress( );

    void set_onkeyup( object v);

    string get_onkeyup( );

    void set_onmousedown( object v);

    string get_onmousedown( );

    void set_onmousemove( object v);

    string get_onmousemove( );

    void set_onmouseout( object v);

    string get_onmouseout( );

    void set_onmouseover( object v);

    string get_onmouseover( );

    void set_onmouseup( object v);

    string get_onmouseup( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_style( object v);

    string get_style( );

    void set_styleclass( object v);

    string get_styleclass( );

    void set_title( object v);

    string get_title( );

    void set_value( object v);

    object get_value( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexselectoptions extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    boolean rendered;
    object value;
    void set_id( object v);

    string get_id( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_value( object v);

    object get_value( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexselectradio extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string accesskey;
    integer border;
    boolean bordervisible;
    string dir;
    boolean disabled;
    string disabledclass;
    string enabledclass;
    string id;
    boolean immediate;
    string label;
    string lang;
    string layout;
    boolean legendinvisible;
    string legendtext;
    string onblur;
    string onchange;
    string onclick;
    string ondblclick;
    string onfocus;
    string onkeydown;
    string onkeypress;
    string onkeyup;
    string onmousedown;
    string onmousemove;
    string onmouseout;
    string onmouseover;
    string onmouseup;
    string onselect;
    boolean readonly;
    boolean rendered;
    boolean required;
    string style;
    string styleclass;
    string tabindex;
    string title;
    object value;
    void set_accesskey( object v);

    string get_accesskey( );

    void set_border( object v);

    integer get_border( );

    void set_bordervisible( object v);

    boolean get_bordervisible( );

    void set_dir( object v);

    string get_dir( );

    void set_disabled( object v);

    boolean get_disabled( );

    void set_disabledclass( object v);

    string get_disabledclass( );

    void set_enabledclass( object v);

    string get_enabledclass( );

    void set_id( object v);

    string get_id( );

    void set_immediate( object v);

    boolean get_immediate( );

    void set_label( object v);

    string get_label( );

    void set_lang( object v);

    string get_lang( );

    void set_layout( object v);

    string get_layout( );

    void set_legendinvisible( object v);

    boolean get_legendinvisible( );

    void set_legendtext( object v);

    string get_legendtext( );

    void set_onblur( object v);

    string get_onblur( );

    void set_onchange( object v);

    string get_onchange( );

    void set_onclick( object v);

    string get_onclick( );

    void set_ondblclick( object v);

    string get_ondblclick( );

    void set_onfocus( object v);

    string get_onfocus( );

    void set_onkeydown( object v);

    string get_onkeydown( );

    void set_onkeypress( object v);

    string get_onkeypress( );

    void set_onkeyup( object v);

    string get_onkeyup( );

    void set_onmousedown( object v);

    string get_onmousedown( );

    void set_onmousemove( object v);

    string get_onmousemove( );

    void set_onmouseout( object v);

    string get_onmouseout( );

    void set_onmouseover( object v);

    string get_onmouseover( );

    void set_onmouseup( object v);

    string get_onmouseup( );

    void set_onselect( object v);

    string get_onselect( );

    void set_readonly( object v);

    boolean get_readonly( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_required( object v);

    boolean get_required( );

    void set_style( object v);

    string get_style( );

    void set_styleclass( object v);

    string get_styleclass( );

    void set_tabindex( object v);

    string get_tabindex( );

    void set_title( object v);

    string get_title( );

    void set_value( object v);

    object get_value( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexstylesheet extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    object value;
    void set_id( object v);

    string get_id( );

    void set_value( object v);

    object get_value( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apextab extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    boolean disabled;
    string focus;
    string id;
    boolean immediate;
    string label;
    string labelwidth;
    object name;
    string onclick;
    string oncomplete;
    string ondblclick;
    string onkeydown;
    string onkeypress;
    string onkeyup;
    string onmousedown;
    string onmousemove;
    string onmouseout;
    string onmouseover;
    string onmouseup;
    string ontabenter;
    string ontableave;
    boolean rendered;
    object rerender;
    string status;
    string style;
    string styleclass;
    string switchtype;
    integer timeout;
    string title;
    void set_disabled( object v);

    boolean get_disabled( );

    void set_focus( object v);

    string get_focus( );

    void set_id( object v);

    string get_id( );

    void set_immediate( object v);

    boolean get_immediate( );

    void set_label( object v);

    string get_label( );

    void set_labelwidth( object v);

    string get_labelwidth( );

    void set_name( object v);

    object get_name( );

    void set_onclick( object v);

    string get_onclick( );

    void set_oncomplete( object v);

    string get_oncomplete( );

    void set_ondblclick( object v);

    string get_ondblclick( );

    void set_onkeydown( object v);

    string get_onkeydown( );

    void set_onkeypress( object v);

    string get_onkeypress( );

    void set_onkeyup( object v);

    string get_onkeyup( );

    void set_onmousedown( object v);

    string get_onmousedown( );

    void set_onmousemove( object v);

    string get_onmousemove( );

    void set_onmouseout( object v);

    string get_onmouseout( );

    void set_onmouseover( object v);

    string get_onmouseover( );

    void set_onmouseup( object v);

    string get_onmouseup( );

    void set_ontabenter( object v);

    string get_ontabenter( );

    void set_ontableave( object v);

    string get_ontableave( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_rerender( object v);

    object get_rerender( );

    void set_status( object v);

    string get_status( );

    void set_style( object v);

    string get_style( );

    void set_styleclass( object v);

    string get_styleclass( );

    void set_switchtype( object v);

    string get_switchtype( );

    void set_timeout( object v);

    integer get_timeout( );

    void set_title( object v);

    string get_title( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apextabpanel extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string activetabclass;
    string contentclass;
    string contentstyle;
    string dir;
    string disabledtabclass;
    string headeralignment;
    string headerclass;
    string headerspacing;
    string height;
    string id;
    boolean immediate;
    string inactivetabclass;
    string lang;
    string onclick;
    string ondblclick;
    string onkeydown;
    string onkeypress;
    string onkeyup;
    string onmousedown;
    string onmousemove;
    string onmouseout;
    string onmouseover;
    string onmouseup;
    boolean rendered;
    object rerender;
    object selectedtab;
    string style;
    string styleclass;
    string switchtype;
    string tabclass;
    string title;
    object value;
    string width;
    void set_activetabclass( object v);

    string get_activetabclass( );

    void set_contentclass( object v);

    string get_contentclass( );

    void set_contentstyle( object v);

    string get_contentstyle( );

    void set_dir( object v);

    string get_dir( );

    void set_disabledtabclass( object v);

    string get_disabledtabclass( );

    void set_headeralignment( object v);

    string get_headeralignment( );

    void set_headerclass( object v);

    string get_headerclass( );

    void set_headerspacing( object v);

    string get_headerspacing( );

    void set_height( object v);

    string get_height( );

    void set_id( object v);

    string get_id( );

    void set_immediate( object v);

    boolean get_immediate( );

    void set_inactivetabclass( object v);

    string get_inactivetabclass( );

    void set_lang( object v);

    string get_lang( );

    void set_onclick( object v);

    string get_onclick( );

    void set_ondblclick( object v);

    string get_ondblclick( );

    void set_onkeydown( object v);

    string get_onkeydown( );

    void set_onkeypress( object v);

    string get_onkeypress( );

    void set_onkeyup( object v);

    string get_onkeyup( );

    void set_onmousedown( object v);

    string get_onmousedown( );

    void set_onmousemove( object v);

    string get_onmousemove( );

    void set_onmouseout( object v);

    string get_onmouseout( );

    void set_onmouseover( object v);

    string get_onmouseover( );

    void set_onmouseup( object v);

    string get_onmouseup( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_rerender( object v);

    object get_rerender( );

    void set_selectedtab( object v);

    object get_selectedtab( );

    void set_style( object v);

    string get_style( );

    void set_styleclass( object v);

    string get_styleclass( );

    void set_switchtype( object v);

    string get_switchtype( );

    void set_tabclass( object v);

    string get_tabclass( );

    void set_title( object v);

    string get_title( );

    void set_value( object v);

    object get_value( );

    void set_width( object v);

    string get_width( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apextoolbar extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string contentclass;
    string contentstyle;
    string height;
    string id;
    string itemseparator;
    string onclick;
    string ondblclick;
    string onitemclick;
    string onitemdblclick;
    string onitemkeydown;
    string onitemkeypress;
    string onitemkeyup;
    string onitemmousedown;
    string onitemmousemove;
    string onitemmouseout;
    string onitemmouseover;
    string onitemmouseup;
    string onkeydown;
    string onkeypress;
    string onkeyup;
    string onmousedown;
    string onmousemove;
    string onmouseout;
    string onmouseover;
    string onmouseup;
    boolean rendered;
    string separatorclass;
    string style;
    string styleclass;
    string width;
    void set_contentclass( object v);

    string get_contentclass( );

    void set_contentstyle( object v);

    string get_contentstyle( );

    void set_height( object v);

    string get_height( );

    void set_id( object v);

    string get_id( );

    void set_itemseparator( object v);

    string get_itemseparator( );

    void set_onclick( object v);

    string get_onclick( );

    void set_ondblclick( object v);

    string get_ondblclick( );

    void set_onitemclick( object v);

    string get_onitemclick( );

    void set_onitemdblclick( object v);

    string get_onitemdblclick( );

    void set_onitemkeydown( object v);

    string get_onitemkeydown( );

    void set_onitemkeypress( object v);

    string get_onitemkeypress( );

    void set_onitemkeyup( object v);

    string get_onitemkeyup( );

    void set_onitemmousedown( object v);

    string get_onitemmousedown( );

    void set_onitemmousemove( object v);

    string get_onitemmousemove( );

    void set_onitemmouseout( object v);

    string get_onitemmouseout( );

    void set_onitemmouseover( object v);

    string get_onitemmouseover( );

    void set_onitemmouseup( object v);

    string get_onitemmouseup( );

    void set_onkeydown( object v);

    string get_onkeydown( );

    void set_onkeypress( object v);

    string get_onkeypress( );

    void set_onkeyup( object v);

    string get_onkeyup( );

    void set_onmousedown( object v);

    string get_onmousedown( );

    void set_onmousemove( object v);

    string get_onmousemove( );

    void set_onmouseout( object v);

    string get_onmouseout( );

    void set_onmouseover( object v);

    string get_onmouseover( );

    void set_onmouseup( object v);

    string get_onmouseup( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_separatorclass( object v);

    string get_separatorclass( );

    void set_style( object v);

    string get_style( );

    void set_styleclass( object v);

    string get_styleclass( );

    void set_width( object v);

    string get_width( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apextoolbargroup extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    string itemseparator;
    string location;
    string onclick;
    string ondblclick;
    string onkeydown;
    string onkeypress;
    string onkeyup;
    string onmousedown;
    string onmousemove;
    string onmouseout;
    string onmouseover;
    string onmouseup;
    boolean rendered;
    string separatorclass;
    string style;
    string styleclass;
    void set_id( object v);

    string get_id( );

    void set_itemseparator( object v);

    string get_itemseparator( );

    void set_location( object v);

    string get_location( );

    void set_onclick( object v);

    string get_onclick( );

    void set_ondblclick( object v);

    string get_ondblclick( );

    void set_onkeydown( object v);

    string get_onkeydown( );

    void set_onkeypress( object v);

    string get_onkeypress( );

    void set_onkeyup( object v);

    string get_onkeyup( );

    void set_onmousedown( object v);

    string get_onmousedown( );

    void set_onmousemove( object v);

    string get_onmousemove( );

    void set_onmouseout( object v);

    string get_onmouseout( );

    void set_onmouseover( object v);

    string get_onmouseover( );

    void set_onmouseup( object v);

    string get_onmouseup( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_separatorclass( object v);

    string get_separatorclass( );

    void set_style( object v);

    string get_style( );

    void set_styleclass( object v);

    string get_styleclass( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexvariable extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    boolean rendered;
    object value;
    string var;
    void set_id( object v);

    string get_id( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_value( object v);

    object get_value( );

    void set_var( object v);

    string get_var( );

}
//////////////////////////////////////////

@namespace('vfstd')
class apexvote extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    string objectid;
    boolean rendered;
    string rerender;
    void set_id( object v);

    string get_id( );

    void set_objectid( object v);

    string get_objectid( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_rerender( object v);

    string get_rerender( );

}
//////////////////////////////////////////

@namespace('vfstd')
class chatteranswersaboutme extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string communityid;
    string id;
    boolean nosignin;
    boolean rendered;
    void set_communityid( object v);

    string get_communityid( );

    void set_id( object v);

    string get_id( );

    void set_nosignin( object v);

    boolean get_nosignin( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class chatteranswersallfeeds extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string articlelanguage;
    id communityid;
    string filteroptions;
    object forcesecurecustomwebaddressboolean;
    string id;
    double jsapiversion;
    boolean nosignin;
    boolean rendered;
    boolean useurlrewriter;
    void set_articlelanguage( object v);

    string get_articlelanguage( );

    void set_communityid( object v);

    id get_communityid( );

    void set_filteroptions( object v);

    string get_filteroptions( );

    void set_forcesecurecustomwebaddressboolean( object v);

    object get_forcesecurecustomwebaddressboolean( );

    void set_id( object v);

    string get_id( );

    void set_jsapiversion( object v);

    double get_jsapiversion( );

    void set_nosignin( object v);

    boolean get_nosignin( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_useurlrewriter( object v);

    boolean get_useurlrewriter( );

}
//////////////////////////////////////////

@namespace('vfstd')
class chatteranswerschangepassword extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    boolean rendered;
    void set_id( object v);

    string get_id( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class chatteranswersdatacategoryfilter extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string communityid;
    string id;
    boolean rendered;
    void set_communityid( object v);

    string get_communityid( );

    void set_id( object v);

    string get_id( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class chatteranswersfeedfilter extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string filteroptions;
    string id;
    boolean rendered;
    void set_filteroptions( object v);

    string get_filteroptions( );

    void set_id( object v);

    string get_id( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class chatteranswersfeeds extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string articlelanguage;
    string communityid;
    string id;
    double jsapiversion;
    boolean nosignin;
    boolean rendered;
    boolean useurlrewriter;
    void set_articlelanguage( object v);

    string get_articlelanguage( );

    void set_communityid( object v);

    string get_communityid( );

    void set_id( object v);

    string get_id( );

    void set_jsapiversion( object v);

    double get_jsapiversion( );

    void set_nosignin( object v);

    boolean get_nosignin( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_useurlrewriter( object v);

    boolean get_useurlrewriter( );

}
//////////////////////////////////////////

@namespace('vfstd')
class chatteranswersforgotpassword extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    boolean rendered;
    boolean useurlrewriter;
    void set_id( object v);

    string get_id( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_useurlrewriter( object v);

    boolean get_useurlrewriter( );

}
//////////////////////////////////////////

@namespace('vfstd')
class chatteranswersforgotpasswordconfirm extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    boolean rendered;
    boolean useurlrewriter;
    void set_id( object v);

    string get_id( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_useurlrewriter( object v);

    boolean get_useurlrewriter( );

}
//////////////////////////////////////////

@namespace('vfstd')
class chatteranswersguestsignin extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    boolean rendered;
    boolean useurlrewriter;
    void set_id( object v);

    string get_id( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_useurlrewriter( object v);

    boolean get_useurlrewriter( );

}
//////////////////////////////////////////

@namespace('vfstd')
class chatteranswershelp extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    boolean rendered;
    void set_id( object v);

    string get_id( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class chatteranswerslogin extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    boolean rendered;
    boolean useurlrewriter;
    void set_id( object v);

    string get_id( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_useurlrewriter( object v);

    boolean get_useurlrewriter( );

}
//////////////////////////////////////////

@namespace('vfstd')
class chatteranswersregistration extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    boolean hideterms;
    string id;
    id profileid;
    string registrationclassname;
    boolean rendered;
    boolean useurlrewriter;
    void set_hideterms( object v);

    boolean get_hideterms( );

    void set_id( object v);

    string get_id( );

    void set_profileid( object v);

    id get_profileid( );

    void set_registrationclassname( object v);

    string get_registrationclassname( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_useurlrewriter( object v);

    boolean get_useurlrewriter( );

}
//////////////////////////////////////////

@namespace('vfstd')
class chatteranswerssearchask extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string communityid;
    string id;
    boolean nosignin;
    boolean rendered;
    string searchlanguage;
    boolean useurlrewriter;
    void set_communityid( object v);

    string get_communityid( );

    void set_id( object v);

    string get_id( );

    void set_nosignin( object v);

    boolean get_nosignin( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_searchlanguage( object v);

    string get_searchlanguage( );

    void set_useurlrewriter( object v);

    boolean get_useurlrewriter( );

}
//////////////////////////////////////////

@namespace('vfstd')
class chatteranswerssingleitemfeed extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    id entityid;
    string id;
    boolean rendered;
    void set_entityid( object v);

    id get_entityid( );

    void set_id( object v);

    string get_id( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class chatterfeed extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    id entityid;
    string feeditemtype;
    string id;
    string oncomplete;
    boolean rendered;
    object rerender;
    boolean showpublisher;
    void set_entityid( object v);

    id get_entityid( );

    void set_feeditemtype( object v);

    string get_feeditemtype( );

    void set_id( object v);

    string get_id( );

    void set_oncomplete( object v);

    string get_oncomplete( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_rerender( object v);

    object get_rerender( );

    void set_showpublisher( object v);

    boolean get_showpublisher( );

}
//////////////////////////////////////////

@namespace('vfstd')
class chatterfeedwithfollowers extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    id entityid;
    string id;
    string oncomplete;
    boolean rendered;
    object rerender;
    boolean showheader;
    void set_entityid( object v);

    id get_entityid( );

    void set_id( object v);

    string get_id( );

    void set_oncomplete( object v);

    string get_oncomplete( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_rerender( object v);

    object get_rerender( );

    void set_showheader( object v);

    boolean get_showheader( );

}
//////////////////////////////////////////

@namespace('vfstd')
class chatterfollow extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    id entityid;
    string id;
    string oncomplete;
    boolean rendered;
    object rerender;
    void set_entityid( object v);

    id get_entityid( );

    void set_id( object v);

    string get_id( );

    void set_oncomplete( object v);

    string get_oncomplete( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_rerender( object v);

    object get_rerender( );

}
//////////////////////////////////////////

@namespace('vfstd')
class chatterfollowers extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    id entityid;
    string id;
    boolean rendered;
    void set_entityid( object v);

    id get_entityid( );

    void set_id( object v);

    string get_id( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class chatternewsfeed extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    string oncomplete;
    boolean rendered;
    object rerender;
    void set_id( object v);

    string get_id( );

    void set_oncomplete( object v);

    string get_oncomplete( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_rerender( object v);

    object get_rerender( );

}
//////////////////////////////////////////

@namespace('vfstd')
class chatteruserphotoupload extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    boolean rendered;
    boolean showoriginalphoto;
    void set_id( object v);

    string get_id( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_showoriginalphoto( object v);

    boolean get_showoriginalphoto( );

}
//////////////////////////////////////////

@namespace('vfstd')
class flowinterview extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    boolean allowshowpause;
    string buttonlocation;
    string buttonstyle;
    apexpages.pagereference finishlocation;
    string id;
    flow.interview interview;
    string name;
    string pausedinterviewid;
    boolean rendered;
    object rerender;
    boolean showhelp;
    void set_allowshowpause( object v);

    boolean get_allowshowpause( );

    void set_buttonlocation( object v);

    string get_buttonlocation( );

    void set_buttonstyle( object v);

    string get_buttonstyle( );

    void set_finishlocation( object v);

    apexpages.pagereference get_finishlocation( );

    void set_id( object v);

    string get_id( );

    void set_interview( object v);

    flow.interview get_interview( );

    void set_name( object v);

    string get_name( );

    void set_pausedinterviewid( object v);

    string get_pausedinterviewid( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_rerender( object v);

    object get_rerender( );

    void set_showhelp( object v);

    boolean get_showhelp( );

}
//////////////////////////////////////////

@namespace('vfstd')
class ideasdetailoutputlink extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    string ideaid;
    apexpages.pagereference page;
    integer pagenumber;
    integer pageoffset;
    boolean rendered;
    string style;
    string styleclass;
    void set_id( object v);

    string get_id( );

    void set_ideaid( object v);

    string get_ideaid( );

    void set_page( object v);

    apexpages.pagereference get_page( );

    void set_pagenumber( object v);

    integer get_pagenumber( );

    void set_pageoffset( object v);

    integer get_pageoffset( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_style( object v);

    string get_style( );

    void set_styleclass( object v);

    string get_styleclass( );

}
//////////////////////////////////////////

@namespace('vfstd')
class ideaslistoutputlink extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string category;
    string communityid;
    string id;
    apexpages.pagereference page;
    integer pagenumber;
    integer pageoffset;
    boolean rendered;
    string sort;
    string status;
    boolean stickyattributes;
    string style;
    string styleclass;
    void set_category( object v);

    string get_category( );

    void set_communityid( object v);

    string get_communityid( );

    void set_id( object v);

    string get_id( );

    void set_page( object v);

    apexpages.pagereference get_page( );

    void set_pagenumber( object v);

    integer get_pagenumber( );

    void set_pageoffset( object v);

    integer get_pageoffset( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_sort( object v);

    string get_sort( );

    void set_status( object v);

    string get_status( );

    void set_stickyattributes( object v);

    boolean get_stickyattributes( );

    void set_style( object v);

    string get_style( );

    void set_styleclass( object v);

    string get_styleclass( );

}
//////////////////////////////////////////

@namespace('vfstd')
class ideasprofilelistoutputlink extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string communityid;
    string id;
    apexpages.pagereference page;
    integer pagenumber;
    integer pageoffset;
    boolean rendered;
    string sort;
    boolean stickyattributes;
    string style;
    string styleclass;
    string userid;
    void set_communityid( object v);

    string get_communityid( );

    void set_id( object v);

    string get_id( );

    void set_page( object v);

    apexpages.pagereference get_page( );

    void set_pagenumber( object v);

    integer get_pagenumber( );

    void set_pageoffset( object v);

    integer get_pageoffset( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_sort( object v);

    string get_sort( );

    void set_stickyattributes( object v);

    boolean get_stickyattributes( );

    void set_style( object v);

    string get_style( );

    void set_styleclass( object v);

    string get_styleclass( );

    void set_userid( object v);

    string get_userid( );

}
//////////////////////////////////////////

@namespace('vfstd')
class knowledgearticlecasetoolbar extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string articleid;
    string caseid;
    string id;
    boolean includecss;
    boolean rendered;
    void set_articleid( object v);

    string get_articleid( );

    void set_caseid( object v);

    string get_caseid( );

    void set_id( object v);

    string get_id( );

    void set_includecss( object v);

    boolean get_includecss( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class knowledgearticlelist extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string articletypes;
    string articlevar;
    string categories;
    string hasmorevar;
    string id;
    boolean isquerygenerated;
    string keyword;
    string language;
    integer pagenumber;
    integer pagesize;
    boolean rendered;
    string sortby;
    void set_articletypes( object v);

    string get_articletypes( );

    void set_articlevar( object v);

    string get_articlevar( );

    void set_categories( object v);

    string get_categories( );

    void set_hasmorevar( object v);

    string get_hasmorevar( );

    void set_id( object v);

    string get_id( );

    void set_isquerygenerated( object v);

    boolean get_isquerygenerated( );

    void set_keyword( object v);

    string get_keyword( );

    void set_language( object v);

    string get_language( );

    void set_pagenumber( object v);

    integer get_pagenumber( );

    void set_pagesize( object v);

    integer get_pagesize( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_sortby( object v);

    string get_sortby( );

}
//////////////////////////////////////////

@namespace('vfstd')
class knowledgearticlerenderertoolbar extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string articleid;
    boolean canvote;
    string id;
    boolean includecss;
    boolean rendered;
    boolean showchatter;
    void set_articleid( object v);

    string get_articleid( );

    void set_canvote( object v);

    boolean get_canvote( );

    void set_id( object v);

    string get_id( );

    void set_includecss( object v);

    boolean get_includecss( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_showchatter( object v);

    boolean get_showchatter( );

}
//////////////////////////////////////////

@namespace('vfstd')
class knowledgearticletypelist extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string articletypevar;
    string id;
    boolean rendered;
    void set_articletypevar( object v);

    string get_articletypevar( );

    void set_id( object v);

    string get_id( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class knowledgecategorylist extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string ancestorsof;
    string categorygroup;
    string categoryvar;
    string id;
    integer level;
    boolean rendered;
    string rootcategory;
    void set_ancestorsof( object v);

    string get_ancestorsof( );

    void set_categorygroup( object v);

    string get_categorygroup( );

    void set_categoryvar( object v);

    string get_categoryvar( );

    void set_id( object v);

    string get_id( );

    void set_level( object v);

    integer get_level( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_rootcategory( object v);

    string get_rootcategory( );

}
//////////////////////////////////////////

@namespace('vfstd')
class liveagentclientchat extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    boolean rendered;
    void set_id( object v);

    string get_id( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class liveagentclientchatalertmessage extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string agentsunavailablelabel;
    string chatblockedlabel;
    string connectionerrorlabel;
    string dismisslabel;
    string id;
    string nocookieslabel;
    string noflashlabel;
    string nohashlabel;
    boolean rendered;
    void set_agentsunavailablelabel( object v);

    string get_agentsunavailablelabel( );

    void set_chatblockedlabel( object v);

    string get_chatblockedlabel( );

    void set_connectionerrorlabel( object v);

    string get_connectionerrorlabel( );

    void set_dismisslabel( object v);

    string get_dismisslabel( );

    void set_id( object v);

    string get_id( );

    void set_nocookieslabel( object v);

    string get_nocookieslabel( );

    void set_noflashlabel( object v);

    string get_noflashlabel( );

    void set_nohashlabel( object v);

    string get_nohashlabel( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class liveagentclientchatcancelbutton extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    string label;
    boolean rendered;
    void set_id( object v);

    string get_id( );

    void set_label( object v);

    string get_label( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class liveagentclientchatendbutton extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    string label;
    boolean rendered;
    void set_id( object v);

    string get_id( );

    void set_label( object v);

    string get_label( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class liveagentclientchatfiletransfer extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string filetransfercanceledlabel;
    object filetransfercancelfilelabelstring;
    string filetransferdropfilelabel;
    string filetransferfailedlabel;
    string filetransfersendfilelabel;
    object filetransfersuccessfullabelstring;
    string filetransferuploadlabel;
    string id;
    boolean rendered;
    void set_filetransfercanceledlabel( object v);

    string get_filetransfercanceledlabel( );

    void set_filetransfercancelfilelabelstring( object v);

    object get_filetransfercancelfilelabelstring( );

    void set_filetransferdropfilelabel( object v);

    string get_filetransferdropfilelabel( );

    void set_filetransferfailedlabel( object v);

    string get_filetransferfailedlabel( );

    void set_filetransfersendfilelabel( object v);

    string get_filetransfersendfilelabel( );

    void set_filetransfersuccessfullabelstring( object v);

    object get_filetransfersuccessfullabelstring( );

    void set_filetransferuploadlabel( object v);

    string get_filetransferuploadlabel( );

    void set_id( object v);

    string get_id( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class liveagentclientchatinput extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string autoresizeelementid;
    string id;
    boolean rendered;
    boolean usemultiline;
    void set_autoresizeelementid( object v);

    string get_autoresizeelementid( );

    void set_id( object v);

    string get_id( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_usemultiline( object v);

    boolean get_usemultiline( );

}
//////////////////////////////////////////

@namespace('vfstd')
class liveagentclientchatlog extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string agenttypinglabel;
    string chatendedbyagentlabel;
    object chatendedbyvisitoridletimeoutlabelstring;
    string chatendedbyvisitorlabel;
    string chattransferredlabel;
    boolean combinemessagestext;
    string id;
    boolean rendered;
    boolean showtimestamp;
    string visitornamelabel;
    void set_agenttypinglabel( object v);

    string get_agenttypinglabel( );

    void set_chatendedbyagentlabel( object v);

    string get_chatendedbyagentlabel( );

    void set_chatendedbyvisitoridletimeoutlabelstring( object v);

    object get_chatendedbyvisitoridletimeoutlabelstring( );

    void set_chatendedbyvisitorlabel( object v);

    string get_chatendedbyvisitorlabel( );

    void set_chattransferredlabel( object v);

    string get_chattransferredlabel( );

    void set_combinemessagestext( object v);

    boolean get_combinemessagestext( );

    void set_id( object v);

    string get_id( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_showtimestamp( object v);

    boolean get_showtimestamp( );

    void set_visitornamelabel( object v);

    string get_visitornamelabel( );

}
//////////////////////////////////////////

@namespace('vfstd')
class liveagentclientchatlogalertmessage extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string autoresizeelementid;
    string id;
    boolean rendered;
    string respondtochatlabel;
    string respondwithintimelabel;
    void set_autoresizeelementid( object v);

    string get_autoresizeelementid( );

    void set_id( object v);

    string get_id( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_respondtochatlabel( object v);

    string get_respondtochatlabel( );

    void set_respondwithintimelabel( object v);

    string get_respondwithintimelabel( );

}
//////////////////////////////////////////

@namespace('vfstd')
class liveagentclientchatmessages extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    boolean rendered;
    void set_id( object v);

    string get_id( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class liveagentclientchatqueueposition extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    string label;
    boolean rendered;
    void set_id( object v);

    string get_id( );

    void set_label( object v);

    string get_label( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class liveagentclientchatsavebutton extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    string label;
    boolean rendered;
    void set_id( object v);

    string get_id( );

    void set_label( object v);

    string get_label( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class liveagentclientchatsendbutton extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    string label;
    boolean rendered;
    void set_id( object v);

    string get_id( );

    void set_label( object v);

    string get_label( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class liveagentclientchatstatusmessage extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    string reconnectinglabel;
    boolean rendered;
    void set_id( object v);

    string get_id( );

    void set_reconnectinglabel( object v);

    string get_reconnectinglabel( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class messagingattachment extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string filename;
    string id;
    boolean inline;
    string renderas;
    boolean rendered;
    void set_filename( object v);

    string get_filename( );

    void set_id( object v);

    string get_id( );

    void set_inline( object v);

    boolean get_inline( );

    void set_renderas( object v);

    string get_renderas( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class messagingemailheader extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    string name;
    boolean rendered;
    void set_id( object v);

    string get_id( );

    void set_name( object v);

    string get_name( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class messagingemailtemplate extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    string language;
    string recipienttype;
    string relatedtotype;
    boolean rendered;
    string replyto;
    string subject;
    void set_id( object v);

    string get_id( );

    void set_language( object v);

    string get_language( );

    void set_recipienttype( object v);

    string get_recipienttype( );

    void set_relatedtotype( object v);

    string get_relatedtotype( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_replyto( object v);

    string get_replyto( );

    void set_subject( object v);

    string get_subject( );

}
//////////////////////////////////////////

@namespace('vfstd')
class messaginghtmlemailbody extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    boolean rendered;
    void set_id( object v);

    string get_id( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class messagingplaintextemailbody extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    boolean rendered;
    void set_id( object v);

    string get_id( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class sitegoogleanalyticstracking extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    boolean rendered;
    void set_id( object v);

    string get_id( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class sitepreviewasadmin extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string id;
    boolean rendered;
    void set_id( object v);

    string get_id( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class socialprofileviewer extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    id entityid;
    string id;
    boolean rendered;
    void set_entityid( object v);

    id get_entityid( );

    void set_id( object v);

    string get_id( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class supportcasearticles extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string articletypes;
    boolean attachtoemailenabled;
    string bodyheight;
    id caseid;
    string categories;
    boolean categorymappingenabled;
    string defaultkeywords;
    string defaultsearchtype;
    string id;
    boolean insertlinktoemail;
    string language;
    boolean logsearch;
    string mode;
    string onsearchcomplete;
    boolean rendered;
    object rerender;
    string searchbuttonname;
    string searchfieldwidth;
    string searchfunctionname;
    boolean showadvancedsearch;
    string title;
    string titlebarstyle;
    string width;
    void set_articletypes( object v);

    string get_articletypes( );

    void set_attachtoemailenabled( object v);

    boolean get_attachtoemailenabled( );

    void set_bodyheight( object v);

    string get_bodyheight( );

    void set_caseid( object v);

    id get_caseid( );

    void set_categories( object v);

    string get_categories( );

    void set_categorymappingenabled( object v);

    boolean get_categorymappingenabled( );

    void set_defaultkeywords( object v);

    string get_defaultkeywords( );

    void set_defaultsearchtype( object v);

    string get_defaultsearchtype( );

    void set_id( object v);

    string get_id( );

    void set_insertlinktoemail( object v);

    boolean get_insertlinktoemail( );

    void set_language( object v);

    string get_language( );

    void set_logsearch( object v);

    boolean get_logsearch( );

    void set_mode( object v);

    string get_mode( );

    void set_onsearchcomplete( object v);

    string get_onsearchcomplete( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_rerender( object v);

    object get_rerender( );

    void set_searchbuttonname( object v);

    string get_searchbuttonname( );

    void set_searchfieldwidth( object v);

    string get_searchfieldwidth( );

    void set_searchfunctionname( object v);

    string get_searchfunctionname( );

    void set_showadvancedsearch( object v);

    boolean get_showadvancedsearch( );

    void set_title( object v);

    string get_title( );

    void set_titlebarstyle( object v);

    string get_titlebarstyle( );

    void set_width( object v);

    string get_width( );

}
//////////////////////////////////////////

@namespace('vfstd')
class supportcasefeed extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    id caseid;
    string id;
    boolean rendered;
    void set_caseid( object v);

    id get_caseid( );

    void set_id( object v);

    string get_id( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class supportcaseunifiedfiles extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string entityid;
    string id;
    boolean rendered;
    void set_entityid( object v);

    string get_entityid( );

    void set_id( object v);

    string get_id( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class supportclicktodial extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string entityid;
    string id;
    string number;
    string params;
    boolean rendered;
    void set_entityid( object v);

    string get_entityid( );

    void set_id( object v);

    string get_id( );

    void set_number( object v);

    string get_number( );

    void set_params( object v);

    string get_params( );

    void set_rendered( object v);

    boolean get_rendered( );

}
//////////////////////////////////////////

@namespace('vfstd')
class supportportalpublisher extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string answerbody;
    string answerbodyheight;
    boolean autocollapsebody;
    id entityid;
    string id;
    string onsubmitfailure;
    string onsubmitsuccess;
    boolean rendered;
    object rerender;
    boolean showsendemailoption;
    boolean showsubmitbutton;
    string submitbuttonname;
    string submitfunctionname;
    string title;
    string width;
    void set_answerbody( object v);

    string get_answerbody( );

    void set_answerbodyheight( object v);

    string get_answerbodyheight( );

    void set_autocollapsebody( object v);

    boolean get_autocollapsebody( );

    void set_entityid( object v);

    id get_entityid( );

    void set_id( object v);

    string get_id( );

    void set_onsubmitfailure( object v);

    string get_onsubmitfailure( );

    void set_onsubmitsuccess( object v);

    string get_onsubmitsuccess( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_rerender( object v);

    object get_rerender( );

    void set_showsendemailoption( object v);

    boolean get_showsendemailoption( );

    void set_showsubmitbutton( object v);

    boolean get_showsubmitbutton( );

    void set_submitbuttonname( object v);

    string get_submitbuttonname( );

    void set_submitfunctionname( object v);

    string get_submitfunctionname( );

    void set_title( object v);

    string get_title( );

    void set_width( object v);

    string get_width( );

}
//////////////////////////////////////////

@namespace('vfstd')
class topicswidget extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    string customurl;
    string entity;
    boolean hidesuccessmessage;
    string id;
    boolean rendered;
    string renderstyle;
    void set_customurl( object v);

    string get_customurl( );

    void set_entity( object v);

    string get_entity( );

    void set_hidesuccessmessage( object v);

    boolean get_hidesuccessmessage( );

    void set_id( object v);

    string get_id( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_renderstyle( object v);

    string get_renderstyle( );

}
//////////////////////////////////////////

@namespace('vfstd')
class wavedashboard extends apexpages.component { 
    apexpages.component parent;
    list<apexpages.component> childcomponents;
    list<apexpages.component> body;
    string dashboardid;
    string developername;
    string filter;
    string height;
    boolean hideonerror;
    boolean openlinksinnewwindow;
    boolean rendered;
    boolean showtitle;
    string width;
    void set_body( object v);

    list<apexpages.component> get_body( );

    void set_dashboardid( object v);

    string get_dashboardid( );

    void set_developername( object v);

    string get_developername( );

    void set_filter( object v);

    string get_filter( );

    void set_height( object v);

    string get_height( );

    void set_hideonerror( object v);

    boolean get_hideonerror( );

    void set_openlinksinnewwindow( object v);

    boolean get_openlinksinnewwindow( );

    void set_rendered( object v);

    boolean get_rendered( );

    void set_showtitle( object v);

    boolean get_showtitle( );

    void set_width( object v);

    string get_width( );

}
        ]]></Text>
        </ResolutionLibrary>
        <ResolutionLibrary formatVersion="17.10" language="apex" filename="VFGlobalFuns">
            <Text><![CDATA[
@namespace('vfstd')
class advancedfunctions { 
    static list<string> _getrecordids( object objecttype);

    static object _include( object source);

    static object _include( object source, object inputs);

    static object _linkto( object label, object target, object id);

    static object _linkto( object label, object target, object id, object inputs);

    static object _linkto( object label, object target, object id, object inputs, object nooverride);

    static boolean _regex( string text, string regextext);

    static object _requirescript( string url);

    static object _urlfor( object target);

    static object _urlfor( object target, object id);

    static object _urlfor( object target, object id, object inputs);

    static object _urlfor( object target, object id, object inputs, object nooverrides);

    static object _vlookup( object fieldtoreturn, object fieldonlookupobject, object lookupvalue);

}
//////////////////////////////////////////

@namespace('vfstd')
class contextfunctions { 
    static object evaluateinattrtrue( object o);

    static object evaluateinattrfalse( object o);

    static object evaluateintagtrue( object o);

    static object evaluateintagfalse( object o);

    static object evaluateinscript( object o);

    static object evaluateinstyle( object o);

    static object evaluateinhtag( object o);

    static object evaluateinhattr( object o);

}
//////////////////////////////////////////

@namespace('vfstd')
class datetimefunctions { 
    static date _date( integer year, integer month, integer day);

    static date _datevalue( object datetimestring);

    static datetime _datetimevalue( object datetimestring);

    static integer _day( date expr);

    static integer _month( date expr);

    static datetime _now( );

    static datetime _today( );

    static integer _year( string expr);

}
//////////////////////////////////////////

@namespace('vfstd')
class inffunctions { 
    static object _blankvalue( object expression, object substituteexpression);

    static boolean _isblank( object expression);

    static object _nullvalue( object expression, object substititeexpression);

    static object _priorvalue( object field);

}
//////////////////////////////////////////

@namespace('vfstd')
class logicalfunctions { 
    static object _case( list<object> objects);

    static boolean _ischanged( object field);

    static boolean _isnew( );

    static boolean _isnumber( string text);

}
//////////////////////////////////////////

@namespace('vfstd')
class mathfunctions { 
    static object _abs( object number);

    static object _ceiling( object number);

    static object _exp( object number);

    static object _floor( object number);

    static object _ln( object number);

    static object _log( object number);

    static object _max( list<object> object);

    static object _min( list<object> object);

    static object _mod( object number, object divisor);

    static object _round( object number, object num_digits);

    static object _sqrt( object number);

}
//////////////////////////////////////////

@namespace('vfstd')
class textfunctions { 
    static boolean _begins( string text, string comparetext);

    static void _br( );

    static integer _casesafeid( string id);

    static boolean _contains( string text, string comparetext);

    static integer _find( string searchtext, string text);

    static integer _find( string searchtext, string text, integer startnum);

    static object _getsessionid( );

    static string _htmlencode( string text);

    static boolean _ispickval( object picklistfield, string textliteral);

    static string _jsencode( string text);

    static string _jsinhtmlencode( string text);

    static integer _left( string text, integer numchars);

    static integer _len( string text);

    static string _lower( string text);

    static string _lower( string text, string locale);

    static string _lpad( string text, integer paddedlength);

    static string _lpad( string text, integer paddedlength, string padstring);

    static string _mid( string text, integer startnum, integer numchars);

    static string _right( string text, integer numchars);

    static string _rpad( string text, integer paddedlength);

    static string _rpad( string text, integer paddedlength, string padstring);

    static string _substitute( string text, string oldtext, string newtext);

    static string _text( object value);

    static string _trim( string text);

    static string _upper( string text);

    static string _upper( string text, string locale);

    static string _urlencode( string text);

    static integer _value( string text);

}
        ]]></Text>
        </ResolutionLibrary>
        <ResolutionLibrary formatVersion="17.10" language="apex" filename="appendix">
            <Text><![CDATA[
@namespace('apexpages')
class pagereference { 
}
//////////////////////////////////////////

@namespace('database')
interface stateful { 
}
//////////////////////////////////////////

@namespace('datasource')
class asyncdeletecallback { 
    void processdelete( database.deleteresult deleteresult);

}
//////////////////////////////////////////

@namespace('datasource')
class asyncsavecallback { 
    void processsave( database.saveresult saveresult);

}
//////////////////////////////////////////

@namespace('datasource')
enum authenticationcapability { anonymous, basic, certificate, oauth}
//////////////////////////////////////////

@namespace('datasource')
enum authenticationprotocol { none, oauth, password}
//////////////////////////////////////////

@namespace('datasource')
enum capability { query_pagination_server_driven, query_total_size, require_endpoint, require_https, row_create, row_delete, row_query, row_update, search}
//////////////////////////////////////////

@namespace('datasource')
class column { 
    integer decimalplaces { set; get; }
    integer description { set; get; }
    boolean filterable { set; get; }
    string label { set; get; }
    integer length { set; get; }
    string name { set; get; }
    string referencetargetfield { set; get; }
    string referenceto { set; get; }
    boolean sortable { set; get; }
    datasource.datatype type { set; get; }
    static datasource.column boolean( string name);

    static datasource.column externallookup( string name, string domain);

    static datasource.column get ( string name, string label, string description, boolean issortable, boolean isfilterable, datasource.datatype type, integer length, integer decimalplaces, string referenceto, string referencetargetfield);

    static datasource.column indirectlookup( string name, string domain, string targetfield);

    static datasource.column integer( string name, integer length);

    static datasource.column lookup( string name, string domain);

    static datasource.column number( string name, integer length, integer decimalplaces);

    static datasource.column text( string name, string label, integer length);

    static datasource.column textarea( string name);

    static datasource.column url( string name, integer length);

}
//////////////////////////////////////////

@namespace('datasource')
class columnselection { 
    datasource.queryaggregation aggregation { set; get; }
    string columnname { set; get; }
    string tablename { set; get; }
}
//////////////////////////////////////////

@namespace('datasource')
class connectionparams { 
    string certificatename { set; get; }
    string endpoint { set; get; }
    string oauthtoken { set; get; }
    string password { set; get; }
    datasource.identitytype principaltype { set; get; }
    datasource.authenticationprotocol protocol { set; get; }
    string repository { set; get; }
    string username { set; get; }
    boolean equals( object obj);

    integer hashcode( );

    static list<datasource.connectionparams> values( );

}
//////////////////////////////////////////

@namespace('datasource')
class connector { 
    list<datasource.deleteresult> deleterows( datasource.deletecontext deletecontext);

    list<datasource.tableresult> query( datasource.querycontext querycontext);

    list<datasource.tableresult> search( datasource.searchcontext searchcontext);

    list<datasource.table> sync( );

    list<datasource.upsertresult> search( datasource.upsertcontext upsertcontext);

}
//////////////////////////////////////////

@namespace('datasource')
class datasourceexception { 
     datasourceexception( );
     datasourceexception( exception param1);
     datasourceexception( string param1);
     datasourceexception( string param1, exception param2);
    string gettypename( );

}
//////////////////////////////////////////

@namespace('datasource')
class datasourceutil { 
    void logwarning( string message);

    string throwexception( string message);

}
//////////////////////////////////////////

@namespace('datasource')
enum datatype { boolean_type, datetime_type, external_lookup_type, indirect_lookup_type, lookup_type, number_type, string_long_type, string_short_type, url_type}
//////////////////////////////////////////

@namespace('datasource')
class deletecontext { 
    list<string> externalids { set; get; }
    string tableselected { set; get; }
    boolean equals( object obj);

    integer hashcode( );

    static list<datasource.datatype> values( );

}
//////////////////////////////////////////

@namespace('datasource')
class deleteresult { 
    string errormessage { set; get; }
    string externalid { set; get; }
    boolean success { set; get; }
    boolean equals( object obj);

    integer hashcode( );

    static list<datasource.deleteresult> values( );

    static datasource.deleteresult failure( string externalid, string errormessage);

    static datasource.deleteresult success( string externalid);

}
//////////////////////////////////////////

@namespace('datasource')
class filter { 
    string columnname { set; get; }
    object columnvalue { set; get; }
    list<datasource.filter> subfilters { set; get; }
    string tablename { set; get; }
    datasource.filtertype _00_tablename { set; get; }
    boolean equals( object obj);

    integer hashcode( );

    static list<datasource.deleteresult> values( );

}
//////////////////////////////////////////

@namespace('datasource')
enum filtertype { and_, contains, ends_with, equals, greater_than, greater_than_or_equal_to, less_than, less_than_or_equal_to, like_, not_, not_equals, or_, starts_with}
//////////////////////////////////////////

@namespace('datasource')
enum identitytype { anonymous, named_user, per_user}
//////////////////////////////////////////

@namespace('datasource')
class oauthtokenexpiredexception { 
     oauthtokenexpiredexception( );
     oauthtokenexpiredexception( exception param1);
     oauthtokenexpiredexception( string param1);
     oauthtokenexpiredexception( string param1, exception param2);
    string gettypename( );

}
//////////////////////////////////////////

@namespace('datasource')
class order { 
    string columnname { set; get; }
    datasource.orderdirection direction { set; get; }
    string tablename { set; get; }
    boolean equals( object obj);

    integer hashcode( );

    static list<datasource.order> values( );

    static datasource.order get( string tablename, string columnname);

}
//////////////////////////////////////////

@namespace('datasource')
enum orderdirection { ascending, descending}
//////////////////////////////////////////

@namespace('datasource')
class provider { 
    boolean equals( object obj);

    integer hashcode( );

    static list<datasource.provider> values( );

    static list<datasource.authenticationcapability> getauthenticationcapabilities( );

    static list<datasource.capability> getcapabilities( datasource.connectionparams connectionparams);

    static datasource.connection getconnection( datasource.connectionparams connectionparams);

}
//////////////////////////////////////////

@namespace('datasource')
enum queryaggregation { avg, count, max, min, none, sum}
//////////////////////////////////////////

@namespace('datasource')
class querycontext { 
    string querymoretoken { set; get; }
    string tableselection { set; get; }
    boolean equals( object obj);

    integer hashcode( );

    static list<datasource.querycontext> values( );

    static datasource.querycontext get( list<datasource.table> metadata, integer offset, integer maxresults, datasource.tableselection tableselection);

}
//////////////////////////////////////////

@namespace('datasource')
class queryutils { 
    boolean equals( object obj);

    integer hashcode( );

    static list<datasource.querycontext> values( );

    static list<map<string,object>> applylimitandoffset( datasource.querycontext querycontext, list<map<string,object>> rows);

    static list<map<string,bject>> filter( datasource.querycontext querycontext, list<map<string,object>> rows);

    static list<map<string,bject>> process( datasource.querycontext querycontext, list<map<string,object>> rows);

    static list<map<string,bject>> sort( datasource.querycontext querycontext, list<map<string,object>> rows);

}
//////////////////////////////////////////

@namespace('datasource')
class readcontext { 
    integer maxresults { set; get; }
    list<datasource.table> metadata { set; get; }
    integer offset { set; get; }
    boolean equals( object obj);

    integer hashcode( );

    static list<datasource.queryaggregation> values( );

}
//////////////////////////////////////////

@namespace('datasource')
class searchcontext { 
    string searchphrase { set; get; }
    list<datasource.tableselection> tableselections { set; get; }
     searchcontext( list<datasource.table> metadata, integer offset, integer maxresults, list<datasource.tableselection> tableselections, string searchphrase);
     searchcontext( );
    boolean equals( object obj);

    integer hashcode( );

    static list<datasource.queryaggregation> values( );

}
//////////////////////////////////////////

@namespace('datasource')
class searchutils { 
    list<datasource.tableresult> searchbyname( datasource.searchcontext searchdetails, datasource.connection connection);

}
//////////////////////////////////////////

@namespace('datasource')
class table { 
    list<datasource.column> columns { set; get; }
    string description { set; get; }
    string labelplural { set; get; }
    string labelsingular { set; get; }
    string name { set; get; }
    string namecolumn { set; get; }
    boolean equals( object obj);

    integer hashcode( );

    static list<datasource.order> values( );

    static datasource.table get( string name, string labelsingular, string labelplural, string description, string namecolumn, list<datasource.column> columns);

    static datasource.table get( string name, string namecolumn, list<datasource.column> columns);

}
//////////////////////////////////////////

@namespace('datasource')
class tableresult { 
    string errormessage { set; get; }
    string querymoretoken { set; get; }
    list<map<string,object>> rows { set; get; }
    boolean success { set; get; }
    string tablename { set; get; }
    integer totalsize { set; get; }
    boolean equals( object obj);

    integer hashcode( );

    static list<datasource.order> values( );

    static datasource.tableresult error( string errormessage);

    static datasource.tableresult get( boolean success, string tablename, list<map<string,object>> rows, integer totalsize);

    static datasource.tableresult get( datasource.tableselection tableselection, list<map<string,object>> rows);

}
//////////////////////////////////////////

@namespace('datasource')
class tableselection { 
    list<datasource.columnselection> columnsselected { set; get; }
    datasource.filter filter { set; get; }
    list<datasource.order> order { set; get; }
    string tableselected { set; get; }
    boolean equals( object obj);

    integer hashcode( );

    static list<datasource.tableselection> values( );

}
//////////////////////////////////////////

@namespace('datasource')
class upsertcontext { 
    list<map<string, any>> rows { set; get; }
    string tableselected { set; get; }
    boolean equals( object obj);

    integer hashcode( );

    static list<datasource.upsertcontext> values( );

}
//////////////////////////////////////////

@namespace('datasource')
class upsertresult { 
    string errormessage { set; get; }
    string externalid { set; get; }
    boolean success { set; get; }
    boolean equals( object obj);

    integer hashcode( );

    static list<datasource.order> values( );

    static datasource.tableresult error( string errormessage);

    static datasource.upsertresult failure( string externalid, string errormessage);

    static datasource.upsertresult success( string externalid);

}
//////////////////////////////////////////

@namespace('schema')
class action_plan_template extends sobject { 
    id id;
    system.string name;
}
//////////////////////////////////////////

@namespace('schema')
class action_plans__c extends sobject { 
    iterator<actionplan__c> iterator( );

    system.integer size( );

}
//////////////////////////////////////////

@namespace('schema')
class describesobjectresult { 
    schema.sobjecttypefields fields;
    schema.sobjecttypefields getfields( );

}
//////////////////////////////////////////

@namespace('schema')
class displaytype { 
    system.string name( );

}
//////////////////////////////////////////

@namespace('schema')
class feedpost extends sobject { 
    string type;
    id parentid;
    string title;
    string body;
    string linkurl;
}
//////////////////////////////////////////

@namespace('schema')
class sobjecttype { 
}
//////////////////////////////////////////

@idiomatic
@namespace('schema')
class sobjecttypefields extends sobject { 
    map<string,schema.sobjectfield> getmap( );

}
//////////////////////////////////////////

@namespace('schema')
class sobjecttypefieldsets extends sobject { 
}
//////////////////////////////////////////

@namespace('schema')
class task { 
    string type;
}
//////////////////////////////////////////

@namespace('system')
interface installcontext { 
    id organizationid( );

    id installerid( );

    boolean  isupgrade( );

    boolean  ispush( );

    version previousversion( );

}
//////////////////////////////////////////

@namespace('system')
interface installhandler { 
    id oninstall( installcontext context);

}
//////////////////////////////////////////

@idiomatic
@namespace('system')
class label { 
class null { 
}
}
//////////////////////////////////////////

@namespace('system')
class list { 
     list( list<t> list);
     list( set<t> set);
    schema.sobjecttype getsobjecttype( );

}
//////////////////////////////////////////

@idiomatic
@namespace('system')
class page { 
    static system.pagereference rfp_getresponses;
    static system.pagereference form;
    static system.pagereference previewerror;
    static system.pagereference getpagefor( string pagename);

}
//////////////////////////////////////////

@namespace('system')
class set { 
     set( list<t> list);
     set( set<t> set);
}
//////////////////////////////////////////

@idiomatic
@namespace('system')
class sobject { 
    static schema.sobjecttype sobjecttype;
    static schema.sobjecttypefields fields;
}
//////////////////////////////////////////
@namespace('system')
class trigger< t > { 
    boolean isexecuting;
    boolean isdeleted;
    boolean isinsert;
    boolean isupdate;
    boolean isdelete;
    boolean isbefore;
    boolean isafter;
    boolean isundelete;
    list<t> new;  
    map<id,t> newmap;
    list<t> old;
    map<id,t> oldmap;
    integer size;
}
////////////////////////////////////////////

@namespace('system')
interface uninstallhandler { 
}
        ]]></Text>
        </ResolutionLibrary>
    </ResolutionLibraries>
</RulePack>
tresponses;
    static system.pagereference form;
    static system.pagereference previewerror;
    static system.pagereference getpagefor( string pagename);

}
//////////////////////////////////////////

@namespace('system')
class set { 
     set( list<t> list);
     set( set<t> set);
}
//////////////////////////////////////////

@id