<?xml version="1.0" encoding="UTF-8"?>
<RulePack xmlns:mask="xmlns://www.fortifysoftware.com/schema/mask" xmlns="xmlns://www.fortifysoftware.com/schema/rules">
    <RulePackID>4421B9E8-4F7D-4863-8E48-6A854826E039</RulePackID>
    <SKU>RUL13228</SKU>
    <Name><![CDATA[Fortify Secure Coding Rules, Core, Kotlin]]></Name>
    <Activated>true</Activated>
    <Version>2022.3.0.0008</Version>
    <Language>kotlin</Language>
    <Description><![CDATA[Provides coverage of security relevant core language APIs for Kotlin]]></Description>
    <Locale>en</Locale>
    <Rules version="3.2" minimumSCA="18.10">
        <Notes><![CDATA[

        (C) Copyright 2020 - 2022 Micro Focus                                
        The information contained herein is subject to change without notice.
        The only warranties for Micro Focus products and services are set    
        forth in the express warranty statements accompanying such products  
        and services. Nothing herein should be construed as constituting an  
        additional warranty. Micro Focus shall not be liable for technical   
        or editorial errors or omissions contained herein.                   
        
        ]]></Notes>
        <RuleDefinitions>
            <DataflowSourceRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                    <Group name="inputsource">Exception Information</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>3E7FA420-4BDD-46EE-8668-C1E4638047FC</RuleID>
                <TaintFlags>+EXCEPTIONINFO,+SYSTEMINFO</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Throwable</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>getMessage</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <OutArguments>return</OutArguments>
            </DataflowSourceRule>
            <DataflowSourceRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                    <Group name="inputsource">Exception Information</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>C87A4013-F887-4C07-9814-7D7BF0D52F13</RuleID>
                <TaintFlags>+EXCEPTIONINFO,+SYSTEMINFO</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>stackTraceToString</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.Throwable</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <OutArguments>return</OutArguments>
            </DataflowSourceRule>
            <DataflowSourceRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                    <Group name="inputsource">Exception Information</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>4E154450-166F-47E7-9C9D-9DE097B454BF</RuleID>
                <TaintFlags>+SYSTEMINFO,+EXCEPTIONINFO</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>getStackTrace|getSuppressedExceptions</Pattern>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.Throwable</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <OutArguments>return</OutArguments>
            </DataflowSourceRule>
            <DataflowSourceRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="inputsource">Stream</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>1111ACC0-70E6-43E8-84A2-B69FA1E66BB9</RuleID>
                <TaintFlags>+STREAM,+NO_NEW_LINE</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>lineSequence</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <OutArguments>return</OutArguments>
            </DataflowSourceRule>
            <DataflowSourceRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="inputsource">Stream</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>34F2CDDC-85AA-4A60-A75D-65A70A378AC4</RuleID>
                <TaintFlags>+STREAM,+NO_NEW_LINE</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>readLines</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.Reader</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <OutArguments>return</OutArguments>
            </DataflowSourceRule>
            <DataflowSourceRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="inputsource">Stream</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>BA972139-C69B-404F-BD90-54EBA3C8A2D0</RuleID>
                <TaintFlags>+STREAM</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>readBytes</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.InputStream</ParamType>
                        <WildCard min="0" max="1"/>
                    </Parameters>
                </FunctionIdentifier>
                <OutArguments>return</OutArguments>
            </DataflowSourceRule>
            <DataflowSourceRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="inputsource">Web Service</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>4420BEFA-8FAC-4C82-B81D-0B790EE7C35F</RuleID>
                <TaintFlags>+WEBSERVICE,+XSS</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>read(Bytes|Text)</Pattern>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.net.URL</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <OutArguments>return</OutArguments>
            </DataflowSourceRule>
            <DataflowSourceRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="inputsource">Stream</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>1F947F52-81F7-4422-8086-32B9F56D0961</RuleID>
                <TaintFlags>+STREAM</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>readText</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.Reader</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <OutArguments>return</OutArguments>
            </DataflowSourceRule>
            <DataflowSourceRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="inputsource">File System</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>0B7E09FA-7161-4E68-8B85-C5B26F52FDBE</RuleID>
                <TaintFlags>+FILE_SYSTEM,+NO_NEW_LINE</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>readLines</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.File</ParamType>
                        <WildCard min="1" max="1"/>
                    </Parameters>
                </FunctionIdentifier>
                <OutArguments>return</OutArguments>
            </DataflowSourceRule>
            <DataflowSourceRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="inputsource">File System</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>8CF2AB22-E24B-4E30-9D98-FC3FD9B80D9D</RuleID>
                <TaintFlags>+FILE_SYSTEM</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>readBytes</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.File</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <OutArguments>return</OutArguments>
            </DataflowSourceRule>
            <DataflowSourceRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="inputsource">File System</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>DA311C57-1F22-4F35-90C4-16465046A6B2</RuleID>
                <TaintFlags>+FILE_SYSTEM</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>readText</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.File</ParamType>
                        <WildCard min="1" max="1"/>
                    </Parameters>
                </FunctionIdentifier>
                <OutArguments>return</OutArguments>
            </DataflowSourceRule>
            <DataflowSourceRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="inputsource">Standard Input Stream</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>68F0E42C-EF27-46AF-B7E6-9D8228350A01</RuleID>
                <TaintFlags>+STDIN</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>readLine</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <OutArguments>return</OutArguments>
            </DataflowSourceRule>
            <DataflowSourceRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Reflect</Group>
                    <Group name="inputsource">System Information</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>847263A6-C4AF-4F80-8A30-05FD662A217A</RuleID>
                <Notes><![CDATA[
                Source rule (+CLASS_NAME) for:

                abstract val qualifiedName: String?
                The fully qualified dot-separated name of the class,

                abstract val simpleName: String?
                The simple name of the class as it was declared in the source code
            ]]></Notes>
                <TaintFlags>+CLASS_NAME</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.reflect</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>KClass</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern>getQualifiedName|getSimpleName</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <OutArguments>return</OutArguments>
            </DataflowSourceRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                </MetaInfo>
                <RuleID>4B2B3558-BBC0-4668-8D75-55645228816C</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>to</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return.first</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                </MetaInfo>
                <RuleID>0E5EA1BB-041F-4A23-9DA6-4A009AAD905D</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>to</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>1</InArguments>
                <OutArguments>return.second</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                </MetaInfo>
                <RuleID>3D553BF8-4FA0-410F-BE04-68BB06323717</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <ClassName>
                        <Pattern>Pair|Triple</Pattern>
                    </ClassName>
                    <FunctionName>
                        <Value>init^</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>this.first</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                </MetaInfo>
                <RuleID>8E01D7E6-C07D-4591-AFB2-B4F2A6878549</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <ClassName>
                        <Pattern>Pair|Triple</Pattern>
                    </ClassName>
                    <FunctionName>
                        <Value>init^</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>1</InArguments>
                <OutArguments>this.second</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                </MetaInfo>
                <RuleID>A45C1B03-ACA9-4B01-88EF-59EC1D5EB437</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Triple</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>init^</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>2</InArguments>
                <OutArguments>this.third</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                </MetaInfo>
                <RuleID>17659FFF-B0C8-4D04-90D3-D8055BBC798F</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <ClassName>
                        <Pattern>Pair|Triple</Pattern>
                    </ClassName>
                    <FunctionName>
                        <Pattern>getFirst|component1</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this.first</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                </MetaInfo>
                <RuleID>93FA94EF-E30C-4DFD-9900-A6F7616CCE2B</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <ClassName>
                        <Pattern>Pair|Triple</Pattern>
                    </ClassName>
                    <FunctionName>
                        <Pattern>getSecond|component2</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this.second</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                </MetaInfo>
                <RuleID>047A970A-4DFF-4BB8-9C20-6B91AAA26731</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Triple</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern>getThird|component3</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this.third</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                </MetaInfo>
                <RuleID>4D0FEC02-13A4-4078-9630-31BE0A996451</RuleID>
                <Notes><![CDATA[
                Byte unary operators
            ]]></Notes>
                <TaintFlags>+NUMBER,-XSS</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Byte</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern>dec|inc|unaryMinus|unaryPlus</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                </MetaInfo>
                <RuleID>34C83148-2A8F-4880-8EC3-3D8FDF01E7EE</RuleID>
                <Notes><![CDATA[
                Char unary operators
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Char</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern>dec|inc|unaryMinus|unaryPlus</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                </MetaInfo>
                <RuleID>F95AE3A6-36F9-43EC-9AB8-28A6204B4228</RuleID>
                <Notes><![CDATA[
                binary operators
            ]]></Notes>
                <TaintFlags>+NUMBER,-XSS</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Byte</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern>div|mod|plus|rangeTo|rem|times|minus</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this,0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                </MetaInfo>
                <RuleID>4C589141-3B09-4E78-BE4F-ED2C8D2A224F</RuleID>
                <Notes><![CDATA[
                For Char plus/minus operators: 

                operator fun plus(other: Int): Char
                operator fun minus(other: Int): Char
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Char</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern>plus|minus</Pattern>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.Int</ParamType>
                    </Parameters>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                </MetaInfo>
                <RuleID>86E017E1-931B-4FA5-BC02-6634994168F5</RuleID>
                <Notes><![CDATA[
                For Char minus operator: 

                operator fun minus(other: Char): Int
            ]]></Notes>
                <TaintFlags>+NUMBER,-XSS</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Char</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>minus</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.Char</ParamType>
                    </Parameters>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this,0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                </MetaInfo>
                <RuleID>3EF972C0-08D7-4B10-AD29-D320FADBBA50</RuleID>
                <Notes><![CDATA[
                
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Char</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>rangeTo</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this,0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                </MetaInfo>
                <RuleID>C2E96420-E0D1-42E1-B3A4-29393092E32C</RuleID>
                <Notes><![CDATA[
                not sure why there's a Byte.toByte() function. Perhaps Java compatibility with boxed/unboxed values

                originally was going to have +NUMBER and put this with toInt, etc, but changed my mind. 

            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Byte</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern>toByte|toChar</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                </MetaInfo>
                <RuleID>210C8FF8-0D3C-4F46-AA8A-15A757266927</RuleID>
                <Notes><![CDATA[
                
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Char</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern>toByte|toChar</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                </MetaInfo>
                <RuleID>95C17136-4CC5-4660-A5BC-31A58FFB2C96</RuleID>
                <Notes><![CDATA[
            ]]></Notes>
                <TaintFlags>+NUMBER,-XSS</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <ClassName>
                        <Pattern>Byte|Char</Pattern>
                    </ClassName>
                    <FunctionName>
                        <Pattern>toDouble|toFloat|toInt|toLong|toShort</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                </MetaInfo>
                <RuleID>8223FF8A-439A-4892-B02B-36B03CB4F800</RuleID>
                <Notes><![CDATA[
            ]]></Notes>
                <TaintFlags>+NUMBER,-XSS</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Byte</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>countLeading</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                </MetaInfo>
                <RuleID>2898D41C-55D4-4B1C-8068-4A4BD4134208</RuleID>
                <Notes><![CDATA[
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>CharSequence</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>get</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                </MetaInfo>
                <RuleID>D43E0D85-E0DE-4DA4-9A47-BD006CE074D1</RuleID>
                <Notes><![CDATA[
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>CharSequence</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>subSequence</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                </MetaInfo>
                <RuleID>9E237769-FA0D-4E8C-A46B-144A7839E9AC</RuleID>
                <Notes><![CDATA[
                Counts against all subtypes of Number as well

                Do not add +NUMBER in the case of a simple conversion: 
                string -> bytearray -> chararray, we won't want to add +NUMBER. 
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Number</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern>toByte|toChar</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                </MetaInfo>
                <RuleID>2F3C475A-546A-4142-B82D-464A14972C6F</RuleID>
                <Notes><![CDATA[
                Counts against all subtypes of Number as well. 

                Number conversion functions. 
                Add +NUMBER just in case not already tainted. 
            ]]></Notes>
                <TaintFlags>+NUMBER,-XSS</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Number</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern>to(Double|Float|Int|Long|Short)</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                </MetaInfo>
                <RuleID>5AD3CA88-385D-401E-947D-C8F9607E8437</RuleID>
                <Notes><![CDATA[
                unary operators
            ]]></Notes>
                <TaintFlags>+NUMBER,-XSS</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <ClassName>
                        <Pattern>Double|Float|Int|Long|Short</Pattern>
                    </ClassName>
                    <FunctionName>
                        <Pattern>dec|inc|unaryMinus|unaryPlus</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                </MetaInfo>
                <RuleID>EFDCB527-252B-414B-B75D-ED694C500779</RuleID>
                <Notes><![CDATA[
                
            ]]></Notes>
                <TaintFlags>+NUMBER,-XSS</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <ClassName>
                        <Pattern>Double|Float|Int|Long|Short</Pattern>
                    </ClassName>
                    <FunctionName>
                        <Pattern>div|minus|mod|plus|rem|times</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this,0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                </MetaInfo>
                <RuleID>E8EAF5FA-9C00-40F8-9E85-D52B8C7A4BD7</RuleID>
                <Notes><![CDATA[
                
            ]]></Notes>
                <TaintFlags>+NUMBER,-XSS</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <ClassName>
                        <Pattern>Int|Long</Pattern>
                    </ClassName>
                    <FunctionName>
                        <Pattern>and|inv|or|shl|shr|ushr|xor</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this,0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                </MetaInfo>
                <RuleID>8DA6156A-86E1-44AF-995D-FB7C3FFB5BE6</RuleID>
                <Notes><![CDATA[
                passthrough for lazy value getter
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Lazy</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>getValue</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                </MetaInfo>
                <RuleID>38BBC14C-AC26-4BB5-B34E-CCB208A79281</RuleID>
                <Notes><![CDATA[
                passthrough for lazy property delegate using the 'by' operator:
                    val foo : String? by lazy { taintedString }
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>getValue</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.Lazy</ParamType>
                        <ParamType>kotlin.Any</ParamType>
                        <ParamType>kotlin.reflect.KProperty</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                </MetaInfo>
                <RuleID>595EBE5B-7E7C-42DF-B38E-767A1EDF4F84</RuleID>
                <Notes><![CDATA[
                Result success() companion function
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Result.Companion</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>success</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                </MetaInfo>
                <RuleID>3E310D56-F714-4D77-8F2D-037DB07A891B</RuleID>
                <Notes><![CDATA[
                Result getOrNull() function
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Result</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>getOrNull</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                </MetaInfo>
                <RuleID>B321CEB6-D09C-49A7-BBD6-5C0C7F816AE4</RuleID>
                <Notes><![CDATA[
                
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>String</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>plus</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this,0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                </MetaInfo>
                <RuleID>7BD1FBC5-C9CC-471A-9AA4-85C2529B8436</RuleID>
                <Notes><![CDATA[
                kotlin extensions for java.math.BigDecimal 

                unary operators only
            ]]></Notes>
                <TaintFlags>+NUMBER,-XSS</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>dec|inc|unaryMinus</Pattern>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.math.BigDecimal</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                </MetaInfo>
                <RuleID>93660DB1-689E-434E-9379-2165F09D0EFF</RuleID>
                <Notes><![CDATA[
                kotlin extensions for java.math.BigDecimal 

                binary operators
            ]]></Notes>
                <TaintFlags>+NUMBER,-XSS</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>div|minus|mod|plus|rem|times</Pattern>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.math.BigDecimal</ParamType>
                        <ParamType>java.math.BigDecimal</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0,1</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                </MetaInfo>
                <RuleID>576A6B36-8081-4DBC-89FC-EDCFDFCD2CD5</RuleID>
                <Notes><![CDATA[
                kotlin extensions for java.math.BigInteger 

                unary operators only
            ]]></Notes>
                <TaintFlags>+NUMBER,-XSS</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>dec|inc|inv|unaryMinus</Pattern>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.math.BigInteger</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                </MetaInfo>
                <RuleID>4FE0EA36-A31A-4F7A-BE62-1BB1B8BE9968</RuleID>
                <Notes><![CDATA[
                kotlin extensions for java.math.BigInteger

                binary operators
            ]]></Notes>
                <TaintFlags>+NUMBER,-XSS</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>and|div|minus|or|plus|rem|shr|shl|times|xor</Pattern>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.math.BigInteger</ParamType>
                        <WildCard min="1" max="1"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0,1</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                </MetaInfo>
                <RuleID>E36C179A-629F-4B64-8CE8-0BFD8B3C03BA</RuleID>
                <Notes><![CDATA[
                kotlin extensions for converting kotlin number types to BigDecimal or BigInteger
                This also covers the extension function: 

                java.math.BigInteger.toBigDecimal()
            ]]></Notes>
                <TaintFlags>+NUMBER,-XSS</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>toBigDecimal|toBigInteger</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                </MetaInfo>
                <RuleID>A9541B48-44DA-454A-9BAF-3D9747072DC4</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>arrayOf</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0...</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                </MetaInfo>
                <RuleID>BFB10B92-193B-4D9E-B440-FBD7A939C3E3</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>(byte|char)ArrayOf</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0...</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                </MetaInfo>
                <RuleID>54F507FB-558B-4CBD-B6D2-FFDE7CAA5663</RuleID>
                <TaintFlags>+NUMBER,-XSS</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>(double|float|int|long|short)ArrayOf</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0...</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                </MetaInfo>
                <RuleID>59DA8D63-ECF9-43F4-ACD3-F91E4B765AC8</RuleID>
                <Notes><![CDATA[
                For kotlin package function: 

                Result.getOrDefault(defaultValue: R): R

                Can either return original result, or if an exception was thrown, it will return defaultValue. 
                translated as kotlin.getOrDefault(this: Result, defaultValue: R): R
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>getOrDefault</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.Result</ParamType>
                        <WildCard min="1" max="1"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0,1</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                </MetaInfo>
                <RuleID>A7128ABF-0656-4A5F-BF1E-174356DF7A5D</RuleID>
                <Notes><![CDATA[
                For kotlin package function: 

                Result.getOrElse(
                    onFailure: (exception: Throwable) -> R
                ): R

                Can either return original result, or if an exception was thrown, it will return value from onFailure. 

                translated as kotlin.getOrElse(this: Result, ...)
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>getOrElse</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.Result</ParamType>
                        <WildCard min="1" max="1"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                </MetaInfo>
                <RuleID>75116EFC-9522-4681-84CC-A528E8C24FC5</RuleID>
                <Notes><![CDATA[
                For kotlin package function: 

                Result.getOrThrow()

                Can either return original result, or if an exception was provided, it will now throw that exception. 

                translated as kotlin.getOrThrow(this: Result, ...)
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>getOrThrow</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.Result</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                </MetaInfo>
                <RuleID>F9656F4E-F31F-418E-9D88-B1F27DBDEA2A</RuleID>
                <Notes><![CDATA[
                For kotlin package function: 

                Result.onFailure(
                    action: (exception: Throwable) -> Unit
                ): Result

                Can either return original result, or if an exception was provided, it will call the lambda with the associated exception

                translated as kotlin.onFailure(this: Result, ...)
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>onFailure</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.Result</ParamType>
                        <WildCard min="1" max="1"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                </MetaInfo>
                <RuleID>D2870CC1-6F53-4C8D-B6B7-618F458CE74A</RuleID>
                <Notes><![CDATA[
                For kotlin package function: 

                fun <T> Result<T>.onSuccess(
                    action: (value: T) -> Unit
                ): Result<T>

                If successful, it will call the lambda with the given value and also return it. 

                translated as kotlin.onSuccess(this: Result, ...)
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>onSuccess</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.Result</ParamType>
                        <WildCard min="1" max="1"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                </MetaInfo>
                <RuleID>ED4EC5FD-F388-4202-977D-62ED13E93CE7</RuleID>
                <Notes><![CDATA[
                For kotlin package function: 

                fun <R, T : R> Result<T>.recover(
                    transform: (exception: Throwable) -> R
                ): Result<R>

                If successful, it will call the lambda with the given value and also return it. 

                translated as kotlin.recover(this: Result, ...)

                same for recoverCatching, but catches exceptions thrown by transform and encapsulates it to a failure
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>recover(Catching)?</Pattern>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.Result</ParamType>
                        <WildCard min="1" max="1"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                </MetaInfo>
                <RuleID>57355B8E-71DB-4FFB-AD1D-CFBBF522F567</RuleID>
                <Notes><![CDATA[
                Passthrough for kotlin.takeIf (and takeUnless): 
                
                fun <T> T.takeIf(predicate: (T) -> Boolean): T?
                
                takeUnless is same, but opposite predicate logic. 
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>takeIf|takeUnless</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                </MetaInfo>
                <RuleID>52A1D460-ED22-4808-BE01-C76D136E362E</RuleID>
                <Notes><![CDATA[
                Passthrough for kotlin.toList() extension functions for kotlin.Pair
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>toList</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.Pair</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0.first,0.second</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                </MetaInfo>
                <RuleID>B90DCA56-3ABF-4AAE-A23B-22CA6737AA19</RuleID>
                <Notes><![CDATA[
                Passthrough for kotlin.toList() extension functions for kotlin.Triple
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>toList</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.Triple</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0.first,0.second,0.third</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>33BBDE03-6569-42EE-8BD7-787A0E115C26</RuleID>
                <Notes><![CDATA[
                Only matches against methods containing a single argument. 
                Other collection types may overload putting an index as arg0, which we wouldn't want to propagate. 
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>MutableCollection</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern>add(All)?</Pattern>
                    </FunctionName>
                    <Parameters>
                        <WildCard min="1" max="1"/>
                    </Parameters>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>this</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>41DB91D7-E10B-4BAF-AFA1-239AF1FCA683</RuleID>
                <Notes><![CDATA[
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>MutableList</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern>add(All)?</Pattern>
                    </FunctionName>
                    <Parameters>
                        <WildCard min="2" max="2"/>
                    </Parameters>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>1</InArguments>
                <OutArguments>this</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>80ED31F6-0ACE-492E-80B1-86895D674FA3</RuleID>
                <Notes><![CDATA[
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>List</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>subList</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>035F0A0D-B169-4843-8A1F-AF4418E7DF32</RuleID>
                <Notes><![CDATA[
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>List</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>listIterator</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>44E3B9B0-51CF-4BE0-A53C-3B52686ADB60</RuleID>
                <Notes><![CDATA[
                protected open fun toArray(): Array<Any?>
                protected open fun <T> toArray(array: Array<T>): Array<T>

                In both cases, there needs a passthrough this -> return (this rule)
                For the second variant, it requires this -> arg0 (this rule) and arg0 -> return

                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>AbstractCollection</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>toArray</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return,0</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>9076816F-C588-4E10-9974-AC537C60A073</RuleID>
                <Notes><![CDATA[
                protected open fun toArray(): Array<Any?>
                protected open fun <T> toArray(array: Array<T>): Array<T>

                In both cases, there needs a passthrough this -> return 
                For the second variant, it requires this -> arg0 and arg0 -> return (this rule)

                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>AbstractCollection</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>toArray</Value>
                    </FunctionName>
                    <Parameters>
                        <WildCard min="1" max="1"/>
                    </Parameters>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>D19F9CD1-F80E-4733-A5A6-65791201A691</RuleID>
                <Notes><![CDATA[

                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Pattern>Array(List|Deque)</Pattern>
                    </ClassName>
                    <FunctionName>
                        <Value>init^</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.collections.Collection</ParamType>
                    </Parameters>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>this</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>B2254A2B-2007-4770-889C-5E0615ED7697</RuleID>
                <Notes><![CDATA[

                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Pattern>(Linked)?HashSet</Pattern>
                    </ClassName>
                    <FunctionName>
                        <Value>init^</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.collections.Collection</ParamType>
                    </Parameters>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>this</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>61F270D3-4976-4CE6-8CCB-78B95D8EE4EF</RuleID>
                <Notes><![CDATA[

                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Pattern>(Linked)?HashMap</Pattern>
                    </ClassName>
                    <FunctionName>
                        <Value>init^</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.collections.Map</ParamType>
                    </Parameters>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>this</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>72B8967B-81D1-4B36-B6C7-C6D088BA3A2A</RuleID>
                <Notes><![CDATA[

                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>ArrayDeque</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern>add(First|Last)</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>this</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>A970F7FD-3213-4F7B-9A55-AA2EC19A4A99</RuleID>
                <Notes><![CDATA[

                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>ArrayDeque</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern>first|firstOrNull|last|lastOrNull|removeFirst|removeFirstOrNull|removeLast|removeLastOrNull</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>029CB20D-4096-4A77-932B-C8F8E9E105EC</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>addAll</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.collections.MutableCollection</ParamType>
                        <WildCard min="1" max="1"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>1</InArguments>
                <OutArguments>0</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>20CF99C8-5108-4832-9EE4-87D82AB26CDD</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>asList|asReversed|reversed|reversedArray</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>174219D9-76E7-4395-9176-6CB3228EA0B0</RuleID>
                <Notes><![CDATA[
                Calls required, but does not change need for passthrough.
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>filter(Indexed|IsInstance|Keys|Not|NotNull|Values)?</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>9E5AF440-0645-4328-AFD1-7F2B6CCC1AA2</RuleID>
                <Notes><![CDATA[
                Calls required, but does not change need for passthrough.
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.sequences</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>filter(Indexed|IsInstance|Not|NotNull)?</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>9DA756A5-5EBC-48FD-90B1-3E05D181AE74</RuleID>
                <Notes><![CDATA[
                Calls required, but does not change need for passthrough.
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>filter(Indexed|Not)?</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>0861C2F5-96EC-4F44-BAA7-2782A0B4E72C</RuleID>
                <Notes><![CDATA[
                Calls required, but does not change need for passthrough.
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>find(Last)?</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>C5CFB535-8DE0-45D9-BFAC-3DCD6A2506FA</RuleID>
                <Notes><![CDATA[
                fun CharSequence.findAnyOf(
                    strings: Collection<String>,
                    startIndex: Int = 0,
                    ignoreCase: Boolean = false
                ): Pair<Int, String>?

                finds first occurrence of any of the strings specified in the collection "strings"
                and returns a pair for that, with the index and the matching string
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>findAnyOf|findLastAnyOf</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return.second</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>84298FCB-8FFC-4391-BD1B-C7E861F3527E</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>first(OrNull)?|last(OrNull)?</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>F2B1618D-1291-4DBC-B6B4-A7985D438ED9</RuleID>
                <Notes><![CDATA[
                kotlin.collections and kotlin.sequences flatten() passthru: 
                
                fun <T> Array<out Array<out T>>.flatten(): List<T>
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(collections|sequences)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Value>flatten</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>252DF4A0-A636-4C8C-A607-FD48A777FD38</RuleID>
                <Notes><![CDATA[
                
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>getOr(Null|Put)</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>7348561D-409B-4D5B-ABA4-B50BDE5CB81A</RuleID>
                <Notes><![CDATA[
                fun <T, K> Array<out T>.groupBy(
                    keySelector: (T) -> K
                ): Map<K, List<T>>

                    and variants. Ideally should be handled by a function model rule, 
                    but for now can simply be handled by a passthrough from the original 
                    array to the return. 

                    groupingBy is also covered, which returns a Grouping, instead of a Map. 
                    groupingBy could later be converted to a FMR. 
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>group(ing)?By</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>793A2029-2BAB-498E-AEBB-503E595F4571</RuleID>
                <Notes><![CDATA[
                fun <T, K, M : MutableMap<in K, MutableList<T>>> Array<out T>.groupByTo(
                    destination: M,
                    keySelector: (T) -> K
                ): M
                

                and variants. Ideally should be handled by a function model rule, 
                but for now can simply be handled by a passthrough from the original 
                array to the return. 

                Effectively what this is doing: 

                group the array into M, then return M. 
                So passthrus needed for:
                    array (instance) -> parameter: M    // this rule
                    array (instance) -> return M        // this rule
                    parameter: M -> return M
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Value>groupByTo</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>1,return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>20CB2954-B411-4918-8CF2-E0C356E0C1CF</RuleID>
                <Notes><![CDATA[
                fun <T, K, M : MutableMap<in K, MutableList<T>>> Array<out T>.groupByTo(
                    destination: M,
                    keySelector: (T) -> K
                ): M
                

                and variants. Ideally should be handled by a function model rule, 
                but for now can simply be handled by a passthrough from the original 
                array to the return. 

                Effectively what this is doing: 

                group the array into M, then return M. 
                So passthrus needed for:
                    array (instance) -> parameter: M    
                    array (instance) -> return M        
                    parameter: M -> return M            // this rule
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Value>groupByTo</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>1</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>4FC6F41B-C85B-4E83-AD42-AB5477B2B14C</RuleID>
                <Notes><![CDATA[
                fun <C, R> C.ifEmpty(
                    defaultValue: () -> R
                ): R where C : Array<*>, C : R
                
                returns the array C if not empty, otherwise returns value from defaultValue().
                This also covers a variant that works on a Map.
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Value>ifEmpty</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>B8530E9B-D532-4E73-9EBF-B0B1DE40D84E</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Value>orEmpty</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>43DE9264-050D-44D9-BC84-574439A46024</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>iterator</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.collections.MutableMap</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>813DA7E1-81B9-4DF9-9423-3655BD9E9B20</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>iterator</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.collections.Map</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>942AA665-E321-4335-B5CF-D065EB877C33</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>iterator</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.collections.Iterator</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>A9C534D4-F414-4A32-8536-4C51C147B239</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Iterator</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>next</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>EC9BC6CE-C124-46D1-8F62-579241F5B066</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>ByteIterator</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>nextByte</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>4D82CF48-9CD2-4995-86B0-3B7C0E279EDF</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>CharIterator</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>nextChar</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>FB2D52D1-57D7-4ADF-ADB0-64F996538BAF</RuleID>
                <TaintFlags>+NUMBER,-XSS</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>DoubleIterator</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>nextDouble</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>860ACCC0-C7F4-4C95-B77B-11DC544395DF</RuleID>
                <TaintFlags>+NUMBER,-XSS</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>FloatIterator</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>nextFloat</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>164F7F3D-BF01-4EB5-ACD2-B82BF5818E2F</RuleID>
                <TaintFlags>+NUMBER,-XSS</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>IntIterator</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>nextInt</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>8EB51A28-225B-4082-82A1-804E633068BD</RuleID>
                <TaintFlags>+NUMBER,-XSS</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>LongIterator</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>nextLong</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>8FB44B29-5A5E-485A-99F9-8D16DA918B8D</RuleID>
                <TaintFlags>+NUMBER,-XSS</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>ShortIterator</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>nextShort</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>DE29EE37-339E-49E3-801C-F5897AB04BF0</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>UByteIterator</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>nextUByte</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>4E7F98C3-B4E2-46BC-AC6F-08784C13F0C7</RuleID>
                <TaintFlags>+NUMBER,-XSS</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>UShortIterator</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>nextUShort</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>8076E09F-3125-40CB-829A-6F8B802775B2</RuleID>
                <TaintFlags>+NUMBER,-XSS</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>UIntIterator</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>nextUInt</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>09B464E5-2E8A-4D1C-9D3C-47D69F60E797</RuleID>
                <TaintFlags>+NUMBER,-XSS</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>ULongIterator</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>nextULong</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>24FC1A44-22D5-4B87-B2A0-6B6A676824D1</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>ListIterator</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>previous</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>3B7DE27A-1FFC-48AB-88C4-E30DFA603D58</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>MutableListIterator</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern>add|set</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>this</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>C122A659-C71A-4657-A8E9-804C2D3A9F31</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Map</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>getEntries</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>1E36340E-E865-49C2-8339-567B4D900B0C</RuleID>
                <Notes><![CDATA[
                MapRule covering this -> return
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Map</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>getOrDefault</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>1</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>2A2F6DA4-184C-4A3F-BB66-EC5C297482FB</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Map.Entry</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>getValue</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>96C714BF-B4C8-477D-A5C8-DBB6E5EDF742</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>MutableMap.MutableEntry</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>setValue</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>this</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>0528BE55-AF7F-4BBB-BFC7-8687BE11AAC7</RuleID>
                <Notes><![CDATA[
                abstract fun setValue(newValue: V): V

                MutableMap.MutableEntry actually sets the new value, but returns the previous value at the same time.
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>MutableMap.MutableEntry</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>setValue</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>456EDF1D-B982-4265-B2E8-F39900CD8C90</RuleID>
                <Notes><![CDATA[
                
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>MutableMap</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>putAll</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>this</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>620103D2-9F66-4200-9227-71FD989B8608</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>listOf|listOfNotNull|mapOf|setOf|setOfNotNull|hashMapOf|hashSetOf|linkedMapOf|linkedSetOf|mutableMapOf|mutableListOf|mutableSetOf|sortedMapOf|sortedSetOf|arrayOf|arrayListOf</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0...</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>AEC5B4D9-87C5-4F5C-A864-40CA92A0355D</RuleID>
                <Notes><![CDATA[
                Passthrough for kotlin.collections.component1 up to component5. 

                they are all operator overloads, and so appear as extensions. 
                
                i.e. 
                operator fun ByteArray.component5(): Byte
                comes out as kotlin.collections.component5(this: ByteArray): Byte
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>component(1|2|3|4|5)</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>36E436A9-5BDC-4C35-BF64-DA4DF96A4A34</RuleID>
                <Notes><![CDATA[
                
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>asIterable|asSequence</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>65D55BFB-43D9-4F06-96A4-251438BA9133</RuleID>
                <Notes><![CDATA[
                
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.sequences</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>sequenceOf</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0...</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>EE014C9D-E78B-4332-BA8E-0C7CDF7EE9F6</RuleID>
                <Notes><![CDATA[
                
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.sequences</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>constrainOnce</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>1B2427D6-DC52-471F-9FB4-CB3621EB6753</RuleID>
                <Notes><![CDATA[
                kotlin.collections.chunked variations: 

                fun <T> Iterable<T>.chunked(size: Int): List<List<T>>

                fun <T, R> Iterable<T>.chunked(
                    size: Int,
                    transform: (List<T>) -> R
                ): List<R>
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Value>chunked</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>C150C1FB-B432-45FB-AB30-584D996DD353</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>content(Deep)?ToString</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>A17E79A5-61E4-4C1B-A964-CE9BDEE14CA0</RuleID>
                <Notes><![CDATA[
                kotlin.collections.copyInto: 
                
                fun <T> Array<out T>.copyInto(
                    destination: Array<T>,
                    destinationOffset: Int = 0,
                    startIndex: Int = 0,
                    endIndex: Int = size
                ): Array<T>
                
                effectively 0 -> 1, then 1 -> return. Needs 2 sets of passthroughs. 
                
                passthrough for original array and destination array -> return
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>copyInto</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0,1</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>FC5FD97E-6083-45FA-B14A-70A5E7E9C4A2</RuleID>
                <Notes><![CDATA[
                kotlin.collections.copyInto: 
                
                fun <T> Array<out T>.copyInto(
                    destination: Array<T>,
                    destinationOffset: Int = 0,
                    startIndex: Int = 0,
                    endIndex: Int = size
                ): Array<T>
                
                effectively 0 -> 1, then 1 -> return. Needs 2 sets of passthroughs. 
                
                passthrough for original array -> destination array
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>copyInto</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>1</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>B3E78EEE-1CB8-4EBC-BB66-A31782A213F5</RuleID>
                <Notes><![CDATA[
                kotlin.collections.copyOf()

                simply duplicates an array.
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>copyOf(Range)?</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>9F55D59F-4BE9-4AEF-BBA3-3A0970D94792</RuleID>
                <Notes><![CDATA[
                kotlin.collections.distinct() and distinctBy(). 
                Both return a subset of the original array
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(collections|sequences)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>distinct(By)?</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>65082407-CA4B-4646-92C5-131A3D068311</RuleID>
                <Notes><![CDATA[
                covers extensions functions: 

                kotlin.collections.drop
                kotlin.collections.dropWhile
                kotlin.collections.dropLast
                kotlin.collections.dropLastWhile

                The "While" variants take lambdas that have to match a certain predicate, 
                but either way the return value will be a subset of the original array. 
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(collections|text)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>drop|dropLast|dropLastWhile|dropWhile</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>B2D3F431-8AC5-443C-826E-DF146BBD852D</RuleID>
                <Notes><![CDATA[
                covers extensions functions: 

                kotlin.sequences.drop
                kotlin.sequences.dropWhile

                The "While" variant takes a lambda that have to match a certain predicate, 
                but either way the return value will be a subset of the original sequence. 
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.sequences</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>drop(While)?</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>C43CC9FE-6F24-455A-B9DB-AD1F53A0FBD4</RuleID>
                <Notes><![CDATA[
                covers extensions functions: 

                kotlin.collections.elementAt()
                kotlin.collections.elementAtOrElse()
                kotlin.collections.elementAtOrNull()

                All return an element from the array they're applied to. 

            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>elementAt(OrElse|OrNull)?</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>A670D535-D1CD-4C18-B2A8-023B7C6E803C</RuleID>
                <Notes><![CDATA[
                covers extensions functions: 

                kotlin.collections.fill() e.g. 
                
                fun <T> Array<T>.fill(
                    element: T,
                    fromIndex: Int = 0,
                    toIndex: Int = size)

            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>fill</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>1</InArguments>
                <OutArguments>0</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>E7A8EB4D-6FA4-406E-B162-1214D74AC69D</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>setValue</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.collections.MutableMap</ParamType>
                        <WildCard min="3" max="3"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>3</InArguments>
                <OutArguments>0</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>6DEBDB61-4404-4DC3-B519-1C2FF23354E3</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>intersect</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0...</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>9BB758CA-3353-467E-A498-B65B01DA47AF</RuleID>
                <Notes><![CDATA[
                kotlin.collections.joinTo:

                fun <T, A : Appendable> Array<out T>.joinTo(
                    buffer: A,
                    separator: CharSequence = ", ",
                    prefix: CharSequence = "",
                    postfix: CharSequence = "",
                    limit: Int = -1,
                    truncated: CharSequence = "...",
                    transform: ((T) -> CharSequence)? = null
                ): A

                This is for the the buffer, separator, prefix, postfix, and truncated all going to the return value.
                Arg0 (this) is handled in a separate rule, because it's based upon the existence of
                a transform function.
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(collections|sequences)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Value>joinTo</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>1-4,6</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>E65045DC-7D83-4BCD-91BC-6E5F6AEBA1B1</RuleID>
                <Notes><![CDATA[
                kotlin.collections.joinTo:

                fun <T, A : Appendable> Array<out T>.joinTo(
                    buffer: A,
                    separator: CharSequence = ", ",
                    prefix: CharSequence = "",
                    postfix: CharSequence = "",
                    limit: Int = -1,
                    truncated: CharSequence = "...",
                    transform: ((T) -> CharSequence)? = null
                ): A

                This is for the separator, prefix, postfix, and truncated all going to the appendable buffer.
                Arg0 (this) is handled in a separate rule, because it's based upon the existence of
                a transform function.
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(collections|sequences)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Value>joinTo</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>2,3,4,6</InArguments>
                <OutArguments>1</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>5FFF4D83-8AAF-4209-9298-10EB705F2AF4</RuleID>
                <Notes><![CDATA[
                kotlin.collections.joinToString:
                
                fun <T> Array<out T>.joinToString(
                    separator: CharSequence = ", ",
                    prefix: CharSequence = "",
                    postfix: CharSequence = "",
                    limit: Int = -1,
                    truncated: CharSequence = "...",
                    transform: ((T) -> CharSequence)? = null
                ): String
                

                This is for the separator, prefix, postfix, and truncated all going to the return value
                passthrough on arg0 (this) handled separately, as dependent upon transformer existence.
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(collections|sequences)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Value>joinToString</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>1-3,5</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>38BE2280-A2A6-4651-8744-40A36A8EAF6E</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>max(OrNull|By|ByOrNull|Of|OfOrNull|With|WithOrNull)?</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>CEC4A463-4980-4BA8-98B8-2B8BE0498DEF</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>min(OrNull|By|ByOrNull|Of|OfOrNull|With|WithOrNull)?</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>853B847D-CA9F-45CC-9A5E-E2294AE83194</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(collections|sequences)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>minus(Element)?</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>91D86525-6925-4743-9B02-15888115BF37</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(collections|sequences)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>plus(Element)?</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0,1</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>AAF3044C-3A58-4E44-BD0C-CE5D42D43E9E</RuleID>
                <Notes><![CDATA[
                Later test to see if FMR works better for MutableMap variants. 
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>plusAssign</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>1</InArguments>
                <OutArguments>0</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>C6302DB2-38EF-46F7-8153-D82D547D1BC3</RuleID>
                <Notes><![CDATA[
                    fun <K, V> MutableMap<in K, in V>.putAll(pairs: Array<out Pair<K, V>>)

                    can later check if FMR works better, but I doubt it (since the pairs are put into a list/array)
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>putAll</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>1</InArguments>
                <OutArguments>0</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>04D71E5E-8BDC-4DA8-8A6D-4805CEDCBB48</RuleID>
                <Notes><![CDATA[
                    fun <K, V> MutableMap<out K, V>.remove(key: K): V?
                    
                    Want to make sure to not match against the other variants. 
                    
                    Note: there is also a MutableMap<K, V> function remove(key: K), but in that K is invariant
                        (the key parameter of remove() needs to be the same type or subtype of K).
                        More info can be found on wiki under kotlin rule writing guidelines

                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>remove</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.collections.MutableMap</ParamType>
                        <WildCard min="1" max="1"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>E43A41E2-04B1-4BB8-952D-CC611E64FEDA</RuleID>
                <Notes><![CDATA[
                    
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>remove(First|Last)(OrNull)?</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>BBDDE40C-95F4-4EC6-9A08-1E9A3E3F450D</RuleID>
                <Notes><![CDATA[
                    
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(collections|sequences)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Value>requireNoNulls</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>C8167030-9593-4866-A880-5D25D5BE80D2</RuleID>
                <Notes><![CDATA[
                    
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>shuffled</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>BA3A5CA7-A90B-446B-85D6-545143FBAD27</RuleID>
                <Notes><![CDATA[
                    
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>single(OrNull)?</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>0D7C7D5A-AD35-48CB-BB66-964FD2959936</RuleID>
                <Notes><![CDATA[
                    
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>slice(Array)?</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>C3A60B3C-EF1B-44EE-ADA0-D8BE793E1468</RuleID>
                <Notes><![CDATA[
                    
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>sorted|sortedArray|sortedArrayDescending|sortedArrayWith|sortedBy|sortedByDescending|sortedDescending|sortedWith</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>5E9455DF-AA2E-467E-8D70-7C2B3D380C52</RuleID>
                <Notes><![CDATA[
                    
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.sequences</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>sorted|sortedBy|sortedByDescending|sortedDescending|sortedWith</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>340ACE84-8726-4E73-94E8-98C266BFC24C</RuleID>
                <Notes><![CDATA[
                infix fun <T> Iterable<T>.subtract(
                    other: Iterable<T>
                ): Set<T>
                    
                returns the elements of the instance (arg0), minus the elements from the other Iterable
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>subtract</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>A621B804-0D26-4310-BFB8-E19E917FDB8A</RuleID>
                <Notes><![CDATA[
                fun IntArray.sum(): Int

                and variants. SCA will likely know it's a number anyway, but can't hurt. Also applies to Iterables, 
                where SCA may not know the type from the generic (possibly). 
                ]]></Notes>
                <TaintFlags>+NUMBER,-XSS</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(collections|sequences)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>sum|sumBy|sumByDouble|sumOf</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>1E2E575C-F849-4FA9-9BA7-0CC037C87053</RuleID>
                <Notes><![CDATA[
                
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>take|takeLast|takeLastWhile|takeWhile</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>1BAB2BA6-CEDE-4001-8241-85FBD721E494</RuleID>
                <Notes><![CDATA[
                
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.sequences</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>take|takeWhile</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>F6348CA7-E1B6-48DC-89FF-E53587F3B881</RuleID>
                <Notes><![CDATA[
                to.*Array variants that turn into arrays of number types. 
                I have left out toBooleanArray, as I can't think why we would want to propagate taint on booleans.
                ]]></Notes>
                <TaintFlags>+NUMBER,-XSS</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>to(Double|Float|UInt|Int|ULong|Long|UShort|Short)Array</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>79FCBBDE-82D2-41A0-9680-5D69A0729BFB</RuleID>
                <Notes><![CDATA[
                to.*Array variants that turn into arrays of non-number types. 
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>to(Byte|UByte|Char|Typed)Array</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>3078156D-B213-40CA-BD3A-FF438F18E324</RuleID>
                <Notes><![CDATA[
                This is for kotlin.collections.toList(). 
                Different than the extension function kotlin.toList(),  which only applies to Pair and Triple types. 
                Also applies some other similar passthroughs
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>toList|toHashSet|toMutableList|toMutableSet|toMutableMap|toPair|toProperties|toSet|toSortedMap|toSortedSet</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>91DCC104-55AD-460D-BDC9-4B292FC31425</RuleID>
                <Notes><![CDATA[
                This is for kotlin.sequences.toList() and similar passthroughs converting to different types
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.sequences</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>toHashSet|toList|toMutableList|toMutableSet|toSet|toSortedSet</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>44CC1134-EC59-4E4C-A731-8715D58093E3</RuleID>
                <Notes><![CDATA[
                fun <T, C : MutableCollection<in T>> Array<out T>.toCollection(
                    destination: C
                ): C

                Appends all elements to destination, and then returns it. 
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(collections|sequences)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Value>toCollection</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0...</InArguments>
                <OutArguments>1,return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>06BABAED-1E96-4A9F-B476-46CD6C16620C</RuleID>
                <Notes><![CDATA[
                kotlin.collection.toMap() variants that do NOT take a destination arg
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>toMap</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.collections.MutableMap</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>D8242096-1319-4EFF-A7A2-91480B6524B7</RuleID>
                <Notes><![CDATA[
                fun ByteArray.toString(charset: Charset): String
                ByteArray instance is actually arg0 (and it has another argument), so the regular toString() Java rule won't apply. 
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>toString</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>FFB90D20-D6DA-4730-A1D7-C48D85997E65</RuleID>
                <Notes><![CDATA[
                kotlin.collection.toMap() variants that DO take a destination arg
                In that case, variants like: 

                fun <K, V, M : MutableMap<in K, in V>> Sequence<Pair<K, V>>.toMap(
                    destination: M
                ): M

                Need passthroughs from arg0 (what looks like the instance) -> arg1, and arg1 -> return
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>toMap</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.collections.MutableMap</ParamType>
                        <WildCard min="1" max="1"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0...</InArguments>
                <OutArguments>1,return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>871D1F23-A3AE-46E0-826A-F9682A26C159</RuleID>
                <Notes><![CDATA[
                    fun <T, C : Iterable<T>> C.onEach(action: (T) -> Unit): C
                
                    runs action on each element, and then returns the original iterable. 
                    Also a variant that applies to Maps
                    
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>onEach(Indexed)?</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>2ADF9693-A29B-416D-B957-46A021D8BC6B</RuleID>
                <Notes><![CDATA[
                fun <T> Iterable<T>.partition(
                    predicate: (T) -> Boolean
                ): Pair<List<T>, List<T>>

                Pair return contains 2 lists. First is where predicate() == true, the second where predicate() == false
                    
                Potentially replace with FMR when possible. 
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Value>partition</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>F93FA938-F13A-4027-9EA7-764A23936BCD</RuleID>
                <Notes><![CDATA[
                infix fun <T> Array<out T>.union(other: Iterable<T>): Set<T>

                and variants
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>union</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0...</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>17AF4EC6-DA9B-4D1B-BC80-BB42EC253E30</RuleID>
                <Notes><![CDATA[
                Could later try with FMR, but I think we're likely to lose track anyway, except the simplest examples. 
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(collections|sequences)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Value>unzip</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>8F2996D1-7A2F-4AD6-A35A-0AFE0877C931</RuleID>
                <Notes><![CDATA[
                Could later try with FMR, but I think we're likely to lose track anyway, except the simplest examples. 
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Value>zip</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0,1</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>E374702C-921F-4045-B2F9-A01263995BB2</RuleID>
                <Notes><![CDATA[
                Could later try with FMR, but I think we're likely to lose track anyway, except the simplest examples. 
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Value>zipWithNext</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>01F25A8B-47EA-4A8E-BEB5-A81B4F8A0F5A</RuleID>
                <Notes><![CDATA[
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Value>windowed</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>7F3FB331-9537-4037-AF2B-AB98CC6FC84E</RuleID>
                <Notes><![CDATA[
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>withDefault|withIndex</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>E9BCA2C1-8F63-4590-AE8A-D904BE05A838</RuleID>
                <Notes><![CDATA[
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.sequences</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>withIndex</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>17797A72-DA4E-4FC5-9356-554C303F24F2</RuleID>
                <Notes><![CDATA[
                Will likely be replaced later with FMR

                fun <T, K, R, M : MutableMap<in K, R>> Grouping<T, K>.aggregateTo(
                    destination: M,
                    operation: (key: K, accumulator: R?, element: T, first: Boolean) -> R
                ): M

                Effectively, the Grouping loops over each K, going into operation(K, ?, T, ?). 
                The result of this is returned into the accumulator, and then at the end of each K, 
                is added to M. 
                At the end, M is returned. 

                Without FMRs, we will try to replicate with passthroughs: 

                arg0 -> arg 1 (Grouping to destination) // this rule
                arg0 -> return (via destination)
                arg1 -> return (could have stuff in before destination)
                CallsReturns rule (if possible) on operation. 
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>aggregateTo</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>1</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>744900E8-4A16-42CD-87A1-8C36CCCB982C</RuleID>
                <Notes><![CDATA[
                Will likely be replaced later with FMR

                fun <T, K, R, M : MutableMap<in K, R>> Grouping<T, K>.aggregateTo(
                    destination: M,
                    operation: (key: K, accumulator: R?, element: T, first: Boolean) -> R
                ): M

                Effectively, the Grouping loops over each K, going into operation(K, ?, T, ?). 
                The result of this is returned into the accumulator, and then at the end of each K, 
                is added to M. 
                At the end, M is returned. 

                Without FMRs, we will try to replicate with passthroughs: 

                arg0 -> arg 1 (Grouping to destination) 
                arg0 -> return (via destination)                        // this rule
                arg1 -> return (could have stuff in before destination) // this rule
                CallsReturns rule (if possible) on operation. 
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>aggregateTo</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0,1</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>DD606455-D447-4DFB-B1E3-6475F09EEA8E</RuleID>
                <Notes><![CDATA[
                Part of passthrough for kotlin.collections and kotlin.sequences associateByTo: 

                inline fun <T, K, M : MutableMap<in K, in T>> Array<out T>.associateByTo(
                    destination: M,
                    keySelector: (T) -> K
                ): M

                Array<out T> is translated as arg 0, so this is in effect doing: 
                    for (element in Array) {
                        res = keySelector(element)
                        destination.put(res, element)
                    }
                    return res; 

                So 
                arg0 -> keySelector(arg)
                arg0 -> destination (Map value) 
                keySelector(arg) return -> destination (Map keys)
                destination -> return of function // this rule (and transitively arg0 -> return)
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Value>associateByTo</Value>
                    </FunctionName>
                    <Parameters>
                        <WildCard min="3" max="3"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0,1</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>2ABDB3D7-DED4-4D1F-AB0C-9A8A454FC776</RuleID>
                <Notes><![CDATA[
                Part of passthrough for kotlin.collections and kotlin.sequences associateByTo: 

                inline fun <T, K, V, M : MutableMap<in K, in V>> Array<out T>.associateByTo(
                    destination: M,
                    keySelector: (T) -> K,
                    valueTransform: (T) -> V
                ): M

                Array<out T> is translated as arg 0, so this is in effect doing: 
                    for (element in Array) {
                        res = keySelector(element)
                        destination.put(res, element)
                    }
                    return res; 

                So
                arg0 -> keySelector(arg)
                arg0 -> valueTransform(arg)
                valueTransform(arg) return -> destination
                destination -> return of function // this rule
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Value>associateByTo</Value>
                    </FunctionName>
                    <Parameters>
                        <WildCard min="4" max="4"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>1</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>CDC99796-FCB0-4A52-AB84-8A7B4519469C</RuleID>
                <Notes><![CDATA[
                Part of passthrough for kotlin.collections and kotlin.sequences associateByTo: 

                inline fun <T, K, M : MutableMap<in K, in T>> Array<out T>.associateByTo(
                    destination: M,
                    keySelector: (T) -> K
                ): M

                Array<out T> is translated as arg 0, so this is in effect doing: 
                    for (element in Array) {
                        res = keySelector(element)
                        destination.put(res, element)
                    }
                    return res; 

                So 
                arg0 -> keySelector(arg)
                arg0 -> destination (Map value) // this rule
                keySelector(arg) return -> destination (Map keys)
                destination -> return of function 

                In this case, keySelector and valueTransform determine the keys/values in
                the return value, so we do NOT want a passthrough from the original array.
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Value>associateByTo</Value>
                    </FunctionName>
                    <Parameters>
                        <WildCard min="3" max="3"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>1</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>012CC23A-F775-4FE5-8D4D-758AA895A2D7</RuleID>
                <Notes><![CDATA[
                fun <T, C : MutableCollection<in T>> Array<out T>.filterIndexedTo(
                    destination: C,
                    predicate: (index: Int, T) -> Boolean
                ): C
                
                arg0 -> arg1
                arg0 -> return // this rule
                arg1 -> return // also this rule
                may also need to alias arg1 and return
                
                Some other functions are similar and also accounted for here. 
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(collections|sequences)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>filterIndexedTo|filterIsInstanceTo|filterNotNullTo|filterNotTo|filterTo</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0,1</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>932F66B6-F1C1-44CA-BB96-E73ED9A84DF3</RuleID>
                <Notes><![CDATA[
                fun <T, C : MutableCollection<in T>> Array<out T>.filterIndexedTo(
                    destination: C,
                    predicate: (index: Int, T) -> Boolean
                ): C
                
                arg0 -> arg1    // this rule
                arg0 -> return 
                arg1 -> return 
                may also need to alias arg1 and return
                
                Some other functions are similar and also accounted for here. 
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(collections|sequences)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>filterIndexedTo|filterIsInstanceTo|filterNotNullTo|filterNotTo|filterTo</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>1</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>BC47FF33-12F9-409B-A999-3409B74FA60F</RuleID>
                <Notes><![CDATA[
                fun <C : Appendable> CharSequence.filterIndexedTo(
                    destination: C,
                    predicate: (index: Int, Char) -> Boolean
                ): C
                
                arg0 -> arg1
                arg0 -> return // this rule
                arg1 -> return // also this rule
                may also need to alias arg1 and return
                
                Some other functions are similar and also accounted for here. 
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>filterIndexedTo|filterNotTo|filterTo</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0,1</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>14040801-379B-4A5E-883D-143272074255</RuleID>
                <Notes><![CDATA[
                fun <C : Appendable> CharSequence.filterIndexedTo(
                    destination: C,
                    predicate: (index: Int, Char) -> Boolean
                ): C
                
                arg0 -> arg1    // this rule
                arg0 -> return 
                arg1 -> return 
                may also need to alias arg1 and return
                
                Some other functions are similar and also accounted for here. 
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>filterIndexedTo|filterNotTo|filterTo</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>1</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>EAC7E8E4-DD20-478B-86EA-22EC37C41E15</RuleID>
                <Notes><![CDATA[
                fun <T, R, C : MutableCollection<in R>> Array<out T>.flatMapTo(
                    destination: C,
                    transform: (T) -> Iterable<R>
                ): C

                Normal flat map function, but also posts to a mutable collection which it returns
                
                arg0 -> arg1
                arg0 -> return // this rule
                arg1 -> return // also this rule
                may also need to alias arg1 and return

                also accounts for foldTo, which semantics work similarly. Both could later be deprecated for FMR.
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(collections|sequences)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>flatMapTo|foldTo</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0,1</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>AC9B7685-8409-4E48-9F99-8E0E5CE22C0D</RuleID>
                <Notes><![CDATA[
                fun <T, R, C : MutableCollection<in R>> Array<out T>.flatMapTo(
                    destination: C,
                    transform: (T) -> Iterable<R>
                ): C

                Normal flat map function, but also posts to a mutable collection which it returns
                
                arg0 -> arg1    // this rule
                arg0 -> return 
                arg1 -> return 
                may also need to alias arg1 and return

                also accounts for foldTo, which semantics work similarly. Both could later be deprecated for FMR.
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(collections|sequences)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>flatMapTo|foldTo</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>1</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>FBA303FB-EBD2-4C52-B767-6E2AE941705E</RuleID>
                <Notes><![CDATA[
                fun <R, C : MutableCollection<in R>> CharSequence.flatMapTo(
                    destination: C,
                    transform: (Char) -> Iterable<R>
                ): C

                Normal flat map function, but also posts to a mutable collection which it returns

                arg0 -> arg1
                arg0 -> return // this rule
                arg1 -> return // also this rule
                may also need to alias arg1 and return
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>flatMapTo</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0,1</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>30EF9C72-7E71-4824-AFE1-B9D7E4C31871</RuleID>
                <Notes><![CDATA[
                fun <R, C : MutableCollection<in R>> CharSequence.flatMapTo(
                    destination: C,
                    transform: (Char) -> Iterable<R>
                ): C                

                Normal flat map function, but also posts to a mutable collection which it returns

                arg0 -> arg1    // this rule
                arg0 -> return 
                arg1 -> return 
                may also need to alias arg1 and return
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>flatMapTo</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>1</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>34E3FF9B-E2E7-44A8-836A-1463E36F5439</RuleID>
                <Notes><![CDATA[
                fun <T, K, M : MutableMap<in K, Int>> Grouping<T, K>.eachCountTo(
                    destination: M
                ): M

                realistically, we should use a FMR, because you can only really taint the keys of the destination, 
                but in case the destination was tainted before, we need to at least pass on that taint. 
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>eachCountTo</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>1</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>B8E44A3A-50A5-4DD6-82AE-700EE39148D5</RuleID>
                <Notes><![CDATA[
                A "Grouping" is a sort of map, but it's more like value -> key instead of key -> value. 
                However, it's not mutable, and you never manually make one yourself, it's just an intermediary store 
                between functions, mainly in a group and fold operation. 

                Therefore I'm just using passthroughs instead of a map rule, because the latter wouldn't make much sense, because there's 
                no real way of tracking "keys". 
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Grouping</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>keyOf</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>B893F696-E64B-43F8-B4F7-02627135F167</RuleID>
                <Notes><![CDATA[

            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Grouping</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>sourceIterator</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>AF21E3E5-859A-4058-AAA7-277C268CDB34</RuleID>
                <Notes><![CDATA[

            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>IndexedValue</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>init^</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>1</InArguments>
                <OutArguments>this</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>3592E8AE-6000-41EB-BF5D-EECF33F5CB37</RuleID>
                <Notes><![CDATA[

            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>IndexedValue</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern>getValue|component2</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>7F0A5EC6-CEBD-4D74-A787-7446DE6F5344</RuleID>
                <Notes><![CDATA[
                
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>getOrElse|getOrNull</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>5D144276-FD3C-4046-8759-2CA7C0EECE3E</RuleID>
                <Notes><![CDATA[
                operator fun Char.plus(other: String): String

                concatenates a string to a char and returns the string
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>plus</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.Char</ParamType>
                        <ParamType>kotlin.String</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0,1</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>8C0AA384-215D-485C-AAD3-DFDD4D8AD8D0</RuleID>
                <Notes><![CDATA[
                fun CharSequence.random(): Char

                returns a random char from the CharSequence (i.e. String)
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>random(OrNull)?</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>4D0169A6-9A45-4780-8DBD-30D4884B6703</RuleID>
                <Notes><![CDATA[
                
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>reversed</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>64818058-C7AD-4E44-A83F-87558CADC4AB</RuleID>
                <Notes><![CDATA[
                fun CharSequence.slice(indices: IntRange): CharSequence

                and variants, all passthrus arg0 -> return
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>slice</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>45A18336-C07A-4E84-A5A8-68D1C4272B12</RuleID>
                <Notes><![CDATA[
                
                ]]></Notes>
                <TaintFlags>+NUMBER,-XSS</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>sumBy|sumByDouble|sumOf</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>E4A632DD-9554-4CE5-BDF0-1111E72DEFED</RuleID>
                <Notes><![CDATA[
                
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>take|takeLast|takeLastWhile|takeWhile</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>2CD9C7A5-E483-479B-80DD-BA93F8434BBF</RuleID>
                <Notes><![CDATA[
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>withIndex</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>C25D595B-D5CF-4973-BE0C-0BE99CDC8B3C</RuleID>
                <Notes><![CDATA[
                fun <T : Appendable> T.append(vararg value: CharSequence?): T

                and variants
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>append</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>1...</InArguments>
                <OutArguments>return,0</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>20E32B07-D344-4FD2-ACE6-E6FC4C530321</RuleID>
                <Notes><![CDATA[
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>appendRange</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>1</InArguments>
                <OutArguments>return,0</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>13DA19D5-2F68-421B-A4C4-E1F7CC3E8D97</RuleID>
                <Notes><![CDATA[
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>(de)?capitalize|lowercase|uppercase</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>00107628-D840-4D26-A651-BF1CF1B4BF22</RuleID>
                <Notes><![CDATA[
                fun CharArray.concatToString(): String
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>concatToString</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>F0A56A9E-10F4-47A1-A0CF-95880924BBAF</RuleID>
                <Notes><![CDATA[
                fun ByteArray.decodeToString(): String

                Decoding is from UTF-8 byte array into a string. Does not perform security-related encodings.
                Similar functionality for encoding the other way too. 
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>decodeToString|encodeToByteArray</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>09018673-DA3E-4C42-93C8-27A3F35E650C</RuleID>
                <Notes><![CDATA[
                Extension function for deleting part of the sequence inside a StringBuilder, and then returning it. 
                Will not cleanse anything, as do not know if the whole thing will be cleanse or only part. 
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>delete(At|Range)</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>F9C13A0D-38E4-4746-9D95-97ED4C921B5D</RuleID>
                <Notes><![CDATA[
                fun StringBuilder.insertRange(
                    index: Int,
                    value: CharSequence?,
                    startIndex: Int,
                    endIndex: Int
                ): StringBuilder

                Will add the value into the stringbuilder and then return it.
                This is the passthru to the return value:
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>insertRange</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0,2</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>F139F78C-366E-438B-919A-818D9E1BA5F1</RuleID>
                <Notes><![CDATA[
                fun StringBuilder.insertRange(
                    index: Int,
                    value: CharSequence?,
                    startIndex: Int,
                    endIndex: Int
                ): StringBuilder

                Will add the value into the stringbuilder and then return it.
                This is the passthru into the instance (arg0)
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>insertRange</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>2</InArguments>
                <OutArguments>0</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>2FB9FA63-5EB8-4CC8-B34E-74B8FA14656C</RuleID>
                <Notes><![CDATA[
                fun String.intern(): String

                Similar to java.lang.String.intern()
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>intern</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>F32EDB0B-9916-4A10-8D60-B92B15157400</RuleID>
                <Notes><![CDATA[
                fun String.format(vararg args: Any?): String

                Uses the instance (arg0) as a format string, and substitutes the specified arguments, and then returns.
                Also covers String.Companion format extension function.
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>format</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0...</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>C0FE22BA-1856-4AB9-AEA5-2EC91E1578BD</RuleID>
                <Notes><![CDATA[
                fun <C, R> C.ifBlank(
                    defaultValue: () -> R
                ): R where C : CharSequence, C : R

                returns the original string if not blank, otherwise return from defaultValue.
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>ifBlank</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>285C9FD5-DC77-401B-AF8F-2235C7502F1F</RuleID>
                <Notes><![CDATA[
                iterator for CharSequences.
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>iterator</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>AD24164D-D75B-4277-B1C0-7C33D54C7D38</RuleID>
                <Notes><![CDATA[
                fun CharSequence.lines(): List<String>
                fun CharSequence.lineSequence(): Sequence<String>
                ]]></Notes>
                <TaintFlags>+NO_NEW_LINE</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>lines|lineSequence</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>17C51BAC-C22A-4D84-9905-504FE379DB81</RuleID>
                <Notes><![CDATA[
                fun CharSequence.padEnd(
                    length: Int,
                    padChar: Char = ' '
                ): CharSequence

                and same for padStart
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>pad(End|Start)</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0,2</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>6DACE337-33E0-4BD1-B107-000C5B577A22</RuleID>
                <Notes><![CDATA[
                fun String.prependIndent(indent: String = " "): String
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>prependIndent</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0,1</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>31566EBA-04C6-48E2-8756-29F2E0D41D7D</RuleID>
                <Notes><![CDATA[
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>remove(Prefix|Range|Suffix|Surrounding)</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>7B175F82-13FE-402F-8A04-E3E59FC86AD9</RuleID>
                <Notes><![CDATA[
                fun CharSequence.repeat(n: Int): String
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>repeat</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>94691C7F-AF07-43F5-98FA-37C9868394D0</RuleID>
                <Notes><![CDATA[
                passthrough for kotlin.text.replace(this: CharSequence, regex: Regex, replacement: String)
                There is also a similar variant: 
                fun CharSequence.replace(
                    regex: Regex,
                    transform: (MatchResult) -> CharSequence
                ): String

                The latter variant requires a CallsReturns rule. 
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>replace</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.CharSequence</ParamType>
                        <ParamType>kotlin.text.Regex</ParamType>
                        <ParamType>kotlin.String</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0,2</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>C9885F60-D692-4A17-B418-427ED38610FA</RuleID>
                <Notes><![CDATA[
                fun String.replace(
                    oldValue: String,
                    newValue: String,
                    ignoreCase: Boolean = false
                ): String

                and a similar variant where oldValue and newValue are just chars. 
                This is a passthrough for the original string -> return if the oldValue being checked 
                is a newline character
                ]]></Notes>
                <TaintFlags>+NO_NEW_LINE</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>replace</Value>
                    </FunctionName>
                    <Parameters>
                        <WildCard min="4" max="4"/>
                    </Parameters>
                </FunctionIdentifier>
                <Conditional>
                    <And>
                        <ConstantMatches argument="1" mode="value">
                            <Pattern>^(\\r\\n|\\r|\\n)$</Pattern>
                        </ConstantMatches>
                        <Not>
                            <ConstantMatches argument="2" mode="value">
                                <Pattern>^(\\r\\n|\\r|\\n)$</Pattern>
                            </ConstantMatches>
                        </Not>
                    </And>
                </Conditional>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>031ABFEE-118F-4179-9DA3-11AA9C8860E8</RuleID>
                <Notes><![CDATA[
                fun String.replace(
                    oldValue: String,
                    newValue: String,
                    ignoreCase: Boolean = false
                ): String

                and a similar variant where oldValue and newValue are just chars. 
                This is a passthrough for the original string -> return if the oldValue being checked 
                is a NOT newline character
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>replace</Value>
                    </FunctionName>
                    <Parameters>
                        <WildCard min="4" max="4"/>
                    </Parameters>
                </FunctionIdentifier>
                <Conditional>
                    <Or>
                        <Not>
                            <IsConstant argument="1"/>
                        </Not>
                        <Not>
                            <And>
                                <ConstantMatches argument="1" mode="value">
                                    <Pattern>^(\\r\\n|\\r|\\n)$</Pattern>
                                </ConstantMatches>
                                <Not>
                                    <ConstantMatches argument="2" mode="value">
                                    <Pattern>^(\\r\\n|\\r|\\n)$</Pattern>
                                    </ConstantMatches>
                                </Not>
                            </And>
                        </Not>
                    </Or>
                </Conditional>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>3BB46B76-B02B-4F36-ADC8-469D4C6C02A9</RuleID>
                <Notes><![CDATA[
                fun String.replace(
                    oldValue: String,
                    newValue: String,
                    ignoreCase: Boolean = false
                ): String

                and a similar variant where oldValue and newValue are just chars. 
                This is a passthrough for the replacement string -> return. 
                This can inject new line characters, so it doesn't even matter if they're being removed.
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>replace</Value>
                    </FunctionName>
                    <Parameters>
                        <WildCard min="4" max="4"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>2</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>0D51BE2D-B40B-40A1-8B6A-D84761D37AB4</RuleID>
                <Notes><![CDATA[
                fun String.replaceAfter(
                    delimiter: Char,
                    replacement: String,
                    missingDelimiterValue: String = this
                ): String

                returns the original string with replacement after the first delimited. 
                If no delimited, returns missingDelimiterValue, which by default is the original string.

                Similar replacement functions also covered
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>replaceAfter|replaceAfterLast|replaceBefore|replaceBeforeLast</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0,2,3</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>D093A1CE-9997-4A9C-9828-280B114EEBD3</RuleID>
                <Notes><![CDATA[
                fun String.substring(range: IntRange): String

                all overloads covered.
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>substring</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>EA57FB0E-5D9B-41C1-95A9-6CA70444FA3B</RuleID>
                <Notes><![CDATA[
                fun String.substringBeforeLast(
                    delimiter: String,
                    missingDelimiterValue: String = this
                ): String

                similar substring functions covered too.
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>substringAfter|substringAfterLast|substringBefore|substringBeforeLast</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0,2</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>DBDBD189-1EA8-4AF1-B9FE-FF7317B85308</RuleID>
                <Notes><![CDATA[
                fun CharSequence.replaceFirst(
                    regex: Regex,
                    replacement: String
                ): String

                and overloads, all 0,2 -> return
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>replaceFirst</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0,2</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>8E13574E-94E2-43B8-91A1-42A787CE0E95</RuleID>
                <Notes><![CDATA[
                covers functions: 

                fun String.replaceIndent(newIndent: String = ""): String
                
                fun String.replaceIndentByMargin(
                    newIndent: String = "",
                    marginPrefix: String = "|"
                ): String
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>replaceIndent(ByMargin)?</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0,1</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>00245A79-D17C-4CF4-89AE-F687CAFE7B75</RuleID>
                <Notes><![CDATA[
                fun String.replaceRange(
                    startIndex: Int,
                    endIndex: Int,
                    replacement: CharSequence
                ): String

                and similar extension on CharSequence
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>replaceRange</Value>
                    </FunctionName>
                    <Parameters>
                        <WildCard min="4" max="4"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0,3</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>4C1AB2B8-6C62-4155-BEF8-F6CA6357F5E3</RuleID>
                <Notes><![CDATA[
                fun String.replaceRange(
                    range: IntRange,
                    replacement: CharSequence
                ): String

                and similar extension on CharSequence
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>replaceRange</Value>
                    </FunctionName>
                    <Parameters>
                        <WildCard min="3" max="3"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0,2</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>D146AE0B-7DFA-453D-8026-02BF9052A529</RuleID>
                <Notes><![CDATA[
                fun CharSequence.trim(): CharSequence

                Also covered overloads, and variations of API
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>trim(End|Start|Margin|Indent)?</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>02A01BBD-238F-47B1-9CC9-4EE531AE239B</RuleID>
                <Notes><![CDATA[
                kotlin.text conversion functions to non-number types
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>to(Byte|ByteArray|HashSet|List|LowerCase|MutableList|Pattern|Regex|Set|SortedSet|String|TitleCase|UpperCase)</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>877BF905-6240-41CC-997C-EAE42673D84E</RuleID>
                <Notes><![CDATA[
                kotlin.text conversion functions to number types
                ]]></Notes>
                <TaintFlags>+NUMBER,-XSS</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>to(ByteOrNull|Double|DoubleOrNull|Float|FloatOrNull|Int|IntOrNull|Long|LongOrNull|Short|ShortOrNull|BigDecimal|BigDecimalOrNull|BigInteger|BigIntegerOrNull|UByte|UByteOrNull|UInt|UIntOrNull|ULong|ULongOrNull|UShort|UShortOrNull)</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>501BB290-9857-491C-83AC-E6C072932A3A</RuleID>
                <Notes><![CDATA[
                kotlin.text extension function for toCharArray. Has different variants. 
                This is for 
                
                fun String.toCharArray(
                    destination: CharArray,
                    destinationOffset: Int = 0,
                    startIndex: Int = 0,
                    endIndex: Int = length
                ): CharArray

                passthrough from original string + destination array -> return
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>toCharArray</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.String</ParamType>
                        <ParamType>kotlin.CharArray</ParamType>
                        <WildCard min="3" max="3"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0,1</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>C87503E3-6DD6-4668-938F-DEC2B7734CFE</RuleID>
                <Notes><![CDATA[
                kotlin.text extension function for toCharArray. Has different variants. 
                This is for 
                
                fun String.toCharArray(
                    destination: CharArray,
                    destinationOffset: Int = 0,
                    startIndex: Int = 0,
                    endIndex: Int = length
                ): CharArray

                passthrough from original string -> destination array
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>toCharArray</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.String</ParamType>
                        <ParamType>kotlin.CharArray</ParamType>
                        <WildCard min="3" max="3"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>1</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>0F921938-DF5E-4523-B83A-6AD62DDFEC6C</RuleID>
                <Notes><![CDATA[
                kotlin.text extension function for toCharArray. Has different variants. 
                This is for 
                
                fun StringBuilder.toCharArray(
                    destination: CharArray,
                    destinationOffset: Int = 0,
                    startIndex: Int = 0,
                    endIndex: Int = this.length)

                This does not return anything, and only has passthrough original StringBuilder -> destination.
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>toCharArray</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.text.StringBuilder</ParamType>
                        <ParamType>kotlin.CharArray</ParamType>
                        <WildCard min="3" max="3"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>1</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>E3ED1CB2-A016-4D9E-83C9-B0AADF95735C</RuleID>
                <Notes><![CDATA[
                kotlin.text extension function for toCharArray. Has different variants. 
                This is for 
                
                String.toCharArray(): CharArray
                fun String.toCharArray(
                    startIndex: Int = 0,
                    endIndex: Int = this.length
                ): CharArray


                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>toCharArray</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.String</ParamType>
                        <WildCard min="0" max="2"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>4427BF5A-078A-4E06-B3EE-8827E9BEF13F</RuleID>
                <Notes><![CDATA[
                fun <C : MutableCollection<in Char>> CharSequence.toCollection(
                    destination: C
                ): C

                Needs:
                0,1 -> return 
                0 -> 1 // this rule 
                
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>toCollection</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>1</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>7826204B-DE14-404D-927F-0BD111DEFC65</RuleID>
                <Notes><![CDATA[
                fun <C : MutableCollection<in Char>> CharSequence.toCollection(
                    destination: C
                ): C

                Needs:
                0,1 -> return // this rule
                0 -> 1 
                
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>toCollection</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0,1</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>BA0DC5B9-CD0A-482D-8B94-89CE2C5DF4FA</RuleID>
                <Notes><![CDATA[
                fun CharSequence.subSequence(range: IntRange): CharSequence

                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>subSequence</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>96211ECC-F339-43E5-9271-7E65B54C3422</RuleID>
                <Notes><![CDATA[
                operator fun StringBuilder.set(index: Int, value: Char)

                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>set</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>2</InArguments>
                <OutArguments>0</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>2FFF078F-66D8-454A-AD08-EB050D9D8651</RuleID>
                <Notes><![CDATA[
                fun StringBuilder.setRange(
                    startIndex: Int,
                    endIndex: Int,
                    value: String
                ): StringBuilder

                Needs:
                0,3 -> return // this
                3 -> 0
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>setRange</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0,3</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>E551D149-6C4D-4BD1-899A-801DFE0B6D76</RuleID>
                <Notes><![CDATA[
                fun StringBuilder.setRange(
                    startIndex: Int,
                    endIndex: Int,
                    value: String
                ): StringBuilder

                Needs:
                0,3 -> return
                3 -> 0 // this
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>setRange</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>3</InArguments>
                <OutArguments>0</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>5B9E1684-4E5F-4C2A-8045-0E944400E09C</RuleID>
                <Notes><![CDATA[
                kotlin.text.split() variants
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>split(ToSequence)?</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>EC17421B-748C-47A2-A23B-CC2E8E040D02</RuleID>
                <Notes><![CDATA[
                fun String(
                    bytes: ByteArray,
                    offset: Int,
                    length: Int,
                    charset: Charset
                ): String

                and variants.
                Note: this is literally a function called String with an uppercase. 

                Possibly brought into the common API for JS compatibility.
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>String</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>B1E649DC-B345-4493-B8E8-F46AE4317B0A</RuleID>
                <Notes><![CDATA[
                fun CharSequence.windowedSequence(
                    size: Int,
                    step: Int = 1,
                    partialWindows: Boolean = false
                ): Sequence<String>
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>windowedSequence</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>D27D2550-B7AB-46CF-8A83-EBCD4DD1F5F1</RuleID>
                <Notes><![CDATA[
                fun StringBuilder.appendln(
                    value: CharSequence?
                ): StringBuilder

                and variations.

                Needs: 
                0,1 -> return // this rule
                1 -> 0

                Counts for StringBuilder and Appendable extension functions.
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>appendln</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0,1</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>BFE1A434-64A6-46BB-B60B-DB84D109E8B7</RuleID>
                <Notes><![CDATA[
                fun StringBuilder.appendln(
                    value: CharSequence?
                ): StringBuilder

                and variations.

                Needs: 
                0,1 -> return
                1 -> 0 // this rule

                Counts for StringBuilder and Appendable extension functions.
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>appendln</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>1</InArguments>
                <OutArguments>0</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>76067B4A-3F7C-4F1B-BCF3-31A825CA0683</RuleID>
                <Notes><![CDATA[
                fun CharSequence.chunkedSequence(size: Int): Sequence<String>

                and overloads.
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>chunkedSequence</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text</Group>
                </MetaInfo>
                <RuleID>565F0310-1876-402A-8BF9-C8EC1C5AD571</RuleID>
                <Notes><![CDATA[
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Regex</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>init^</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>this</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text</Group>
                </MetaInfo>
                <RuleID>F7701088-6730-47FB-9FB0-5BFC08FC810A</RuleID>
                <Notes><![CDATA[
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Regex</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>getPattern</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text</Group>
                </MetaInfo>
                <RuleID>E587C8D6-77D1-46F4-84CB-2D25B58957E6</RuleID>
                <Notes><![CDATA[
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Regex</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern>find(All)?|matchEntire</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text</Group>
                </MetaInfo>
                <RuleID>32D83C77-569B-44BA-A467-C42D9C040A28</RuleID>
                <Notes><![CDATA[
                fun replace(input: CharSequence, replacement: String): String

                fun replace(
                    input: CharSequence,
                    transform: (MatchResult) -> CharSequence
                ): String

                covering both overloads, passthru 0 -> return.
                614BD213-2E45-4398-A315-6A9B40FD428E covers passthru for replacement string.
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Regex</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>replace</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text</Group>
                </MetaInfo>
                <RuleID>614BD213-2E45-4398-A315-6A9B40FD428E</RuleID>
                <Notes><![CDATA[
                fun replace(input: CharSequence, replacement: String): String

                Not covering overload taking transformation, passthru 1 -> return
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Regex</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>replace</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.CharSequence</ParamType>
                        <ParamType>kotlin.String</ParamType>
                    </Parameters>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>1</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text</Group>
                </MetaInfo>
                <RuleID>D4C15782-FC6F-4110-8D1D-EBC25BD191A1</RuleID>
                <Notes><![CDATA[
                fun replaceFirst(
                    input: CharSequence,
                    replacement: String
                ): String
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Regex</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>replaceFirst</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.CharSequence</ParamType>
                        <ParamType>kotlin.String</ParamType>
                    </Parameters>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>0,1</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text</Group>
                </MetaInfo>
                <RuleID>E2B5F2AE-EE33-41F7-9788-A0E000D6D3CA</RuleID>
                <Notes><![CDATA[
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Regex</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>split</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text</Group>
                </MetaInfo>
                <RuleID>A8DCC468-2006-41D6-B90A-A6FB52DA9259</RuleID>
                <Notes><![CDATA[
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Regex</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>toPattern</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text</Group>
                </MetaInfo>
                <RuleID>8212F2E2-081F-427E-BBEC-2B1CBBE805CB</RuleID>
                <Notes><![CDATA[
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Regex.Companion</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern>escape(Replacement)?|fromLiteral</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text</Group>
                </MetaInfo>
                <RuleID>8382487C-7D9A-415A-A7C4-4A909F10916E</RuleID>
                <Notes><![CDATA[
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>MatchGroup</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>init^</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>this</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text</Group>
                </MetaInfo>
                <RuleID>67256F1B-2CEE-4F92-B481-9E6EC781D40A</RuleID>
                <Notes><![CDATA[
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>MatchGroup</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>getValue</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text</Group>
                </MetaInfo>
                <RuleID>352AE800-6F3E-45DA-B707-BFB9B22E61AF</RuleID>
                <Notes><![CDATA[
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>MatchGroupCollection</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>get</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text</Group>
                </MetaInfo>
                <RuleID>A1F27066-8AF6-4CD2-8202-44D04AF662E6</RuleID>
                <Notes><![CDATA[
                kotlin.text.MatchResult methods & properties.
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>MatchResult</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern>getGroups|getGroupValues|getDestructured|getValue|next</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text</Group>
                </MetaInfo>
                <RuleID>1D2EA19C-6073-4B5F-B039-EDDF3E54EFF4</RuleID>
                <Notes><![CDATA[
                kotlin.text.MatchResult.Destructured methods & properties.
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>MatchResult.Destructured</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern>getMatch|component.*|toList</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Ranges extensions</Group>
                </MetaInfo>
                <RuleID>10759752-3B63-4CCF-9EFA-4891DBFBE2E3</RuleID>
                <Notes><![CDATA[
                fun <T : Comparable<T>> T.coerceAtLeast(minimumValue: T): T

                Basically, if the original T is at least minimumValue, it returns T, otherwise it returns 
                minimumValue. 
                Similar for the AtMost variant. 
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.ranges</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>coerce(AtLeast|AtMost)</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0...</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Ranges extensions</Group>
                </MetaInfo>
                <RuleID>A589FA2C-AAE4-4ADE-8F42-BD69A8487EFE</RuleID>
                <Notes><![CDATA[
                fun <T : Comparable<T>> T.coerceIn(
                    minimumValue: T?,
                    maximumValue: T?
                ): T

                Similar to coerceAtLeast and coerceAtMost. Makes sure original T is in between the two values, 
                otherwise can return the closest one. 
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.ranges</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>coerceIn</Value>
                    </FunctionName>
                    <Parameters>
                        <WildCard min="2" max="2"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0...</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Ranges extensions</Group>
                </MetaInfo>
                <RuleID>06EB99DB-2B18-400D-AD6A-5302900FB1EF</RuleID>
                <Notes><![CDATA[
                fun <T : Comparable<T>> T.coerceIn(range: ClosedRange<T>): T

                Similar to coerceAtLeast and coerceAtMost. Makes sure original T is in between the two values, 
                otherwise can return the closest one from the range, but most of the time we'll only care about the 
                original thing being compared rather than the range. 
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.ranges</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>coerceIn</Value>
                    </FunctionName>
                    <Parameters>
                        <WildCard min="1" max="1"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Properties</Group>
                </MetaInfo>
                <RuleID>8AC833BB-E85E-4139-9937-EF8067A6A0D2</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.properties</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Delegates</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern>observable|vetoable</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Properties</Group>
                </MetaInfo>
                <RuleID>87FFAE5B-FD82-44A5-A436-6FF9624C530A</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.properties</Value>
                    </NamespaceName>
                    <ClassName>
                        <Pattern>ReadWriteProperty|ReadOnlyProperty</Pattern>
                    </ClassName>
                    <FunctionName>
                        <Value>getValue</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Properties</Group>
                </MetaInfo>
                <RuleID>F6AB2854-F4B6-44A5-B86B-5E17EFC47127</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.properties</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>ReadWriteProperty</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>setValue</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>2</InArguments>
                <OutArguments>this</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Properties</Group>
                </MetaInfo>
                <RuleID>E251920F-A09A-49DF-8F36-93167CB59297</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.properties</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>ObservableProperty</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>init^</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>this</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Streams extensions</Group>
                </MetaInfo>
                <RuleID>99124CC4-3EA7-4448-B565-456CCA4373B1</RuleID>
                <Notes><![CDATA[
                kotlin.streams only creates extension functions for some types,
                primarily to convert between java streams, kotlin sequences, and
                lists.
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.streams</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>asStream|asSequence|toList</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>D00D6731-0539-42C5-B5B2-905FDE5DDACC</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>byteInputStream</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.String</ParamType>
                        <WildCard min="1" max="1"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>4E1174BE-CAFF-4E9E-90DE-B2FC9FD168E7</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>inputStream</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.File</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>CDE48A51-AACA-4B93-8F98-C7730D6F4131</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>inputStream</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.ByteArray</ParamType>
                        <WildCard min="0" max="2"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>8587CA01-C82E-49E0-AE05-2BB599BF04A7</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>bufferedReader</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.File</ParamType>
                        <WildCard min="2" max="2"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>89F4A0DA-6A70-4830-B9FB-D944AE4B6385</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>bufferedReader</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.InputStream</ParamType>
                        <WildCard min="1" max="1"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>81190AC2-4577-4317-BD36-38CFE783D9AE</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>bufferedWriter</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.File</ParamType>
                        <WildCard min="2" max="2"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>9C4D214D-71D5-440E-B31A-A246EA82BC32</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>bufferedWriter</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.OutputStream</ParamType>
                        <WildCard min="1" max="1"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>DDDE98A8-0E47-477F-AB0F-79D4CE75FD6E</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>outputStream</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.File</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>D87D542D-B1E0-4862-813E-191D4F87185E</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>printWriter</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.File</ParamType>
                        <WildCard min="1" max="1"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>6726F947-4645-4063-888E-813E93D12FF2</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>reader</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.File</ParamType>
                        <WildCard min="1" max="1"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>0C769771-3B5F-409E-BD36-93B08F721BEA</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>reader</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.InputStream</ParamType>
                        <WildCard min="1" max="1"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>BC935301-B43E-4547-A92B-85E01A5F80B8</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>reader</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.String</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>76704626-1221-4972-A1F6-D185485EBB1A</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>writer</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.File</ParamType>
                        <WildCard min="1" max="1"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>D7B4B239-558E-4239-8264-F4AEC7496BC5</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>writer</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.OutputStream</ParamType>
                        <WildCard min="1" max="1"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>DD7459C9-9712-421A-B0D1-0F748EC45A8E</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>buffered</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.InputStream</ParamType>
                        <WildCard min="1" max="1"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>8051A533-232B-4CC2-AB00-009A61E28B3F</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>buffered</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.OutputStream</ParamType>
                        <WildCard min="1" max="1"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>CBB056A0-FD26-473C-BD13-83E9B65DE161</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>buffered</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.Reader</ParamType>
                        <WildCard min="1" max="1"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>B939324A-E9D2-4E3D-A566-78F620B5DE7F</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>buffered</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.Writer</ParamType>
                        <WildCard min="1" max="1"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>C6971E4B-08A3-4628-A0C1-83E2CAFB5AB7</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>readBytes</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.InputStream</ParamType>
                        <WildCard min="0" max="1"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>ED1E8A31-B536-4CB1-94CB-323F0A1B4486</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>readText</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.Reader</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>7FFADB70-60A5-423B-AD50-4ED7B12B6BD4</RuleID>
                <TaintFlags>+NO_NEW_LINE</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>readLines</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.Reader</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>6D0F1B2F-5D8D-4AC5-B217-DABDE80DA426</RuleID>
                <TaintFlags>+NO_NEW_LINE</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>lineSequence</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.BufferedReader</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>43EDBCCE-CF9B-4A3A-8BD1-0BABB8F8865C</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>normalize</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.File</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0.path</InArguments>
                <OutArguments>return.path</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>6A80E433-7772-45E2-84CA-6E8CC0D70BDF</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>toRelativeString</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.File</ParamType>
                        <ParamType>java.io.File</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0.path</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>73060334-9B85-4541-A7E7-A07F5606A279</RuleID>
                <Notes><![CDATA[
                VALIDATED_PATH_MANIPULATION taint flag added since only the file extension is returned, 
                making the feasibility of attacking the file path narrow.
            ]]></Notes>
                <TaintFlags>+VALIDATED_PATH_MANIPULATION</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>getExtension</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.File</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0.path</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>D9619605-FB66-4F93-BFCC-B2F8E56BF615</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>getInvariantSeparatorsPath</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.File</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0.path</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>7778A7A7-68A7-4B48-9B71-B0D58A8D971C</RuleID>
                <Notes><![CDATA[
                VALIDATED_PATH_MANIPULATION taint flag added since only the file name is returned, 
                making the feasibility of attacking the file path narrow.
            ]]></Notes>
                <TaintFlags>+VALIDATED_PATH_MANIPULATION</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>getNameWithoutExtension</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.File</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0.path</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>5CF2166C-59C1-49D6-BA4C-4A2ACBAFDC87</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>relativeTo(OrNull|OrSelf)?</Pattern>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.File</ParamType>
                        <ParamType>java.io.File</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0.path</InArguments>
                <OutArguments>return.path</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>7F5086BA-E51A-41E3-890C-73DDC8FFE4AF</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>resolve(Sibling)?</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0.path,1.path</InArguments>
                <OutArguments>return.path</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>E1132360-0577-4363-958E-843B832F56E7</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>copyTo</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.InputStream</ParamType>
                        <ParamType>java.io.OutputStream</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>1</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>6497C8A5-2D0F-4EA8-84EE-279DFF2238D7</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>copyTo</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.Reader</ParamType>
                        <ParamType>java.io.Writer</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>1</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>12C9A161-7172-4A8A-98AA-83E37B178061</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>iterator</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.BufferedInputStream</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>49D6EC8A-14E0-4D6D-9C6E-A8E08BC5CBBB</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>FileTreeWalk</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>maxDepth</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>E52FCDDF-FD5C-4CF8-9EB1-563976C39C74</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>FileTreeWalk</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>onEnter</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>B5655A57-0AE5-4469-8446-D07E8452829C</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>FileTreeWalk</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>onFail</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>F3959661-1645-4252-8A47-A073F3BA2A23</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>FileTreeWalk</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>onLeave</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>4852FF82-32C7-48C2-8736-B1F1EF6AF465</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>read(Bytes|Text)</Pattern>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.net.URL</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Random extensions</Group>
                </MetaInfo>
                <RuleID>2DC2B07E-C4AA-4835-A457-C544A84902D6</RuleID>
                <Notes><![CDATA[
                fun Random.nextUBytes(array: UByteArray): UByteArray
                fun Random.nextUBytes(
                    array: UByteArray,
                    fromIndex: Int = 0,
                    toIndex: Int = array.size
                ): UByteArray

                arg 1 (UByteArray) -> return 
                ]]></Notes>
                <TaintFlags>-XSS,+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.random</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>nextUBytes</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.random.Random</ParamType>
                        <ParamType>kotlin.UByteArray</ParamType>
                        <WildCard min="0" max="2"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>1</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Random</Group>
                </MetaInfo>
                <RuleID>096F6D12-4358-45D9-9525-FD66F03A3C30</RuleID>
                <Notes><![CDATA[
                fun Random.nextBytes(array: ByteArray): ByteArray
                fun Random.nextBytes(size: Int): ByteArray
                fun Random.nextBytes(
                    array: ByteArray,
                    fromIndex: Int = 0,
                    toIndex: Int = array.size
                ): ByteArray

                arg 0 (ByteArray) -> return
                ]]></Notes>
                <TaintFlags>-XSS,+NUMBER</TaintFlags>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.random</Value>
                    </NamespaceName>
                    <ClassName>
                        <Pattern>Random(\.Default)?</Pattern>
                    </ClassName>
                    <FunctionName>
                        <Value>nextBytes</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.ByteArray</ParamType>
                        <WildCard min="0" max="2"/>
                    </Parameters>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Random extensions</Group>
                </MetaInfo>
                <RuleID>4E0A4C74-8613-4855-A629-1C6A463398A7</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.random</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>(asJavaRandom|asKotlinRandom)</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>4CE47799-69CA-4E97-94DA-DE99E598FA32</RuleID>
                <Notes><![CDATA[
                inline fun <K> CharSequence.associateBy(
                    keySelector: (Char) -> K
                ): Map<K, Char>

                Since the original CharSequence value is inserted into the returned map,
                need a passthrough.
                This does not count for the other variant of associateBy, which
                also has a transform function for the value (and uses a CallsReturns rule).
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(text|collections|sequences)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Value>associateBy</Value>
                    </FunctionName>
                    <Parameters>
                        <WildCard min="2" max="2"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>2467C739-96A1-4ABF-BFD0-0A50DCF64E0D</RuleID>
                <Notes><![CDATA[
                inline fun <K, V, M : MutableMap<in K, in V>> CharSequence.associateTo(
                    destination: M,
                    transform: (Char) -> Pair<K, V>
                ): M
                    and
                inline fun <V, M : MutableMap<in Char, in V>> CharSequence.associateWithTo(
                    destination: M,
                    valueSelector: (Char) -> V
                ): M

                In each case we need a passthrough from destination -> return.
                For associateWithTo, you could potentially have a passthrough from arg0 -> return,
                but this would taint the keys of the returned map, more likely leading
                to false positives.
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin\.(text|collections|sequences)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>associate(With)?To</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>1</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines</Group>
                </MetaInfo>
                <RuleID>F4A01F1F-D820-4CA1-9C59-995A945891A1</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines.channels</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>SendChannel</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern>offer|send</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>this</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>C3A1A78A-6CBB-4074-B51B-5047BC68FC0E</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines.flow</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>consumeAsFlow|receiveAsFlow</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines</Group>
                </MetaInfo>
                <RuleID>213DA37E-108B-4215-AD9D-29AA384C5499</RuleID>
                <Notes><![CDATA[
                Passthrough for:

                suspend fun <T> awaitAll(
                    vararg deferreds: Deferred<T>
                ): List<T>
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>awaitAll</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0...</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>4FCE874A-DFD7-4471-83DC-AF4ADE4BC995</RuleID>
                <Notes><![CDATA[
                Passthrough for:

                suspend fun <T> Collection<Deferred<T>>.awaitAll(): List<T> (source)
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>awaitAll</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.collections.Collection</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines</Group>
                </MetaInfo>
                <RuleID>2D59BE9A-2AA8-4923-A3E3-2017FC494DE1</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines.channels</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>ReceiveChannel</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern>poll|receive</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>9E1667A4-E1C2-4004-A9AF-5959B259C27A</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines.channels</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>receiveOrNull</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>77F5F0B9-5BAF-4D9B-A7E2-1098B097429C</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines.channels</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>sendBlocking</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>1</InArguments>
                <OutArguments>0</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>D7F80317-FF64-45F2-B71D-557628D1DF92</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines.channels</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>toList</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlinx.coroutines.channels.ReceiveChannel</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines</Group>
                </MetaInfo>
                <RuleID>092E3E28-3534-4A39-B01F-107CEB5F838B</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines.channels</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>ChannelIterator</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>next</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines</Group>
                </MetaInfo>
                <RuleID>53A486E4-1C85-4960-BE23-9B56D75F2D7A</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines.channels</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>BroadcastChannel</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>openSubscription</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>2530ECF5-AB3A-4D05-9AA5-0345F110BA21</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlinx\.coroutines\.(channels|flow)</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Value>asFlow</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines</Group>
                </MetaInfo>
                <RuleID>A897A81E-EC6B-4D1B-8FE0-4A65371AEEA0</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines.channels</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>ConflatedBroadcastChannel</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern>getValue|getValueOrNull</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>5C935401-B05A-45FF-A2E9-6C433E6CB8CC</RuleID>
                <Notes><![CDATA[
                Passthrough for:

                fun <T1, T2, R> Flow<T1>.combine(
                    flow: Flow<T2>,
                    transform: suspend (a: T1, b: T2) -> R
                ): Flow<R>

                fun <T1, T2, R> Flow<T1>.combineTransform(
                    flow: Flow<T2>,
                    transform: suspend FlowCollector<R>.(a: T1, b: T2) -> Unit
                ): Flow<R> (source)

                Returns a Flow whose values are generated with transform function by combining 
                the most recently emitted values by each flow.

                arg0: Flow<T1>, arg1: Flow<T2> -> return

                This function has separate callsreturn and passthrough rules
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines.flow</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>combine(Transform)?</Pattern>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlinx.coroutines.flow.Flow</ParamType>
                        <ParamType>kotlinx.coroutines.flow.Flow</ParamType>
                        <WildCard min="1" max="1"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0,1</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>30550492-C39D-477A-B85A-B8E68D2C4457</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines.flow</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>conflate</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlinx.coroutines.flow.Flow</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>6D4A8374-C89D-4DCA-A7D4-A2491924BD86</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines.flow</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>debounce</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlinx.coroutines.flow.Flow</ParamType>
                        <WildCard min="1" max="1"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>9A2BCC0B-FD5D-4010-A3F4-868F3C2F59BC</RuleID>
                <Notes><![CDATA[
                fun <T> Flow<T>.distinctUntilChanged(): Flow<T>

                fun <T> Flow<T>.distinctUntilChanged(
                    areEquivalent: (old: T, new: T) -> Boolean
                ): Flow<T>

                fun <T, K> Flow<T>.distinctUntilChangedBy(
                    keySelector: (T) -> K
                ): Flow<T>
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines.flow</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>distinctUntilChanged(By)?</Pattern>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlinx.coroutines.flow.Flow</ParamType>
                        <WildCard min="0" max="1"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>36615C3C-EBCA-48C5-A8C2-A0694CFC4CDE</RuleID>
                <Notes><![CDATA[
                fun <T> Flow<T>.drop(count: Int): Flow<T>
                fun <T> Flow<T>.dropWhile(
                    predicate: suspend (T) -> Boolean
                ): Flow<T>
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines.flow</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>drop(While)?</Pattern>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlinx.coroutines.flow.Flow</ParamType>
                        <WildCard min="1" max="1"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>C6E2EE90-58B1-427D-84DD-3C6F8F8D6BDD</RuleID>
                <Notes><![CDATA[
                fun <T> Flow<T>.filter(predicate: suspend (T) -> Boolean): Flow<T>
                fun <R> Flow<*>.filterIsInstance(): Flow<R>
                fun <T> Flow<T>.filterNot(predicate: suspend (T) -> Boolean): Flow<T>
                fun <T : Any> Flow<T?>.filterNotNull(): Flow<T>
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines.flow</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>filter|filterIsInstance|filterNot|filterNotNull</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>7CBBBCB3-8237-4D05-9336-2A6E057007D9</RuleID>
                <Notes><![CDATA[
                suspend fun <T> Flow<T>.first(): T
                suspend fun <T> Flow<T>.first(
                    predicate: suspend (T) -> Boolean
                ): T

                suspend fun <T> Flow<T>.firstOrNull(): T?
                suspend fun <T> Flow<T>.firstOrNull(
                    predicate: suspend (T) -> Boolean
                ): T?
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines.flow</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>first(OrNull)?</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>B77D9468-A977-414C-BD53-042B5263D7D1</RuleID>
                <Notes><![CDATA[
                Passthrough for:

                fun <T, R> Flow<T>.flatMapConcat(
                    transform: suspend (value: T) -> Flow<R>
                ): Flow<R>

                fun <T, R> Flow<T>.flatMapLatest(
                    transform: suspend (value: T) -> Flow<R>
                ): Flow<R>

                fun <T, R> Flow<T>.flatMapMerge(
                    concurrency: Int = DEFAULT_CONCURRENCY,
                    transform: suspend (value: T) -> Flow<R>
                ): Flow<R>
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines.flow</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>flatMap(Concat|Latest|Merge)</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>C87A154F-6710-4788-88BB-095C6C5FA318</RuleID>
                <Notes><![CDATA[
                Passthrough for:

                fun <T> Flow<Flow<T>>.flattenConcat(): Flow<T>

                fun <T> Flow<Flow<T>>.flattenMerge(
                    concurrency: Int = DEFAULT_CONCURRENCY
                ): Flow<T>
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines.flow</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>flatten(Concat|Merge)</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines</Group>
                </MetaInfo>
                <RuleID>18235B3F-048F-4E1F-9B97-C66711CCC2A8</RuleID>
                <Notes><![CDATA[
                Passthrough for:

                fun <T> flowOf(vararg elements: T): Flow<T>

                fun <T> flowOf(value: T): Flow<T>

                Creates a flow that produces values from the given value(s)
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines.flow</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>flowOf</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0...</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>FF1B1591-6378-498C-BFE6-8B881748C269</RuleID>
                <Notes><![CDATA[
                Passthrough for:

                fun <T> Flow<T>.flowOn(context: CoroutineContext): Flow<T>

                Changes the context where this flow is executed to the given context. 
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines.flow</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>flowOn</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>FCC9AECB-3B34-4F0C-B0A2-A500C9FF5095</RuleID>
                <Notes><![CDATA[
                Passthrough for:

                suspend fun <T, R> Flow<T>.fold(
                    initial: R,
                    operation: suspend (acc: R, value: T) -> R
                ): R

                initial -> return
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines.flow</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>fold</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>1</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>AEF9292A-4669-4048-A1C5-CD0BEC4AAEE1</RuleID>
                <Notes><![CDATA[
                Passthrough for:

                fun <T, R> Flow<T>.scan(
                    initial: R,
                    operation: suspend (accumulator: R, value: T) -> R
                ): Flow<R>

                initial -> return
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines.flow</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>scan</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>1</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>F9F9010B-C91F-47D5-9410-73E9DD04C955</RuleID>
                <Notes><![CDATA[
                Passthrough for:

                suspend fun <T> Flow<T>.single(): T
                suspend fun <T : Any> Flow<T>.singleOrNull(): T?

                arg0 (Flow<T>) -> return
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines.flow</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>single(OrNull)?</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>503D69CE-1953-458D-9017-7687F0607EE1</RuleID>
                <Notes><![CDATA[
                Passthrough for:

                fun <T> Flow<T>.take(count: Int): Flow<T>
                fun <T> Flow<T>.takeWhile(
                    predicate: suspend (T) -> Boolean
                ): Flow<T>

                arg0 (Flow<T>) -> return
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines.flow</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>take(While)?</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>90883746-27A1-4709-BA3C-3C2E7BEAB307</RuleID>
                <Notes><![CDATA[
                Passthrough for:

                fun <T> Flow<T>.launchIn(scope: CoroutineScope): Job

                arg0 (Flow<T>) -> return (Job)
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines.flow</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>launchIn</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines</Group>
                </MetaInfo>
                <RuleID>062C88C6-8A64-4408-A2B8-6340F076C6D4</RuleID>
                <Notes><![CDATA[
                Passthrough for:

                fun <T> merge(vararg flows: Flow<T>): Flow<T>

                arg0... (Flow<T>) -> return (Flow<T>)
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines.flow</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>merge</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0...</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>76D79498-A3EA-4879-8C57-9971F61D1A69</RuleID>
                <Notes><![CDATA[
                Passthrough for:

                fun <T> Flow<T>.sample(periodMillis: Long): Flow<T>

                fun <T> Flow<T>.sample(period: <ERROR CLASS>): Flow<T>

                arg0 (Flow<T>) -> return (Flow<T>)
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines.flow</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>sample</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>AE6B1C72-94F7-4A23-9786-005126B09C05</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines.channels</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>broadcast</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlinx.coroutines.channels.ReceiveChannel</ParamType>
                        <WildCard min="2" max="2"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines</Group>
                </MetaInfo>
                <RuleID>65F6F98F-F630-444A-8C7D-2753D6C326C4</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Deferred</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>await</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines</Group>
                </MetaInfo>
                <RuleID>DF57AD37-6FFC-4558-9BE7-CFD972E12B08</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Deferred</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>getCompleted</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines</Group>
                </MetaInfo>
                <RuleID>277F8153-B0B7-456F-9122-6B55FA4ABB69</RuleID>
                <Notes><![CDATA[
                Passthrough for:

                fun <T> CompletableDeferred(
                    parent: Job? = null
                ): CompletableDeferred<T>

                arg0 (parent) -> return (CompletableDeferred<T>)

                fun <T> CompletableDeferred(value: T): CompletableDeferred<T>

                arg0 (value) -> return (CompletableDeferred<T>)
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>CompletableDeferred</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>89E1AA23-561B-4D0B-BF0B-13EE49E3ACA8</RuleID>
                <Notes><![CDATA[
                Passthrough for:

                fun <T> CompletableDeferred<T>.completeWith(
                    result: Result<T>
                ): Boolean

                arg1 (result) -> arg0 instance (CompletableDeferred<T>)
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>completeWith</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>1</InArguments>
                <OutArguments>0</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines</Group>
                </MetaInfo>
                <RuleID>21FC8497-194B-4358-AF67-27ABC7772392</RuleID>
                <Notes><![CDATA[
                Passthrough for:

                fun Job(parent: Job? = null): CompletableJob
                fun SupervisorJob(parent: Job? = null): CompletableJob

                arg0 (parent) -> return
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>(Supervisor)?Job</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines</Group>
                </MetaInfo>
                <RuleID>AB9DA0F7-12C3-4D1B-A5A2-34E2E35C8A75</RuleID>
                <Notes><![CDATA[
                Passthrough for:

                abstract fun complete(value: T): Boolean

                arg0 (value) -> this (CompletableDeferred)
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>CompletableDeferred</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>complete</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>this</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>48BCB338-E33B-48F9-AFAD-B0D91E943FC7</RuleID>
                <Notes><![CDATA[
                Passthrough for:

                fun <T> CompletableDeferred<T>.completeWith(
                    result: Result<T>
                ): Boolean

                arg1 (result) -> arg0 instance (CompletableDeferred)
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>CompletableDeferred</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>completeWith</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>1</InArguments>
                <OutArguments>0</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>099CEB99-0A23-42FE-A379-54B8AF8172EE</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines.flow</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>broadcastIn</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlinx.coroutines.flow.Flow</ParamType>
                        <WildCard min="2" max="2"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>683F0008-7024-46A7-B45C-7B9DC8B2C735</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines.flow</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>buffer</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlinx.coroutines.flow.Flow</ParamType>
                        <WildCard min="1" max="1"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>9577E51E-A774-4E6E-A705-ED4E9780FFEE</RuleID>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines.flow</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>cancellable</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlinx.coroutines.flow.Flow</ParamType>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>66041524-BD6E-47C2-8383-39AD4E6353CF</RuleID>
                <Notes><![CDATA[
                Passthrough for:

                fun <T> Flow<T>.catch(
                    action: suspend FlowCollector<T>.(cause: Throwable) -> Unit
                ): Flow<T>

                Catches exceptions in the flow completion and calls a specified action with the caught exception. 

                Requires separate Calls rule for action lambda
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines.flow</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>catch</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlinx.coroutines.flow.Flow</ParamType>
                        <WildCard min="1" max="1"/>
                    </Parameters>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>FEBA2C6A-D904-49A3-BE7F-AA0C67A0E56E</RuleID>
                <Notes><![CDATA[
                Passthrough for:

                fun <T> Flow<T>.produceIn(
                    scope: CoroutineScope
                ): ReceiveChannel<T>

                arg0 (Flow<T>) -> return (ReceiveChannel<T>)
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines.flow</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>produceIn</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>DDB864DB-B7A1-437D-91DC-9A6F751DB772</RuleID>
                <Notes><![CDATA[
                Passthrough for:

                suspend fun <T, C : MutableCollection<in T>> Flow<T>.toCollection(
                    destination: C
                ): C

                suspend fun <T> Flow<T>.toList(
                    destination: MutableList<T> = ArrayList()
                ): List<T>

                suspend fun <T> Flow<T>.toSet(
                    destination: MutableSet<T> = LinkedHashSet()
                ): Set<T>

                Passthroughs needed for:
                arg0 (instance - Flow<T>) -> arg1 (destination) <-- This rule
                arg0 (instance - Flow<T>) -> return             <-- This rule
                arg1 (destination) -> return
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines.flow</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>to(Collection|List|Set)</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>1,return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>6F6CF3C5-2664-4F65-9415-80EAAF87D798</RuleID>
                <Notes><![CDATA[
                Passthrough for:

                suspend fun <T, C : MutableCollection<in T>> Flow<T>.toCollection(
                    destination: C
                ): C

                suspend fun <T> Flow<T>.toList(
                    destination: MutableList<T> = ArrayList()
                ): List<T>

                suspend fun <T> Flow<T>.toSet(
                    destination: MutableSet<T> = LinkedHashSet()
                ): Set<T>

                Passthroughs needed for:
                arg0 (instance - Flow<T>) -> arg1 (destination)
                arg0 (instance - Flow<T>) -> return
                arg1 (destination) -> return                    <-- This rule
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines.flow</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>to(Collection|List|Set)</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>1</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>0D729FBA-26DE-4616-A064-09813D29203B</RuleID>
                <Notes><![CDATA[
                Passthrough for:

                fun <T> Flow<T>.withIndex(): Flow<IndexedValue<T>>

                arg0 (Flow<T>) -> return (Flow<IndexedValue<T>>)
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines.flow</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>withIndex</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>1DB16BB5-A38F-443D-B735-6BB710618C7D</RuleID>
                <Notes><![CDATA[
                Passthrough for:

                fun <T> Continuation<T>.resume(value: T)
                fun <T> Continuation<T>.resumeWithException(exception: Throwable)

                arg1 -> arg0 (Continuation)
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.coroutines</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>resume(WithException)?</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>1</InArguments>
                <OutArguments>0</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines</Group>
                </MetaInfo>
                <RuleID>EA7BDFA5-77B8-4593-A5FA-6FBB9D7F9321</RuleID>
                <Notes><![CDATA[
                Passthrough for:

                abstract fun resume(value: T, onCancellation: (cause: Throwable) -> Unit): Unit

                arg0 -> this (CancellableContinuation)
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>CancellableContinuation</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>resume</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>this</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>586D54BF-D37F-48B1-9BC9-BB6A8D6A2592</RuleID>
                <Notes><![CDATA[
                Passthrough for:

                fun <T> ThreadLocal<T>.asContextElement(
                    value: T = get()
                ): ThreadContextElement<T>

                arg1 (value) -> arg0 (ThreadLocal)
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>asContextElement</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>1</InArguments>
                <OutArguments>0</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Concurrent extensions</Group>
                </MetaInfo>
                <RuleID>E6C14C74-CD7A-4F45-99CC-34468CA289A6</RuleID>
                <Notes><![CDATA[
                Passthrough for:

                fun <T : Any> ThreadLocal<T>.getOrSet(
                    default: () -> T
                ): T

                Gets the value in the current thread's copy of this thread-local variable or replaces
                the value with the result of calling default function in case if that value was null
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.concurrent</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>getOrSet</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Reflect</Group>
                </MetaInfo>
                <RuleID>F87D5FD8-20A4-4E12-A061-285AB07E655E</RuleID>
                <Notes><![CDATA[
                Passthrough for:

                fun <T : Any> KClass<T>.cast(value: Any?): T

                fun <T : Any> KClass<T>.safeCast(value: Any?): T?

                arg1 -> return
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Pattern>kotlin.reflect|kotlin.reflect.full</Pattern>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>cast|safeCast</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>1</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Reflect</Group>
                </MetaInfo>
                <RuleID>8935CCE9-3374-43DA-889F-E5C2936239E6</RuleID>
                <Notes><![CDATA[
                Passthrough for property:

                abstract val objectInstance: T?
                The instance of the object declaration, or null if this class is not an object declaration.

                this -> return
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.reflect</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>KClass</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>getObjectInstance</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <InArguments>this</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowPassthroughRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin JVM</Group>
                </MetaInfo>
                <RuleID>F481B59B-2804-4456-8C42-6DC1BC7D45AD</RuleID>
                <Notes><![CDATA[
                Passthrough for properties:

                val <T : Any> Class<T>.kotlin: KClass<T>
                val <T : Annotation> T.annotationClass: KClass<out T>
                val <T> KClass<T>.java: Class<T>
                val <T : Any> T.javaClass: Class<T>
                val <T : Any> KClass<T>.javaObjectType: Class<T>
                val <T : Any> KClass<T>.javaObjectType: Class<T>

                arg0 -> return
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.jvm</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>getKotlin|getJava|getJavaClass|getJavaObjectType|getJavaPrimitiveType|getAnnotationClass</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
                <InArguments>0</InArguments>
                <OutArguments>return</OutArguments>
            </DataflowPassthroughRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-4 Information Flow Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-4 Information Flow Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-001312, CCI-001314, CCI-002420</Group>
                    <Group name="altcategoryCWE">CWE ID 497</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.4 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.5 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 8.3.2 Sensitive Private Data (L1 L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 14.3.1 Unintended Security Disclosure Requirements (L1 L2 L3), 14.3.2 Unintended Security Disclosure Requirements (L1 L2 L3), 14.3.3 Unintended Security Disclosure Requirements (L1 L2 L3), 14.2.2 Dependency (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">None</Group>
                    <Group name="altcategoryOWASP2007">A6 Information Leakage and Improper Error Handling</Group>
                    <Group name="altcategoryOWASP2010">None</Group>
                    <Group name="altcategoryOWASP2013">None</Group>
                    <Group name="altcategoryOWASP2017">None</Group>
                    <Group name="altcategoryOWASP2021">None</Group>
                    <Group name="altcategoryOWASPMobile2014">M2 Insecure Data Storage</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">[4] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252020">[7] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252021">[20] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">None</Group>
                    <Group name="altcategoryPCI1.1">None</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.6</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 3.6 - Sensitive Data Retention</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 3.6 - Sensitive Data Retention</Group>
                    <Group name="altcategorySTIG3.1">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.5">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.6">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.7">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.9">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.10">APP3620 CAT II</Group>
                    <Group name="altcategoryWASC24+2">Information Leakage</Group>
                    <Group name="altcategoryWASC2.00">Information Leakage (WASC-13)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">2.0</Group>
                    <Group name="Probability">1.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>F0E83A96-2C65-4101-BB15-D1A3F336822F</RuleID>
                <VulnKingdom>Encapsulation</VulnKingdom>
                <VulnCategory>System Information Leak</VulnCategory>
                <DefaultSeverity>3.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.system_information_leak"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <Or>
                                <TaintFlagSet taintFlag="SYSTEMINFO"/>
                                <TaintFlagSet taintFlag="REGISTRY"/>
                                <TaintFlagSet taintFlag="ENVIRONMENT"/>
                            </Or>
                            <Not>
                                <TaintFlagSet taintFlag="EXCEPTIONINFO"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_SYSTEM_INFORMATION_LEAK"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>error</Value>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                    <Group name="altcategoryGDPR">Privacy Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-4 Information Flow Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-4 Information Flow Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000169, CCI-000196, CCI-000197, CCI-001199, CCI-001312, CCI-001314</Group>
                    <Group name="altcategoryCWE">CWE ID 359</Group>
                    <Group name="altcategoryOWASPASVS4.0">2.2.1 General Authenticator Requirements (L1 L2 L3), 2.6.3 Look-up Secret Verifier Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.10.2 Service Authentication Requirements (L2 L3), 2.10.3 Service Authentication Requirements (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 6.2.1 Algorithms (L1 L2 L3), 8.2.1 Client-side Data Protection (L1 L2 L3), 8.2.2 Client-side Data Protection (L1 L2 L3), 8.3.6 Sensitive Private Data (L2 L3), 8.1.1 General Data Protection (L2 L3), 8.1.2 General Data Protection (L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.1 Malicious Code Search (L2 L3), 14.3.3 Unintended Security Disclosure Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">None</Group>
                    <Group name="altcategoryOWASP2007">A6 Information Leakage and Improper Error Handling</Group>
                    <Group name="altcategoryOWASP2010">None</Group>
                    <Group name="altcategoryOWASP2013">A6 Sensitive Data Exposure</Group>
                    <Group name="altcategoryOWASP2017">A3 Sensitive Data Exposure</Group>
                    <Group name="altcategoryOWASP2021">A02 Cryptographic Failures</Group>
                    <Group name="altcategoryOWASPMobile2014">M2 Insecure Data Storage</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">[4] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252020">[7] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252021">[20] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">None</Group>
                    <Group name="altcategoryPCI1.1">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 6.5.6, Requirement 8.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 6.5.5, Requirement 8.4</Group>
                    <Group name="altcategoryPCI3.0">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.1">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.2">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 3.3 - Sensitive Data Retention, Control Objective 6.1 - Sensitive Data Protection, Control Objective 7 - Use of Cryptography, Control Objective A.2.3 - Cardholder Data Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 3.3 - Sensitive Data Retention, Control Objective 6.1 - Sensitive Data Protection, Control Objective 7 - Use of Cryptography, Control Objective A.2.3 - Cardholder Data Protection, Control Objective B.2.5 - Terminal Software Design</Group>
                    <Group name="altcategorySTIG3.1">APP3210.1 CAT II, APP3310 CAT I, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Information Leakage</Group>
                    <Group name="altcategoryWASC2.00">Information Leakage (WASC-13)</Group>
                    <Group name="altcategorySANS2010">Porous Defenses - CWE ID 311</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 311</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.5</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">2.0</Group>
                    <Group name="audience">medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>C297629A-B92C-4715-89B2-07D94F95E7C6</RuleID>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Privacy Violation</VulnCategory>
                <DefaultSeverity>3.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.privacy_violation"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="PRIVATE"/>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_PRIVACY_VIOLATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>error</Value>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                    <Group name="Impact">4</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-4 Information Flow Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-4 Information Flow Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-001312, CCI-001314, CCI-002420</Group>
                    <Group name="altcategoryCWE">CWE ID 215, CWE ID 489, CWE ID 497</Group>
                    <Group name="altcategoryOWASPASVS4.0">8.3.4 Sensitive Private Data (L1 L2 L3), 14.3.2 Unintended Security Disclosure Requirements (L1 L2 L3), 14.3.3 Unintended Security Disclosure Requirements (L1 L2 L3), 14.2.2 Dependency (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">None</Group>
                    <Group name="altcategoryOWASP2007">A6 Information Leakage and Improper Error Handling</Group>
                    <Group name="altcategoryOWASP2010">None</Group>
                    <Group name="altcategoryOWASP2013">None</Group>
                    <Group name="altcategoryOWASP2017">None</Group>
                    <Group name="altcategoryOWASP2021">A05 Security Misconfiguration</Group>
                    <Group name="altcategoryOWASPMobile2014">M2 Insecure Data Storage</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">[4] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252020">[7] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252021">[20] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">None</Group>
                    <Group name="altcategoryPCI1.1">None</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.6</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 3.6 - Sensitive Data Retention</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 3.6 - Sensitive Data Retention</Group>
                    <Group name="altcategorySTIG3.1">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.5">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.6">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.7">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.9">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.10">APP3620 CAT II</Group>
                    <Group name="altcategoryWASC24+2">Information Leakage</Group>
                    <Group name="altcategoryWASC2.00">Information Leakage (WASC-13)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Probability">1.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>AA3C6B1E-F563-4F0B-854E-AB0C8A08CE09</RuleID>
                <VulnKingdom>Encapsulation</VulnKingdom>
                <VulnCategory>System Information Leak</VulnCategory>
                <VulnSubcategory>External</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.system_information_leak_external"/>
                <Sink>
                    <InArguments>1</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="XSSSTREAM"/>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_SYSTEM_INFORMATION_LEAK_EXTERNAL"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>printStackTrace</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.Throwable</ParamType>
                        <WildCard min="1" max="1"/>
                    </Parameters>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-4 Information Flow Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-4 Information Flow Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-001312, CCI-001314, CCI-002420</Group>
                    <Group name="altcategoryCWE">CWE ID 215, CWE ID 489, CWE ID 497</Group>
                    <Group name="altcategoryOWASPASVS4.0">8.3.4 Sensitive Private Data (L1 L2 L3), 14.3.2 Unintended Security Disclosure Requirements (L1 L2 L3), 14.3.3 Unintended Security Disclosure Requirements (L1 L2 L3), 14.2.2 Dependency (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">None</Group>
                    <Group name="altcategoryOWASP2007">A6 Information Leakage and Improper Error Handling</Group>
                    <Group name="altcategoryOWASP2010">None</Group>
                    <Group name="altcategoryOWASP2013">None</Group>
                    <Group name="altcategoryOWASP2017">None</Group>
                    <Group name="altcategoryOWASP2021">A05 Security Misconfiguration</Group>
                    <Group name="altcategoryOWASPMobile2014">M2 Insecure Data Storage</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">[4] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252020">[7] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252021">[20] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">None</Group>
                    <Group name="altcategoryPCI1.1">None</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.6</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 3.6 - Sensitive Data Retention</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 3.6 - Sensitive Data Retention</Group>
                    <Group name="altcategorySTIG3.1">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.5">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.6">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.7">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.9">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.10">APP3620 CAT II</Group>
                    <Group name="altcategoryWASC24+2">Information Leakage</Group>
                    <Group name="altcategoryWASC2.00">Information Leakage (WASC-13)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">2.0</Group>
                    <Group name="Probability">1.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>FF82819C-01EE-429D-BB24-DEE2F79745AE</RuleID>
                <VulnKingdom>Encapsulation</VulnKingdom>
                <VulnCategory>System Information Leak</VulnCategory>
                <VulnSubcategory>External</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.system_information_leak_external"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <Or>
                                <TaintFlagSet taintFlag="SYSTEMINFO"/>
                                <TaintFlagSet taintFlag="REGISTRY"/>
                                <TaintFlagSet taintFlag="ENVIRONMENT"/>
                            </Or>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_SYSTEM_INFORMATION_LEAK_EXTERNAL"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>print(ln)?</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="altcategoryGDPR">Privacy Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-4 Information Flow Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-4 Information Flow Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000169, CCI-000196, CCI-000197, CCI-001199, CCI-001312, CCI-001314</Group>
                    <Group name="altcategoryCWE">CWE ID 359</Group>
                    <Group name="altcategoryOWASPASVS4.0">2.2.1 General Authenticator Requirements (L1 L2 L3), 2.6.3 Look-up Secret Verifier Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.10.2 Service Authentication Requirements (L2 L3), 2.10.3 Service Authentication Requirements (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 6.2.1 Algorithms (L1 L2 L3), 8.2.1 Client-side Data Protection (L1 L2 L3), 8.2.2 Client-side Data Protection (L1 L2 L3), 8.3.6 Sensitive Private Data (L2 L3), 8.1.1 General Data Protection (L2 L3), 8.1.2 General Data Protection (L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.1 Malicious Code Search (L2 L3), 14.3.3 Unintended Security Disclosure Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">None</Group>
                    <Group name="altcategoryOWASP2007">A6 Information Leakage and Improper Error Handling</Group>
                    <Group name="altcategoryOWASP2010">None</Group>
                    <Group name="altcategoryOWASP2013">A6 Sensitive Data Exposure</Group>
                    <Group name="altcategoryOWASP2017">A3 Sensitive Data Exposure</Group>
                    <Group name="altcategoryOWASP2021">A02 Cryptographic Failures</Group>
                    <Group name="altcategoryOWASPMobile2014">M2 Insecure Data Storage</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">[4] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252020">[7] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252021">[20] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">None</Group>
                    <Group name="altcategoryPCI1.1">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 6.5.6, Requirement 8.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 6.5.5, Requirement 8.4</Group>
                    <Group name="altcategoryPCI3.0">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.1">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.2">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 3.3 - Sensitive Data Retention, Control Objective 6.1 - Sensitive Data Protection, Control Objective 7 - Use of Cryptography, Control Objective A.2.3 - Cardholder Data Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 3.3 - Sensitive Data Retention, Control Objective 6.1 - Sensitive Data Protection, Control Objective 7 - Use of Cryptography, Control Objective A.2.3 - Cardholder Data Protection, Control Objective B.2.5 - Terminal Software Design</Group>
                    <Group name="altcategorySTIG3.1">APP3210.1 CAT II, APP3310 CAT I, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Information Leakage</Group>
                    <Group name="altcategoryWASC2.00">Information Leakage (WASC-13)</Group>
                    <Group name="altcategorySANS2010">Porous Defenses - CWE ID 311</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 311</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.5</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">2.0</Group>
                    <Group name="audience">medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>18177FB1-3801-4AD2-B52C-AA6218AD2EF9</RuleID>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Privacy Violation</VulnCategory>
                <DefaultSeverity>5.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.privacy_violation"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="PRIVATE"/>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_PRIVACY_VIOLATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>print(ln)?</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                    <Group name="altcategoryGDPR">None</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SC-5 Denial of Service Protection (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SC-5 Denial of Service Protection</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002400 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002400 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002400 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002400 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002400 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002400 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002400 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002400 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002400 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002400 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002400 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002400 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-001094</Group>
                    <Group name="altcategoryCWE">None</Group>
                    <Group name="altcategoryOWASPASVS4.0">None</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A9 Application Denial of Service</Group>
                    <Group name="altcategoryOWASP2007">None</Group>
                    <Group name="altcategoryOWASP2010">None</Group>
                    <Group name="altcategoryOWASP2013">None</Group>
                    <Group name="altcategoryOWASP2017">None</Group>
                    <Group name="altcategoryOWASP2021">None</Group>
                    <Group name="altcategoryOWASPMobile2014">None</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">None</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI1.2">None</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.6</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.6</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.6</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP6080 CAT II</Group>
                    <Group name="altcategorySTIG3.10">APP6080 CAT II</Group>
                    <Group name="altcategoryWASC24+2">None</Group>
                    <Group name="altcategoryWASC2.00">Denial of Service (WASC-10)</Group>
                    <Group name="altcategorySANS2010">Risky Resource Management - CWE ID 754</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">3.0</Group>
                    <Group name="Impact">2.0</Group>
                    <Group name="Probability">2.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Normal</Group>
                    <Group name="ConfidentialityImpact">None</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>BF1DF920-8B71-4022-8A8A-728B30FDF03B</RuleID>
                <Notes><![CDATA[
                This is similar to java.lang.StringBuilder.replace() sink: 
                F165388A-ADE3-4927-98F4-BFD9B9FBFFF8

                This is an extension on CharSequence, so we have to check the 
                type is StringBuilder. 
                Has a slightly different signature to the method as well, as it takes a kotlin.text.Regex argument.
            ]]></Notes>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Denial of Service</VulnCategory>
                <VulnSubcategory>StringBuilder</VulnSubcategory>
                <DefaultSeverity>3.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.denial_of_service_stringbuilder"/>
                <Sink primary="true">
                    <InArguments>2</InArguments>
                    <Conditional>
                        <Not>
                            <Or>
                                <TaintFlagSet taintFlag="VALIDATED_DENIAL_OF_SERVICE_STRINGBUILDER"/>
                                <TaintFlagSet taintFlag="NUMBER"/>
                                <TaintFlagSet taintFlag="DATABASE"/>
                                <TaintFlagSet taintFlag="FILE_SYSTEM"/>
                            </Or>
                        </Not>
                    </Conditional>
                </Sink>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="UNINITIALIZED_STRINGBUILDER"/>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_DENIAL_OF_SERVICE_STRINGBUILDER"/>
                            </Not>
                            <Or>
                                <IsType argument="0">
                                    <NamespaceName>
                                    <Value>kotlin.text</Value>
                                    </NamespaceName>
                                    <ClassName>
                                    <Pattern>StringBuilder</Pattern>
                                    </ClassName>
                                </IsType>
                                <IsType argument="0">
                                    <NamespaceName>
                                    <Value>java.lang</Value>
                                    </NamespaceName>
                                    <ClassName>
                                    <Pattern>StringBuilder</Pattern>
                                    </ClassName>
                                </IsType>
                            </Or>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>replace|appendln</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text</Group>
                    <Group name="altcategoryGDPR">None</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SC-5 Denial of Service Protection (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SC-5 Denial of Service Protection</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002400 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002400 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002400 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002400 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002400 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002400 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002400 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002400 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002400 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002400 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002400 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002400 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-001094</Group>
                    <Group name="altcategoryCWE">CWE ID 185, CWE ID 730</Group>
                    <Group name="altcategoryOWASPASVS4.0">None</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A9 Application Denial of Service</Group>
                    <Group name="altcategoryOWASP2007">None</Group>
                    <Group name="altcategoryOWASP2010">None</Group>
                    <Group name="altcategoryOWASP2013">None</Group>
                    <Group name="altcategoryOWASP2017">None</Group>
                    <Group name="altcategoryOWASP2021">None</Group>
                    <Group name="altcategoryOWASPMobile2014">None</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">None</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.9</Group>
                    <Group name="altcategoryPCI1.2">None</Group>
                    <Group name="altcategoryPCI2.0">None</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.6</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.6</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.6</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.6</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP6080 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP6080 CAT II</Group>
                    <Group name="altcategorySTIG3.5">APP6080 CAT II</Group>
                    <Group name="altcategorySTIG3.6">APP6080 CAT II</Group>
                    <Group name="altcategorySTIG3.7">APP6080 CAT II</Group>
                    <Group name="altcategorySTIG3.9">APP6080 CAT II</Group>
                    <Group name="altcategorySTIG3.10">APP6080 CAT II</Group>
                    <Group name="altcategoryWASC24+2">Denial of Service</Group>
                    <Group name="altcategoryWASC2.00">Denial of Service (WASC-10)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">3.0</Group>
                    <Group name="Probability">3.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Availability</Group>
                    <Group name="ConfidentialityImpact">None</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">Complete</Group>
                    <Group name="RemediationEffort">2.0</Group>
                    <Group name="audience">medium,broad,fod</Group>
                </MetaInfo>
                <RuleID>BE6FD9A3-8383-4E27-9F33-113397D83747</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Denial of Service</VulnCategory>
                <VulnSubcategory>Regular Expression</VulnSubcategory>
                <DefaultSeverity>5.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.denial_of_service_regular_expression"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <Not>
                            <TaintFlagSet taintFlag="VALIDATED_DENIAL_OF_SERVICE_REGULAR_EXPRESSION"/>
                        </Not>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Regex</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>init^</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="altcategoryGDPR">Privacy Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-4 Information Flow Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-4 Information Flow Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000169, CCI-000196, CCI-000197, CCI-001199, CCI-001312, CCI-001314</Group>
                    <Group name="altcategoryCWE">CWE ID 359</Group>
                    <Group name="altcategoryOWASPASVS4.0">2.2.1 General Authenticator Requirements (L1 L2 L3), 2.6.3 Look-up Secret Verifier Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.10.2 Service Authentication Requirements (L2 L3), 2.10.3 Service Authentication Requirements (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 6.2.1 Algorithms (L1 L2 L3), 8.2.1 Client-side Data Protection (L1 L2 L3), 8.2.2 Client-side Data Protection (L1 L2 L3), 8.3.6 Sensitive Private Data (L2 L3), 8.1.1 General Data Protection (L2 L3), 8.1.2 General Data Protection (L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.1 Malicious Code Search (L2 L3), 14.3.3 Unintended Security Disclosure Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">None</Group>
                    <Group name="altcategoryOWASP2007">A6 Information Leakage and Improper Error Handling</Group>
                    <Group name="altcategoryOWASP2010">None</Group>
                    <Group name="altcategoryOWASP2013">A6 Sensitive Data Exposure</Group>
                    <Group name="altcategoryOWASP2017">A3 Sensitive Data Exposure</Group>
                    <Group name="altcategoryOWASP2021">A02 Cryptographic Failures</Group>
                    <Group name="altcategoryOWASPMobile2014">M2 Insecure Data Storage</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">[4] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252020">[7] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252021">[20] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">None</Group>
                    <Group name="altcategoryPCI1.1">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 6.5.6, Requirement 8.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 6.5.5, Requirement 8.4</Group>
                    <Group name="altcategoryPCI3.0">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.1">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.2">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 3.3 - Sensitive Data Retention, Control Objective 6.1 - Sensitive Data Protection, Control Objective 7 - Use of Cryptography, Control Objective A.2.3 - Cardholder Data Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 3.3 - Sensitive Data Retention, Control Objective 6.1 - Sensitive Data Protection, Control Objective 7 - Use of Cryptography, Control Objective A.2.3 - Cardholder Data Protection, Control Objective B.2.5 - Terminal Software Design</Group>
                    <Group name="altcategorySTIG3.1">APP3210.1 CAT II, APP3310 CAT I, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Information Leakage</Group>
                    <Group name="altcategoryWASC2.00">Information Leakage (WASC-13)</Group>
                    <Group name="altcategorySANS2010">Porous Defenses - CWE ID 311</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 311</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.5</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">2.0</Group>
                    <Group name="audience">medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>85F8D421-287E-45D5-8413-B62EF55A110C</RuleID>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Privacy Violation</VulnCategory>
                <DefaultSeverity>3.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.privacy_violation"/>
                <Sink>
                    <InArguments>1</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="PRIVATE"/>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_PRIVACY_VIOLATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>appendBytes|appendText|writeBytes|writeText</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-4 Information Flow Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-4 Information Flow Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-001312, CCI-002420</Group>
                    <Group name="altcategoryCWE">CWE ID 497</Group>
                    <Group name="altcategoryOWASPASVS4.0">8.3.2 Sensitive Private Data (L1 L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 14.3.3 Unintended Security Disclosure Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">None</Group>
                    <Group name="altcategoryOWASP2007">A6 Information Leakage and Improper Error Handling</Group>
                    <Group name="altcategoryOWASP2010">None</Group>
                    <Group name="altcategoryOWASP2013">None</Group>
                    <Group name="altcategoryOWASP2017">None</Group>
                    <Group name="altcategoryOWASP2021">A05 Security Misconfiguration</Group>
                    <Group name="altcategoryOWASPMobile2014">M2 Insecure Data Storage</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">[4] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252020">[7] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252021">[20] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">None</Group>
                    <Group name="altcategoryPCI1.1">None</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.6</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 3.6 - Sensitive Data Retention</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 3.6 - Sensitive Data Retention</Group>
                    <Group name="altcategorySTIG3.1">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.5">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.6">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.7">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.9">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.10">APP3620 CAT II</Group>
                    <Group name="altcategoryWASC24+2">Information Leakage</Group>
                    <Group name="altcategoryWASC2.00">Information Leakage (WASC-13)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">1.0</Group>
                    <Group name="Probability">1.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>73340D48-7A8F-43F9-AE09-7AACFEFA1990</RuleID>
                <VulnKingdom>Encapsulation</VulnKingdom>
                <VulnCategory>System Information Leak</VulnCategory>
                <VulnSubcategory>Internal</VulnSubcategory>
                <DefaultSeverity>3.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.system_information_leak_internal"/>
                <Sink>
                    <InArguments>1</InArguments>
                    <Conditional>
                        <And>
                            <Or>
                                <TaintFlagSet taintFlag="SYSTEMINFO"/>
                                <TaintFlagSet taintFlag="REGISTRY"/>
                                <TaintFlagSet taintFlag="ENVIRONMENT"/>
                            </Or>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_SYSTEM_INFORMATION_LEAK_INTERNAL"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>appendBytes|appendText|writeBytes|writeText</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 1236</Group>
                    <Group name="altcategoryOWASPASVS4.0">None</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A6 Injection Flaws</Group>
                    <Group name="altcategoryOWASP2007">A2 Injection Flaws</Group>
                    <Group name="altcategoryOWASP2010">A1 Injection</Group>
                    <Group name="altcategoryOWASP2013">A1 Injection</Group>
                    <Group name="altcategoryOWASP2017">A1 Injection</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">None</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection, Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective 5.4 - Authentication and Access Control, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategoryWASC24+2">None</Group>
                    <Group name="altcategoryWASC2.00">Improper Input Handling (WASC-20)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">1.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Normal</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">Complete</Group>
                    <Group name="RemediationEffort">3.0</Group>
                    <Group name="audience">medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>B0057261-B134-4D27-8E25-70723CDB8287</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Formula Injection</VulnCategory>
                <DefaultSeverity>3.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.formula_injection"/>
                <Sink primary="true">
                    <InArguments>1</InArguments>
                    <Conditional>
                        <And>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_FORMULA_INJECTION"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="NUMBER"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="CSVSTREAM"/>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_FORMULA_INJECTION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>appendBytes|appendText|writeBytes|writeText</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="altcategoryGDPR">Privacy Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-4 Information Flow Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-4 Information Flow Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000169, CCI-000196, CCI-000197, CCI-001199, CCI-001312, CCI-001314</Group>
                    <Group name="altcategoryCWE">CWE ID 359</Group>
                    <Group name="altcategoryOWASPASVS4.0">2.2.1 General Authenticator Requirements (L1 L2 L3), 2.6.3 Look-up Secret Verifier Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.10.2 Service Authentication Requirements (L2 L3), 2.10.3 Service Authentication Requirements (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 6.2.1 Algorithms (L1 L2 L3), 8.2.1 Client-side Data Protection (L1 L2 L3), 8.2.2 Client-side Data Protection (L1 L2 L3), 8.3.6 Sensitive Private Data (L2 L3), 8.1.1 General Data Protection (L2 L3), 8.1.2 General Data Protection (L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.1 Malicious Code Search (L2 L3), 14.3.3 Unintended Security Disclosure Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">None</Group>
                    <Group name="altcategoryOWASP2007">A6 Information Leakage and Improper Error Handling</Group>
                    <Group name="altcategoryOWASP2010">None</Group>
                    <Group name="altcategoryOWASP2013">A6 Sensitive Data Exposure</Group>
                    <Group name="altcategoryOWASP2017">A3 Sensitive Data Exposure</Group>
                    <Group name="altcategoryOWASP2021">A02 Cryptographic Failures</Group>
                    <Group name="altcategoryOWASPMobile2014">M2 Insecure Data Storage</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">[4] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252020">[7] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252021">[20] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">None</Group>
                    <Group name="altcategoryPCI1.1">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 6.5.6, Requirement 8.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 6.5.5, Requirement 8.4</Group>
                    <Group name="altcategoryPCI3.0">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.1">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.2">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 3.3 - Sensitive Data Retention, Control Objective 6.1 - Sensitive Data Protection, Control Objective 7 - Use of Cryptography, Control Objective A.2.3 - Cardholder Data Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 3.3 - Sensitive Data Retention, Control Objective 6.1 - Sensitive Data Protection, Control Objective 7 - Use of Cryptography, Control Objective A.2.3 - Cardholder Data Protection, Control Objective B.2.5 - Terminal Software Design</Group>
                    <Group name="altcategorySTIG3.1">APP3210.1 CAT II, APP3310 CAT I, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Information Leakage</Group>
                    <Group name="altcategoryWASC2.00">Information Leakage (WASC-13)</Group>
                    <Group name="altcategorySANS2010">Porous Defenses - CWE ID 311</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 311</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.5</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">2.0</Group>
                    <Group name="audience">medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>29F1DD80-BA91-4772-A240-78B3DEE6EAE5</RuleID>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Privacy Violation</VulnCategory>
                <DefaultSeverity>3.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.privacy_violation"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="PRIVATE"/>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_PRIVACY_VIOLATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>copyTo</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.InputStream</ParamType>
                        <ParamType>java.io.OutputStream</ParamType>
                    </Parameters>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-4 Information Flow Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-4 Information Flow Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-001312, CCI-002420</Group>
                    <Group name="altcategoryCWE">CWE ID 497</Group>
                    <Group name="altcategoryOWASPASVS4.0">8.3.2 Sensitive Private Data (L1 L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 14.3.3 Unintended Security Disclosure Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">None</Group>
                    <Group name="altcategoryOWASP2007">A6 Information Leakage and Improper Error Handling</Group>
                    <Group name="altcategoryOWASP2010">None</Group>
                    <Group name="altcategoryOWASP2013">None</Group>
                    <Group name="altcategoryOWASP2017">None</Group>
                    <Group name="altcategoryOWASP2021">A05 Security Misconfiguration</Group>
                    <Group name="altcategoryOWASPMobile2014">M2 Insecure Data Storage</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">[4] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252020">[7] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252021">[20] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">None</Group>
                    <Group name="altcategoryPCI1.1">None</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.6</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 3.6 - Sensitive Data Retention</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 3.6 - Sensitive Data Retention</Group>
                    <Group name="altcategorySTIG3.1">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.5">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.6">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.7">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.9">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.10">APP3620 CAT II</Group>
                    <Group name="altcategoryWASC24+2">Information Leakage</Group>
                    <Group name="altcategoryWASC2.00">Information Leakage (WASC-13)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">1.0</Group>
                    <Group name="Probability">1.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>1D7F92AB-1228-4858-ADB7-E8A2D9D7D1EA</RuleID>
                <VulnKingdom>Encapsulation</VulnKingdom>
                <VulnCategory>System Information Leak</VulnCategory>
                <VulnSubcategory>Internal</VulnSubcategory>
                <DefaultSeverity>3.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.system_information_leak_internal"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <Or>
                                <TaintFlagSet taintFlag="SYSTEMINFO"/>
                                <TaintFlagSet taintFlag="REGISTRY"/>
                                <TaintFlagSet taintFlag="ENVIRONMENT"/>
                            </Or>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_SYSTEM_INFORMATION_LEAK_INTERNAL"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>copyTo</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.InputStream</ParamType>
                        <ParamType>java.io.OutputStream</ParamType>
                    </Parameters>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="altcategoryGDPR">Privacy Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-4 Information Flow Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-4 Information Flow Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000169, CCI-000196, CCI-000197, CCI-001199, CCI-001312, CCI-001314</Group>
                    <Group name="altcategoryCWE">CWE ID 359</Group>
                    <Group name="altcategoryOWASPASVS4.0">2.2.1 General Authenticator Requirements (L1 L2 L3), 2.6.3 Look-up Secret Verifier Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.10.2 Service Authentication Requirements (L2 L3), 2.10.3 Service Authentication Requirements (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 6.2.1 Algorithms (L1 L2 L3), 8.2.1 Client-side Data Protection (L1 L2 L3), 8.2.2 Client-side Data Protection (L1 L2 L3), 8.3.6 Sensitive Private Data (L2 L3), 8.1.1 General Data Protection (L2 L3), 8.1.2 General Data Protection (L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.1 Malicious Code Search (L2 L3), 14.3.3 Unintended Security Disclosure Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">None</Group>
                    <Group name="altcategoryOWASP2007">A6 Information Leakage and Improper Error Handling</Group>
                    <Group name="altcategoryOWASP2010">None</Group>
                    <Group name="altcategoryOWASP2013">A6 Sensitive Data Exposure</Group>
                    <Group name="altcategoryOWASP2017">A3 Sensitive Data Exposure</Group>
                    <Group name="altcategoryOWASP2021">A02 Cryptographic Failures</Group>
                    <Group name="altcategoryOWASPMobile2014">M2 Insecure Data Storage</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">[4] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252020">[7] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252021">[20] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">None</Group>
                    <Group name="altcategoryPCI1.1">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 6.5.6, Requirement 8.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 6.5.5, Requirement 8.4</Group>
                    <Group name="altcategoryPCI3.0">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.1">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.2">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 3.3 - Sensitive Data Retention, Control Objective 6.1 - Sensitive Data Protection, Control Objective 7 - Use of Cryptography, Control Objective A.2.3 - Cardholder Data Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 3.3 - Sensitive Data Retention, Control Objective 6.1 - Sensitive Data Protection, Control Objective 7 - Use of Cryptography, Control Objective A.2.3 - Cardholder Data Protection, Control Objective B.2.5 - Terminal Software Design</Group>
                    <Group name="altcategorySTIG3.1">APP3210.1 CAT II, APP3310 CAT I, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Information Leakage</Group>
                    <Group name="altcategoryWASC2.00">Information Leakage (WASC-13)</Group>
                    <Group name="altcategorySANS2010">Porous Defenses - CWE ID 311</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 311</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.5</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">2.0</Group>
                    <Group name="audience">medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>CB74E25D-B754-4BA2-BF99-C35C5C31AFDF</RuleID>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Privacy Violation</VulnCategory>
                <DefaultSeverity>3.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.privacy_violation"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="PRIVATE"/>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_PRIVACY_VIOLATION"/>
                            </Not>
                            <Not>
                                <Or>
                                    <IsType argument="1">
                                    <NamespaceName>
                                    <Value>javax.servlet.jsp</Value>
                                    </NamespaceName>
                                    <ClassName>
                                    <Value>JspWriter</Value>
                                    </ClassName>
                                    </IsType>
                                    <IsType argument="1">
                                    <NamespaceName>
                                    <Value>javax.faces.context</Value>
                                    </NamespaceName>
                                    <ClassName>
                                    <Value>ResponseWriter</Value>
                                    </ClassName>
                                    </IsType>
                                    <IsType argument="1">
                                    <NamespaceName>
                                    <Value>javax.faces.context</Value>
                                    </NamespaceName>
                                    <ClassName>
                                    <Value>ResponseWriterWrapper</Value>
                                    </ClassName>
                                    </IsType>
                                </Or>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>copyTo</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.Reader</ParamType>
                        <ParamType>java.io.Writer</ParamType>
                    </Parameters>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-4 Information Flow Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-4 Information Flow Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-001312, CCI-002420</Group>
                    <Group name="altcategoryCWE">CWE ID 497</Group>
                    <Group name="altcategoryOWASPASVS4.0">8.3.2 Sensitive Private Data (L1 L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 14.3.3 Unintended Security Disclosure Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">None</Group>
                    <Group name="altcategoryOWASP2007">A6 Information Leakage and Improper Error Handling</Group>
                    <Group name="altcategoryOWASP2010">None</Group>
                    <Group name="altcategoryOWASP2013">None</Group>
                    <Group name="altcategoryOWASP2017">None</Group>
                    <Group name="altcategoryOWASP2021">A05 Security Misconfiguration</Group>
                    <Group name="altcategoryOWASPMobile2014">M2 Insecure Data Storage</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">[4] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252020">[7] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252021">[20] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">None</Group>
                    <Group name="altcategoryPCI1.1">None</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.6</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 3.6 - Sensitive Data Retention</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 3.6 - Sensitive Data Retention</Group>
                    <Group name="altcategorySTIG3.1">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.5">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.6">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.7">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.9">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.10">APP3620 CAT II</Group>
                    <Group name="altcategoryWASC24+2">Information Leakage</Group>
                    <Group name="altcategoryWASC2.00">Information Leakage (WASC-13)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">1.0</Group>
                    <Group name="Probability">1.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>CE1B4C03-6213-4DB2-A542-09A41EEA9259</RuleID>
                <VulnKingdom>Encapsulation</VulnKingdom>
                <VulnCategory>System Information Leak</VulnCategory>
                <VulnSubcategory>Internal</VulnSubcategory>
                <DefaultSeverity>3.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.system_information_leak_internal"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <Or>
                                <TaintFlagSet taintFlag="SYSTEMINFO"/>
                                <TaintFlagSet taintFlag="REGISTRY"/>
                                <TaintFlagSet taintFlag="ENVIRONMENT"/>
                            </Or>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_SYSTEM_INFORMATION_LEAK_INTERNAL"/>
                            </Not>
                            <Not>
                                <Or>
                                    <IsType argument="1">
                                    <NamespaceName>
                                    <Value>javax.servlet.jsp</Value>
                                    </NamespaceName>
                                    <ClassName>
                                    <Value>JspWriter</Value>
                                    </ClassName>
                                    </IsType>
                                    <IsType argument="1">
                                    <NamespaceName>
                                    <Value>javax.faces.context</Value>
                                    </NamespaceName>
                                    <ClassName>
                                    <Value>ResponseWriter</Value>
                                    </ClassName>
                                    </IsType>
                                    <IsType argument="1">
                                    <NamespaceName>
                                    <Value>javax.faces.context</Value>
                                    </NamespaceName>
                                    <ClassName>
                                    <Value>ResponseWriterWrapper</Value>
                                    </ClassName>
                                    </IsType>
                                </Or>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>copyTo</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.Reader</ParamType>
                        <ParamType>java.io.Writer</ParamType>
                    </Parameters>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-4 Information Flow Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-4 Information Flow Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-001312, CCI-001314, CCI-002420</Group>
                    <Group name="altcategoryCWE">CWE ID 215, CWE ID 489, CWE ID 497</Group>
                    <Group name="altcategoryOWASPASVS4.0">8.3.4 Sensitive Private Data (L1 L2 L3), 14.3.2 Unintended Security Disclosure Requirements (L1 L2 L3), 14.3.3 Unintended Security Disclosure Requirements (L1 L2 L3), 14.2.2 Dependency (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">None</Group>
                    <Group name="altcategoryOWASP2007">A6 Information Leakage and Improper Error Handling</Group>
                    <Group name="altcategoryOWASP2010">None</Group>
                    <Group name="altcategoryOWASP2013">None</Group>
                    <Group name="altcategoryOWASP2017">None</Group>
                    <Group name="altcategoryOWASP2021">A05 Security Misconfiguration</Group>
                    <Group name="altcategoryOWASPMobile2014">M2 Insecure Data Storage</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">[4] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252020">[7] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252021">[20] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">None</Group>
                    <Group name="altcategoryPCI1.1">None</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.6</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 3.6 - Sensitive Data Retention</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 3.6 - Sensitive Data Retention</Group>
                    <Group name="altcategorySTIG3.1">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.5">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.6">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.7">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.9">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.10">APP3620 CAT II</Group>
                    <Group name="altcategoryWASC24+2">Information Leakage</Group>
                    <Group name="altcategoryWASC2.00">Information Leakage (WASC-13)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">2.0</Group>
                    <Group name="Probability">1.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>AEEB74AB-6F70-4B03-BBDB-F42A53F78B1C</RuleID>
                <VulnKingdom>Encapsulation</VulnKingdom>
                <VulnCategory>System Information Leak</VulnCategory>
                <VulnSubcategory>External</VulnSubcategory>
                <DefaultSeverity>3.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.system_information_leak_external"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <Or>
                                <TaintFlagSet taintFlag="SYSTEMINFO"/>
                                <TaintFlagSet taintFlag="REGISTRY"/>
                                <TaintFlagSet taintFlag="ENVIRONMENT"/>
                            </Or>
                            <Or>
                                <IsType argument="1">
                                    <NamespaceName>
                                    <Value>javax.servlet.jsp</Value>
                                    </NamespaceName>
                                    <ClassName>
                                    <Value>JspWriter</Value>
                                    </ClassName>
                                </IsType>
                                <IsType argument="1">
                                    <NamespaceName>
                                    <Value>javax.faces.context</Value>
                                    </NamespaceName>
                                    <ClassName>
                                    <Value>ResponseWriter</Value>
                                    </ClassName>
                                </IsType>
                                <IsType argument="1">
                                    <NamespaceName>
                                    <Value>javax.faces.context</Value>
                                    </NamespaceName>
                                    <ClassName>
                                    <Value>ResponseWriterWrapper</Value>
                                    </ClassName>
                                </IsType>
                            </Or>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_SYSTEM_INFORMATION_LEAK_EXTERNAL"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>copyTo</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.Reader</ParamType>
                        <ParamType>java.io.Writer</ParamType>
                    </Parameters>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="altcategoryGDPR">Access Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 22, CWE ID 73</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.2.2 Sanitization and Sandboxing Requirements (L1 L2 L3), 12.3.1 File Execution Requirements (L1 L2 L3), 12.3.2 File Execution Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">Rule 1.3</Group>
                    <Group name="altcategoryMISRAC++2008">Rule 0-3-1</Group>
                    <Group name="altcategoryOWASP2004">A1 Unvalidated Input</Group>
                    <Group name="altcategoryOWASP2007">A4 Insecure Direct Object Reference</Group>
                    <Group name="altcategoryOWASP2010">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2013">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2017">A5 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2021">A01 Broken Access Control</Group>
                    <Group name="altcategoryOWASPMobile2014">M8 Security Decisions Via Untrusted Inputs</Group>
                    <Group name="altcategorySANS2009">Risky Resource Management - CWE ID 426</Group>
                    <Group name="altcategoryCWETop252019">[10] CWE ID 022</Group>
                    <Group name="altcategoryCWETop252020">[12] CWE ID 022</Group>
                    <Group name="altcategoryCWETop252021">[8] CWE ID 022</Group>
                    <Group name="altcategoryCWETop252022">[8] CWE ID 022</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection, Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective 5.4 - Authentication and Access Control, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategoryWASC24+2">Path Traversal</Group>
                    <Group name="altcategoryWASC2.00">Path Traversal (WASC-33)</Group>
                    <Group name="altcategorySANS2010">Risky Resource Management - CWE ID 022</Group>
                    <Group name="altcategorySANSTop252011">Risky Resource Management - CWE ID 022</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">3.0</Group>
                    <Group name="Probability">4.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">Partial</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">3.0</Group>
                    <Group name="audience">medium,broad,fod</Group>
                </MetaInfo>
                <RuleID>C5F3B8DE-0071-4C0D-963A-0820E766451F</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Path Manipulation</VulnCategory>
                <DefaultSeverity>3.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.path_manipulation"/>
                <Sink>
                    <InArguments>1</InArguments>
                    <Conditional>
                        <And>
                            <Not>
                                <TaintFlagSet taintFlag="NUMBER"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_PATH_MANIPULATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>resolve(Sibling)?</Pattern>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.File</ParamType>
                        <ParamType>kotlin.String</ParamType>
                    </Parameters>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="Probability">1</Group>
                    <Group name="Impact">2</Group>
                    <Group name="altcategoryGDPR">Access Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 22, CWE ID 73</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.2.2 Sanitization and Sandboxing Requirements (L1 L2 L3), 12.3.1 File Execution Requirements (L1 L2 L3), 12.3.2 File Execution Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">Rule 1.3</Group>
                    <Group name="altcategoryMISRAC++2008">Rule 0-3-1</Group>
                    <Group name="altcategoryOWASP2004">A1 Unvalidated Input</Group>
                    <Group name="altcategoryOWASP2007">A4 Insecure Direct Object Reference</Group>
                    <Group name="altcategoryOWASP2010">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2013">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2017">A5 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2021">A01 Broken Access Control</Group>
                    <Group name="altcategoryOWASPMobile2014">M8 Security Decisions Via Untrusted Inputs</Group>
                    <Group name="altcategorySANS2009">Risky Resource Management - CWE ID 426</Group>
                    <Group name="altcategoryCWETop252019">[10] CWE ID 022</Group>
                    <Group name="altcategoryCWETop252020">[12] CWE ID 022</Group>
                    <Group name="altcategoryCWETop252021">[8] CWE ID 022</Group>
                    <Group name="altcategoryCWETop252022">[8] CWE ID 022</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection, Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective 5.4 - Authentication and Access Control, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategoryWASC24+2">Path Traversal</Group>
                    <Group name="altcategoryWASC2.00">Path Traversal (WASC-33)</Group>
                    <Group name="altcategorySANS2010">Risky Resource Management - CWE ID 022</Group>
                    <Group name="altcategorySANSTop252011">Risky Resource Management - CWE ID 022</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">Partial</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">3.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>8959B70F-E46F-4C90-B00C-5C97B22FE9D7</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Path Manipulation</VulnCategory>
                <DefaultSeverity>3.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.path_manipulation"/>
                <Sink>
                    <InArguments>1</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="NUMBER"/>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_PATH_MANIPULATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>resolve(Sibling)?</Pattern>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.File</ParamType>
                        <ParamType>kotlin.String</ParamType>
                    </Parameters>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="altcategoryGDPR">Access Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 918</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.2.6 Sanitization and Sandboxing Requirements (L1 L2 L3), 12.6.1 SSRF Protection Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A1 Unvalidated Input</Group>
                    <Group name="altcategoryOWASP2007">A4 Insecure Direct Object Reference</Group>
                    <Group name="altcategoryOWASP2010">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2013">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2017">A5 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2021">A10 Server-Side Request Forgery</Group>
                    <Group name="altcategoryOWASPMobile2014">M5 Poor Authorization and Authentication</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">[24] CWE ID 918</Group>
                    <Group name="altcategoryCWETop252022">[21] CWE ID 918</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection, Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective 5.4 - Authentication and Access Control, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategoryWASC24+2">None</Group>
                    <Group name="altcategoryWASC2.00">Abuse of Functionality (WASC-42)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">3.0</Group>
                    <Group name="Probability">3.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">medium,broad,fod</Group>
                </MetaInfo>
                <RuleID>208E6DA6-F84D-4800-A494-C4B403F76020</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Server-Side Request Forgery</VulnCategory>
                <DefaultSeverity>3.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.server_side_request_forgery"/>
                <Sink primary="true">
                    <InArguments>1</InArguments>
                    <Conditional>
                        <And>
                            <Not>
                                <TaintFlagSet taintFlag="NUMBER"/>
                            </Not>
                            <And>
                                <Or>
                                    <TaintFlagSet taintFlag="WEB"/>
                                    <TaintFlagSet taintFlag="GUI_FORM"/>
                                    <TaintFlagSet taintFlag="FORM"/>
                                    <TaintFlagSet taintFlag="NETWORK"/>
                                    <TaintFlagSet taintFlag="WEBSERVICE"/>
                                </Or>
                                <Not>
                                    <TaintFlagSet taintFlag="VALIDATED_SERVER_SIDE_REQUEST_FORGERY"/>
                                </Not>
                                <Not>
                                    <TaintFlagSet taintFlag="NO_NEW_LINE"/>
                                </Not>
                                <Not>
                                    <IsType argument="1">
                                    <NamespaceName>
                                    <Value>javax.servlet</Value>
                                    </NamespaceName>
                                    <ClassName>
                                    <Value>ServletOutputStream</Value>
                                    </ClassName>
                                    </IsType>
                                </Not>
                            </And>
                        </And>
                    </Conditional>
                </Sink>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="NETWORKSTREAM"/>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_SERVER_SIDE_REQUEST_FORGERY"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>copyTo</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.InputStream</ParamType>
                        <ParamType>java.io.OutputStream</ParamType>
                    </Parameters>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="altcategoryGDPR">Access Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 918</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.2.6 Sanitization and Sandboxing Requirements (L1 L2 L3), 12.6.1 SSRF Protection Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A1 Unvalidated Input</Group>
                    <Group name="altcategoryOWASP2007">A4 Insecure Direct Object Reference</Group>
                    <Group name="altcategoryOWASP2010">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2013">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2017">A5 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2021">A10 Server-Side Request Forgery</Group>
                    <Group name="altcategoryOWASPMobile2014">M5 Poor Authorization and Authentication</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">[24] CWE ID 918</Group>
                    <Group name="altcategoryCWETop252022">[21] CWE ID 918</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection, Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective 5.4 - Authentication and Access Control, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategoryWASC24+2">None</Group>
                    <Group name="altcategoryWASC2.00">Abuse of Functionality (WASC-42)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">3.0</Group>
                    <Group name="Probability">3.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">medium,broad,fod</Group>
                </MetaInfo>
                <RuleID>193C08CA-CC0A-4B2E-9436-DA1C932C84C1</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Server-Side Request Forgery</VulnCategory>
                <DefaultSeverity>3.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.server_side_request_forgery"/>
                <Sink primary="true">
                    <InArguments>1</InArguments>
                    <Conditional>
                        <And>
                            <Not>
                                <TaintFlagSet taintFlag="NUMBER"/>
                            </Not>
                            <And>
                                <Or>
                                    <TaintFlagSet taintFlag="WEB"/>
                                    <TaintFlagSet taintFlag="GUI_FORM"/>
                                    <TaintFlagSet taintFlag="FORM"/>
                                    <TaintFlagSet taintFlag="NETWORK"/>
                                    <TaintFlagSet taintFlag="WEBSERVICE"/>
                                </Or>
                                <Not>
                                    <TaintFlagSet taintFlag="VALIDATED_SERVER_SIDE_REQUEST_FORGERY"/>
                                </Not>
                                <Not>
                                    <TaintFlagSet taintFlag="NO_NEW_LINE"/>
                                </Not>
                                <Not>
                                    <Or>
                                    <IsType argument="1">
                                    <NamespaceName>
                                    <Value>javax.servlet.jsp</Value>
                                    </NamespaceName>
                                    <ClassName>
                                    <Value>JspWriter</Value>
                                    </ClassName>
                                    </IsType>
                                    <IsType argument="1">
                                    <NamespaceName>
                                    <Value>javax.faces.context</Value>
                                    </NamespaceName>
                                    <ClassName>
                                    <Value>ResponseWriter</Value>
                                    </ClassName>
                                    </IsType>
                                    <IsType argument="1">
                                    <NamespaceName>
                                    <Value>javax.faces.context</Value>
                                    </NamespaceName>
                                    <ClassName>
                                    <Value>ResponseWriterWrapper</Value>
                                    </ClassName>
                                    </IsType>
                                    </Or>
                                </Not>
                            </And>
                        </And>
                    </Conditional>
                </Sink>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="NETWORKSTREAM"/>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_SERVER_SIDE_REQUEST_FORGERY"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>copyTo</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.Reader</ParamType>
                        <ParamType>java.io.Writer</ParamType>
                    </Parameters>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002360 CAT II, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002360 CAT II, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002360 CAT II, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002360 CAT II, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002360 CAT II, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002360 CAT II, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002360 CAT II, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002360 CAT II, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002360 CAT II, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002360 CAT II, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002360 CAT II, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002360 CAT II, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001084, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 501</Group>
                    <Group name="altcategoryOWASPASVS4.0">None</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A1 Unvalidated Input</Group>
                    <Group name="altcategoryOWASP2007">None</Group>
                    <Group name="altcategoryOWASP2010">None</Group>
                    <Group name="altcategoryOWASP2013">None</Group>
                    <Group name="altcategoryOWASP2017">None</Group>
                    <Group name="altcategoryOWASP2021">A04 Insecure Design</Group>
                    <Group name="altcategoryOWASPMobile2014">M8 Security Decisions Via Untrusted Inputs</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1</Group>
                    <Group name="altcategoryPCI2.0">None</Group>
                    <Group name="altcategoryPCI3.0">None</Group>
                    <Group name="altcategoryPCI3.1">None</Group>
                    <Group name="altcategoryPCI3.2">None</Group>
                    <Group name="altcategoryPCI3.2.1">None</Group>
                    <Group name="altcategoryPCISSF1.0">None</Group>
                    <Group name="altcategoryPCISSF1.1">None</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I</Group>
                    <Group name="altcategoryWASC24+2">None</Group>
                    <Group name="altcategoryWASC2.00">Improper Input Handling (WASC-20)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">2.0</Group>
                    <Group name="Probability">1.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Normal</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>51F396C5-4E86-45C0-BE76-7F880E298E1F</RuleID>
                <VulnKingdom>Encapsulation</VulnKingdom>
                <VulnCategory>Trust Boundary Violation</VulnCategory>
                <DefaultSeverity>3.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.trust_boundary_violation"/>
                <Sink primary="true">
                    <InArguments>1</InArguments>
                    <Conditional>
                        <And>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_TRUST_BOUNDARY_VIOLATION"/>
                            </Not>
                            <Not>
                                <IsType argument="1">
                                    <NamespaceName>
                                    <Value>javax.servlet</Value>
                                    </NamespaceName>
                                    <ClassName>
                                    <Value>ServletOutputStream</Value>
                                    </ClassName>
                                </IsType>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="WEBSOCKET_STREAM"/>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_TRUST_BOUNDARY_VIOLATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>copyTo</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.InputStream</ParamType>
                        <ParamType>java.io.OutputStream</ParamType>
                    </Parameters>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002360 CAT II, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002360 CAT II, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002360 CAT II, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002360 CAT II, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002360 CAT II, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002360 CAT II, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002360 CAT II, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002360 CAT II, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002360 CAT II, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002360 CAT II, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002360 CAT II, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002360 CAT II, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001084, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 501</Group>
                    <Group name="altcategoryOWASPASVS4.0">None</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A1 Unvalidated Input</Group>
                    <Group name="altcategoryOWASP2007">None</Group>
                    <Group name="altcategoryOWASP2010">None</Group>
                    <Group name="altcategoryOWASP2013">None</Group>
                    <Group name="altcategoryOWASP2017">None</Group>
                    <Group name="altcategoryOWASP2021">A04 Insecure Design</Group>
                    <Group name="altcategoryOWASPMobile2014">M8 Security Decisions Via Untrusted Inputs</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1</Group>
                    <Group name="altcategoryPCI2.0">None</Group>
                    <Group name="altcategoryPCI3.0">None</Group>
                    <Group name="altcategoryPCI3.1">None</Group>
                    <Group name="altcategoryPCI3.2">None</Group>
                    <Group name="altcategoryPCI3.2.1">None</Group>
                    <Group name="altcategoryPCISSF1.0">None</Group>
                    <Group name="altcategoryPCISSF1.1">None</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I</Group>
                    <Group name="altcategoryWASC24+2">None</Group>
                    <Group name="altcategoryWASC2.00">Improper Input Handling (WASC-20)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">2.0</Group>
                    <Group name="Probability">1.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Normal</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>06D890C7-5F1E-4E9B-8E51-50BE167621ED</RuleID>
                <VulnKingdom>Encapsulation</VulnKingdom>
                <VulnCategory>Trust Boundary Violation</VulnCategory>
                <DefaultSeverity>3.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.trust_boundary_violation"/>
                <Sink primary="true">
                    <InArguments>1</InArguments>
                    <Conditional>
                        <And>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_TRUST_BOUNDARY_VIOLATION"/>
                            </Not>
                            <Not>
                                <Or>
                                    <IsType argument="1">
                                    <NamespaceName>
                                    <Value>javax.servlet.jsp</Value>
                                    </NamespaceName>
                                    <ClassName>
                                    <Value>JspWriter</Value>
                                    </ClassName>
                                    </IsType>
                                    <IsType argument="1">
                                    <NamespaceName>
                                    <Value>javax.faces.context</Value>
                                    </NamespaceName>
                                    <ClassName>
                                    <Value>ResponseWriter</Value>
                                    </ClassName>
                                    </IsType>
                                    <IsType argument="1">
                                    <NamespaceName>
                                    <Value>javax.faces.context</Value>
                                    </NamespaceName>
                                    <ClassName>
                                    <Value>ResponseWriterWrapper</Value>
                                    </ClassName>
                                    </IsType>
                                </Or>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="WEBSOCKET_STREAM"/>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_TRUST_BOUNDARY_VIOLATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>copyTo</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.Reader</ParamType>
                        <ParamType>java.io.Writer</ParamType>
                    </Parameters>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="altcategoryGDPR">Privacy Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-4 Information Flow Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-4 Information Flow Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000169, CCI-000196, CCI-000197, CCI-001199, CCI-001312, CCI-001314</Group>
                    <Group name="altcategoryCWE">CWE ID 359</Group>
                    <Group name="altcategoryOWASPASVS4.0">2.2.1 General Authenticator Requirements (L1 L2 L3), 2.6.3 Look-up Secret Verifier Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.10.2 Service Authentication Requirements (L2 L3), 2.10.3 Service Authentication Requirements (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 6.2.1 Algorithms (L1 L2 L3), 8.2.1 Client-side Data Protection (L1 L2 L3), 8.2.2 Client-side Data Protection (L1 L2 L3), 8.3.6 Sensitive Private Data (L2 L3), 8.1.1 General Data Protection (L2 L3), 8.1.2 General Data Protection (L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.1 Malicious Code Search (L2 L3), 14.3.3 Unintended Security Disclosure Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">None</Group>
                    <Group name="altcategoryOWASP2007">A6 Information Leakage and Improper Error Handling</Group>
                    <Group name="altcategoryOWASP2010">None</Group>
                    <Group name="altcategoryOWASP2013">A6 Sensitive Data Exposure</Group>
                    <Group name="altcategoryOWASP2017">A3 Sensitive Data Exposure</Group>
                    <Group name="altcategoryOWASP2021">A02 Cryptographic Failures</Group>
                    <Group name="altcategoryOWASPMobile2014">M2 Insecure Data Storage</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">[4] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252020">[7] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252021">[20] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">None</Group>
                    <Group name="altcategoryPCI1.1">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 6.5.6, Requirement 8.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 6.5.5, Requirement 8.4</Group>
                    <Group name="altcategoryPCI3.0">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.1">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.2">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 3.3 - Sensitive Data Retention, Control Objective 6.1 - Sensitive Data Protection, Control Objective 7 - Use of Cryptography, Control Objective A.2.3 - Cardholder Data Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 3.3 - Sensitive Data Retention, Control Objective 6.1 - Sensitive Data Protection, Control Objective 7 - Use of Cryptography, Control Objective A.2.3 - Cardholder Data Protection, Control Objective B.2.5 - Terminal Software Design</Group>
                    <Group name="altcategorySTIG3.1">APP3210.1 CAT II, APP3310 CAT I, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Information Leakage</Group>
                    <Group name="altcategoryWASC2.00">Information Leakage (WASC-13)</Group>
                    <Group name="altcategorySANS2010">Porous Defenses - CWE ID 311</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 311</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.5</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">2.0</Group>
                    <Group name="audience">medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>72E25ADA-854B-4DE7-8637-DE549F9E3AA0</RuleID>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Privacy Violation</VulnCategory>
                <DefaultSeverity>3.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.privacy_violation"/>
                <Sink primary="true">
                    <InArguments>1</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="PRIVATE"/>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_PRIVACY_VIOLATION"/>
                            </Not>
                            <Not>
                                <IsType argument="1">
                                    <NamespaceName>
                                    <Value>javax.servlet</Value>
                                    </NamespaceName>
                                    <ClassName>
                                    <Value>ServletOutputStream</Value>
                                    </ClassName>
                                </IsType>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="WEBSOCKET_STREAM"/>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_PRIVACY_VIOLATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>copyTo</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.InputStream</ParamType>
                        <ParamType>java.io.OutputStream</ParamType>
                    </Parameters>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="altcategoryGDPR">Privacy Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-4 Information Flow Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-4 Information Flow Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000169, CCI-000196, CCI-000197, CCI-001199, CCI-001312, CCI-001314</Group>
                    <Group name="altcategoryCWE">CWE ID 359</Group>
                    <Group name="altcategoryOWASPASVS4.0">2.2.1 General Authenticator Requirements (L1 L2 L3), 2.6.3 Look-up Secret Verifier Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.10.2 Service Authentication Requirements (L2 L3), 2.10.3 Service Authentication Requirements (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 6.2.1 Algorithms (L1 L2 L3), 8.2.1 Client-side Data Protection (L1 L2 L3), 8.2.2 Client-side Data Protection (L1 L2 L3), 8.3.6 Sensitive Private Data (L2 L3), 8.1.1 General Data Protection (L2 L3), 8.1.2 General Data Protection (L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.1 Malicious Code Search (L2 L3), 14.3.3 Unintended Security Disclosure Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">None</Group>
                    <Group name="altcategoryOWASP2007">A6 Information Leakage and Improper Error Handling</Group>
                    <Group name="altcategoryOWASP2010">None</Group>
                    <Group name="altcategoryOWASP2013">A6 Sensitive Data Exposure</Group>
                    <Group name="altcategoryOWASP2017">A3 Sensitive Data Exposure</Group>
                    <Group name="altcategoryOWASP2021">A02 Cryptographic Failures</Group>
                    <Group name="altcategoryOWASPMobile2014">M2 Insecure Data Storage</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">[4] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252020">[7] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252021">[20] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">None</Group>
                    <Group name="altcategoryPCI1.1">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 6.5.6, Requirement 8.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 6.5.5, Requirement 8.4</Group>
                    <Group name="altcategoryPCI3.0">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.1">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.2">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 3.3 - Sensitive Data Retention, Control Objective 6.1 - Sensitive Data Protection, Control Objective 7 - Use of Cryptography, Control Objective A.2.3 - Cardholder Data Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 3.3 - Sensitive Data Retention, Control Objective 6.1 - Sensitive Data Protection, Control Objective 7 - Use of Cryptography, Control Objective A.2.3 - Cardholder Data Protection, Control Objective B.2.5 - Terminal Software Design</Group>
                    <Group name="altcategorySTIG3.1">APP3210.1 CAT II, APP3310 CAT I, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Information Leakage</Group>
                    <Group name="altcategoryWASC2.00">Information Leakage (WASC-13)</Group>
                    <Group name="altcategorySANS2010">Porous Defenses - CWE ID 311</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 311</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.5</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">2.0</Group>
                    <Group name="audience">medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>9A321F91-12DD-4F54-9073-FC4FFE77621D</RuleID>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Privacy Violation</VulnCategory>
                <DefaultSeverity>3.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.privacy_violation"/>
                <Sink primary="true">
                    <InArguments>1</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="PRIVATE"/>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_PRIVACY_VIOLATION"/>
                            </Not>
                            <Not>
                                <Or>
                                    <IsType argument="1">
                                    <NamespaceName>
                                    <Value>javax.servlet.jsp</Value>
                                    </NamespaceName>
                                    <ClassName>
                                    <Value>JspWriter</Value>
                                    </ClassName>
                                    </IsType>
                                    <IsType argument="1">
                                    <NamespaceName>
                                    <Value>javax.faces.context</Value>
                                    </NamespaceName>
                                    <ClassName>
                                    <Value>ResponseWriter</Value>
                                    </ClassName>
                                    </IsType>
                                    <IsType argument="1">
                                    <NamespaceName>
                                    <Value>javax.faces.context</Value>
                                    </NamespaceName>
                                    <ClassName>
                                    <Value>ResponseWriterWrapper</Value>
                                    </ClassName>
                                    </IsType>
                                </Or>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="WEBSOCKET_STREAM"/>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_PRIVACY_VIOLATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>copyTo</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.Reader</ParamType>
                        <ParamType>java.io.Writer</ParamType>
                    </Parameters>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-4 Information Flow Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-4 Information Flow Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-001312, CCI-001314, CCI-002420</Group>
                    <Group name="altcategoryCWE">CWE ID 215, CWE ID 489, CWE ID 497</Group>
                    <Group name="altcategoryOWASPASVS4.0">8.3.4 Sensitive Private Data (L1 L2 L3), 14.3.2 Unintended Security Disclosure Requirements (L1 L2 L3), 14.3.3 Unintended Security Disclosure Requirements (L1 L2 L3), 14.2.2 Dependency (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">None</Group>
                    <Group name="altcategoryOWASP2007">A6 Information Leakage and Improper Error Handling</Group>
                    <Group name="altcategoryOWASP2010">None</Group>
                    <Group name="altcategoryOWASP2013">None</Group>
                    <Group name="altcategoryOWASP2017">None</Group>
                    <Group name="altcategoryOWASP2021">A05 Security Misconfiguration</Group>
                    <Group name="altcategoryOWASPMobile2014">M2 Insecure Data Storage</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">[4] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252020">[7] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252021">[20] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">None</Group>
                    <Group name="altcategoryPCI1.1">None</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.6</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 3.6 - Sensitive Data Retention</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 3.6 - Sensitive Data Retention</Group>
                    <Group name="altcategorySTIG3.1">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.5">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.6">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.7">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.9">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.10">APP3620 CAT II</Group>
                    <Group name="altcategoryWASC24+2">Information Leakage</Group>
                    <Group name="altcategoryWASC2.00">Information Leakage (WASC-13)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">2.0</Group>
                    <Group name="Probability">1.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>3BEC081E-52F2-42CB-BAD2-CF8EBEA75A2B</RuleID>
                <VulnKingdom>Encapsulation</VulnKingdom>
                <VulnCategory>System Information Leak</VulnCategory>
                <VulnSubcategory>External</VulnSubcategory>
                <DefaultSeverity>3.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.system_information_leak_external"/>
                <Sink primary="true">
                    <InArguments>1</InArguments>
                    <Conditional>
                        <And>
                            <Or>
                                <Or>
                                    <TaintFlagSet taintFlag="SYSTEMINFO"/>
                                    <TaintFlagSet taintFlag="REGISTRY"/>
                                </Or>
                                <TaintFlagSet taintFlag="ENVIRONMENT"/>
                            </Or>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_SYSTEM_INFORMATION_LEAK_EXTERNAL"/>
                            </Not>
                            <Not>
                                <IsType argument="1">
                                    <NamespaceName>
                                    <Value>javax.servlet</Value>
                                    </NamespaceName>
                                    <ClassName>
                                    <Value>ServletOutputStream</Value>
                                    </ClassName>
                                </IsType>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="WEBSOCKET_STREAM"/>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_SYSTEM_INFORMATION_LEAK_EXTERNAL"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>copyTo</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.InputStream</ParamType>
                        <ParamType>java.io.OutputStream</ParamType>
                    </Parameters>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-4 Information Flow Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-4 Information Flow Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-001312, CCI-001314, CCI-002420</Group>
                    <Group name="altcategoryCWE">CWE ID 215, CWE ID 489, CWE ID 497</Group>
                    <Group name="altcategoryOWASPASVS4.0">8.3.4 Sensitive Private Data (L1 L2 L3), 14.3.2 Unintended Security Disclosure Requirements (L1 L2 L3), 14.3.3 Unintended Security Disclosure Requirements (L1 L2 L3), 14.2.2 Dependency (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">None</Group>
                    <Group name="altcategoryOWASP2007">A6 Information Leakage and Improper Error Handling</Group>
                    <Group name="altcategoryOWASP2010">None</Group>
                    <Group name="altcategoryOWASP2013">None</Group>
                    <Group name="altcategoryOWASP2017">None</Group>
                    <Group name="altcategoryOWASP2021">A05 Security Misconfiguration</Group>
                    <Group name="altcategoryOWASPMobile2014">M2 Insecure Data Storage</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">[4] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252020">[7] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252021">[20] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">None</Group>
                    <Group name="altcategoryPCI1.1">None</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.6</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 3.6 - Sensitive Data Retention</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 3.6 - Sensitive Data Retention</Group>
                    <Group name="altcategorySTIG3.1">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.5">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.6">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.7">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.9">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.10">APP3620 CAT II</Group>
                    <Group name="altcategoryWASC24+2">Information Leakage</Group>
                    <Group name="altcategoryWASC2.00">Information Leakage (WASC-13)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">2.0</Group>
                    <Group name="Probability">1.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>E68F6AE4-26BB-445A-94D2-ACA70565688C</RuleID>
                <VulnKingdom>Encapsulation</VulnKingdom>
                <VulnCategory>System Information Leak</VulnCategory>
                <VulnSubcategory>External</VulnSubcategory>
                <DefaultSeverity>3.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.system_information_leak_external"/>
                <Sink primary="true">
                    <InArguments>1</InArguments>
                    <Conditional>
                        <And>
                            <Or>
                                <Or>
                                    <TaintFlagSet taintFlag="SYSTEMINFO"/>
                                    <TaintFlagSet taintFlag="REGISTRY"/>
                                </Or>
                                <TaintFlagSet taintFlag="ENVIRONMENT"/>
                            </Or>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_SYSTEM_INFORMATION_LEAK_EXTERNAL"/>
                            </Not>
                            <Not>
                                <Or>
                                    <IsType argument="1">
                                    <NamespaceName>
                                    <Value>javax.servlet.jsp</Value>
                                    </NamespaceName>
                                    <ClassName>
                                    <Value>JspWriter</Value>
                                    </ClassName>
                                    </IsType>
                                    <IsType argument="1">
                                    <NamespaceName>
                                    <Value>javax.faces.context</Value>
                                    </NamespaceName>
                                    <ClassName>
                                    <Value>ResponseWriter</Value>
                                    </ClassName>
                                    </IsType>
                                    <IsType argument="1">
                                    <NamespaceName>
                                    <Value>javax.faces.context</Value>
                                    </NamespaceName>
                                    <ClassName>
                                    <Value>ResponseWriterWrapper</Value>
                                    </ClassName>
                                    </IsType>
                                </Or>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="WEBSOCKET_STREAM"/>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_SYSTEM_INFORMATION_LEAK_EXTERNAL"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>copyTo</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.Reader</ParamType>
                        <ParamType>java.io.Writer</ParamType>
                    </Parameters>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-4 Information Flow Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-4 Information Flow Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-001312, CCI-002420</Group>
                    <Group name="altcategoryCWE">CWE ID 497</Group>
                    <Group name="altcategoryOWASPASVS4.0">8.3.2 Sensitive Private Data (L1 L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 14.3.3 Unintended Security Disclosure Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">None</Group>
                    <Group name="altcategoryOWASP2007">A6 Information Leakage and Improper Error Handling</Group>
                    <Group name="altcategoryOWASP2010">None</Group>
                    <Group name="altcategoryOWASP2013">None</Group>
                    <Group name="altcategoryOWASP2017">None</Group>
                    <Group name="altcategoryOWASP2021">A05 Security Misconfiguration</Group>
                    <Group name="altcategoryOWASPMobile2014">M2 Insecure Data Storage</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">[4] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252020">[7] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252021">[20] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">None</Group>
                    <Group name="altcategoryPCI1.1">None</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.6</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 3.6 - Sensitive Data Retention</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 3.6 - Sensitive Data Retention</Group>
                    <Group name="altcategorySTIG3.1">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.5">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.6">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.7">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.9">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.10">APP3620 CAT II</Group>
                    <Group name="altcategoryWASC24+2">Information Leakage</Group>
                    <Group name="altcategoryWASC2.00">Information Leakage (WASC-13)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">1.0</Group>
                    <Group name="Probability">1.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>29EE8849-3CB5-465D-A307-B204006318C2</RuleID>
                <VulnKingdom>Encapsulation</VulnKingdom>
                <VulnCategory>System Information Leak</VulnCategory>
                <VulnSubcategory>Internal</VulnSubcategory>
                <DefaultSeverity>3.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.system_information_leak_internal"/>
                <Sink>
                    <InArguments>0,1</InArguments>
                    <Conditional>
                        <And>
                            <Or>
                                <TaintFlagSet taintFlag="SYSTEMINFO"/>
                                <TaintFlagSet taintFlag="REGISTRY"/>
                                <TaintFlagSet taintFlag="ENVIRONMENT"/>
                            </Or>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_SYSTEM_INFORMATION_LEAK_INTERNAL"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>createTemp(Dir|File)</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-4 Information Flow Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-4 Information Flow Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-001312, CCI-002420</Group>
                    <Group name="altcategoryCWE">CWE ID 497</Group>
                    <Group name="altcategoryOWASPASVS4.0">8.3.2 Sensitive Private Data (L1 L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 14.3.3 Unintended Security Disclosure Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">None</Group>
                    <Group name="altcategoryOWASP2007">A6 Information Leakage and Improper Error Handling</Group>
                    <Group name="altcategoryOWASP2010">None</Group>
                    <Group name="altcategoryOWASP2013">None</Group>
                    <Group name="altcategoryOWASP2017">None</Group>
                    <Group name="altcategoryOWASP2021">A05 Security Misconfiguration</Group>
                    <Group name="altcategoryOWASPMobile2014">M2 Insecure Data Storage</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">[4] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252020">[7] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252021">[20] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">None</Group>
                    <Group name="altcategoryPCI1.1">None</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.6</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 3.6 - Sensitive Data Retention</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 3.6 - Sensitive Data Retention</Group>
                    <Group name="altcategorySTIG3.1">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.5">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.6">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.7">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.9">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.10">APP3620 CAT II</Group>
                    <Group name="altcategoryWASC24+2">Information Leakage</Group>
                    <Group name="altcategoryWASC2.00">Information Leakage (WASC-13)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">1.0</Group>
                    <Group name="Probability">1.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>33B6C5C4-FCE9-4769-B6C1-442B16596802</RuleID>
                <VulnKingdom>Encapsulation</VulnKingdom>
                <VulnCategory>System Information Leak</VulnCategory>
                <VulnSubcategory>Internal</VulnSubcategory>
                <DefaultSeverity>3.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.system_information_leak_internal"/>
                <Sink>
                    <InArguments>2</InArguments>
                    <Conditional>
                        <And>
                            <Or>
                                <TaintFlagSet taintFlag="SYSTEMINFO"/>
                                <TaintFlagSet taintFlag="REGISTRY"/>
                                <TaintFlagSet taintFlag="ENVIRONMENT"/>
                            </Or>
                            <TaintFlagSet taintFlag="TAINTED_PATH"/>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_SYSTEM_INFORMATION_LEAK_INTERNAL"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>createTemp(Dir|File)</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 82, CWE ID 83, CWE ID 87, CWE ID 692</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 116</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">2.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>4295E930-5DAE-4E5D-B859-8295077FD17D</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Poor Validation</VulnSubcategory>
                <DefaultSeverity>2.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.cross_site_scripting_poor_validation"/>
                <Sink primary="true">
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <And>
                                <TaintFlagSet taintFlag="XSS"/>
                                <TaintFlagSet taintFlag="POORVALIDATION"/>
                                <Not>
                                    <IsType argument="1">
                                    <NamespaceName>
                                    <Value>javax.servlet</Value>
                                    </NamespaceName>
                                    <ClassName>
                                    <Value>ServletOutputStream</Value>
                                    </ClassName>
                                    </IsType>
                                </Not>
                            </And>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_POOR_VALIDATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <Sink>
                    <InArguments>1</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="XSSSTREAM"/>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_POOR_VALIDATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>copyTo</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.InputStream</ParamType>
                        <ParamType>java.io.OutputStream</ParamType>
                    </Parameters>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 82, CWE ID 83, CWE ID 87, CWE ID 692</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 116</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">2.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>9F37C580-EC9B-4E0F-A08E-B8CBF2970B85</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Poor Validation</VulnSubcategory>
                <DefaultSeverity>2.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.cross_site_scripting_poor_validation"/>
                <Sink primary="true">
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <And>
                                <TaintFlagSet taintFlag="XSS"/>
                                <TaintFlagSet taintFlag="POORVALIDATION"/>
                                <Not>
                                    <IsType argument="1">
                                    <NamespaceName>
                                    <Value>javax.servlet.jsp</Value>
                                    </NamespaceName>
                                    <ClassName>
                                    <Value>JspWriter</Value>
                                    </ClassName>
                                    </IsType>
                                </Not>
                            </And>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_POOR_VALIDATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <Sink>
                    <InArguments>1</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="XSSSTREAM"/>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_POOR_VALIDATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>copyTo</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.Reader</ParamType>
                        <ParamType>java.io.Writer</ParamType>
                    </Parameters>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 79, CWE ID 80</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategorySANSTop252011">Insecure Interaction - CWE ID 079</Group>
                    <Group name="Accuracy">5.0</Group>
                    <Group name="Impact">5.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>66403823-388E-4C77-8EA8-06B2FA11471E</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Inter-Component Communication</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.cross_site_scripting_inter_component_communication"/>
                <Sink primary="true">
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <And>
                                <And>
                                    <TaintFlagSet taintFlag="XSS"/>
                                    <TaintFlagSet taintFlag="ICC"/>
                                </And>
                                <Not>
                                    <IsType argument="1">
                                    <NamespaceName>
                                    <Value>javax.servlet</Value>
                                    </NamespaceName>
                                    <ClassName>
                                    <Value>ServletOutputStream</Value>
                                    </ClassName>
                                    </IsType>
                                </Not>
                            </And>
                            <Not>
                                <TaintFlagSet taintFlag="POORVALIDATION"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_INTER_COMPONENT_COMMUNICATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <Sink>
                    <InArguments>1</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="XSSSTREAM"/>
                            <Not>
                                <TaintFlagSet taintFlag="POORVALIDATION"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_INTER_COMPONENT_COMMUNICATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>copyTo</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.InputStream</ParamType>
                        <ParamType>java.io.OutputStream</ParamType>
                    </Parameters>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 79, CWE ID 80</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategorySANSTop252011">Insecure Interaction - CWE ID 079</Group>
                    <Group name="Accuracy">5.0</Group>
                    <Group name="Impact">5.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>65634EBD-40E8-4628-9B5F-DAC2939301F4</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Inter-Component Communication</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.cross_site_scripting_inter_component_communication"/>
                <Sink primary="true">
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <And>
                                <And>
                                    <TaintFlagSet taintFlag="XSS"/>
                                    <TaintFlagSet taintFlag="ICC"/>
                                </And>
                                <Not>
                                    <IsType argument="1">
                                    <NamespaceName>
                                    <Value>javax.servlet.jsp</Value>
                                    </NamespaceName>
                                    <ClassName>
                                    <Value>JspWriter</Value>
                                    </ClassName>
                                    </IsType>
                                </Not>
                            </And>
                            <Not>
                                <TaintFlagSet taintFlag="POORVALIDATION"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_INTER_COMPONENT_COMMUNICATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <Sink>
                    <InArguments>1</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="XSSSTREAM"/>
                            <Not>
                                <TaintFlagSet taintFlag="POORVALIDATION"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_INTER_COMPONENT_COMMUNICATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>copyTo</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.Reader</ParamType>
                        <ParamType>java.io.Writer</ParamType>
                    </Parameters>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 79, CWE ID 80</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategorySANSTop252011">Insecure Interaction - CWE ID 079</Group>
                    <Group name="Accuracy">5.0</Group>
                    <Group name="Impact">5.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>E7B6A182-E644-49C2-BAC8-4EE618FD89C4</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Reflected</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.cross_site_scripting_reflected"/>
                <Sink primary="true">
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <And>
                                <And>
                                    <TaintFlagSet taintFlag="XSS"/>
                                    <Or>
                                    <TaintFlagSet taintFlag="WEB"/>
                                    <TaintFlagSet taintFlag="GUI_FORM"/>
                                    <TaintFlagSet taintFlag="FORM"/>
                                    <TaintFlagSet taintFlag="NETWORK"/>
                                    </Or>
                                </And>
                                <Not>
                                    <IsType argument="1">
                                    <NamespaceName>
                                    <Value>javax.servlet</Value>
                                    </NamespaceName>
                                    <ClassName>
                                    <Value>ServletOutputStream</Value>
                                    </ClassName>
                                    </IsType>
                                </Not>
                            </And>
                            <Not>
                                <TaintFlagSet taintFlag="POORVALIDATION"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_REFLECTED"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <Sink>
                    <InArguments>1</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="XSSSTREAM"/>
                            <Not>
                                <TaintFlagSet taintFlag="POORVALIDATION"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_REFLECTED"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>copyTo</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.InputStream</ParamType>
                        <ParamType>java.io.OutputStream</ParamType>
                    </Parameters>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 79, CWE ID 80</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategorySANSTop252011">Insecure Interaction - CWE ID 079</Group>
                    <Group name="Accuracy">5.0</Group>
                    <Group name="Impact">5.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>EB8F50DF-132C-4430-97D1-05E42485F916</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Reflected</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.cross_site_scripting_reflected"/>
                <Sink primary="true">
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <And>
                                <And>
                                    <TaintFlagSet taintFlag="XSS"/>
                                    <Or>
                                    <TaintFlagSet taintFlag="WEB"/>
                                    <TaintFlagSet taintFlag="GUI_FORM"/>
                                    <TaintFlagSet taintFlag="FORM"/>
                                    <TaintFlagSet taintFlag="NETWORK"/>
                                    </Or>
                                </And>
                                <Not>
                                    <IsType argument="1">
                                    <NamespaceName>
                                    <Value>javax.servlet.jsp</Value>
                                    </NamespaceName>
                                    <ClassName>
                                    <Value>JspWriter</Value>
                                    </ClassName>
                                    </IsType>
                                </Not>
                            </And>
                            <Not>
                                <TaintFlagSet taintFlag="POORVALIDATION"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_REFLECTED"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <Sink>
                    <InArguments>1</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="XSSSTREAM"/>
                            <Not>
                                <TaintFlagSet taintFlag="POORVALIDATION"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_REFLECTED"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>copyTo</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.Reader</ParamType>
                        <ParamType>java.io.Writer</ParamType>
                    </Parameters>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 79, CWE ID 80</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategorySANSTop252011">Insecure Interaction - CWE ID 079</Group>
                    <Group name="Accuracy">5.0</Group>
                    <Group name="Impact">5.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>665145B1-9233-41C5-B11D-A26914E8970A</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Persistent</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.cross_site_scripting_persistent"/>
                <Sink primary="true">
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <And>
                                <And>
                                    <TaintFlagSet taintFlag="XSS"/>
                                    <Or>
                                    <TaintFlagSet taintFlag="DATABASE"/>
                                    <TaintFlagSet taintFlag="LDAP"/>
                                    <TaintFlagSet taintFlag="NAMING"/>
                                    <TaintFlagSet taintFlag="XML"/>
                                    <TaintFlagSet taintFlag="OPEN_XML"/>
                                    <TaintFlagSet taintFlag="JSON"/>
                                    <TaintFlagSet taintFlag="WEBSERVICE"/>
                                    </Or>
                                </And>
                                <Not>
                                    <IsType argument="1">
                                    <NamespaceName>
                                    <Value>javax.servlet</Value>
                                    </NamespaceName>
                                    <ClassName>
                                    <Value>ServletOutputStream</Value>
                                    </ClassName>
                                    </IsType>
                                </Not>
                            </And>
                            <Not>
                                <TaintFlagSet taintFlag="POORVALIDATION"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_PERSISTENT"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <Sink>
                    <InArguments>1</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="XSSSTREAM"/>
                            <Not>
                                <TaintFlagSet taintFlag="POORVALIDATION"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_PERSISTENT"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>copyTo</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.InputStream</ParamType>
                        <ParamType>java.io.OutputStream</ParamType>
                    </Parameters>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002490 CAT I, APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-001310, CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 79, CWE ID 80</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A4 Cross Site Scripting</Group>
                    <Group name="altcategoryOWASP2007">A1 Cross Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2010">A2 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2013">A3 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2017">A7 Cross-Site Scripting (XSS)</Group>
                    <Group name="altcategoryOWASP2021">A03 Injection</Group>
                    <Group name="altcategoryOWASPMobile2014">M7 Client Side Injection</Group>
                    <Group name="altcategorySANS2009">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategoryCWETop252019">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252020">[1] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252021">[2] CWE ID 079</Group>
                    <Group name="altcategoryCWETop252022">[2] CWE ID 079</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3580 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Cross-Site Scripting</Group>
                    <Group name="altcategoryWASC2.00">Cross-Site Scripting (WASC-08)</Group>
                    <Group name="altcategorySANS2010">Insecure Interaction - CWE ID 079</Group>
                    <Group name="altcategorySANSTop252011">Insecure Interaction - CWE ID 079</Group>
                    <Group name="Accuracy">5.0</Group>
                    <Group name="Impact">5.0</Group>
                    <Group name="Probability">5.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Complete</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">dev,medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>4B57FE84-4230-422C-86B3-59243C34BE52</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Cross-Site Scripting</VulnCategory>
                <VulnSubcategory>Persistent</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.cross_site_scripting_persistent"/>
                <Sink primary="true">
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <And>
                                <And>
                                    <TaintFlagSet taintFlag="XSS"/>
                                    <Or>
                                    <TaintFlagSet taintFlag="DATABASE"/>
                                    <TaintFlagSet taintFlag="LDAP"/>
                                    <TaintFlagSet taintFlag="NAMING"/>
                                    <TaintFlagSet taintFlag="XML"/>
                                    <TaintFlagSet taintFlag="OPEN_XML"/>
                                    <TaintFlagSet taintFlag="JSON"/>
                                    <TaintFlagSet taintFlag="WEBSERVICE"/>
                                    </Or>
                                </And>
                                <Not>
                                    <IsType argument="1">
                                    <NamespaceName>
                                    <Value>javax.servlet.jsp</Value>
                                    </NamespaceName>
                                    <ClassName>
                                    <Value>JspWriter</Value>
                                    </ClassName>
                                    </IsType>
                                </Not>
                            </And>
                            <Not>
                                <TaintFlagSet taintFlag="POORVALIDATION"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_PERSISTENT"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <Sink>
                    <InArguments>1</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="XSSSTREAM"/>
                            <Not>
                                <TaintFlagSet taintFlag="POORVALIDATION"/>
                            </Not>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_CROSS_SITE_SCRIPTING_PERSISTENT"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>copyTo</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.io.Reader</ParamType>
                        <ParamType>java.io.Writer</ParamType>
                    </Parameters>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="altcategoryGDPR">Privacy Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-4 Information Flow Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-4 Information Flow Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000169, CCI-000196, CCI-000197, CCI-001199, CCI-001312, CCI-001314</Group>
                    <Group name="altcategoryCWE">CWE ID 359</Group>
                    <Group name="altcategoryOWASPASVS4.0">2.2.1 General Authenticator Requirements (L1 L2 L3), 2.6.3 Look-up Secret Verifier Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.10.2 Service Authentication Requirements (L2 L3), 2.10.3 Service Authentication Requirements (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 6.2.1 Algorithms (L1 L2 L3), 8.2.1 Client-side Data Protection (L1 L2 L3), 8.2.2 Client-side Data Protection (L1 L2 L3), 8.3.6 Sensitive Private Data (L2 L3), 8.1.1 General Data Protection (L2 L3), 8.1.2 General Data Protection (L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.1 Malicious Code Search (L2 L3), 14.3.3 Unintended Security Disclosure Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">None</Group>
                    <Group name="altcategoryOWASP2007">A6 Information Leakage and Improper Error Handling</Group>
                    <Group name="altcategoryOWASP2010">None</Group>
                    <Group name="altcategoryOWASP2013">A6 Sensitive Data Exposure</Group>
                    <Group name="altcategoryOWASP2017">A3 Sensitive Data Exposure</Group>
                    <Group name="altcategoryOWASP2021">A02 Cryptographic Failures</Group>
                    <Group name="altcategoryOWASPMobile2014">M2 Insecure Data Storage</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">[4] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252020">[7] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252021">[20] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">None</Group>
                    <Group name="altcategoryPCI1.1">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 6.5.6, Requirement 8.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 6.5.5, Requirement 8.4</Group>
                    <Group name="altcategoryPCI3.0">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.1">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.2">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 3.3 - Sensitive Data Retention, Control Objective 6.1 - Sensitive Data Protection, Control Objective 7 - Use of Cryptography, Control Objective A.2.3 - Cardholder Data Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 3.3 - Sensitive Data Retention, Control Objective 6.1 - Sensitive Data Protection, Control Objective 7 - Use of Cryptography, Control Objective A.2.3 - Cardholder Data Protection, Control Objective B.2.5 - Terminal Software Design</Group>
                    <Group name="altcategorySTIG3.1">APP3210.1 CAT II, APP3310 CAT I, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Information Leakage</Group>
                    <Group name="altcategoryWASC2.00">Information Leakage (WASC-13)</Group>
                    <Group name="altcategorySANS2010">Porous Defenses - CWE ID 311</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 311</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.5</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">2.0</Group>
                    <Group name="audience">medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>A27F8147-8CA5-4A6F-8B73-9E2F101CBFF5</RuleID>
                <Script><![CDATA[
                if (!isAndroidApp()) {
                  rule.FunctionIdentifier.NamespaceName.Value = "FORTIFY_NON_EXISTANT";
                  rule.FunctionIdentifier.FunctionName.Pattern= "FORTIFY_NON_EXISTANT";
                }
            ]]></Script>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Privacy Violation</VulnCategory>
                <DefaultSeverity>3.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.privacy_violation"/>
                <Sink>
                    <InArguments>0,1</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="PRIVATE"/>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_PRIVACY_VIOLATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>createTemp(Dir|File)</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="altcategoryGDPR">Privacy Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-4 Information Flow Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-4 Information Flow Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000169, CCI-000196, CCI-000197, CCI-001199, CCI-001312, CCI-001314</Group>
                    <Group name="altcategoryCWE">CWE ID 359</Group>
                    <Group name="altcategoryOWASPASVS4.0">2.2.1 General Authenticator Requirements (L1 L2 L3), 2.6.3 Look-up Secret Verifier Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.10.2 Service Authentication Requirements (L2 L3), 2.10.3 Service Authentication Requirements (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 6.2.1 Algorithms (L1 L2 L3), 8.2.1 Client-side Data Protection (L1 L2 L3), 8.2.2 Client-side Data Protection (L1 L2 L3), 8.3.6 Sensitive Private Data (L2 L3), 8.1.1 General Data Protection (L2 L3), 8.1.2 General Data Protection (L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.1 Malicious Code Search (L2 L3), 14.3.3 Unintended Security Disclosure Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">None</Group>
                    <Group name="altcategoryOWASP2007">A6 Information Leakage and Improper Error Handling</Group>
                    <Group name="altcategoryOWASP2010">None</Group>
                    <Group name="altcategoryOWASP2013">A6 Sensitive Data Exposure</Group>
                    <Group name="altcategoryOWASP2017">A3 Sensitive Data Exposure</Group>
                    <Group name="altcategoryOWASP2021">A02 Cryptographic Failures</Group>
                    <Group name="altcategoryOWASPMobile2014">M2 Insecure Data Storage</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">[4] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252020">[7] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252021">[20] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">None</Group>
                    <Group name="altcategoryPCI1.1">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 6.5.6, Requirement 8.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 6.5.5, Requirement 8.4</Group>
                    <Group name="altcategoryPCI3.0">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.1">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.2">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 3.3 - Sensitive Data Retention, Control Objective 6.1 - Sensitive Data Protection, Control Objective 7 - Use of Cryptography, Control Objective A.2.3 - Cardholder Data Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 3.3 - Sensitive Data Retention, Control Objective 6.1 - Sensitive Data Protection, Control Objective 7 - Use of Cryptography, Control Objective A.2.3 - Cardholder Data Protection, Control Objective B.2.5 - Terminal Software Design</Group>
                    <Group name="altcategorySTIG3.1">APP3210.1 CAT II, APP3310 CAT I, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Information Leakage</Group>
                    <Group name="altcategoryWASC2.00">Information Leakage (WASC-13)</Group>
                    <Group name="altcategorySANS2010">Porous Defenses - CWE ID 311</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 311</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.5</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">2.0</Group>
                    <Group name="audience">medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>FDB459F7-D09D-40EA-9B3A-A468902CF1DA</RuleID>
                <Script><![CDATA[
                if (!isAndroidApp()) {
                  rule.FunctionIdentifier.NamespaceName.Value = "FORTIFY_NON_EXISTANT";
                  rule.FunctionIdentifier.FunctionName.Pattern= "FORTIFY_NON_EXISTANT";
                }
            ]]></Script>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Privacy Violation</VulnCategory>
                <DefaultSeverity>3.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.privacy_violation"/>
                <Sink>
                    <InArguments>2</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="PRIVATE"/>
                            <TaintFlagSet taintFlag="TAINTED_PATH"/>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_PRIVACY_VIOLATION"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>createTemp(Dir|File)</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="altcategoryGDPR">Insufficient Data Protection</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SC-8 Transmission Confidentiality and Integrity (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SC-8 Transmission Confidentiality and Integrity</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-001620 CAT II, APSC-DV-001630 CAT II, APSC-DV-001810 CAT I, APSC-DV-002440 CAT I, APSC-DV-002450 CAT II, APSC-DV-002460 CAT II, APSC-DV-002470 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-001620 CAT II, APSC-DV-001630 CAT II, APSC-DV-001810 CAT I, APSC-DV-002440 CAT I, APSC-DV-002450 CAT II, APSC-DV-002460 CAT II, APSC-DV-002470 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-001620 CAT II, APSC-DV-001630 CAT II, APSC-DV-001810 CAT I, APSC-DV-002440 CAT I, APSC-DV-002450 CAT II, APSC-DV-002460 CAT II, APSC-DV-002470 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-001620 CAT II, APSC-DV-001630 CAT II, APSC-DV-001810 CAT I, APSC-DV-002440 CAT I, APSC-DV-002450 CAT II, APSC-DV-002460 CAT II, APSC-DV-002470 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-001620 CAT II, APSC-DV-001630 CAT II, APSC-DV-001810 CAT I, APSC-DV-002440 CAT I, APSC-DV-002450 CAT II, APSC-DV-002460 CAT II, APSC-DV-002470 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-001620 CAT II, APSC-DV-001630 CAT II, APSC-DV-001810 CAT I, APSC-DV-002440 CAT I, APSC-DV-002450 CAT II, APSC-DV-002460 CAT II, APSC-DV-002470 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-001620 CAT II, APSC-DV-001630 CAT II, APSC-DV-001810 CAT I, APSC-DV-002440 CAT I, APSC-DV-002450 CAT II, APSC-DV-002460 CAT II, APSC-DV-002470 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-001620 CAT II, APSC-DV-001630 CAT II, APSC-DV-001810 CAT I, APSC-DV-002440 CAT I, APSC-DV-002450 CAT II, APSC-DV-002460 CAT II, APSC-DV-002470 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-001620 CAT II, APSC-DV-001630 CAT II, APSC-DV-001810 CAT I, APSC-DV-002440 CAT I, APSC-DV-002450 CAT II, APSC-DV-002460 CAT II, APSC-DV-002470 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-001620 CAT II, APSC-DV-001630 CAT II, APSC-DV-001810 CAT I, APSC-DV-002440 CAT I, APSC-DV-002450 CAT II, APSC-DV-002460 CAT II, APSC-DV-002470 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-001620 CAT II, APSC-DV-001630 CAT II, APSC-DV-001810 CAT I, APSC-DV-002440 CAT I, APSC-DV-002450 CAT II, APSC-DV-002460 CAT II, APSC-DV-002470 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-001620 CAT II, APSC-DV-001630 CAT II, APSC-DV-001810 CAT I, APSC-DV-002440 CAT I, APSC-DV-002450 CAT II, APSC-DV-002460 CAT II, APSC-DV-002470 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000185, CCI-001941, CCI-001942, CCI-002418, CCI-002420, CCI-002421, CCI-002422</Group>
                    <Group name="altcategoryCWE">CWE ID 297</Group>
                    <Group name="altcategoryOWASPASVS4.0">2.6.3 Look-up Secret Verifier Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 6.2.1 Algorithms (L1 L2 L3), 9.2.1 Server Communications Security Requirements (L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A3 Broken Authentication and Session Management</Group>
                    <Group name="altcategoryOWASP2007">A9 Insecure Communications</Group>
                    <Group name="altcategoryOWASP2010">A9 Insufficient Transport Layer Protection</Group>
                    <Group name="altcategoryOWASP2013">A6 Sensitive Data Exposure</Group>
                    <Group name="altcategoryOWASP2017">A3 Sensitive Data Exposure</Group>
                    <Group name="altcategoryOWASP2021">A07 Identification and Authentication Failures</Group>
                    <Group name="altcategoryOWASPMobile2014">M3 Insufficient Transport Layer Protection</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">[13] CWE ID 287, [25] CWE ID 295</Group>
                    <Group name="altcategoryCWETop252020">[14] CWE ID 287</Group>
                    <Group name="altcategoryCWETop252021">[14] CWE ID 287</Group>
                    <Group name="altcategoryCWETop252022">[14] CWE ID 287</Group>
                    <Group name="altcategoryFISMA">CM, SC</Group>
                    <Group name="altcategoryPCI1.1">Requirement 4.1, Requirement 6.5.10</Group>
                    <Group name="altcategoryPCI1.2">Requirement 4.1, Requirement 6.3.1.4, Requirement 6.5.9</Group>
                    <Group name="altcategoryPCI2.0">Requirement 4.1, Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI3.0">Requirement 4.1, Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI3.1">Requirement 4.1, Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI3.2">Requirement 4.1, Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 4.1, Requirement 6.5.4</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 3.3 - Sensitive Data Retention, Control Objective 6.2 - Sensitive Data Protection, Control Objective 7.1 - Use of Cryptography</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 3.3 - Sensitive Data Retention, Control Objective 6.2 - Sensitive Data Protection, Control Objective 7.1 - Use of Cryptography, Control Objective B.2.3 - Terminal Software Design</Group>
                    <Group name="altcategorySTIG3.1">APP3250.1 CAT I, APP3250.2 CAT I, APP3250.3 CAT II, APP3250.4 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3250.1 CAT I, APP3250.2 CAT I, APP3250.3 CAT II, APP3250.4 CAT II</Group>
                    <Group name="altcategorySTIG3.5">APP3250.1 CAT I, APP3250.2 CAT I, APP3250.3 CAT II, APP3250.4 CAT II</Group>
                    <Group name="altcategorySTIG3.6">APP3250.1 CAT I, APP3250.2 CAT I, APP3250.3 CAT II, APP3250.4 CAT II</Group>
                    <Group name="altcategorySTIG3.7">APP3250.1 CAT I, APP3250.2 CAT I, APP3250.3 CAT II, APP3250.4 CAT II</Group>
                    <Group name="altcategorySTIG3.9">APP3250.1 CAT I, APP3250.2 CAT I, APP3250.3 CAT II, APP3250.4 CAT II</Group>
                    <Group name="altcategorySTIG3.10">APP3250.1 CAT I, APP3250.2 CAT I, APP3250.3 CAT II, APP3250.4 CAT II</Group>
                    <Group name="altcategoryWASC24+2">Information Leakage</Group>
                    <Group name="altcategoryWASC2.00">Insufficient Transport Layer Protection (WASC-04)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">3.0</Group>
                    <Group name="Probability">4.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">medium,broad,fod</Group>
                </MetaInfo>
                <RuleID>511F50A6-E5E6-4188-8D2A-D951F12CAADE</RuleID>
                <Script><![CDATA[
                
                    if (isAndroidApp() && usesCertificatePinning()) {
                      rule.FunctionIdentifier.NamespaceName.Value = "FORTIFY_NON_EXISTANT";
                      rule.FunctionIdentifier.FunctionName.Pattern = "FORTIFY_NON_EXISTANT";
                    }
                
            ]]></Script>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Insecure SSL</VulnCategory>
                <VulnSubcategory>Overly Broad Certificate Trust</VulnSubcategory>
                <DefaultSeverity>3.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.insecure_ssl_overly_broad_certificate_trust"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <TaintFlagSet taintFlag="SSL_URL"/>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_INSECURE_SSL_OVERLY_BROAD_CERTIFICATE_TRUST"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>read(Bytes|Text)</Pattern>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.net.URL</ParamType>
                    </Parameters>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="altcategoryGDPR">Access Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-10 Information Input Validation (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-10 Information Input Validation</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002560 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-002754</Group>
                    <Group name="altcategoryCWE">CWE ID 918</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.2.6 Sanitization and Sandboxing Requirements (L1 L2 L3), 12.6.1 SSRF Protection Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A1 Unvalidated Input</Group>
                    <Group name="altcategoryOWASP2007">A4 Insecure Direct Object Reference</Group>
                    <Group name="altcategoryOWASP2010">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2013">A4 Insecure Direct Object References</Group>
                    <Group name="altcategoryOWASP2017">A5 Broken Access Control</Group>
                    <Group name="altcategoryOWASP2021">A10 Server-Side Request Forgery</Group>
                    <Group name="altcategoryOWASPMobile2014">M5 Poor Authorization and Authentication</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">[24] CWE ID 918</Group>
                    <Group name="altcategoryCWETop252022">[21] CWE ID 918</Group>
                    <Group name="altcategoryFISMA">SI</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.1</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.1, Requirement 6.5.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 4.2 - Critical Asset Protection, Control Objective 5.4 - Authentication and Access Control</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 4.2 - Critical Asset Protection, Control Objective 5.4 - Authentication and Access Control, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.5">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.6">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.7">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.9">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategorySTIG3.10">APP3510 CAT I, APP3600 CAT II</Group>
                    <Group name="altcategoryWASC24+2">None</Group>
                    <Group name="altcategoryWASC2.00">Abuse of Functionality (WASC-42)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">3.0</Group>
                    <Group name="Probability">3.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">medium,broad,fod</Group>
                </MetaInfo>
                <RuleID>257E6FA0-4E5D-4936-BC7C-F302313363EE</RuleID>
                <VulnKingdom>Input Validation and Representation</VulnKingdom>
                <VulnCategory>Server-Side Request Forgery</VulnCategory>
                <DefaultSeverity>3.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.server_side_request_forgery"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <And>
                            <Or>
                                <TaintFlagSet taintFlag="WEB"/>
                                <TaintFlagSet taintFlag="GUI_FORM"/>
                                <TaintFlagSet taintFlag="FORM"/>
                                <TaintFlagSet taintFlag="NETWORK"/>
                                <TaintFlagSet taintFlag="WEBSERVICE"/>
                            </Or>
                            <Not>
                                <TaintFlagSet taintFlag="VALIDATED_SERVER_SIDE_REQUEST_FORGERY"/>
                            </Not>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>read(Bytes|Text)</Pattern>
                    </FunctionName>
                    <Parameters>
                        <ParamType>java.net.URL</ParamType>
                    </Parameters>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Random</Group>
                    <Group name="altcategoryGDPR">Insufficient Data Protection</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SC-13 Cryptographic Protection (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SC-13 Cryptographic Protection</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-002450</Group>
                    <Group name="altcategoryCWE">CWE ID 335</Group>
                    <Group name="altcategoryOWASPASVS4.0">2.3.1 Authenticator Lifecycle Requirements (L1 L2 L3), 2.6.2 Look-up Secret Verifier Requirements (L2 L3), 6.3.3 Random Values (L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A8 Insecure Storage</Group>
                    <Group name="altcategoryOWASP2007">A8 Insecure Cryptographic Storage</Group>
                    <Group name="altcategoryOWASP2010">A7 Insecure Cryptographic Storage</Group>
                    <Group name="altcategoryOWASP2013">None</Group>
                    <Group name="altcategoryOWASP2017">None</Group>
                    <Group name="altcategoryOWASP2021">A02 Cryptographic Failures</Group>
                    <Group name="altcategoryOWASPMobile2014">M6 Broken Cryptography</Group>
                    <Group name="altcategorySANS2009">Porous Defenses - CWE ID 330</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">MP</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.3, Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.3</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.3</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.3</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.3</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.3</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 7.3 - Use of Cryptography</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 7.3 - Use of Cryptography, Control Objective B.2.4 - Terminal Software Design</Group>
                    <Group name="altcategorySTIG3.1">APP3150.2 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3150.2 CAT II</Group>
                    <Group name="altcategorySTIG3.5">APP3150.2 CAT II</Group>
                    <Group name="altcategorySTIG3.6">APP3150.2 CAT II</Group>
                    <Group name="altcategorySTIG3.7">APP3150.2 CAT II</Group>
                    <Group name="altcategorySTIG3.9">APP3150.2 CAT II</Group>
                    <Group name="altcategorySTIG3.10">APP3150.2 CAT II</Group>
                    <Group name="altcategoryWASC24+2">None</Group>
                    <Group name="altcategoryWASC2.00">None</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">2.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">1.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>70151718-7616-4893-A40A-DF2C4893AD1A</RuleID>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Insecure Randomness</VulnCategory>
                <VulnSubcategory>User-Controlled Seed</VulnSubcategory>
                <DefaultSeverity>3.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.insecure_randomness_user_controlled_seed"/>
                <Sink>
                    <InArguments>0</InArguments>
                    <Conditional>
                        <Not>
                            <TaintFlagSet taintFlag="VALIDATED_INSECURE_RANDOMNESS_USER_CONTROLLED_SEED"/>
                        </Not>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.random</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>Random</Value>
                    </FunctionName>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowSinkRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Reflect</Group>
                    <Group name="altcategoryGDPR">None</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">None</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">None</Group>
                    <Group name="altcategorySTIG4.1">None</Group>
                    <Group name="altcategorySTIG4.2">None</Group>
                    <Group name="altcategorySTIG4.3">None</Group>
                    <Group name="altcategorySTIG4.4">None</Group>
                    <Group name="altcategorySTIG4.5">None</Group>
                    <Group name="altcategorySTIG4.6">None</Group>
                    <Group name="altcategorySTIG4.7">None</Group>
                    <Group name="altcategorySTIG4.8">None</Group>
                    <Group name="altcategorySTIG4.9">None</Group>
                    <Group name="altcategorySTIG4.10">None</Group>
                    <Group name="altcategorySTIG4.11">None</Group>
                    <Group name="altcategorySTIG5.1">None</Group>
                    <Group name="altcategoryDISACCI2">None</Group>
                    <Group name="altcategoryCWE">CWE ID 486</Group>
                    <Group name="altcategoryOWASPASVS4.0">None</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">None</Group>
                    <Group name="altcategoryOWASP2007">None</Group>
                    <Group name="altcategoryOWASP2010">None</Group>
                    <Group name="altcategoryOWASP2013">None</Group>
                    <Group name="altcategoryOWASP2017">None</Group>
                    <Group name="altcategoryOWASP2021">None</Group>
                    <Group name="altcategoryOWASPMobile2014">None</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">None</Group>
                    <Group name="altcategoryPCI1.1">None</Group>
                    <Group name="altcategoryPCI1.2">None</Group>
                    <Group name="altcategoryPCI2.0">None</Group>
                    <Group name="altcategoryPCI3.0">None</Group>
                    <Group name="altcategoryPCI3.1">None</Group>
                    <Group name="altcategoryPCI3.2">None</Group>
                    <Group name="altcategoryPCI3.2.1">None</Group>
                    <Group name="altcategoryPCISSF1.0">None</Group>
                    <Group name="altcategoryPCISSF1.1">None</Group>
                    <Group name="altcategorySTIG3.1">None</Group>
                    <Group name="altcategorySTIG3.4">None</Group>
                    <Group name="altcategorySTIG3.5">None</Group>
                    <Group name="altcategorySTIG3.6">None</Group>
                    <Group name="altcategorySTIG3.7">None</Group>
                    <Group name="altcategorySTIG3.9">None</Group>
                    <Group name="altcategorySTIG3.10">None</Group>
                    <Group name="altcategoryWASC24+2">None</Group>
                    <Group name="altcategoryWASC2.00">None</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">3.0</Group>
                    <Group name="Impact">2.0</Group>
                    <Group name="Probability">1.0</Group>
                    <Group name="PrimaryAudience">quality</Group>
                    <Group name="ImpactBias">Normal</Group>
                    <Group name="ConfidentialityImpact">None</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>EE671292-503A-4268-BA49-19331CF9C5E2</RuleID>
                <Notes><![CDATA[
                Sink for:

                java.lang.Class.getName() == "kotlin.string"
                "kotlin.string" == java.lang.Class.getName()

                kotlin.reflect.KClass.(simple|qualified)Name == "constantstring"
                "constantstring" == kotlin.reflect.KClass.(simple|qualified)Name
            ]]></Notes>
                <VulnKingdom>Code Quality</VulnKingdom>
                <VulnCategory>Code Correctness</VulnCategory>
                <VulnSubcategory>Erroneous Class Compare</VulnSubcategory>
                <DefaultSeverity>3.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.code_correctness_erroneous_class_compare"/>
                <Sink>
                    <InArguments>this,0</InArguments>
                    <Conditional>
                        <And>
                            <And>
                                <TaintFlagSet taintFlag="CLASS_NAME"/>
                                <Not>
                                    <TaintFlagSet taintFlag="VALIDATED_CODE_CORRECTNESS_ERRONEOUS_CLASS_COMPARE"/>
                                </Not>
                            </And>
                            <Or>
                                <And>
                                    <IsConstant argument="this"/>
                                    <ConstantMatches argument="this" mode="value">
                                    <Pattern>^[A-z_$][A-z0-9_\$]+\.[A-z0-9\._\$]+$</Pattern>
                                    </ConstantMatches>
                                </And>
                                <And>
                                    <IsConstant argument="0"/>
                                    <ConstantMatches argument="0" mode="value">
                                    <Pattern>^[A-z_$][A-z0-9_\$]+\.[A-z0-9\._\$]+$</Pattern>
                                    </ConstantMatches>
                                </And>
                            </Or>
                        </And>
                    </Conditional>
                </Sink>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>String</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>equals</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
            </DataflowSinkRule>
            <DataflowCleanseRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>D43846ED-311A-4119-AEE4-6C9D86B8E73D</RuleID>
                <Notes><![CDATA[
                clears the collection/map, so removes all taint.
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Pattern>Mutable(Collection|Map)</Pattern>
                    </ClassName>
                    <FunctionName>
                        <Value>clear</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
                <OutArguments>this</OutArguments>
            </DataflowCleanseRule>
            <DataflowCleanseRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>6024DB9C-C802-4EF4-BCCA-DB9C23BFD6D5</RuleID>
                <Notes><![CDATA[
                kotlin.text's
                StringBuilder.clear(): StringBuilder

                clears the stringbuilder and returns it. 
                ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.text</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>clear</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <OutArguments>0,return</OutArguments>
            </DataflowCleanseRule>
            <SemanticRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-4 Information Flow Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-4 Information Flow Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-001312, CCI-001314, CCI-002420</Group>
                    <Group name="altcategoryCWE">CWE ID 497</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.4 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.5 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 8.3.2 Sensitive Private Data (L1 L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 14.3.1 Unintended Security Disclosure Requirements (L1 L2 L3), 14.3.2 Unintended Security Disclosure Requirements (L1 L2 L3), 14.3.3 Unintended Security Disclosure Requirements (L1 L2 L3), 14.2.2 Dependency (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">None</Group>
                    <Group name="altcategoryOWASP2007">A6 Information Leakage and Improper Error Handling</Group>
                    <Group name="altcategoryOWASP2010">None</Group>
                    <Group name="altcategoryOWASP2013">None</Group>
                    <Group name="altcategoryOWASP2017">None</Group>
                    <Group name="altcategoryOWASP2021">None</Group>
                    <Group name="altcategoryOWASPMobile2014">M2 Insecure Data Storage</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">[4] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252020">[7] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252021">[20] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">None</Group>
                    <Group name="altcategoryPCI1.1">None</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.6</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 3.6 - Sensitive Data Retention</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 3.6 - Sensitive Data Retention</Group>
                    <Group name="altcategorySTIG3.1">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.5">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.6">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.7">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.9">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.10">APP3620 CAT II</Group>
                    <Group name="altcategoryWASC24+2">Information Leakage</Group>
                    <Group name="altcategoryWASC2.00">Information Leakage (WASC-13)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">2.0</Group>
                    <Group name="Probability">1.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>98A63F12-A538-4393-AB4F-5F455C54BD84</RuleID>
                <VulnKingdom>Encapsulation</VulnKingdom>
                <VulnCategory>System Information Leak</VulnCategory>
                <DefaultSeverity>3.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.system_information_leak"/>
                <Type>default</Type>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>printStackTrace</Value>
                    </FunctionName>
                </FunctionIdentifier>
            </SemanticRule>
            <SemanticRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="altcategoryGDPR">None</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-11 Error Handling (P2)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-11 Error Handling</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002580 CAT II, APSC-DV-003235 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002580 CAT II, APSC-DV-003235 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002580 CAT II, APSC-DV-003235 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002580 CAT II, APSC-DV-003235 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002580 CAT II, APSC-DV-003235 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002580 CAT II, APSC-DV-003235 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002580 CAT II, APSC-DV-003235 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002580 CAT II, APSC-DV-003235 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002580 CAT II, APSC-DV-003235 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002580 CAT II, APSC-DV-003235 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002580 CAT II, APSC-DV-003235 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002580 CAT II, APSC-DV-003235 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-001314, CCI-003272</Group>
                    <Group name="altcategoryCWE">CWE ID 252, CWE ID 754</Group>
                    <Group name="altcategoryOWASPASVS4.0">11.1.7 Business Logic Security Requirements (L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">Rule 17.7</Group>
                    <Group name="altcategoryMISRAC++2008">Rule 0-1-7</Group>
                    <Group name="altcategoryOWASP2004">A7 Improper Error Handling</Group>
                    <Group name="altcategoryOWASP2007">A6 Information Leakage and Improper Error Handling</Group>
                    <Group name="altcategoryOWASP2010">None</Group>
                    <Group name="altcategoryOWASP2013">None</Group>
                    <Group name="altcategoryOWASP2017">None</Group>
                    <Group name="altcategoryOWASP2021">None</Group>
                    <Group name="altcategoryOWASPMobile2014">None</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">None</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.2, Requirement 6.5.6</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 3.6 - Sensitive Data Retention</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 3.6 - Sensitive Data Retention, Control Objective B.3.2 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3120 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3120 CAT II</Group>
                    <Group name="altcategorySTIG3.5">APP3120 CAT II</Group>
                    <Group name="altcategorySTIG3.6">APP3120 CAT II</Group>
                    <Group name="altcategorySTIG3.7">APP3120 CAT II</Group>
                    <Group name="altcategorySTIG3.9">APP3120 CAT II</Group>
                    <Group name="altcategorySTIG3.10">APP3120 CAT II</Group>
                    <Group name="altcategoryWASC24+2">None</Group>
                    <Group name="altcategoryWASC2.00">None</Group>
                    <Group name="altcategorySANS2010">Risky Resource Management - CWE ID 754</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">2.0</Group>
                    <Group name="Probability">1.0</Group>
                    <Group name="PrimaryAudience">quality</Group>
                    <Group name="ImpactBias">Normal</Group>
                    <Group name="ConfidentialityImpact">None</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>FA0A40F8-E2F8-46CB-AF09-35A999D2D50E</RuleID>
                <VulnKingdom>API Abuse</VulnKingdom>
                <VulnCategory>Unchecked Return Value</VulnCategory>
                <DefaultSeverity>3.0</DefaultSeverity>
                <Description ref="desc.semantic.kotlin.unchecked_return_value"/>
                <Type>uncheckedReturnValue</Type>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.io</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>endsWith|startsWith|copyRecursively|deleteRecursively|isRooted</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
            </SemanticRule>
            <SemanticRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Random</Group>
                    <Group name="altcategoryGDPR">Insufficient Data Protection</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SC-13 Cryptographic Protection (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SC-13 Cryptographic Protection</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-002450</Group>
                    <Group name="altcategoryCWE">CWE ID 336</Group>
                    <Group name="altcategoryOWASPASVS4.0">2.3.1 Authenticator Lifecycle Requirements (L1 L2 L3), 2.6.2 Look-up Secret Verifier Requirements (L2 L3), 6.3.3 Random Values (L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A8 Insecure Storage</Group>
                    <Group name="altcategoryOWASP2007">A8 Insecure Cryptographic Storage</Group>
                    <Group name="altcategoryOWASP2010">A7 Insecure Cryptographic Storage</Group>
                    <Group name="altcategoryOWASP2013">None</Group>
                    <Group name="altcategoryOWASP2017">None</Group>
                    <Group name="altcategoryOWASP2021">A02 Cryptographic Failures</Group>
                    <Group name="altcategoryOWASPMobile2014">M6 Broken Cryptography</Group>
                    <Group name="altcategorySANS2009">Porous Defenses - CWE ID 330</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">MP</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.3, Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.3</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.3</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.3</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.3</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.3</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 7.3 - Use of Cryptography</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 7.3 - Use of Cryptography, Control Objective B.2.4 - Terminal Software Design</Group>
                    <Group name="altcategorySTIG3.1">APP3150.2 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3150.2 CAT II</Group>
                    <Group name="altcategorySTIG3.5">APP3150.2 CAT II</Group>
                    <Group name="altcategorySTIG3.6">APP3150.2 CAT II</Group>
                    <Group name="altcategorySTIG3.7">APP3150.2 CAT II</Group>
                    <Group name="altcategorySTIG3.9">APP3150.2 CAT II</Group>
                    <Group name="altcategorySTIG3.10">APP3150.2 CAT II</Group>
                    <Group name="altcategoryWASC24+2">None</Group>
                    <Group name="altcategoryWASC2.00">None</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">2.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">1.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>D4B2A6E2-6D95-44A4-9428-3ABC9EABE264</RuleID>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Insecure Randomness</VulnCategory>
                <VulnSubcategory>Hardcoded Seed</VulnSubcategory>
                <DefaultSeverity>2.0</DefaultSeverity>
                <Description ref="desc.semantic.kotlin.insecure_randomness_hardcoded_seed"/>
                <Type>default</Type>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.random</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>Random</Value>
                    </FunctionName>
                </FunctionIdentifier>
                <Conditional>
                    <IsConstant argument="0"/>
                </Conditional>
            </SemanticRule>
            <SemanticRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Random</Group>
                    <Group name="altcategoryGDPR">Insufficient Data Protection</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SC-13 Cryptographic Protection (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SC-13 Cryptographic Protection</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-002450</Group>
                    <Group name="altcategoryCWE">CWE ID 338</Group>
                    <Group name="altcategoryOWASPASVS4.0">2.3.1 Authenticator Lifecycle Requirements (L1 L2 L3), 2.6.2 Look-up Secret Verifier Requirements (L2 L3), 3.2.2 Session Binding Requirements (L1 L2 L3), 3.2.4 Session Binding Requirements (L2 L3), 6.3.1 Random Values (L2 L3), 6.3.2 Random Values (L2 L3), 6.3.3 Random Values (L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A8 Insecure Storage</Group>
                    <Group name="altcategoryOWASP2007">A8 Insecure Cryptographic Storage</Group>
                    <Group name="altcategoryOWASP2010">A7 Insecure Cryptographic Storage</Group>
                    <Group name="altcategoryOWASP2013">None</Group>
                    <Group name="altcategoryOWASP2017">None</Group>
                    <Group name="altcategoryOWASP2021">A02 Cryptographic Failures</Group>
                    <Group name="altcategoryOWASPMobile2014">M6 Broken Cryptography</Group>
                    <Group name="altcategorySANS2009">Porous Defenses - CWE ID 330</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">MP</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.3, Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.3</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.3</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.3</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.3</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.3</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 7.3 - Use of Cryptography</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 7.3 - Use of Cryptography, Control Objective B.2.4 - Terminal Software Design</Group>
                    <Group name="altcategorySTIG3.1">APP3150.2 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3150.2 CAT II</Group>
                    <Group name="altcategorySTIG3.5">APP3150.2 CAT II</Group>
                    <Group name="altcategorySTIG3.6">APP3150.2 CAT II</Group>
                    <Group name="altcategorySTIG3.7">APP3150.2 CAT II</Group>
                    <Group name="altcategorySTIG3.9">APP3150.2 CAT II</Group>
                    <Group name="altcategorySTIG3.10">APP3150.2 CAT II</Group>
                    <Group name="altcategoryWASC24+2">None</Group>
                    <Group name="altcategoryWASC2.00">None</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">2.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">1.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>B1D5D8CD-BEC8-4E12-B71D-9690766D0633</RuleID>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Insecure Randomness</VulnCategory>
                <DefaultSeverity>2.0</DefaultSeverity>
                <Description ref="desc.semantic.kotlin.insecure_randomness"/>
                <Type>default</Type>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.random</Value>
                    </NamespaceName>
                    <ClassName>
                        <Pattern>Random(\.Default)?</Pattern>
                    </ClassName>
                    <FunctionName>
                        <Pattern>next.*</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
            </SemanticRule>
            <SemanticRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Random extensions</Group>
                    <Group name="altcategoryGDPR">Insufficient Data Protection</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SC-13 Cryptographic Protection (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SC-13 Cryptographic Protection</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002010 CAT II, APSC-DV-002050 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-002450</Group>
                    <Group name="altcategoryCWE">CWE ID 338</Group>
                    <Group name="altcategoryOWASPASVS4.0">2.3.1 Authenticator Lifecycle Requirements (L1 L2 L3), 2.6.2 Look-up Secret Verifier Requirements (L2 L3), 3.2.2 Session Binding Requirements (L1 L2 L3), 3.2.4 Session Binding Requirements (L2 L3), 6.3.1 Random Values (L2 L3), 6.3.2 Random Values (L2 L3), 6.3.3 Random Values (L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A8 Insecure Storage</Group>
                    <Group name="altcategoryOWASP2007">A8 Insecure Cryptographic Storage</Group>
                    <Group name="altcategoryOWASP2010">A7 Insecure Cryptographic Storage</Group>
                    <Group name="altcategoryOWASP2013">None</Group>
                    <Group name="altcategoryOWASP2017">None</Group>
                    <Group name="altcategoryOWASP2021">A02 Cryptographic Failures</Group>
                    <Group name="altcategoryOWASPMobile2014">M6 Broken Cryptography</Group>
                    <Group name="altcategorySANS2009">Porous Defenses - CWE ID 330</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">MP</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.3, Requirement 6.5.8</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.3</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.3</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.3</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.3</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.3</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 7.3 - Use of Cryptography</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 7.3 - Use of Cryptography, Control Objective B.2.4 - Terminal Software Design</Group>
                    <Group name="altcategorySTIG3.1">APP3150.2 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3150.2 CAT II</Group>
                    <Group name="altcategorySTIG3.5">APP3150.2 CAT II</Group>
                    <Group name="altcategorySTIG3.6">APP3150.2 CAT II</Group>
                    <Group name="altcategorySTIG3.7">APP3150.2 CAT II</Group>
                    <Group name="altcategorySTIG3.9">APP3150.2 CAT II</Group>
                    <Group name="altcategorySTIG3.10">APP3150.2 CAT II</Group>
                    <Group name="altcategoryWASC24+2">None</Group>
                    <Group name="altcategoryWASC2.00">None</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">2.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">1.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>D68EC735-803A-4C8F-A336-1B8E5C42EC75</RuleID>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Insecure Randomness</VulnCategory>
                <DefaultSeverity>2.0</DefaultSeverity>
                <Description ref="desc.semantic.kotlin.insecure_randomness"/>
                <Type>default</Type>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.random</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>next.*</Pattern>
                    </FunctionName>
                </FunctionIdentifier>
            </SemanticRule>
            <SemanticRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines</Group>
                    <Group name="altcategoryGDPR">None</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-11 Error Handling (P2)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-11 Error Handling</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002580 CAT II, APSC-DV-003235 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002580 CAT II, APSC-DV-003235 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002580 CAT II, APSC-DV-003235 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002580 CAT II, APSC-DV-003235 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002580 CAT II, APSC-DV-003235 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002580 CAT II, APSC-DV-003235 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002580 CAT II, APSC-DV-003235 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002580 CAT II, APSC-DV-003235 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002580 CAT II, APSC-DV-003235 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002580 CAT II, APSC-DV-003235 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002580 CAT II, APSC-DV-003235 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002580 CAT II, APSC-DV-003235 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-001314, CCI-003272</Group>
                    <Group name="altcategoryCWE">CWE ID 252, CWE ID 754</Group>
                    <Group name="altcategoryOWASPASVS4.0">11.1.7 Business Logic Security Requirements (L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">Rule 17.7</Group>
                    <Group name="altcategoryMISRAC++2008">Rule 0-1-7</Group>
                    <Group name="altcategoryOWASP2004">A7 Improper Error Handling</Group>
                    <Group name="altcategoryOWASP2007">A6 Information Leakage and Improper Error Handling</Group>
                    <Group name="altcategoryOWASP2010">None</Group>
                    <Group name="altcategoryOWASP2013">None</Group>
                    <Group name="altcategoryOWASP2017">None</Group>
                    <Group name="altcategoryOWASP2021">None</Group>
                    <Group name="altcategoryOWASPMobile2014">None</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">None</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.2, Requirement 6.5.6</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 3.6 - Sensitive Data Retention</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 3.6 - Sensitive Data Retention, Control Objective B.3.2 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3120 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3120 CAT II</Group>
                    <Group name="altcategorySTIG3.5">APP3120 CAT II</Group>
                    <Group name="altcategorySTIG3.6">APP3120 CAT II</Group>
                    <Group name="altcategorySTIG3.7">APP3120 CAT II</Group>
                    <Group name="altcategorySTIG3.9">APP3120 CAT II</Group>
                    <Group name="altcategorySTIG3.10">APP3120 CAT II</Group>
                    <Group name="altcategoryWASC24+2">None</Group>
                    <Group name="altcategoryWASC2.00">None</Group>
                    <Group name="altcategorySANS2010">Risky Resource Management - CWE ID 754</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">2.0</Group>
                    <Group name="Probability">1.0</Group>
                    <Group name="PrimaryAudience">quality</Group>
                    <Group name="ImpactBias">Normal</Group>
                    <Group name="ConfidentialityImpact">None</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>9C1ECCE1-D79B-44B0-B15F-8AAD26B024D1</RuleID>
                <VulnKingdom>API Abuse</VulnKingdom>
                <VulnCategory>Unchecked Return Value</VulnCategory>
                <DefaultSeverity>3.0</DefaultSeverity>
                <Description ref="desc.semantic.kotlin.unchecked_return_value"/>
                <Type>uncheckedReturnValue</Type>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines.sync</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Mutex</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>tryLock</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
            </SemanticRule>
            <SemanticRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines</Group>
                    <Group name="altcategoryGDPR">None</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-11 Error Handling (P2)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-11 Error Handling</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002580 CAT II, APSC-DV-003235 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002580 CAT II, APSC-DV-003235 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002580 CAT II, APSC-DV-003235 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002580 CAT II, APSC-DV-003235 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002580 CAT II, APSC-DV-003235 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002580 CAT II, APSC-DV-003235 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002580 CAT II, APSC-DV-003235 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002580 CAT II, APSC-DV-003235 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002580 CAT II, APSC-DV-003235 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002580 CAT II, APSC-DV-003235 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002580 CAT II, APSC-DV-003235 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002580 CAT II, APSC-DV-003235 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-001314, CCI-003272</Group>
                    <Group name="altcategoryCWE">CWE ID 252, CWE ID 754</Group>
                    <Group name="altcategoryOWASPASVS4.0">11.1.7 Business Logic Security Requirements (L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">Rule 17.7</Group>
                    <Group name="altcategoryMISRAC++2008">Rule 0-1-7</Group>
                    <Group name="altcategoryOWASP2004">A7 Improper Error Handling</Group>
                    <Group name="altcategoryOWASP2007">A6 Information Leakage and Improper Error Handling</Group>
                    <Group name="altcategoryOWASP2010">None</Group>
                    <Group name="altcategoryOWASP2013">None</Group>
                    <Group name="altcategoryOWASP2017">None</Group>
                    <Group name="altcategoryOWASP2021">None</Group>
                    <Group name="altcategoryOWASPMobile2014">None</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">None</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.2, Requirement 6.5.6</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 3.6 - Sensitive Data Retention</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 3.6 - Sensitive Data Retention, Control Objective B.3.2 - Terminal Software Attack Mitigation</Group>
                    <Group name="altcategorySTIG3.1">APP3120 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3120 CAT II</Group>
                    <Group name="altcategorySTIG3.5">APP3120 CAT II</Group>
                    <Group name="altcategorySTIG3.6">APP3120 CAT II</Group>
                    <Group name="altcategorySTIG3.7">APP3120 CAT II</Group>
                    <Group name="altcategorySTIG3.9">APP3120 CAT II</Group>
                    <Group name="altcategorySTIG3.10">APP3120 CAT II</Group>
                    <Group name="altcategoryWASC24+2">None</Group>
                    <Group name="altcategoryWASC2.00">None</Group>
                    <Group name="altcategorySANS2010">Risky Resource Management - CWE ID 754</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">2.0</Group>
                    <Group name="Probability">1.0</Group>
                    <Group name="PrimaryAudience">quality</Group>
                    <Group name="ImpactBias">Normal</Group>
                    <Group name="ConfidentialityImpact">None</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>6F395FA2-FE78-4271-9C82-479E250C123D</RuleID>
                <VulnKingdom>API Abuse</VulnKingdom>
                <VulnCategory>Unchecked Return Value</VulnCategory>
                <DefaultSeverity>3.0</DefaultSeverity>
                <Description ref="desc.semantic.kotlin.unchecked_return_value"/>
                <Type>uncheckedReturnValue</Type>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlinx.coroutines.sync</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Semaphore</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>tryAcquire</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                </FunctionIdentifier>
            </SemanticRule>
            <StructuralRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                    <Group name="Accuracy">4</Group>
                    <Group name="altcategoryGDPR">Insufficient Data Protection</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SC-28 Protection of Information at Rest (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SC-28 Protection of Information at Rest</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-000196, CCI-001199, CCI-002367, CCI-003109</Group>
                    <Group name="altcategoryCWE">CWE ID 259, CWE ID 798</Group>
                    <Group name="altcategoryOWASPASVS4.0">2.3.1 Authenticator Lifecycle Requirements (L1 L2 L3), 2.6.2 Look-up Secret Verifier Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.10.1 Service Authentication Requirements (L2 L3), 2.10.2 Service Authentication Requirements (L2 L3), 2.10.4 Service Authentication Requirements (L2 L3), 3.5.2 Token-based Session Management (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 6.4.1 Secret Management (L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.3 Malicious Code Search (L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A8 Insecure Storage</Group>
                    <Group name="altcategoryOWASP2007">A8 Insecure Cryptographic Storage</Group>
                    <Group name="altcategoryOWASP2010">A7 Insecure Cryptographic Storage</Group>
                    <Group name="altcategoryOWASP2013">A6 Sensitive Data Exposure</Group>
                    <Group name="altcategoryOWASP2017">A3 Sensitive Data Exposure</Group>
                    <Group name="altcategoryOWASP2021">A07 Identification and Authentication Failures</Group>
                    <Group name="altcategoryOWASPMobile2014">M2 Insecure Data Storage</Group>
                    <Group name="altcategorySANS2009">Porous Defenses - CWE ID 259</Group>
                    <Group name="altcategoryCWETop252019">[13] CWE ID 287, [19] CWE ID 798</Group>
                    <Group name="altcategoryCWETop252020">[14] CWE ID 287, [20] CWE ID 798</Group>
                    <Group name="altcategoryCWETop252021">[14] CWE ID 287, [16] CWE ID 798</Group>
                    <Group name="altcategoryCWETop252022">[14] CWE ID 287, [15] CWE ID 798</Group>
                    <Group name="altcategoryFISMA">IA</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.8, Requirement 8.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.3, Requirement 6.5.8, Requirement 8.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.3.1, Requirement 6.5.3, Requirement 8.4</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.3.1, Requirement 6.5.3, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.3.1, Requirement 6.5.3, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.3.1, Requirement 6.5.3, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.3.1, Requirement 6.5.3, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 5.3 - Authentication and Access Control, Control Objective 6.3 - Sensitive Data Protection, Control Objective 7 - Use of Cryptography</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 5.3 - Authentication and Access Control, Control Objective 6.3 - Sensitive Data Protection, Control Objective 7 - Use of Cryptography</Group>
                    <Group name="altcategorySTIG3.1">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Insufficient Authentication</Group>
                    <Group name="altcategoryWASC2.00">Insufficient Authentication (WASC-01)</Group>
                    <Group name="altcategorySANS2010">Porous Defenses - CWE ID 798</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 798</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">4.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">3.0</Group>
                    <Group name="audience">medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>0F9CC1EC-33CD-4D51-8BD7-2066257FF5C3</RuleID>
                <Notes><![CDATA[
                Equivalent to Java rule BE37E214-0AAC-4A07-98A4-4DB87BC94071
                but in kotlin contentEquals is an extension function.
            ]]></Notes>
                <Script><![CDATA[
                if (!isAndroidApp()) {
                    rule.Predicate= String("FunctionCall: function.name == \"FORTIFY_NON_EXISTANT\"");
                }
            ]]></Script>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Password Management</VulnCategory>
                <VulnSubcategory>Hardcoded Password</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.semantic.kotlin.password_management_hardcoded_password"/>
                <Predicate><![CDATA[
                FunctionCall call: 
                    call.function is [Function f: f.name == "contentEquals" and namespace.name == "kotlin.text"]
                    and (
                        (
                            /* extension function, so instance is arg0 */
                            call.arguments[0] is [VariableAccess val:
                                val.variable.name matches "(?i)token|pin"
                                and not val.variable.annotations contains [Annotation: type == T"com.fortify.annotations.FortifyPassword"]
                                and not val.variable.annotations contains [Annotation: type == T"com.fortify.annotations.FortifyNotPassword"]
                            ] 
                            and not call.arguments[1].constantValue.null and
                            not call.arguments[1].constantValue is [Null: ] and
                            not call.arguments[1].constantValue == ""
                        ) or (  
                            call.arguments[1] is [VariableAccess var:
                                var.variable.name matches "(?i)token|pin" 
                                and not var.variable.annotations contains [Annotation: type == T"com.fortify.annotations.FortifyPassword"]
                                and var.variable.type.definition.supers contains [Class: name == "kotlin.CharSequence" or name == "java.lang.StringBuffer"]
                                and not var.variable.annotations contains [Annotation: type == T"com.fortify.annotations.FortifyNotPassword"]
                            ] 
                            and not call.arguments[0].constantValue.null and
                            not call.arguments[0].constantValue is [Null:] and
                            not call.arguments[0].constantValue == ""
                        ) or (  
                            /* extension function, so instance is arg0 */
                            call.arguments[0] is [FieldAccess fal:
                                fal.field.name matches "(?i)token|pin" 
                                and not fal.field.annotations contains [Annotation: type == T"com.fortify.annotations.FortifyPassword"]
                                and not fal.field.annotations contains [Annotation: type == T"com.fortify.annotations.FortifyNotPassword"]
                            ] 
                            and not call.arguments[1].constantValue.null and
                            not call.arguments[1].constantValue is [Null: ] and
                            not call.arguments[1].constantValue == ""
                        ) or ( 
                            call.arguments[1] is [FieldAccess far:
                                far.field.name matches "(?i)token|pin"
                                and not far.field.annotations contains [Annotation: type == T"com.fortify.annotations.FortifyPassword"] 
                                and far.field.type.definition.supers contains [Class: name == "kotlin.CharSequence" or name == "java.lang.StringBuffer"]
                                and not far.field.annotations contains [Annotation: type == T"com.fortify.annotations.FortifyNotPassword"]
                            ] 
                            and not call.arguments[0].constantValue.null and
                            not call.arguments[0].constantValue is [Null:] and
                            not call.arguments[0].constantValue == ""
                        )
                    )
           ]]></Predicate>
            </StructuralRule>
            <StructuralRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                    <Group name="altcategoryGDPR">Insufficient Data Protection</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SC-28 Protection of Information at Rest (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SC-28 Protection of Information at Rest</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-000196, CCI-001199, CCI-002367, CCI-003109</Group>
                    <Group name="altcategoryCWE">CWE ID 259, CWE ID 798</Group>
                    <Group name="altcategoryOWASPASVS4.0">2.3.1 Authenticator Lifecycle Requirements (L1 L2 L3), 2.6.2 Look-up Secret Verifier Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.10.1 Service Authentication Requirements (L2 L3), 2.10.2 Service Authentication Requirements (L2 L3), 2.10.4 Service Authentication Requirements (L2 L3), 3.5.2 Token-based Session Management (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 6.4.1 Secret Management (L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.3 Malicious Code Search (L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A8 Insecure Storage</Group>
                    <Group name="altcategoryOWASP2007">A8 Insecure Cryptographic Storage</Group>
                    <Group name="altcategoryOWASP2010">A7 Insecure Cryptographic Storage</Group>
                    <Group name="altcategoryOWASP2013">A6 Sensitive Data Exposure</Group>
                    <Group name="altcategoryOWASP2017">A3 Sensitive Data Exposure</Group>
                    <Group name="altcategoryOWASP2021">A07 Identification and Authentication Failures</Group>
                    <Group name="altcategoryOWASPMobile2014">M2 Insecure Data Storage</Group>
                    <Group name="altcategorySANS2009">Porous Defenses - CWE ID 259</Group>
                    <Group name="altcategoryCWETop252019">[13] CWE ID 287, [19] CWE ID 798</Group>
                    <Group name="altcategoryCWETop252020">[14] CWE ID 287, [20] CWE ID 798</Group>
                    <Group name="altcategoryCWETop252021">[14] CWE ID 287, [16] CWE ID 798</Group>
                    <Group name="altcategoryCWETop252022">[14] CWE ID 287, [15] CWE ID 798</Group>
                    <Group name="altcategoryFISMA">IA</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.8, Requirement 8.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.3, Requirement 6.5.8, Requirement 8.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.3.1, Requirement 6.5.3, Requirement 8.4</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.3.1, Requirement 6.5.3, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.3.1, Requirement 6.5.3, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.3.1, Requirement 6.5.3, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.3.1, Requirement 6.5.3, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 5.3 - Authentication and Access Control, Control Objective 6.3 - Sensitive Data Protection, Control Objective 7 - Use of Cryptography</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 5.3 - Authentication and Access Control, Control Objective 6.3 - Sensitive Data Protection, Control Objective 7 - Use of Cryptography</Group>
                    <Group name="altcategorySTIG3.1">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Insufficient Authentication</Group>
                    <Group name="altcategoryWASC2.00">Insufficient Authentication (WASC-01)</Group>
                    <Group name="altcategorySANS2010">Porous Defenses - CWE ID 798</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 798</Group>
                    <Group name="Accuracy">3.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">4.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">3.0</Group>
                    <Group name="audience">broad,fod</Group>
                </MetaInfo>
                <RuleID>47AD7570-0D98-41B3-9B0D-EBE5AA830D8B</RuleID>
                <Notes><![CDATA[
                Equivalent to Java rule EBF17005-3D9D-4E79-8C20-EDC08F170908
                but in kotlin contentEquals is an extension function.
            ]]></Notes>
                <Script><![CDATA[
                if (!isAndroidApp()) {
                    rule.Predicate= String("FunctionCall: function.name == \"FORTIFY_NON_EXISTANT\"");
                }
            ]]></Script>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Password Management</VulnCategory>
                <VulnSubcategory>Hardcoded Password</VulnSubcategory>
                <DefaultSeverity>3.0</DefaultSeverity>
                <Description ref="desc.semantic.kotlin.password_management_hardcoded_password"/>
                <Predicate><![CDATA[
                FunctionCall call: 
                    call.function is [Function f: f.name == "contentEquals" and namespace.name == "kotlin.text"]
                    and ( 
                        (  
                            /* extension function, so instance is arg0 */
                            call.arguments[0] is [VariableAccess val: 
                                val.variable.name matches "(?i)(.*token$|.*pin$)"
                                and not val.variable.name matches "(?i)token|pin"
                                and not val.variable.annotations contains [Annotation:
                                    type == T"com.fortify.annotations.FortifyPassword" or
                                    type == T"com.fortify.annotations.FortifyNotPassword"
                                ]
                            ] 
                            and not call.arguments[1].constantValue.null and
                            not call.arguments[1].constantValue is [Null: ] and
                            not call.arguments[1].constantValue == ""
                        ) or (
                            call.arguments[1] is [VariableAccess var: 
                                var.variable.name matches "(?i)(.*token$|.*pin$)"
                                and not var.variable.name matches "(?i)token|pin"
                                and var.variable.type.definition.supers contains [Class: name == "kotlin.CharSequence" or name == "java.lang.StringBuffer"]
                                and not var.variable.annotations contains [Annotation:
                                    type == T"com.fortify.annotations.FortifyPassword" or
                                    type == T"com.fortify.annotations.FortifyNotPassword"
                                ]
                            ] 
                            and not call.arguments[0].constantValue.null and
                            not call.arguments[0].constantValue is [Null:] and
                            not call.arguments[0].constantValue == ""
                        ) or (  
                            /* extension function, so instance is arg0 */
                            call.arguments[0] is [FieldAccess fal: 
                                fal.field.name matches "(?i)(.*token$|.*pin$)"
                                and not fal.field.name matches "(?i)token|pin"
                                and not fal.field.annotations contains [Annotation:
                                    type == T"com.fortify.annotations.FortifyPassword" or
                                    type == T"com.fortify.annotations.FortifyNotPassword"
                                ]
                            ] 
                            and not call.arguments[1].constantValue.null and
                            not call.arguments[1].constantValue is [Null: ] and
                            not call.arguments[1].constantValue == ""
                        ) or ( 
                            call.arguments[1] is [FieldAccess far: 
                                far.field.name matches "(?i)(.*token$|.*pin$)" 
                                and not far.field.name matches "(?i)token|pin" 
                                and far.field.type.definition.supers contains [Class: name == "kotlin.CharSequence" or name == "java.lang.StringBuffer"]
                                and not far.field.annotations contains [Annotation:
                                    type == T"com.fortify.annotations.FortifyPassword" or
                                    type == T"com.fortify.annotations.FortifyNotPassword"
                                ] 
                            ]
                            and not call.arguments[0].constantValue.null and
                            not call.arguments[0].constantValue is [Null:] and
                            not call.arguments[0].constantValue == ""
                        )
                    )
           ]]></Predicate>
            </StructuralRule>
            <StructuralRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                    <Group name="Accuracy">4</Group>
                    <Group name="altcategoryGDPR">Insufficient Data Protection</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SC-28 Protection of Information at Rest (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SC-28 Protection of Information at Rest</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-000196, CCI-001199, CCI-002367, CCI-003109</Group>
                    <Group name="altcategoryCWE">CWE ID 259, CWE ID 798</Group>
                    <Group name="altcategoryOWASPASVS4.0">2.3.1 Authenticator Lifecycle Requirements (L1 L2 L3), 2.6.2 Look-up Secret Verifier Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.10.1 Service Authentication Requirements (L2 L3), 2.10.2 Service Authentication Requirements (L2 L3), 2.10.4 Service Authentication Requirements (L2 L3), 3.5.2 Token-based Session Management (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 6.4.1 Secret Management (L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.3 Malicious Code Search (L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A8 Insecure Storage</Group>
                    <Group name="altcategoryOWASP2007">A8 Insecure Cryptographic Storage</Group>
                    <Group name="altcategoryOWASP2010">A7 Insecure Cryptographic Storage</Group>
                    <Group name="altcategoryOWASP2013">A6 Sensitive Data Exposure</Group>
                    <Group name="altcategoryOWASP2017">A3 Sensitive Data Exposure</Group>
                    <Group name="altcategoryOWASP2021">A07 Identification and Authentication Failures</Group>
                    <Group name="altcategoryOWASPMobile2014">M2 Insecure Data Storage</Group>
                    <Group name="altcategorySANS2009">Porous Defenses - CWE ID 259</Group>
                    <Group name="altcategoryCWETop252019">[13] CWE ID 287, [19] CWE ID 798</Group>
                    <Group name="altcategoryCWETop252020">[14] CWE ID 287, [20] CWE ID 798</Group>
                    <Group name="altcategoryCWETop252021">[14] CWE ID 287, [16] CWE ID 798</Group>
                    <Group name="altcategoryCWETop252022">[14] CWE ID 287, [15] CWE ID 798</Group>
                    <Group name="altcategoryFISMA">IA</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.8, Requirement 8.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.3, Requirement 6.5.8, Requirement 8.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.3.1, Requirement 6.5.3, Requirement 8.4</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.3.1, Requirement 6.5.3, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.3.1, Requirement 6.5.3, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.3.1, Requirement 6.5.3, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.3.1, Requirement 6.5.3, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 5.3 - Authentication and Access Control, Control Objective 6.3 - Sensitive Data Protection, Control Objective 7 - Use of Cryptography</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 5.3 - Authentication and Access Control, Control Objective 6.3 - Sensitive Data Protection, Control Objective 7 - Use of Cryptography</Group>
                    <Group name="altcategorySTIG3.1">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Insufficient Authentication</Group>
                    <Group name="altcategoryWASC2.00">Insufficient Authentication (WASC-01)</Group>
                    <Group name="altcategorySANS2010">Porous Defenses - CWE ID 798</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 798</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">4.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">3.0</Group>
                    <Group name="audience">medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>58F550A6-D489-48D4-B7E1-BB6019C9E7B9</RuleID>
                <Notes><![CDATA[
                Equivalent to Java rule A17754A4-355D-414E-8094-E2C6DE5D89B5
                but in kotlin contentEquals is an extension function.
            ]]></Notes>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Password Management</VulnCategory>
                <VulnSubcategory>Hardcoded Password</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.semantic.kotlin.password_management_hardcoded_password"/>
                <Predicate><![CDATA[
                FunctionCall call: call.function is [Function f: f.name == "contentEquals" and namespace.name == "kotlin.text"] and
                                   ( (  call.arguments[0] is [VariableAccess val:
                                        (val.variable.name matches "(?i)pwd")
                                            and not (val.variable.annotations contains
                                                [Annotation: type == T"com.fortify.annotations.FortifyNotPassword"
                                                 or type == T"com.fortify.annotations.FortifyPassword"])] and
                                        not call.arguments[1].constantValue.null and
                                        not call.arguments[1].constantValue is [Null: ] and
                                        not call.arguments[1].constantValue == ""
                                        ) or
                                     (  call.arguments[1] is [VariableAccess var:
                                        (var.variable.name matches "(?i)pwd")
                                            and var.variable.type.definition.supers contains [Class: name == "kotlin.CharSequence" or name == "java.lang.StringBuffer"]
                                            and not (var.variable.annotations contains
                                                [Annotation: type == T"com.fortify.annotations.FortifyNotPassword"
                                                 or type == T"com.fortify.annotations.FortifyPassword"])] and
                                        not call.arguments[0].constantValue.null and
                                        not call.arguments[0].constantValue is [Null:] and
                                        not call.arguments[0].constantValue == ""
                                        ) or
                                     (  call.arguments[0] is [FieldAccess fal:
                                        (fal.field.name matches "(?i)pwd")
                                            and not (fal.field.annotations contains
                                                [Annotation: type == T"com.fortify.annotations.FortifyNotPassword"
                                                 or type == T"com.fortify.annotations.FortifyPassword"])] and
                                        not call.arguments[1].constantValue.null and
                                        not call.arguments[1].constantValue is [Null: ] and
                                        not call.arguments[1].constantValue == ""
                                        ) or
                                     ( call.arguments[1] is [FieldAccess far:
                                        (far.field.name matches "(?i)pwd")
                                        and far.field.type.definition.supers contains [Class: name == "kotlin.CharSequence" or name == "java.lang.StringBuffer"]
                                            and not (far.field.annotations contains
                                                [Annotation: type == T"com.fortify.annotations.FortifyNotPassword"
                                                 or type == T"com.fortify.annotations.FortifyPassword"])] and
                                        not call.arguments[0].constantValue.null and
                                        not call.arguments[0].constantValue is [Null:] and
                                        not call.arguments[0].constantValue == ""
                                        ))
           ]]></Predicate>
            </StructuralRule>
            <StructuralRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                    <Group name="altcategoryGDPR">Insufficient Data Protection</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SC-28 Protection of Information at Rest (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SC-28 Protection of Information at Rest</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-000196, CCI-001199, CCI-002367, CCI-003109</Group>
                    <Group name="altcategoryCWE">CWE ID 259, CWE ID 798</Group>
                    <Group name="altcategoryOWASPASVS4.0">2.3.1 Authenticator Lifecycle Requirements (L1 L2 L3), 2.6.2 Look-up Secret Verifier Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.10.1 Service Authentication Requirements (L2 L3), 2.10.2 Service Authentication Requirements (L2 L3), 2.10.4 Service Authentication Requirements (L2 L3), 3.5.2 Token-based Session Management (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 6.4.1 Secret Management (L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.3 Malicious Code Search (L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A8 Insecure Storage</Group>
                    <Group name="altcategoryOWASP2007">A8 Insecure Cryptographic Storage</Group>
                    <Group name="altcategoryOWASP2010">A7 Insecure Cryptographic Storage</Group>
                    <Group name="altcategoryOWASP2013">A6 Sensitive Data Exposure</Group>
                    <Group name="altcategoryOWASP2017">A3 Sensitive Data Exposure</Group>
                    <Group name="altcategoryOWASP2021">A07 Identification and Authentication Failures</Group>
                    <Group name="altcategoryOWASPMobile2014">M2 Insecure Data Storage</Group>
                    <Group name="altcategorySANS2009">Porous Defenses - CWE ID 259</Group>
                    <Group name="altcategoryCWETop252019">[13] CWE ID 287, [19] CWE ID 798</Group>
                    <Group name="altcategoryCWETop252020">[14] CWE ID 287, [20] CWE ID 798</Group>
                    <Group name="altcategoryCWETop252021">[14] CWE ID 287, [16] CWE ID 798</Group>
                    <Group name="altcategoryCWETop252022">[14] CWE ID 287, [15] CWE ID 798</Group>
                    <Group name="altcategoryFISMA">IA</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.8, Requirement 8.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.3, Requirement 6.5.8, Requirement 8.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.3.1, Requirement 6.5.3, Requirement 8.4</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.3.1, Requirement 6.5.3, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.3.1, Requirement 6.5.3, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.3.1, Requirement 6.5.3, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.3.1, Requirement 6.5.3, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 5.3 - Authentication and Access Control, Control Objective 6.3 - Sensitive Data Protection, Control Objective 7 - Use of Cryptography</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 5.3 - Authentication and Access Control, Control Objective 6.3 - Sensitive Data Protection, Control Objective 7 - Use of Cryptography</Group>
                    <Group name="altcategorySTIG3.1">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Insufficient Authentication</Group>
                    <Group name="altcategoryWASC2.00">Insufficient Authentication (WASC-01)</Group>
                    <Group name="altcategorySANS2010">Porous Defenses - CWE ID 798</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 798</Group>
                    <Group name="Accuracy">3.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">4.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">3.0</Group>
                    <Group name="audience">broad,fod</Group>
                </MetaInfo>
                <RuleID>E8871895-37D4-43B5-B830-7F283E295BE0</RuleID>
                <Notes><![CDATA[
                Equivalent to Java rule F5C892D5-C429-4B38-BDE6-AB04A5D1BAEF
                but in kotlin contentEquals is an extension function.
            ]]></Notes>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Password Management</VulnCategory>
                <VulnSubcategory>Hardcoded Password</VulnSubcategory>
                <DefaultSeverity>3.0</DefaultSeverity>
                <Description ref="desc.semantic.kotlin.password_management_hardcoded_password"/>
                <Predicate><![CDATA[
                FunctionCall call: call.function is [Function f: f.name == "contentEquals" and namespace.name == "kotlin.text"] and
                                   ( (  call.arguments[0] is [VariableAccess val: val.variable.name matches "(?i).*pwd.*"
                                            and not val.variable.name matches "(?i)pwd"
                                            and not (val.variable.annotations contains [Annotation:
                                                type == T"com.fortify.annotations.FortifyPassword" or
                                                type == T"com.fortify.annotations.FortifyNotPassword"])] and
                                        not call.arguments[1].constantValue.null and
                                        not call.arguments[1].constantValue is [Null: ] and
                                        not call.arguments[1].constantValue == ""
                                        ) or
                                     (  call.arguments[1] is [VariableAccess var: var.variable.name matches "(?i).*pwd.*"
                                            and not var.variable.name matches "(?i)pwd"
                                            and var.variable.type.definition.supers contains [Class: name == "kotlin.CharSequence" or name == "java.lang.StringBuffer"]
                                            and not (var.variable.annotations contains [Annotation:
                                                type == T"com.fortify.annotations.FortifyPassword" or
                                                type == T"com.fortify.annotations.FortifyNotPassword"])] and
                                        not call.arguments[0].constantValue.null and
                                        not call.arguments[0].constantValue is [Null:] and
                                        not call.arguments[0].constantValue == ""
                                        ) or
                                     (  call.arguments[0] is [FieldAccess fal: fal.field.name matches "(?i).*pwd.*" and
                                            not fal.field.name matches "(?i)pwd"
                                            and not (fal.field.annotations contains [Annotation:
                                                type == T"com.fortify.annotations.FortifyPassword" or
                                                type == T"com.fortify.annotations.FortifyNotPassword"])] and
                                        not call.arguments[1].constantValue.null and
                                        not call.arguments[1].constantValue is [Null: ] and
                                        not call.arguments[1].constantValue == ""
                                        ) or
                                     ( call.arguments[1] is [FieldAccess far: far.field.name matches "(?i).*pwd.*" and
                                            not far.field.name matches "(?i)pwd" and
                                         far.field.type.definition.supers contains [Class: name == "kotlin.CharSequence" or name == "java.lang.StringBuffer"]
                                            and not (far.field.annotations contains [Annotation:
                                                type == T"com.fortify.annotations.FortifyPassword" or
                                                type == T"com.fortify.annotations.FortifyNotPassword"])] and
                                        not call.arguments[0].constantValue.null and
                                        not call.arguments[0].constantValue is [Null:] and
                                        not call.arguments[0].constantValue == ""
                                        ))
           ]]></Predicate>
            </StructuralRule>
            <StructuralRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                    <Group name="Accuracy">4</Group>
                    <Group name="altcategoryGDPR">Insufficient Data Protection</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SC-28 Protection of Information at Rest (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SC-28 Protection of Information at Rest</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-000196, CCI-001199, CCI-002367, CCI-003109</Group>
                    <Group name="altcategoryCWE">CWE ID 259, CWE ID 798</Group>
                    <Group name="altcategoryOWASPASVS4.0">2.3.1 Authenticator Lifecycle Requirements (L1 L2 L3), 2.6.2 Look-up Secret Verifier Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.10.1 Service Authentication Requirements (L2 L3), 2.10.2 Service Authentication Requirements (L2 L3), 2.10.4 Service Authentication Requirements (L2 L3), 3.5.2 Token-based Session Management (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 6.4.1 Secret Management (L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.3 Malicious Code Search (L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A8 Insecure Storage</Group>
                    <Group name="altcategoryOWASP2007">A8 Insecure Cryptographic Storage</Group>
                    <Group name="altcategoryOWASP2010">A7 Insecure Cryptographic Storage</Group>
                    <Group name="altcategoryOWASP2013">A6 Sensitive Data Exposure</Group>
                    <Group name="altcategoryOWASP2017">A3 Sensitive Data Exposure</Group>
                    <Group name="altcategoryOWASP2021">A07 Identification and Authentication Failures</Group>
                    <Group name="altcategoryOWASPMobile2014">M2 Insecure Data Storage</Group>
                    <Group name="altcategorySANS2009">Porous Defenses - CWE ID 259</Group>
                    <Group name="altcategoryCWETop252019">[13] CWE ID 287, [19] CWE ID 798</Group>
                    <Group name="altcategoryCWETop252020">[14] CWE ID 287, [20] CWE ID 798</Group>
                    <Group name="altcategoryCWETop252021">[14] CWE ID 287, [16] CWE ID 798</Group>
                    <Group name="altcategoryCWETop252022">[14] CWE ID 287, [15] CWE ID 798</Group>
                    <Group name="altcategoryFISMA">IA</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.8, Requirement 8.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.3, Requirement 6.5.8, Requirement 8.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.3.1, Requirement 6.5.3, Requirement 8.4</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.3.1, Requirement 6.5.3, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.3.1, Requirement 6.5.3, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.3.1, Requirement 6.5.3, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.3.1, Requirement 6.5.3, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 5.3 - Authentication and Access Control, Control Objective 6.3 - Sensitive Data Protection, Control Objective 7 - Use of Cryptography</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 5.3 - Authentication and Access Control, Control Objective 6.3 - Sensitive Data Protection, Control Objective 7 - Use of Cryptography</Group>
                    <Group name="altcategorySTIG3.1">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Insufficient Authentication</Group>
                    <Group name="altcategoryWASC2.00">Insufficient Authentication (WASC-01)</Group>
                    <Group name="altcategorySANS2010">Porous Defenses - CWE ID 798</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 798</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">4.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">3.0</Group>
                    <Group name="audience">medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>A0BB7067-1955-4974-81FE-FFCF1118D163</RuleID>
                <Notes><![CDATA[
                Equivalent to Java rule F9D3C462-8D1E-4457-967F-9F082B973F88
                but in kotlin contentEquals is an extension function.
            ]]></Notes>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Password Management</VulnCategory>
                <VulnSubcategory>Hardcoded Password</VulnSubcategory>
                <DefaultSeverity>4.0</DefaultSeverity>
                <Description ref="desc.semantic.kotlin.password_management_hardcoded_password"/>
                <Predicate><![CDATA[
                FunctionCall call: call.function is [Function f: f.name == "contentEquals" and namespace.name == "kotlin.text"] and
                                   ( (  call.arguments[0] is [VariableAccess val:
                                        ((val.variable.name matches "(?i)pass(wd|word)") or
                                         (val.variable.annotations contains [Annotation: type == T"com.fortify.annotations.FortifyPassword"]))
                                            and not (val.variable.annotations contains
                                                [Annotation: type == T"com.fortify.annotations.FortifyNotPassword"])] and
                                        not call.arguments[1].constantValue.null and
                                        not call.arguments[1].constantValue is [Null: ] and
                                        not call.arguments[1].constantValue == ""
                                        ) or
                                     (  call.arguments[1] is [VariableAccess var:
                                        ((var.variable.name matches "(?i)pass(wd|word)") or
                                         (var.variable.annotations contains [Annotation: type == T"com.fortify.annotations.FortifyPassword"]))
                                            and var.variable.type.definition.supers contains [Class: name == "kotlin.CharSequence" or name == "java.lang.StringBuffer"]
                                            and not (var.variable.annotations contains
                                                [Annotation: type == T"com.fortify.annotations.FortifyNotPassword"])] and
                                        not call.arguments[0].constantValue.null and
                                        not call.arguments[0].constantValue is [Null:] and
                                        not call.arguments[0].constantValue == ""
                                        ) or
                                     (  call.arguments[0] is [FieldAccess fal:
                                        ((fal.field.name matches "(?i)pass(wd|word)") or
                                         (fal.field.annotations contains [Annotation: type == T"com.fortify.annotations.FortifyPassword"]))
                                            and not (fal.field.annotations contains
                                                [Annotation: type == T"com.fortify.annotations.FortifyNotPassword"])] and
                                        not call.arguments[1].constantValue.null and
                                        not call.arguments[1].constantValue is [Null: ] and
                                        not call.arguments[1].constantValue == ""
                                        ) or
                                     ( call.arguments[1] is [FieldAccess far:
                                        ((far.field.name matches "(?i)pass(wd|word)") or
                                         (far.field.annotations contains [Annotation: type == T"com.fortify.annotations.FortifyPassword"])) and
                                         far.field.type.definition.supers contains [Class: name == "kotlin.CharSequence" or name == "java.lang.StringBuffer"]
                                            and not (far.field.annotations contains
                                                [Annotation: type == T"com.fortify.annotations.FortifyNotPassword"])] and
                                        not call.arguments[0].constantValue.null and
                                        not call.arguments[0].constantValue is [Null:] and
                                        not call.arguments[0].constantValue == ""
                                        ))
           ]]></Predicate>
            </StructuralRule>
            <StructuralRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                    <Group name="altcategoryGDPR">Insufficient Data Protection</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SC-28 Protection of Information at Rest (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SC-28 Protection of Information at Rest</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I</Group>
                    <Group name="altcategoryDISACCI2">CCI-000196, CCI-001199, CCI-002367, CCI-003109</Group>
                    <Group name="altcategoryCWE">CWE ID 259, CWE ID 798</Group>
                    <Group name="altcategoryOWASPASVS4.0">2.3.1 Authenticator Lifecycle Requirements (L1 L2 L3), 2.6.2 Look-up Secret Verifier Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.10.1 Service Authentication Requirements (L2 L3), 2.10.2 Service Authentication Requirements (L2 L3), 2.10.4 Service Authentication Requirements (L2 L3), 3.5.2 Token-based Session Management (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 6.4.1 Secret Management (L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.3 Malicious Code Search (L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A8 Insecure Storage</Group>
                    <Group name="altcategoryOWASP2007">A8 Insecure Cryptographic Storage</Group>
                    <Group name="altcategoryOWASP2010">A7 Insecure Cryptographic Storage</Group>
                    <Group name="altcategoryOWASP2013">A6 Sensitive Data Exposure</Group>
                    <Group name="altcategoryOWASP2017">A3 Sensitive Data Exposure</Group>
                    <Group name="altcategoryOWASP2021">A07 Identification and Authentication Failures</Group>
                    <Group name="altcategoryOWASPMobile2014">M2 Insecure Data Storage</Group>
                    <Group name="altcategorySANS2009">Porous Defenses - CWE ID 259</Group>
                    <Group name="altcategoryCWETop252019">[13] CWE ID 287, [19] CWE ID 798</Group>
                    <Group name="altcategoryCWETop252020">[14] CWE ID 287, [20] CWE ID 798</Group>
                    <Group name="altcategoryCWETop252021">[14] CWE ID 287, [16] CWE ID 798</Group>
                    <Group name="altcategoryCWETop252022">[14] CWE ID 287, [15] CWE ID 798</Group>
                    <Group name="altcategoryFISMA">IA</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.8, Requirement 8.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.3, Requirement 6.5.8, Requirement 8.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.3.1, Requirement 6.5.3, Requirement 8.4</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.3.1, Requirement 6.5.3, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.3.1, Requirement 6.5.3, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.3.1, Requirement 6.5.3, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.3.1, Requirement 6.5.3, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 5.3 - Authentication and Access Control, Control Objective 6.3 - Sensitive Data Protection, Control Objective 7 - Use of Cryptography</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 5.3 - Authentication and Access Control, Control Objective 6.3 - Sensitive Data Protection, Control Objective 7 - Use of Cryptography</Group>
                    <Group name="altcategorySTIG3.1">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Insufficient Authentication</Group>
                    <Group name="altcategoryWASC2.00">Insufficient Authentication (WASC-01)</Group>
                    <Group name="altcategorySANS2010">Porous Defenses - CWE ID 798</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 798</Group>
                    <Group name="Accuracy">3.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">4.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Integrity</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">Complete</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">3.0</Group>
                    <Group name="audience">broad,fod</Group>
                </MetaInfo>
                <RuleID>5266FBF4-C3DF-472F-A4DF-AC7EDD685D05</RuleID>
                <Notes><![CDATA[
                Equivalent to Java rule C5FBCC67-8AAF-4ED2-B91E-E47B3FDDC0AE
                but in kotlin contentEquals is an extension function.
            ]]></Notes>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Password Management</VulnCategory>
                <VulnSubcategory>Hardcoded Password</VulnSubcategory>
                <DefaultSeverity>3.0</DefaultSeverity>
                <Description ref="desc.semantic.kotlin.password_management_hardcoded_password"/>
                <Predicate><![CDATA[
                FunctionCall call: call.function is [Function f: f.name == "contentEquals" and namespace.name == "kotlin.text"] and
                                   ( (  call.arguments[0] is [VariableAccess val: val.variable.name matches "(?i).*pass(wd|word).*"
                                            and not val.variable.name matches "(?i)pass(wd|word)"
                                            and not (val.variable.annotations contains [Annotation:
                                                type == T"com.fortify.annotations.FortifyPassword" or
                                                type == T"com.fortify.annotations.FortifyNotPassword"])] and
                                        not call.arguments[1].constantValue.null and
                                        not call.arguments[1].constantValue is [Null: ] and
                                        not call.arguments[1].constantValue == ""
                                        ) or
                                     (  call.arguments[1] is [VariableAccess var: var.variable.name matches "(?i).*pass(wd|word).*"
                                            and not var.variable.name matches "(?i)pass(wd|word)"
                                            and var.variable.type.definition.supers contains [Class: name == "kotlin.CharSequence" or name == "java.lang.StringBuffer"]
                                            and not (var.variable.annotations contains [Annotation:
                                                type == T"com.fortify.annotations.FortifyPassword" or
                                                type == T"com.fortify.annotations.FortifyNotPassword"])] and
                                        not call.arguments[0].constantValue.null and
                                        not call.arguments[0].constantValue is [Null:] and
                                        not call.arguments[0].constantValue == ""
                                        ) or
                                     (  call.arguments[0] is [FieldAccess fal: fal.field.name matches "(?i).*pass(wd|word).*" and
                                            not fal.field.name matches "(?i)pass(wd|word)"
                                            and not (fal.field.annotations contains [Annotation:
                                                type == T"com.fortify.annotations.FortifyPassword" or
                                                type == T"com.fortify.annotations.FortifyNotPassword"])] and
                                        not call.arguments[1].constantValue.null and
                                        not call.arguments[1].constantValue is [Null: ] and
                                        not call.arguments[1].constantValue == ""
                                        ) or
                                     ( call.arguments[1] is [FieldAccess far: far.field.name matches "(?i).*pass(wd|word).*" and
                                            not far.field.name matches "(?i)pass(wd|word)" and
                                         far.field.type.definition.supers contains [Class: name == "kotlin.CharSequence" or name == "java.lang.StringBuffer"]
                                            and not (far.field.annotations contains [Annotation:
                                                type == T"com.fortify.annotations.FortifyPassword" or
                                                type == T"com.fortify.annotations.FortifyNotPassword"])] and
                                        not call.arguments[0].constantValue.null and
                                        not call.arguments[0].constantValue is [Null:] and
                                        not call.arguments[0].constantValue == ""
                                        ))
           ]]></Predicate>
            </StructuralRule>
            <StructuralRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                    <Group name="altcategoryGDPR">None</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">SI-11 Error Handling (P2)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">SI-11 Error Handling</Group>
                    <Group name="altcategorySTIG4.1">None</Group>
                    <Group name="altcategorySTIG4.2">None</Group>
                    <Group name="altcategorySTIG4.3">None</Group>
                    <Group name="altcategorySTIG4.4">None</Group>
                    <Group name="altcategorySTIG4.5">None</Group>
                    <Group name="altcategorySTIG4.6">None</Group>
                    <Group name="altcategorySTIG4.7">None</Group>
                    <Group name="altcategorySTIG4.8">None</Group>
                    <Group name="altcategorySTIG4.9">None</Group>
                    <Group name="altcategorySTIG4.10">None</Group>
                    <Group name="altcategorySTIG4.11">None</Group>
                    <Group name="altcategorySTIG5.1">None</Group>
                    <Group name="altcategoryDISACCI2">None</Group>
                    <Group name="altcategoryCWE">CWE ID 398</Group>
                    <Group name="altcategoryOWASPASVS4.0">None</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">A7 Improper Error Handling</Group>
                    <Group name="altcategoryOWASP2007">A6 Information Leakage and Improper Error Handling</Group>
                    <Group name="altcategoryOWASP2010">None</Group>
                    <Group name="altcategoryOWASP2013">None</Group>
                    <Group name="altcategoryOWASP2017">None</Group>
                    <Group name="altcategoryOWASP2021">None</Group>
                    <Group name="altcategoryOWASPMobile2014">None</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">None</Group>
                    <Group name="altcategoryCWETop252020">None</Group>
                    <Group name="altcategoryCWETop252021">None</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">AU</Group>
                    <Group name="altcategoryPCI1.1">Requirement 6.5.7</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.3.1.2, Requirement 6.5.6</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 3.6 - Sensitive Data Retention</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 3.6 - Sensitive Data Retention</Group>
                    <Group name="altcategorySTIG3.1">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.5">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.6">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.7">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.9">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.10">APP3620 CAT II</Group>
                    <Group name="altcategoryWASC24+2">None</Group>
                    <Group name="altcategoryWASC2.00">None</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">5.0</Group>
                    <Group name="Impact">1.0</Group>
                    <Group name="Probability">1.0</Group>
                    <Group name="PrimaryAudience">quality</Group>
                    <Group name="ImpactBias">Normal</Group>
                    <Group name="ConfidentialityImpact">None</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>8697164C-DA2E-4BE9-80F6-C053BEA3A22E</RuleID>
                <Notes><![CDATA[
                This rule matches print/println calls that are not invoked from
                main() or a method that is reached by main(). The main() 
                conditions were added to reduce the noise of this code quality 
                rule.
            ]]></Notes>
                <VulnKingdom>Encapsulation</VulnKingdom>
                <VulnCategory>Poor Logging Practice</VulnCategory>
                <VulnSubcategory>Use of a System Output Stream</VulnSubcategory>
                <DefaultSeverity>3.0</DefaultSeverity>
                <Description ref="desc.structural.kotlin.poor_logging_practice_use_of_a_system_output_stream"/>
                <Predicate><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                    name matches "print(ln)?"
                    and namespace.name == "kotlin.io"
                ]
                /* Not accessed within main() function */
                and not fc.enclosingFunction is [Function: 
                    name == "main"
                    and returnType.name == "kotlin.Unit"
                ]
                /* Enclosing function is not called from main() function */
                and not fc.enclosingFunction reachedBy [Function:
                    name == "main"
                    and returnType.name == "kotlin.Unit"
                ]
            ]]></Predicate>
            </StructuralRule>
            <NonReturningRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin System</Group>
                </MetaInfo>
                <RuleID>762CB6E3-98F8-4B94-B6FC-B9EDAFF1FCDC</RuleID>
                <Notes><![CDATA[
                fun exitProcess(status: Int): Nothing

                Terminates the currently running process.
            ]]></Notes>
                <FunctionIdentifier>
                    <NamespaceName>
                        <Value>kotlin.system</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>exitProcess</Value>
                    </FunctionName>
                </FunctionIdentifier>
            </NonReturningRule>
            <MapRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                </MetaInfo>
                <RuleID>FE1B0A59-027D-4810-BDC8-97CAB5D1CF52</RuleID>
                <StoreFunction>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <ClassName>
                        <Pattern>(Boolean|Byte|Char|Double|Float|Int|Long|Short)?Array</Pattern>
                    </ClassName>
                    <FunctionName>
                        <Value>set</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="false"/>
                    <MapArg>this</MapArg>
                    <KeyArg>0</KeyArg>
                    <ValueArg>1</ValueArg>
                </StoreFunction>
                <RetrieveFunction>
                    <NamespaceName>
                        <Value>kotlin</Value>
                    </NamespaceName>
                    <ClassName>
                        <Pattern>(Boolean|Byte|Char|Double|Float|Int|Long|Short)?Array</Pattern>
                    </ClassName>
                    <FunctionName>
                        <Value>get</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="false"/>
                    <MapArg>this</MapArg>
                    <KeyArg>0</KeyArg>
                    <ValueArg>return</ValueArg>
                </RetrieveFunction>
            </MapRule>
            <MapRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>82F2E5B5-C10D-4862-B4E8-4E3ADAFA303D</RuleID>
                <StoreFunction>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>MutableList</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>set</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="false"/>
                    <MapArg>this</MapArg>
                    <KeyArg>0</KeyArg>
                    <ValueArg>1</ValueArg>
                </StoreFunction>
                <RetrieveFunction>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>List</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>get</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="false"/>
                    <MapArg>this</MapArg>
                    <KeyArg>0</KeyArg>
                    <ValueArg>return</ValueArg>
                </RetrieveFunction>
                <RetrieveFunction>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>MutableList</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>removeAt</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="false"/>
                    <MapArg>this</MapArg>
                    <KeyArg>0</KeyArg>
                    <ValueArg>return</ValueArg>
                </RetrieveFunction>
                <RetrieveFunction>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>getOrElse</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.collections.List</ParamType>
                        <WildCard min="2" max="2"/>
                    </Parameters>
                    <MapArg>0</MapArg>
                    <KeyArg>1</KeyArg>
                    <ValueArg>return</ValueArg>
                </RetrieveFunction>
            </MapRule>
            <MapRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>D8A84097-93FD-4FDA-B9A9-BE584CED7E0F</RuleID>
                <StoreFunction>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>MutableMap</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>put</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="false"/>
                    <MapArg>this</MapArg>
                    <KeyArg>0</KeyArg>
                    <ValueArg>1</ValueArg>
                </StoreFunction>
                <StoreFunction>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>set</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.collections.MutableMap</ParamType>
                        <WildCard min="2" max="2"/>
                    </Parameters>
                    <MapArg>0</MapArg>
                    <KeyArg>1</KeyArg>
                    <ValueArg>2</ValueArg>
                </StoreFunction>
                <RetrieveFunction>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Map</Value>
                    </ClassName>
                    <FunctionName>
                        <Pattern>get(OrDefault)?</Pattern>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="false"/>
                    <MapArg>this</MapArg>
                    <KeyArg>0</KeyArg>
                    <ValueArg>return</ValueArg>
                </RetrieveFunction>
                <RetrieveFunction>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>MutableMap</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>remove</Value>
                    </FunctionName>
                    <Parameters>
                        <WildCard min="1" max="1"/>
                    </Parameters>
                    <ApplyTo implements="true" overrides="true" extends="false"/>
                    <MapArg>this</MapArg>
                    <KeyArg>0</KeyArg>
                    <ValueArg>return</ValueArg>
                </RetrieveFunction>
                <RetrieveFunction>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>getValue</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.collections.Map</ParamType>
                        <WildCard min="1" max="1"/>
                    </Parameters>
                    <MapArg>0</MapArg>
                    <KeyArg>1</KeyArg>
                    <ValueArg>return</ValueArg>
                </RetrieveFunction>
                <RetrieveFunction>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Pattern>getOr(Else|Default)</Pattern>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.collections.Map</ParamType>
                        <WildCard min="2" max="2"/>
                    </Parameters>
                    <MapArg>0</MapArg>
                    <KeyArg>1</KeyArg>
                    <ValueArg>return</ValueArg>
                </RetrieveFunction>
                <RetrieveFunction>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>get</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.collections.Map</ParamType>
                        <WildCard min="2" max="2"/>
                    </Parameters>
                    <MapArg>0</MapArg>
                    <KeyArg>1</KeyArg>
                    <ValueArg>return</ValueArg>
                </RetrieveFunction>
                <RetrieveFunction>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <FunctionName>
                        <Value>getOrPut</Value>
                    </FunctionName>
                    <Parameters>
                        <ParamType>kotlin.collections.MutableMap</ParamType>
                        <WildCard min="2" max="2"/>
                    </Parameters>
                    <MapArg>0</MapArg>
                    <KeyArg>1</KeyArg>
                    <ValueArg>return</ValueArg>
                </RetrieveFunction>
                <KeysFunction>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Map</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>getKeys</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                    <MapArg>this</MapArg>
                    <KeysArg>return</KeysArg>
                </KeysFunction>
                <ValuesFunction>
                    <NamespaceName>
                        <Value>kotlin.collections</Value>
                    </NamespaceName>
                    <ClassName>
                        <Value>Map</Value>
                    </ClassName>
                    <FunctionName>
                        <Value>getValues</Value>
                    </FunctionName>
                    <ApplyTo implements="true" overrides="true" extends="true"/>
                    <MapArg>this</MapArg>
                    <ValuesArg>return</ValuesArg>
                </ValuesFunction>
            </MapRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                    <Group name="inputsource">Command Line Arguments</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>28F753EA-642E-4BA5-A556-F142A3320B1D</RuleID>
                <Notes><![CDATA[
                Generic entrypoint for main functions. 
                In Kotlin, defining a main function is as simple as defining an package-level main function. 

            ]]></Notes>
                <StructuralMatch><![CDATA[
                Function: name == "main"
                    and parameters[0] is [Variable v: v.type.name == "kotlin.Array"]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                TaintEntrypoint(v, {+ARGS})
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>6B72997A-6077-4926-8A5D-C2CF24394FD2</RuleID>
                <Notes><![CDATA[
                So the default iterator doesn't actually need to inherit from Iterable, all it needs is: 

                - have a function called iterator which has a return type containing:
                    - a next function
                    - a hasNext function returning a boolean
                
                iterators are used commonly in for (i in collection) { ... } loops

            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "iterator"
                        and returnType is [Type: 
                            definition.supers contains [Class: 
                                /* either an instance of Iterator */
                                name == "kotlin.collections.Iterator"
                                /* or at least has the functions associated with an Iterator type */
                                or (
                                    functions contains [Function: name == "next"]
                                    and functions contains [Function: 
                                        name == "hasNext"
                                        and returnType is [Type: name == "kotlin.Boolean"]
                                    ]
                                )
                            ]
                        ]
                    ]
                    and fc.instance is [Expression this: ]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                TaintTransfer(this, fc)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections</Group>
                </MetaInfo>
                <RuleID>EC6D8A82-D53D-4D0C-8C66-3C669B87D653</RuleID>
                <Notes><![CDATA[
                cleanse rule for iterators containing only numbers. 
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "iterator"
                        and returnType is [Type: 
                            definition.supers contains [Class: 
                                /* either an instance of an iterator containing only numbers */
                                name == "kotlin.collections.BooleanIterator"
                                or name == "kotlin.collections.DoubleIterator"
                                or name == "kotlin.collections.FloatIterator"
                                or name == "kotlin.collections.IntIterator"
                                or name == "kotlin.collections.UIntIterator"
                                or name == "kotlin.collections.LongIterator"
                                or name == "kotlin.collections.ULongIterator"
                                or name == "kotlin.collections.ShortIterator"
                                or name == "kotlin.collections.UShortIterator"
                            ]
                        ]
                    ]
                    and fc.instance is [Expression this: ]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                TaintCleanse(fc, {+NUMBER -XSS})
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                    <Group name="altcategoryGDPR">Indirect Access to Sensitive Data</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-4 Information Flow Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-4 Information Flow Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-001312, CCI-001314, CCI-002420</Group>
                    <Group name="altcategoryCWE">CWE ID 497</Group>
                    <Group name="altcategoryOWASPASVS4.0">5.3.4 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.5 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 8.3.2 Sensitive Private Data (L1 L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 14.3.1 Unintended Security Disclosure Requirements (L1 L2 L3), 14.3.2 Unintended Security Disclosure Requirements (L1 L2 L3), 14.3.3 Unintended Security Disclosure Requirements (L1 L2 L3), 14.2.2 Dependency (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">None</Group>
                    <Group name="altcategoryOWASP2007">A6 Information Leakage and Improper Error Handling</Group>
                    <Group name="altcategoryOWASP2010">None</Group>
                    <Group name="altcategoryOWASP2013">None</Group>
                    <Group name="altcategoryOWASP2017">None</Group>
                    <Group name="altcategoryOWASP2021">None</Group>
                    <Group name="altcategoryOWASPMobile2014">M2 Insecure Data Storage</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">[4] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252020">[7] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252021">[20] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">None</Group>
                    <Group name="altcategoryPCI1.1">None</Group>
                    <Group name="altcategoryPCI1.2">Requirement 6.5.6</Group>
                    <Group name="altcategoryPCI2.0">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.0">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.1">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.2">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 6.5.5</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 3.6 - Sensitive Data Retention</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 3.6 - Sensitive Data Retention</Group>
                    <Group name="altcategorySTIG3.1">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.4">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.5">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.6">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.7">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.9">APP3620 CAT II</Group>
                    <Group name="altcategorySTIG3.10">APP3620 CAT II</Group>
                    <Group name="altcategoryWASC24+2">Information Leakage</Group>
                    <Group name="altcategoryWASC2.00">Information Leakage (WASC-13)</Group>
                    <Group name="altcategorySANS2010">None</Group>
                    <Group name="altcategorySANSTop252011">None</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">2.0</Group>
                    <Group name="Probability">1.0</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">1.0</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>50FE3EDE-D9A0-4DE7-B3CC-50BE58E94434</RuleID>
                <Notes><![CDATA[
                Synonymous with java.lang.Throwable sink for same: 
                2B94F72B-9EF6-4260-A2F8-81B2BDA26B9F

                This rule also accounts for only flagging on a String, whereas the Java rule flags on any parameter. 
                Within the kotlin stdlib, all exceptions I have seen have constructors of the form: 

                constructor(message: String?)
                constructor(message: String?, cause: Throwable?)
                constructor(cause: Throwable?)

                Here we only really want to flag on the String. 
                If we come across different variants where the message is in a different argument, 
                they will need to be handled separately. 

                Characterization rule due to defect 304101
            ]]></Notes>
                <VulnKingdom>Encapsulation</VulnKingdom>
                <VulnCategory>System Information Leak</VulnCategory>
                <DefaultSeverity>3.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.system_information_leak"/>
                <StructuralMatch><![CDATA[
                FunctionCall fc: function is [Function: 
                        constructor
                        and enclosingClass.supers contains [Class: name == "kotlin.Throwable"]
                    ]
                    and arguments[0] is [Expression arg: 
                        arg.possibleTypes contains [Type: name == "kotlin.String"]
                    ]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                TaintSink(arg, [(SYSTEMINFO || REGISTRY || ENVIRONMENT) && !EXCEPTIONINFO && !VALIDATED_SYSTEM_INFORMATION_LEAK])
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                    <Group name="altcategoryGDPR">Privacy Violation</Group>
                    <Group name="altcategoryNISTSP800-53Rev.4">AC-4 Information Flow Enforcement (P1)</Group>
                    <Group name="altcategoryNISTSP800-53Rev.5">AC-4 Information Flow Enforcement</Group>
                    <Group name="altcategorySTIG4.1">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.2">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.3">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.4">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.5">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.6">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.7">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.8">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.9">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.10">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG4.11">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategorySTIG5.1">APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II</Group>
                    <Group name="altcategoryDISACCI2">CCI-000169, CCI-000196, CCI-000197, CCI-001199, CCI-001312, CCI-001314</Group>
                    <Group name="altcategoryCWE">CWE ID 359</Group>
                    <Group name="altcategoryOWASPASVS4.0">2.2.1 General Authenticator Requirements (L1 L2 L3), 2.6.3 Look-up Secret Verifier Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.10.2 Service Authentication Requirements (L2 L3), 2.10.3 Service Authentication Requirements (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 6.2.1 Algorithms (L1 L2 L3), 8.2.1 Client-side Data Protection (L1 L2 L3), 8.2.2 Client-side Data Protection (L1 L2 L3), 8.3.6 Sensitive Private Data (L2 L3), 8.1.1 General Data Protection (L2 L3), 8.1.2 General Data Protection (L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.1 Malicious Code Search (L2 L3), 14.3.3 Unintended Security Disclosure Requirements (L1 L2 L3)</Group>
                    <Group name="altcategoryMISRAC2012">None</Group>
                    <Group name="altcategoryMISRAC++2008">None</Group>
                    <Group name="altcategoryOWASP2004">None</Group>
                    <Group name="altcategoryOWASP2007">A6 Information Leakage and Improper Error Handling</Group>
                    <Group name="altcategoryOWASP2010">None</Group>
                    <Group name="altcategoryOWASP2013">A6 Sensitive Data Exposure</Group>
                    <Group name="altcategoryOWASP2017">A3 Sensitive Data Exposure</Group>
                    <Group name="altcategoryOWASP2021">A02 Cryptographic Failures</Group>
                    <Group name="altcategoryOWASPMobile2014">M2 Insecure Data Storage</Group>
                    <Group name="altcategorySANS2009">None</Group>
                    <Group name="altcategoryCWETop252019">[4] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252020">[7] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252021">[20] CWE ID 200</Group>
                    <Group name="altcategoryCWETop252022">None</Group>
                    <Group name="altcategoryFISMA">None</Group>
                    <Group name="altcategoryPCI1.1">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.4</Group>
                    <Group name="altcategoryPCI1.2">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 6.5.6, Requirement 8.4</Group>
                    <Group name="altcategoryPCI2.0">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 6.5.5, Requirement 8.4</Group>
                    <Group name="altcategoryPCI3.0">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.1">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.2">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCI3.2.1">Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1</Group>
                    <Group name="altcategoryPCISSF1.0">Control Objective 3.3 - Sensitive Data Retention, Control Objective 6.1 - Sensitive Data Protection, Control Objective 7 - Use of Cryptography, Control Objective A.2.3 - Cardholder Data Protection</Group>
                    <Group name="altcategoryPCISSF1.1">Control Objective 3.3 - Sensitive Data Retention, Control Objective 6.1 - Sensitive Data Protection, Control Objective 7 - Use of Cryptography, Control Objective A.2.3 - Cardholder Data Protection, Control Objective B.2.5 - Terminal Software Design</Group>
                    <Group name="altcategorySTIG3.1">APP3210.1 CAT II, APP3310 CAT I, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.4">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.5">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.6">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.7">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.9">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategorySTIG3.10">APP3210.1 CAT II, APP3340 CAT I</Group>
                    <Group name="altcategoryWASC24+2">Information Leakage</Group>
                    <Group name="altcategoryWASC2.00">Information Leakage (WASC-13)</Group>
                    <Group name="altcategorySANS2010">Porous Defenses - CWE ID 311</Group>
                    <Group name="altcategorySANSTop252011">Porous Defenses - CWE ID 311</Group>
                    <Group name="Accuracy">4.0</Group>
                    <Group name="Impact">4.0</Group>
                    <Group name="Probability">3.5</Group>
                    <Group name="PrimaryAudience">security</Group>
                    <Group name="ImpactBias">Confidentiality</Group>
                    <Group name="ConfidentialityImpact">Partial</Group>
                    <Group name="IntegrityImpact">None</Group>
                    <Group name="AvailabilityImpact">None</Group>
                    <Group name="RemediationEffort">2.0</Group>
                    <Group name="audience">medium,broad,fod,targeted</Group>
                </MetaInfo>
                <RuleID>EA41F359-3EF3-45C7-AA0E-77F2FF37C29B</RuleID>
                <Notes><![CDATA[
                Synonymous with java.lang.Throwable sink for same: 
                10951BF4-F239-4F1D-8ADB-B12DE560960F

                This rule also accounts for only flagging on a String, whereas the Java rule flags on any parameter. 
                Within the kotlin stdlib, all exceptions I have seen have constructors of the form: 

                constructor(message: String?)
                constructor(message: String?, cause: Throwable?)
                constructor(cause: Throwable?)

                Here we only really want to flag on the String. 
                If we come across different variants where the message is in a different argument, 
                they will need to be handled separately. 

                Characterization rule due to defect 304101
            ]]></Notes>
                <VulnKingdom>Security Features</VulnKingdom>
                <VulnCategory>Privacy Violation</VulnCategory>
                <DefaultSeverity>5.0</DefaultSeverity>
                <Description ref="desc.dataflow.kotlin.privacy_violation"/>
                <StructuralMatch><![CDATA[
                FunctionCall fc: function is [Function: 
                        constructor
                        and enclosingClass.supers contains [Class: name == "kotlin.Throwable"]
                    ]
                    and arguments[0] is [Expression arg: 
                        arg.possibleTypes contains [Type: name == "kotlin.String"]
                    ]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                TaintSink(arg, [PRIVATE && !VALIDATED_PRIVACY_VIOLATION])
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>E22955F3-9C56-4681-8822-A1AB0E2B5C10</RuleID>
                <Notes><![CDATA[
                Specifically trying to match getOrElse() extension functions on array. 
                Do NOT want to match on Map<K, V>.getOrElse() or List<T>.getOrElse(), as these will be handled within a MapRule. 
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "getOrElse"
                        and namespace.name == "kotlin.collections"
                    ]
                    and fc.arguments[0] is [Expression this: possibleTypes contains [Type: 
                        definition.supers contains [Class: 
                            name matches "kotlin\..*Array"
                        ]
                    ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                TaintTransfer(this, fc)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>13562708-B0C0-40D0-BE58-EE6C3C7B4D66</RuleID>
                <Notes><![CDATA[
                kotlin.collections.random variants: 

                fun <T> Array<out T>.random(): T
                fun <T> Array<out T>.random(random: Random): T
                    
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name matches "random(OrNull)?"
                        and namespace.name == "kotlin.collections"
                        and not returnType is [Type: 
                            definition.supers contains [Class: 
                                /* when returning a number or boolean, should have +NUMBER */
                                name == "kotlin.Number" or name == "kotlin.Boolean"
                            ]
                        ]
                    ]
                    and arguments[0] is [Expression arg: ]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                TaintTransfer(arg, fc)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>41EA2333-EBEF-4139-8A6A-38C43469628B</RuleID>
                <Notes><![CDATA[
                kotlin.collections.random variants such as: 

                fun IntArray.random(): Int
                fun LongArray.random(): Long
                fun FloatArray.random(): Float
                fun DoubleArray.random(): Double
                fun BooleanArray.random(): Boolean
                    
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name matches "random(OrNull)?"
                        and namespace.name == "kotlin.collections"
                        and returnType is [Type: 
                            definition.supers contains [Class: 
                                /* when returning a number or boolean, should have +NUMBER */
                                name == "kotlin.Number" or name == "kotlin.Boolean"
                            ]
                        ]
                    ]
                    and arguments[0] is [Expression arg: ]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                TaintTransfer(arg, fc, {+NUMBER -XSS})
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>98D159BD-C59B-417F-8E57-FE4813263EF0</RuleID>
                <Notes><![CDATA[
                kotlin Collections extension function "average" for number arrays
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "average"
                        and (
                            namespace.name == "kotlin.collections"
                            or namespace.name == "kotlin.sequences"
                        )
                    ]
                    /* double check is kotlin extension function */
                    and arguments[0] is [Expression arg: 
                        possibleTypes contains [Type: name matches "kotlin\..*"]
                    ]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                TaintTransfer(arg, fc, {+NUMBER -XSS} )
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>8AC161E4-5D38-4395-8B17-D80032A790A9</RuleID>
                <Notes><![CDATA[
                kotlin.collections.fill variant: 
                
                fun <T> MutableList<T>.fill(value: T)
                
                Needs transfer from value -> MutableList, 
                but this should also inherently cleanse the 
                original mutable list, as it's overwritten entirely. 

                Passthrough handled by A670D535-D1CD-4C18-B2A8-023B7C6E803C
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "fill"
                        and namespace.name == "kotlin.collections"
                        and parameterTypes[0] is [Type: name == "kotlin.collections.MutableList"]
                    ]
                    and fc.arguments[0] is [Expression arg: ]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                TaintCleanse(arg)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>DAEF5DE0-A761-440C-847D-1E0B3C1329C6</RuleID>
                <Notes><![CDATA[
                kotlin.collections.joinTo:

                fun <T, A : Appendable> Array<out T>.joinTo(
                    buffer: A,
                    separator: CharSequence = ", ",
                    prefix: CharSequence = "",
                    postfix: CharSequence = "",
                    limit: Int = -1,
                    truncated: CharSequence = "...",
                    transform: ((T) -> CharSequence)? = null
                ): A

                The transform lambda is optional. 
                If the default (null), then there should be a passthrough,
                otherwise we need a CallsReturns rule on the transform function.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "joinTo"
                        and namespace.name matches "kotlin\.(collections|sequences)"
                    ]
                    and arguments[0] is [Expression this: ]
                    /* only want a passthrough given no transformer, otherwise CallsReturns */
                    and arguments[7] is [Expression: 
                        constantValue is [Null: ]
                    ]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                TaintTransfer(this, fc)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>71A7B517-EBCA-4BF2-ACF3-25C6C26F2CC7</RuleID>
                <Notes><![CDATA[
                kotlin.collections.joinToString:
                
                fun <T> Array<out T>.joinToString(
                    separator: CharSequence = ", ",
                    prefix: CharSequence = "",
                    postfix: CharSequence = "",
                    limit: Int = -1,
                    truncated: CharSequence = "...",
                    transform: ((T) -> CharSequence)? = null
                ): String

                The transform lambda is optional. 
                If the default (null), then there should be a passthrough,
                otherwise we need a CallsReturns rule on the transform function.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "joinToString"
                        and namespace.name matches "kotlin\.(collections|sequences)"
                    ]
                    and arguments[0] is [Expression this: ]
                    /* only want a passthrough given no transformer, otherwise CallsReturns */
                    and arguments[6] is [Expression: 
                        constantValue is [Null: ]
                    ]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                TaintTransfer(this, fc)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>8D13C21C-3CD0-485A-9FA8-129734E8EC22</RuleID>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                function is [Function:
                    name matches "createTemp(File|Dir)"
                    and namespace.name == "kotlin.io"
                ]
                and arguments[2] is [Expression arg:]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                TaintTransfer(arg.path, fc.path)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Comparisons</Group>
                </MetaInfo>
                <RuleID>723AF9C9-0A4C-4D9A-9176-A1E18AFE60C1</RuleID>
                <Notes><![CDATA[
                Covers all variants of kotlin.comparisons.maxOf/minOf: 

                fun <T : Comparable<T>> maxOf(a: T, b: T): T            // comparison of 2 with no Comparator
                fun <T : Comparable<T>> maxOf(a: T, b: T, c: T): T      // comparison of 3 with no Comparator
                fun <T> maxOf(                                          // comparison of 3 with a Comparator
                    a: T,
                    b: T,
                    c: T,
                    comparator: Comparator<in T>
                ): T
                fun <T> maxOf(a: T, b: T, comparator: Comparator<in T>): T // comparison of 2 with a Comparator

                In each case (and same goes for minOf), any of the arguments could be returned, except the Comparator parameter.
                
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name matches "minOf|maxOf"
                        and namespace.name == "kotlin.comparisons"
                    ]
                    and fc.arguments contains [Expression arg: 
                        not arg.type is [Type: name == "kotlin.Comparator"]
                    ]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                foreach arg {
                    TaintTransfer(arg, fc)
                }
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                </MetaInfo>
                <RuleID>5C3CC417-ED59-4092-85BB-53A38EF363ED</RuleID>
                <Notes><![CDATA[
                Calls rule for: 

                inline fun <T> T.also(block: (T) -> Unit): T

                For this we need a passthrough and Returns from the instance (arg0) to the return
                as well as a Calls rule. 
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function:
                        name == "also"
                        and namespace.name == "kotlin"
                    ]
                    and arguments[1] is [Expression lambda: not constantValue is [Null: ]]
                    and arguments[0] is [Expression this: ]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(lambda, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                </MetaInfo>
                <RuleID>2291E73C-E231-4134-96F4-CF2BCA0E63D1</RuleID>
                <Notes><![CDATA[
                Passthrough for: 
                inline fun <T> T.also(block: (T) -> Unit): T
                For this we need a passthrough from the instance (arg0) to the return
                as well as Calls and Returns rules. 
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function:
                        name == "also"
                        and namespace.name == "kotlin"
                    ]
                    and arguments[0] is [Expression this: ]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                TaintTransfer(this, fc)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                </MetaInfo>
                <RuleID>51546622-F446-49D6-A9A8-AFC86ECE3C1D</RuleID>
                <Notes><![CDATA[
                Returns for: 

                inline fun <T> T.also(block: (T) -> Unit): T

                Returns is needed because SCA applies TaintTransfer before the 
                lambda call, thus taint introduced to the context object within 
                the lambda is not propagated to the return.

                This should be revisited when FMRs are working.
            ]]></Notes>
                <Definition><![CDATA[
                kotlin / also(param, block) {
                    Returns(param)
                }
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                </MetaInfo>
                <RuleID>CDD91CCF-9528-4F26-B104-0FC609D83035</RuleID>
                <Notes><![CDATA[
                inline fun <T> T.apply(block: T.() -> Unit): T
                    
                This will pass T (arg0) into the block function as arg0 
                (since it's an extension function), then return T. 
                So we need a Calls and passthrough.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function:
                        name == "apply"
                        and namespace.name == "kotlin"
                    ]
                    and arguments[1] is [Expression lambda: not constantValue is [Null: ]]
                    and arguments[0] is [Expression this: ]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(lambda, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                </MetaInfo>
                <RuleID>2F001690-378E-4D0F-945C-F8AB308479D2</RuleID>
                <Notes><![CDATA[
                inline fun <T> T.apply(block: T.() -> Unit): T
                    
                This will pass T (arg0) into the block function as arg0 
                (since it's an extension function), then return T. 
                So we need a Calls and passthrough.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function:
                        name == "apply"
                        and namespace.name == "kotlin"
                    ]
                    and arguments[0] is [Expression this: ]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                TaintTransfer(this, fc)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                </MetaInfo>
                <RuleID>66652DB7-49A0-4ECC-8D05-400E048C4378</RuleID>
                <Definition><![CDATA[
            kotlin / apply(param, ...) {
                Returns(param)
            }
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                </MetaInfo>
                <RuleID>5183C79F-4D81-493C-AB5C-CFD23947F59E</RuleID>
                <Notes><![CDATA[
                Calls rule for: 

                inline fun assert(value: Boolean, lazyMessage: () -> Any)
                inline fun check(value: Boolean, lazyMessage: () -> Any)
                inline fun <T : Any> checkNotNull(
                    value: T?,
                    lazyMessage: () -> Any
                ): T
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name matches "assert|check|checkNotNull"
                        and namespace.name == "kotlin"
                        and parameterTypes.length == 2
                    ]
                    and arguments[1] is [Expression lambda: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(lambda)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                </MetaInfo>
                <RuleID>9BC9F1CA-B653-4925-93C5-DDC3BDE7EE8B</RuleID>
                <Notes><![CDATA[
                Passthrough for: 

                inline fun <T : Any> checkNotNull(
                    value: T?,
                    lazyMessage: () -> Any
                ): T

                For this we need a passthrough from the arg0 to the return
                as well as a Calls rule. 
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function:
                        name == "checkNotNull"
                        and namespace.name == "kotlin"
                    ]
                    and arguments[0] is [Expression value: ]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                TaintTransfer(value, fc)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                </MetaInfo>
                <RuleID>50645ABD-EDF2-4B56-861F-88FE9B564269</RuleID>
                <Notes><![CDATA[
                Calls rule for: 

                fun <R, T> Result<T>.fold(
                    onSuccess: (value: T) -> R,
                    onFailure: (exception: Throwable) -> R
                ): R

                In this case, both need a CallsReturns rule, because the results of 
                either will be returned from fold().
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "fold"
                        and namespace.name == "kotlin"
                    ]
                    and arguments[0] is [Expression result: ]
                    and arguments[1] is [Expression onSuccess: not constantValue is [Null: ]]
                    and arguments[2] is [Expression onFailure: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(onSuccess, result)
                CallsReturns(onFailure)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                </MetaInfo>
                <RuleID>A0E4C69D-F321-4DF3-9BFF-B29D3D80906E</RuleID>
                <Notes><![CDATA[
                Calls rule for: 

                fun <R, T : R> Result<T>.getOrElse(
                    onFailure: (exception: Throwable) -> R
                ): R
                
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "getOrElse"
                        and namespace.name == "kotlin"
                    ]
                    and arguments[1] is [Expression onFailure: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(onFailure)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                </MetaInfo>
                <RuleID>721D6F98-3B0A-41AA-8FC1-AE3DEB24D9D5</RuleID>
                <Notes><![CDATA[
                Calls rule for: 

                inline fun <R, T> Result<T>.map(
                    transform: (value: T) -> R
                ): Result<R>
                and
                inline fun <R, T> Result<T>.mapCatching(
                    transform: (value: T) -> R
                ): Result<R>
                
                The only difference is what they do with failure results.
                Map re-throws it, mapCatching propagates it to the
                return Result.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name matches "map(Catching)?"
                        and namespace.name == "kotlin"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression transform: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(transform, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                </MetaInfo>
                <RuleID>BE25310A-9970-4DA8-8BB4-8386F0E03D17</RuleID>
                <Notes><![CDATA[
                Calls rule for: 

                fun <T> Result<T>.onSuccess(
                    action: (value: T) -> Unit
                ): Result<T>
                
                This takes the value from the result (like Java Optional)
                passes it into action, and returns it (for chaining).
                The return is not from the lambda, so instead need a passthrough as well (separate).
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "onSuccess"
                        and namespace.name == "kotlin"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression action: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(action, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                </MetaInfo>
                <RuleID>8E8759FB-283A-4ABE-86D4-94DF5B28FEA3</RuleID>
                <Notes><![CDATA[
                Calls rule for: 

                inline fun <T> Result<T>.onFailure(
                    action: (exception: Throwable) -> Unit
                ): Result<T>
                
                Needs Calls rule as well as passthrough (separate).
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "onFailure"
                        and namespace.name == "kotlin"
                    ]
                    and arguments[1] is [Expression action: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(action)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                </MetaInfo>
                <RuleID>101898A4-E48B-49F9-AD88-9B979F0C4B23</RuleID>
                <Notes><![CDATA[
                Calls rule for: 

                fun <R, T : R> Result<T>.recover(
                    transform: (exception: Throwable) -> R
                ): Result<R>
                and
                fun <R, T : R> Result<T>.recoverCatching(
                    transform: (exception: Throwable) -> R
                ): Result<R>

                Similar to map/mapCatching, the primary difference is how they
                deal with exceptions.
                Both create a Result to return however.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name matches "recover(Catching)?"
                        and namespace.name == "kotlin"
                    ]
                    and arguments[1] is [Expression transform: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(transform)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                </MetaInfo>
                <RuleID>E5429ACF-FC1E-4922-8851-FDB64993C3F3</RuleID>
                <Notes><![CDATA[
                Calls rule for: 

                fun <T> lazy(initializer: () -> T): Lazy<T>

                For use with lazy evaluated functions (and the Lazy delegate). 
                This is only for the version that takes a single argument (a callback)
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "lazy"
                        and namespace.name == "kotlin"
                    ]
                    and arguments.length == 1
                    and arguments[0] is [Expression initializer: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(initializer)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                </MetaInfo>
                <RuleID>8EE81EB9-D27E-4121-9EB0-8FB7ED315E0C</RuleID>
                <Notes><![CDATA[
                Calls rule for: 

                fun <T> lazy(
                    mode: LazyThreadSafetyMode,
                    initializer: () -> T
                ): Lazy<T>
                and
                fun <T> lazy(lock: Any?, initializer: () -> T): Lazy<T>
                

                For use with lazy evaluated functions (and the Lazy delegate). 
                This is only for the version that takes 2 args (with the last a callback)
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "lazy"
                        and namespace.name == "kotlin"
                    ]
                    and arguments.length == 2
                    and arguments[1] is [Expression initializer: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(initializer)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                </MetaInfo>
                <RuleID>77EC91E6-09AD-4816-8194-37A6A0E2E1CC</RuleID>
                <Notes><![CDATA[
                Calls rule for: 

                inline fun <T, R> T.let(block: (T) -> R): R
                In this case the instance (arg0) gets placed into the argument
                of block, and then the return value given to the return
                of the original let call.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "let"
                        and namespace.name == "kotlin"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression block: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(block, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                </MetaInfo>
                <RuleID>9220DA1A-044D-4E92-850B-BD9EAEFD7EB2</RuleID>
                <Notes><![CDATA[
                Calls rule for: 

                fun repeat(times: Int, action: (Int) -> Unit)

                Simply repeats a block an action a bunch of times.
                Nothing special.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "repeat"
                        and namespace.name == "kotlin"
                    ]
                    and arguments[1] is [Expression block: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(block)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core</Group>
                </MetaInfo>
                <RuleID>5AD45853-6492-4046-92B4-3A98B353E016</RuleID>
                <Notes><![CDATA[
                Calls rule for: 

                fun require(value: Boolean, lazyMessage: () -> Any)
                and
                fun <T : Any> requireNotNull(
                    value: T?,
                    lazyMessage: () -> Any
                ): T
                
                In both cases, they throw an exception if not meeting some requirement,
                and if so, call a lazyMessage callback.
                There are also versions that take a single argument,
                so we specifically exclude those.
                requireNotNull also needs a passthrough for the value.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name matches "require(NotNull)?"
                        and namespace.name == "kotlin"
                    ]
                    and arguments.length == 2
                    and arguments[1] is [Expression lazyMessage: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(lazyMessage)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                </MetaInfo>
                <RuleID>0DE8EBF6-0A66-4D13-B35D-DE8CB1A30EE2</RuleID>
                <Notes><![CDATA[
                Passthrough for

                fun <T : Any> requireNotNull(value: T?): T
                    and
                fun <T : Any> requireNotNull(
                    value: T?,
                    lazyMessage: () -> Any
                ): T
                
                from value -> return.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "requireNotNull"
                        and namespace.name == "kotlin"
                    ]
                    and arguments[0] is [Expression value: ]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                TaintTransfer(value, fc)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                </MetaInfo>
                <RuleID>0EF43CAE-7104-4F43-AC51-10E1C3124050</RuleID>
                <Notes><![CDATA[
                Calls rule for: 

                inline fun <R> run(block: () -> R): R
                    and
                inline fun <R> runCatching(block: () -> R): Result<R>
                
                both simply run a block and return the result.
                Both have variants that take more arguments with the lambda
                in a different place, so we check for the arg length.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name matches "run(Catching)?"
                        and namespace.name == "kotlin"
                    ]
                    and arguments.length == 1
                    and arguments[0] is [Expression block: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(block)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                </MetaInfo>
                <RuleID>FE725CD3-E37A-427F-B4D5-A00EB02C9DBD</RuleID>
                <Notes><![CDATA[
                Calls rule for: 

                inline fun <T, R> T.run(block: T.() -> R): R
                    and
                inline fun <T, R> T.runCatching(block: T.() -> R): Result<R>
                
                both simply run a block and return the result.
                But take an instance (arg0), which then becomes the receiver
                inside the lambda (arg0 of the temporary extension function).
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name matches "run(Catching)?"
                        and namespace.name == "kotlin"
                    ]
                    and arguments.length == 2
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression block: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(block, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                </MetaInfo>
                <RuleID>ADCE6144-38CC-42A9-AB52-B65D87D7A15A</RuleID>
                <Notes><![CDATA[
                Calls rule for: 

                fun <R> synchronized(lock: Any, block: () -> R): R

                Basically runs the block in a synchronized block,
                locking on the given lock.
                Deprecated from common stdlib, but still available for
                JVM.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "synchronized"
                        and namespace.name == "kotlin"
                    ]
                    and arguments[1] is [Expression block: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(block)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                </MetaInfo>
                <RuleID>315F4493-9F6F-454A-8A4E-C4A8A013DB6E</RuleID>
                <Notes><![CDATA[
                Calls rule for: 

                fun <T> T.takeIf(predicate: (T) -> Boolean): T?
                    and
                fun <T> T.takeUnless(predicate: (T) -> Boolean): T?

                Takes the instance (arg0) and sends it into the predicate.
                arg0 -> return also has a passthrough (separate)
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name matches "takeIf|takeUnless"
                        and namespace.name == "kotlin"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression predicate: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(predicate, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                    <Group name="package">kotlin IO extensions</Group>
                </MetaInfo>
                <RuleID>31CE01A9-7A30-4D8F-9394-6F1B573159A8</RuleID>
                <Notes><![CDATA[
                Calls rule for: 

                inline fun <T : AutoCloseable?, R> T.use(block: (T) -> R): R

                takes a closeable resource as the instance (arg0), and
                then runs a block against it, before closing the
                resource.
                Accounted for in Unreleased Resource rules.
                
                There is also a practically identical function in kotlin.io,
                the difference being it is on Closeable, rather than AutoCloseable.
                This is likely for backwards compatibility mostly,
                as Closeable extends AutoCloseable, but only from Java 7,
                and you can make kotlin compatible with Java 6.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "use"
                        and namespace.name matches "kotlin(\.io)?"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression block: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(block, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                </MetaInfo>
                <RuleID>A345E97E-DBF4-4132-81E9-D68AB7D5501C</RuleID>
                <Notes><![CDATA[
                Calls rule for: 

                inline fun <T, R> with(receiver: T, block: T.() -> R): R

                The receiver (arg0) is passed to the block that takes a
                receiver (basically a temporary extension function),
                as arg0, similar to extension functions.
                The return of block is returned to the original call.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "with"
                        and namespace.name == "kotlin"
                    ]
                    and arguments[0] is [Expression receiver: ]
                    and arguments[1] is [Expression block: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(block, receiver)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Core extensions</Group>
                </MetaInfo>
                <RuleID>4E67DAD7-1A17-403F-AED6-00CF249CC0BC</RuleID>
                <Notes><![CDATA[
                Calls rule for: 

                Array constructors taking 2 arguments, where the second
                is an initialization block.
                This applies to:
                kotlin.Array
                kotlin.BooleanArray
                kotlin.ByteArray
                kotlin.CharArray
                kotlin.DoubleArray
                kotlin.FloatArray
                kotlin.IntArray
                kotlin.LongArray
                kotlin.ShortArray

                Since it's on the constructor, the return goes to "this" and not "return",
                and therefore CallsReturns doesn't make sense.
                Will need FMR to properly support.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        constructor
                        and enclosingClass.name matches "kotlin\.(Boolean|Byte|Char|Double|Float|Int|Long|Short)?Array"
                    ]
                    and arguments[1] is [Expression block: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(block)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>AEB9A190-65B9-4F45-936F-70DEB13634DF</RuleID>
                <Notes><![CDATA[
                fun CharSequence.all(predicate: (Char) -> Boolean): Boolean

                Returns true if all characters in sequence match predicate,
                and false otherwise.
                Similar functions for collections and sequences.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "all"
                        and namespace.name matches "kotlin\.(text|collections|sequences)"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression predicate: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(predicate, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>9A30C3DF-91F7-4D8D-852A-58251B628CB8</RuleID>
                <Notes><![CDATA[
                fun CharSequence.any(predicate: (Char) -> Boolean): Boolean

                Returns true if any characters in sequence match predicate,
                and false otherwise.
                Similar functions for collections and sequences.
                There's also a version that does not take a lambda,
                so we check the arguments length.
                Similar functions for collections and sequences.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "any"
                        and namespace.name matches "kotlin\.(text|collections|sequences)"
                    ]
                    and arguments.length == 2
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression predicate: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(predicate, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>29CC3724-E99B-43BB-BB91-C0ED98959FBF</RuleID>
                <Notes><![CDATA[
                fun <K, V> CharSequence.associate(
                    transform: (Char) -> Pair<K, V>
                ): Map<K, V>

                Transforms a CharSequence into a map by the transform
                function, which takes a single Char and outputs a
                Pair (basically an entryset inside the map). These are
                combined to return a Map from associate().
                Similar functions for collections and sequences.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "associate"
                        and namespace.name matches "kotlin\.(text|collections|sequences)"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression predicate: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(predicate, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>A40029BA-FF1D-4A2F-9AFB-F6CA6FEED61F</RuleID>
                <Notes><![CDATA[
                inline fun <K, V> CharSequence.associateBy(
                    keySelector: (Char) -> K,
                    valueTransform: (Char) -> V // this lambda
                ): Map<K, V>

                Transforms a CharSequence into a map by the keySelector
                function, and optional valueTransform (otherwise takes the original value).

                For the version that does not transform the value, we will need to have a
                passthrough from the original CharSequence to the return map.

                We could have a CallsReturns rule for keySelector,
                but tainting the entire map for the keys is more likely
                to lead to FPs.

                Realistically needs a FMR to handle correctly.

                Similar functions for collections and sequences.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "associateBy"
                        and namespace.name matches "kotlin\.(text|collections|sequences)"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[2] is [Expression valueTransform: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(valueTransform, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>894823B0-F6E3-4171-B843-80FADA680E50</RuleID>
                <Notes><![CDATA[
                inline fun <K> CharSequence.associateBy(
                    keySelector: (Char) -> K    // this lambda
                ): Map<K, Char>
                    and
                inline fun <K, V> CharSequence.associateBy(
                    keySelector: (Char) -> K,   // this lambda
                    valueTransform: (Char) -> V 
                ): Map<K, V>

                Transforms a CharSequence into a map by the keySelector
                function, and optional valueTransform (otherwise takes the original value).

                For keySelector argument, we will just have a Calls rule to prevent tainting
                the entire map simply from manipulating a key value.
                May lead to FNs, but with a CallsReturns, it is more likely to lead to
                a FP.

                Realistically needs a FMR to handle correctly.

                Similar functions for collections and sequences.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "associateBy"
                        and namespace.name matches "kotlin\.(text|collections|sequences)"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression keySelector: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(keySelector, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>7CB86D3D-BA2E-4F65-A115-826F52CD9C2E</RuleID>
                <Notes><![CDATA[
                inline fun <K, V, M : MutableMap<in K, in V>> CharSequence.associateByTo(
                    destination: M,
                    keySelector: (Char) -> K,
                    valueTransform: (Char) -> V     // this lambda
                ): M

                Similar to CharSequence.associateBy, but includes a destination MutableMap,
                which is returned at the end.

                Realistically needs a FMR to handle correctly.

                Similar functions for collections and sequences.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "associateByTo"
                        and namespace.name matches "kotlin\.(text|collections|sequences)"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[3] is [Expression valueTransform: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(valueTransform, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>66DDC57D-62CE-4FB4-9076-3CE6D7C2702D</RuleID>
                <Notes><![CDATA[
                inline fun <K, V, M : MutableMap<in K, in V>> CharSequence.associateByTo(
                    destination: M,
                    keySelector: (Char) -> K,   // this lambda
                    valueTransform: (Char) -> V
                ): M
                    and
                inline fun <K, M : MutableMap<in K, in Char>> CharSequence.associateByTo(
                    destination: M,
                    keySelector: (Char) -> K    // this lambda
                ): M

                Similar to CharSequence.associateBy, but includes a destination MutableMap,
                which is returned at the end.

                Realistically needs a FMR to handle correctly.

                Similar functions for collections and sequences.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "associateByTo"
                        and namespace.name matches "kotlin\.(text|collections|sequences)"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[2] is [Expression keySelector: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(keySelector, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>57515FB3-8D1B-4CE5-91F0-8D5D32765C9F</RuleID>
                <Notes><![CDATA[
                fun <K, V, M : MutableMap<in K, in V>> CharSequence.associateTo(
                    destination: M,
                    transform: (Char) -> Pair<K, V>
                ): M

                arg0 (instance) goes into transform.
                Pair returned from transform go into destination
                destination goes to return.

                Therefore destination and return are synonymous,
                can do CallsReturns for transform and simple passthrough destination -> return.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "associateTo"
                        and namespace.name matches "kotlin\.(text|collections|sequences)"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[2] is [Expression transform: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(transform, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>89F8D2CA-3C1F-407A-8817-847BE276C7D0</RuleID>
                <Notes><![CDATA[
                fun <V> CharSequence.associateWith(
                    valueSelector: (Char) -> V
                ): Map<Char, V>

                Simple CallsReturns rule.
                Do not want to pass original CharSequence, as will taint the keys,
                more likely leading to FPs.
                Eventually needs an FMR.

                Similar APIs for arrays, collections and sequences too.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "associateWith"
                        and namespace.name matches "kotlin\.(text|collections|sequences)"
                    ]
                    and arguments.length == 2
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression valueSelector: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(valueSelector, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>29430617-C2C9-4DAC-A69C-7D2E86E03AE2</RuleID>
                <Notes><![CDATA[
                inline fun <V, M : MutableMap<in Char, in V>> CharSequence.associateWithTo(
                    destination: M,
                    valueSelector: (Char) -> V
                ): M

                Simple CallsReturns rule for the valueSelector, and then passthrough from
                destination to return.
                Do not want to pass original CharSequence, as will taint the keys,
                more likely leading to FPs.
                Eventually needs an FMR.

                Similar APIs for arrays, collections and sequences too.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "associateWithTo"
                        and namespace.name matches "kotlin\.(text|collections|sequences)"
                    ]
                    and arguments.length == 3
                    and arguments[0] is [Expression this: ]
                    and arguments[2] is [Expression valueSelector: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(valueSelector, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text</Group>
                </MetaInfo>
                <RuleID>82964143-060A-46BB-AF4B-25F03226A9C7</RuleID>
                <Notes><![CDATA[
                inline fun buildString(
                    builderAction: StringBuilder.() -> Unit
                ): String

                Can only do Calls because the lambda does not return a value
                (Unit is effectively void).
                Need an FMR to completely support.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "buildString"
                        and namespace.name == "kotlin.text"
                    ]
                    and arguments.length == 1
                    and arguments[0] is [Expression buildAction: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(buildAction)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text</Group>
                </MetaInfo>
                <RuleID>3FBB4163-120C-4A36-BC0F-4BC867F09CAA</RuleID>
                <Notes><![CDATA[
                inline fun buildString(
                    capacity: Int,
                    builderAction: StringBuilder.() -> Unit
                ): String

                Can only do Calls because the lambda does not return a value
                (Unit is effectively void).
                Need an FMR to completely support.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "buildString"
                        and namespace.name == "kotlin.text"
                    ]
                    and arguments.length == 2
                    and arguments[1] is [Expression buildAction: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(buildAction)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>A1A965E8-44FE-4016-A51C-49668143A9BF</RuleID>
                <Notes><![CDATA[
                fun <R> CharSequence.chunked(
                    size: Int,
                    transform: (CharSequence) -> R
                ): List<R>

                Also a similar function called chunkedSequence, which just returns a sequence
                instead of a list.
                There are also overloads which just take an integer, which we exclude.

                Simple CallsReturns rule for the transform function.

                Similar APIs for collections and sequences too.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name matches "chunked(Sequence)?"
                        and namespace.name matches "kotlin\.(text|collections|sequences)"
                    ]
                    and arguments.length == 3
                    and arguments[0] is [Expression this: ]
                    and arguments[2] is [Expression transform: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(transform, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>65CCDCCA-D33E-435F-9322-C0BF4CF0247D</RuleID>
                <Notes><![CDATA[
                inline fun CharSequence.count(
                    predicate: (Char) -> Boolean
                ): Int
                
                Simple Calls rule for the predicate function.

                Similar APIs for collections and sequences too.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "count"
                        and namespace.name matches "kotlin\.(text|collections|sequences)"
                    ]
                    and arguments.length == 2
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression predicate: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(predicate, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>56959139-9C13-465B-B697-97F914D0024B</RuleID>
                <Notes><![CDATA[
                inline fun CharSequence.dropWhile(
                    predicate: (Char) -> Boolean
                ): CharSequence
                and
                inline fun CharSequence.dropLastWhile(
                    predicate: (Char) -> Boolean
                ): CharSequence

                Simple Calls rule for the predicate function. Passthroughs for original CharSequence too (separate)

                Similar APIs for collections and sequences too.
                Similar also applies to takeWhile and takeLastWhile.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name matches "dropWhile|dropLastWhile|takeWhile|takeLastWhile"
                        and namespace.name matches "kotlin\.(text|collections|sequences)"
                    ]
                    and arguments.length == 2
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression predicate: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(predicate, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>FE5A1991-2DF0-4E6F-BAA7-9604099D6299</RuleID>
                <Notes><![CDATA[
                inline fun CharSequence.elementAtOrElse(
                    index: Int,
                    defaultValue: (Int) -> Char
                ): Char

                Simple CallsReturns rule for defaultValue.
                Passthroughs for original CharSequence too (separate)

                Similar APIs for collections and sequences too.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "elementAtOrElse"
                        and namespace.name matches "kotlin\.(text|collections|sequences)"
                    ]
                    and arguments.length == 3
                    and arguments[0] is [Expression this: ]
                    and arguments[2] is [Expression defaultValue: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(defaultValue, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>EE4EE8F4-9651-4CE2-B445-54F285C07E09</RuleID>
                <Notes><![CDATA[
                inline fun CharSequence.replace(
                    regex: Regex,
                    noinline transform: (MatchResult) -> CharSequence
                ): String

                CallsReturns for the transform function.
                Takes the matching result from the regex applied to the
                CharSequence and passes that into transform(0).

                We have passthroughs for the functions/properties of MatchResult,
                as in those we assume the entire object can become tainted.

                We also need to make sure that this does not match against other
                overloads of the replace function which do not take a lambda.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "replace"
                        and namespace.name == "kotlin.text"
                        and parameterTypes[0] is [Type: name == "kotlin.CharSequence"]
                        and parameterTypes[1] is [Type: name == "kotlin.text.Regex"]
                        and parameterTypes[2] is [Type: name == "kotlin.Function1"]
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[2] is [Expression transform: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(transform, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>6326A61C-8806-451A-A691-0A802E919E30</RuleID>
                <Notes><![CDATA[
                fun CharSequence.trim(
                    predicate: (Char) -> Boolean
                ): CharSequence

                Simply does a trim, but except for removing leading/trailing whitespace,
                it trims anything matching the predicate.
                Similar versions for trimStart and trimEnd too.
                This is an extension function for both CharSequence and String. Not sure why,
                perhaps backwards compatibility.
                Also needs a passthrough for arg0 -> return (separate rule).
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name matches "trim(Start|End)?"
                        and namespace.name == "kotlin.text"
                        and parameterTypes[1] is [Type: name == "kotlin.Function1"]
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression predicate: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(predicate, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>EFA056F6-1EE1-43E5-B884-4D6E8ECF4921</RuleID>
                <Notes><![CDATA[
                fun <R> CharSequence.windowedSequence(
                    size: Int,
                    step: Int = 1,
                    partialWindows: Boolean = false,
                    transform: (CharSequence) -> R
                ): Sequence<R>

                Turns the CharSequence into a Sequence (lazy collection),
                made up of elements from transform().
                Note: windowed() is handled separately, as it is common across:
                kotlin.text
                kotlin.collections
                kotlin.sequences

                windowedSequence (which returns a sequence instead of a list)
                is specific to kotlin.text.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "windowedSequence"
                        and namespace.name == "kotlin.text"
                    ]
                    and arguments.length == 5
                    and arguments[0] is [Expression this: ]
                    and arguments[4] is [Expression transform: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(transform, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>AEBD9668-1543-47BC-A282-BEF3BE0F0151</RuleID>
                <Notes><![CDATA[
                Calls rule for: 
                inline fun <T> Array<out T>.forEach(action: (T) -> Unit)

                In this case T is actually passed as arg0 and the action lambda at arg1. 
                Also applies to similar functions in kotlin.text and kotlin.sequences
                onEach is similar, but returns the original value when it's finished.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function:
                        name matches "forEach|onEach"
                        and namespace.name matches "kotlin\.(text|collections|sequences)"
                    ]
                    and arguments[1] is [Expression lambda: not constantValue is [Null: ]]
                    and arguments[0] is [Expression this: ]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(lambda, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>9E9A1764-8D92-4C73-A5E4-ED24DEBBD121</RuleID>
                <Notes><![CDATA[
                Calls rule for: 
                inline fun <T> Array<out T>.onEachIndexed(action: (index: Int, T) -> Unit)

                Performs the given action on each element, providing sequential index with 
                the element, and returns the array itself afterwards.

                Passthrough also needed for arg0 (this) -> return
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function:
                        name == "onEachIndexed"
                        and namespace.name matches "kotlin\.(text|collections|sequences)"
                    ]
                    and arguments[1] is [Expression lambda: not constantValue is [Null: ]]
                    and arguments[0] is [Expression this: ]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(lambda, "", this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>93BC7517-51CE-45E2-AE41-3229DE021E3B</RuleID>
                <Notes><![CDATA[
                Calls rule for: 

                inline fun <T, R> Array<out T>.fold(
                    initial: R,
                    operation: (acc: R, T) -> R
                ): R

                Really need FMR, but will try to make do with Calls return on operation(0,1)
                and passthrough from initial -> return
                Identical APIs in kotlin.text and kotlin.sequences as well.

                Need to explicitly exclude: 
                fun <T, K, R> Grouping<T, K>.fold(
                    initialValueSelector: (key: K, element: T) -> R,
                    operation: (key: K, accumulator: R, element: T) -> R
                ): Map<K, R>
                
                because initialValue is also a lambda (there's a variant for Grouping
                where initialValue is a value, so we'll exclude based upon type).
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name matches "fold|runningFold"
                        and namespace.name matches "kotlin\.(text|collections|sequences)"
                        and not parameterTypes[1] is [Type: name == "kotlin.Function2"]
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression initialValue: ]
                    and arguments[2] is [Expression lambda: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(lambda, initialValue, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>B512E448-2A6F-4AD0-8EF3-964C0F78D72D</RuleID>
                <Notes><![CDATA[
                fun <T, K, R> Grouping<T, K>.fold(
                    initialValueSelector: (key: K, element: T) -> R,
                    operation: (key: K, accumulator: R, element: T) -> R
                ): Map<K, R>
                
                This variant was excluded from the other Calls rule.
                This example REALLY needs an FMR to work correctly, but we'll
                try to fake it until we make it most of the time.

                For initialValueSelector, we'll have a
                Calls rule, passing taint to element. 

                For operation, we'll go with a CallsReturns rule tainting accumulator
                and element both with "this" from the initial Grouping. 

                What really needs to happen is something like: 

                val m = HashMap<T, K>()
                val i = this.sourceIterator()
                boolean first = true
                val nullableAcc: R? = null
                while (i.hasNext()) {
                    val t = i.next()
                    val key = this.keyOf(t)
                    if (first) {
                        nullableAcc = initialValueSelector(key, t)
                        first = false
                    }
                    val acc = requireNotNull(nullableAcc) // to convert type to not nullable. Would throw IllegalStateException if null
                    val r = operation(key, acc, t) // this takes the return value from initialValueSelector the first time
                    m.put(key, r)
                }
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "fold"
                        and namespace.name == "kotlin.collections"
                        and parameterTypes[1] is [Type: name == "kotlin.Function2"]
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression initialValueSelector: not constantValue is [Null: ]]
                    and arguments[2] is [Expression operation: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(initialValueSelector, "", this)
                CallsReturns(operation, "", this, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>A2455AD8-1B60-4D57-92F1-CCDB4E874985</RuleID>
                <Notes><![CDATA[
                Calls rule for: 

                inline fun <T, R> Array<out T>.foldRight(
                    initial: R,
                    operation: (T, acc: R) -> R
                ): R

                Really need FMR.
                Identical APIs in kotlin.text but NOT in kotlin.sequences.
                Similar to fold(), but the operation parameters are switched around.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "foldRight"
                        and namespace.name matches "kotlin\.(text|collections)"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression initialValue: ]
                    and arguments[2] is [Expression lambda: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(lambda, this, initialValue)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>C267ED66-A4CC-4C92-A374-4CAECFF1D9DF</RuleID>
                <Notes><![CDATA[
                Calls rule for: 

                inline fun <T, R> Array<out T>.foldIndexed(
                    initial: R,
                    operation: (index: Int, acc: R, T) -> R
                ): R

                Really need FMR, but will try to make do with Calls return on operation("", 1,2)
                and passthrough from initial -> return
                Identical APIs in kotlin.text and kotlin.sequences as well.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name matches "foldIndexed|runningFoldIndexed"
                        and namespace.name matches "kotlin\.(text|collections|sequences)"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression initialValue: ]
                    and arguments[2] is [Expression lambda: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(lambda, "", initialValue, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>40DCA8AD-A4BF-489A-A3D4-18185EFE0E33</RuleID>
                <Notes><![CDATA[
                Calls rule for: 

                inline fun <T, R> Array<out T>.foldRightIndexed(
                    initial: R,
                    operation: (index: Int, T, acc: R) -> R
                ): R

                Really need FMR
                Similar to foldIndexed, but the accumulator and element are switched around.
                Identical APIs in kotlin.text, NOT in kotlin.sequences.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "foldRightIndexed"
                        and namespace.name matches "kotlin\.(text|collections)"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression initialValue: ]
                    and arguments[2] is [Expression lambda: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(lambda, "", this, initialValue)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>3791A13C-BF4B-4E5D-BEC6-C0EFB22F80FB</RuleID>
                <Notes><![CDATA[
                For package APIs across: 
                    kotlin.collections
                    kotlin.sequences
                    kotlin.text
                    kotlin

                that require rules of the form: 
                    Calls(arg1, arg0)

                Often for a predicate, where the boolean returned does not go to the return,
                sometimes it is also for an action where a separate passthrough is applied for the original instance.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name matches "filter|filterNot|find|findLast|first|firstOrNull|indexOfFirst|indexOfLast|last|lastOrNull|single|singleOrNull|sumBy|sumByDouble|sumOf|maxBy|maxByOrNull|maxOf|maxOfOrNull|minBy|minByOrNull|minOf|minOfOrNull|none|partition"
                        and namespace.name matches "kotlin\.(collections|sequences|text)"
                        and parameterTypes[1] is [Type: name == "kotlin.Function1"]
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression lambda: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(lambda, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>613C780D-4079-4E87-8360-E2453A5834E1</RuleID>
                <Notes><![CDATA[
                For package APIs across: 
                    kotlin.collections
                    kotlin.sequences
                    kotlin.text

                that require rules of the form: 
                    Calls(arg1, "", arg0)

                This is often similar to Calls(arg1, arg0), but perhaps it takes an index or some
                other unuseful information we don't care about.
                Some of these may be slightly better modeled with FMRs.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name matches "filterIndexed|forEachIndexed|mapIndexed|mapIndexedNotNull"
                        and namespace.name matches "kotlin\.(collections|sequences|text)"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression lambda: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(lambda, "", this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>5FB7822E-2537-4229-ABF4-524E020EE360</RuleID>
                <Notes><![CDATA[
                For package APIs across: 
                    kotlin.collections
                    kotlin.sequences
                    kotlin.text

                that require rules of the form: 
                    Calls(arg2, "", arg0)

                This is often similar to Calls(arg2, arg0), but perhaps it takes an index or some
                other unuseful information we don't care about.
                These would be better modeled with FMRs because they will typically change arg1 and return that back
                (currently modeled by this Calls rule and a passthrough).
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "filterIndexedTo"
                        and namespace.name matches "kotlin\.(collections|sequences|text)"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[2] is [Expression lambda: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(lambda, "", this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>33A69A42-9217-488C-B9B5-53E228DA6C09</RuleID>
                <Notes><![CDATA[
                For package APIs across: 
                    kotlin.collections
                    kotlin.sequences
                    kotlin.text

                that require rules of the form: 
                    Calls(arg2, arg0)

            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name matches "filterTo|filterNotTo"
                        and namespace.name matches "kotlin\.(collections|sequences|text)"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[2] is [Expression lambda: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(lambda, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>B65864C0-6489-44CD-B306-D3CFCBDF6ABC</RuleID>
                <Notes><![CDATA[
                For package APIs across: 
                    kotlin.collections
                    kotlin.sequences
                    kotlin.text

                that require rules of the form: 
                    CallsReturns(arg1, arg0, arg0)

                These would likely be better modeled with FMRs.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name matches "reduce|reduceOrNull|reduceRight|reduceRightOrNull"
                        and namespace.name matches "kotlin\.(collections|sequences|text)"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression lambda: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(lambda, this, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>30DA5A02-AD68-4156-A4DD-ADAB9834CB83</RuleID>
                <Notes><![CDATA[
                For package APIs across: 
                    kotlin.collections
                    kotlin.sequences
                    kotlin.text

                that require rules of the form: 
                    CallsReturns(arg1, arg0, arg0)

                These would likely be better modeled with FMRs.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name matches "reduce|reduceOrNull|reduceRight|reduceRightOrNull|runningReduce"
                        and namespace.name matches "kotlin\.(collections|sequences|text)"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression lambda: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(lambda, this, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>9012BED0-0E03-469C-BA03-46E4FD9D57CC</RuleID>
                <Notes><![CDATA[
                For package APIs across: 
                    kotlin.collections
                    kotlin.sequences
                    kotlin.text

                that require rules of the form: 
                    CallsReturns(arg1, "", arg0, arg0)

                Similar APIs to CallsReturns(arg1, arg0, arg0), but usually take an index
                or some other info we don't care to propagate.

                These would likely be better modeled with FMRs.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name matches "reduceIndexed|reduceIndexedOrNull|reduceRightIndexed|reduceRightIndexedOrNull|runningReduceIndexed"
                        and namespace.name matches "kotlin\.(collections|sequences|text)"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression lambda: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(lambda, "", this, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>980CA131-AADD-461B-B1CB-18C6FE27BA31</RuleID>
                <Notes><![CDATA[
                For package APIs across: 
                    kotlin.collections
                    kotlin.sequences
                    kotlin.text

                that require rules of the form: 
                    CallsReturns(arg1, arg0)

                These would be better modeled with FMRs.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name matches "map|mapNotNull|flatMap|groupingBy"
                        and namespace.name matches "kotlin\.(collections|sequences|text)"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression lambda: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(lambda, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>458C1CAF-3BFE-416E-A2FC-6066CBFF56DA</RuleID>
                <Notes><![CDATA[
                For package APIs across: 
                    kotlin.collections
                    kotlin.sequences
                    kotlin.text
                    kotlin

                that require rules of the form: 
                    CallsReturns(arg1, "", arg0)

                This is mostly the same as CallsReturns(arg1, arg0), but with stuff that takes an
                index, which we don't want to propagate taint on.
                These would be better modeled with FMRs.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name matches "mapIndexed|mapIndexedNotNull|flatMapIndexed"
                        and namespace.name matches "kotlin\.(collections|sequences|text)"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression lambda: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(lambda, "", this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>361FCC42-60BB-41A3-BF98-C53D391C18D6</RuleID>
                <Notes><![CDATA[
                For package APIs across: 
                    kotlin.collections
                    kotlin.sequences
                    kotlin.text

                that require rules of the form: 
                    CallsReturns(arg2, arg0)

                These would be better modeled with FMRs.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name matches "mapTo|mapNotNullTo|flatMapTo"
                        and namespace.name matches "kotlin\.(collections|sequences|text)"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[2] is [Expression lambda: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(lambda, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>9E12678C-C614-4D4D-B51B-DE19DDCF5850</RuleID>
                <Notes><![CDATA[
                For package APIs across: 
                    kotlin.collections
                    kotlin.sequences
                    kotlin.text
                    kotlin

                that require rules of the form: 
                    CallsReturns(arg2, "", arg0)

                Primarily the same as CallsReturns(arg2, arg0), but lambdas take
                index or some other parameter we don't care to propagate taint on.

                These would be better modeled with FMRs.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name matches "mapIndexedTo|mapIndexedNotNullTo|flatMapIndexedTo"
                        and namespace.name matches "kotlin\.(collections|sequences|text)"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[2] is [Expression lambda: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(lambda, "", this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>F4CEDAEE-4F6E-4769-BEC3-44263C1F079D</RuleID>
                <Notes><![CDATA[
                fun <T> Array<out T>.getOrElse(
                    index: Int,
                    defaultValue: (Int) -> T
                ): T

                and other variants, along with one extending CharSequence in kotlin.text.
                Note, this purposefully does not match the Map extension: 

                inline fun <K, V> Map<K, V>.getOrElse(
                    key: K,
                    defaultValue: () -> V
                ): V

                since defaultValue() does not take a parameter in this instance,
                and is dealt with in a separate rule.
                A passthrough is also needed for this API from 0->return (specified separately).
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "getOrElse"
                        and namespace.name matches "kotlin\.(collections|text)"
                        and not parameterTypes[0] is [Type: name == "kotlin.collections.Map"]
                    ]
                    and arguments[1] is [Expression index: ]
                    and arguments[2] is [Expression lambda: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(lambda, index)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>789DEAAE-6155-4BA4-AF72-FAA09779A203</RuleID>
                <Notes><![CDATA[
                inline fun <K, V> Map<K, V>.getOrElse(
                    key: K,
                    defaultValue: () -> V
                ): V

                since defaultValue() does not take a parameter in this instance,
                it is specified separately than the other versions, which take arg1 (in this case 'key').
                This API is also used within a MapRule for tracking the keys in case the key is known.
                Note: The Map extension is only in kotlin.collections, so do not need to account for kotlin.text.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "getOrElse"
                        and namespace.name == "kotlin.collections"
                        and parameterTypes[0] is [Type: name == "kotlin.collections.Map"]
                    ]
                    and arguments[2] is [Expression lambda: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(lambda)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>DC920F38-C0DF-4F27-8121-B0B5FABB9C50</RuleID>
                <Notes><![CDATA[
                inline fun <C, R> C.ifEmpty(
                    defaultValue: () -> R
                ): R where C : Array<*>, C : R

                Similar functions exist for kotlin.sequences and kotlin.text
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "ifEmpty"
                        and namespace.name matches "kotlin\.(collections|sequences|text)"
                    ]
                    and arguments[1] is [Expression defaultValue: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(defaultValue)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>CDE6753D-37B6-401C-B989-E43D240FDCCF</RuleID>
                <Notes><![CDATA[
                inline fun <C, R> C.ifBlank(
                    defaultValue: () -> R
                ): R where C : CharSequence, C : R

                Similar to ifEmpty, but only exists for CharSequences,
                perhaps because it's a more natural name than "ifEmpty" for a String,
                and also checks for whitespace.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "ifBlank"
                        and namespace.name == "kotlin.text"
                    ]
                    and arguments[1] is [Expression defaultValue: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(defaultValue)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>CE492EF6-4493-4EFB-BED1-A8F2992475AF</RuleID>
                <Notes><![CDATA[
                fun String.replaceFirstChar(
                    transform: (Char) -> Char
                ): String
                fun String.replaceFirstChar(
                    transform: (Char) -> CharSequence
                ): String

                Returns a copy of this string having its first character replaced
                with the result of the specified transform, or the original string
                if it's empty.
                The transform operation can return a single Char or a CharSequence that
                will replace the first character in the original string.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function:
                        name == "replaceFirstChar"
                        and namespace.name == "kotlin.text"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression transform: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(transform, this)
                TaintTransfer(this, fc)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>DFC1346C-F78A-468D-926F-6BE9E5AD1B8A</RuleID>
                <Notes><![CDATA[
                fun <R : Any> CharSequence.firstNotNullOf(
                    transform: (Char) -> R?
                ): R
                fun <R : Any> CharSequence.firstNotNullOfOrNull(
                    transform: (Char) -> R?
                ): R

                Returns the first non-null value produced by transform function 
                being applied to characters of this char sequence in iteration order.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name matches "firstNotNullOf(OrNull)?"
                        and namespace.name == "kotlin.text"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression transform: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(transform, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>E2C4C388-8DE6-45EB-A9EE-8878E116B1AF</RuleID>
                <Notes><![CDATA[
                fun <R> CharSequence.windowed(
                    size: Int,
                    step: Int = 1,
                    partialWindows: Boolean = false,
                    transform: (CharSequence) -> R
                ): List<R>

                "windows" a collection into a list, effectively splitting it up,
                but a little more complex.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "windowed"
                        and namespace.name matches "kotlin\.(collections|sequences|text)"
                    ]
                    /* exclude version taking 4 parameters */
                    and arguments.length == 5
                    and arguments[0] is [Expression this: ]
                    and arguments[4] is [Expression transform: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(transform, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>726543C2-F336-44CF-9BB8-2A180C7F8BCF</RuleID>
                <Notes><![CDATA[
                inline fun <V> CharSequence.zip(
                    other: CharSequence,
                    transform: (a: Char, b: Char) -> V
                ): List<V>

                like a zipper, it interleaves the instance and other
                into 'a' and 'b' of the transform function.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "zip"
                        and namespace.name matches "kotlin\.(collections|sequences|text)"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression other: ]
                    and arguments[2] is [Expression transform: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(transform, this, other)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>3963F963-283D-48B0-9B36-D6F26C9B2F94</RuleID>
                <Notes><![CDATA[
                inline fun <R> CharSequence.zipWithNext(
                    transform: (a: Char, b: Char) -> R
                ): List<R>

                Similar functionality to "zip", but just places elements in
                the collection next to eachother one at a time.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "zipWithNext"
                        and namespace.name matches "kotlin\.(collections|sequences|text)"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression transform: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(transform, this, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>013EA039-0AAE-4D91-BFE6-4EFB2DFE6845</RuleID>
                <Notes><![CDATA[
                Calls rule for: 

                inline fun <K> CharSequence.groupBy(
                    keySelector: (Char) -> K
                ): Map<K, List<Char>>
                    and
                inline fun <K, V> CharSequence.groupBy(
                    keySelector: (Char) -> K,               // only this lambda
                    valueTransform: (Char) -> V
                ): Map<K, List<V>>

                Would be better suited to FMR, but for now will simply use a Calls rule for the
                keySelector (to prevent tainting the entire map) -- this rule,
                and CallsReturns for valueTransform (separate rule)

                The same function exists in kotlin.collections and kotlin.sequences.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "groupBy"
                        and namespace.name matches "kotlin\.(collections|sequences|text)"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression keySelector: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(keySelector, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>92473441-DD8E-4D3F-A6DF-3214A8515085</RuleID>
                <Notes><![CDATA[
                CallsReturns rule for: 
                inline fun <K, V> CharSequence.groupBy(
                    keySelector: (Char) -> K,
                    valueTransform: (Char) -> V             // only this lambda
                ): Map<K, List<V>>

                Would be better suited to FMR, but for now will simply use a Calls rule for the
                keySelector (to prevent tainting the entire map) -- separate rule,
                and CallsReturns for valueTransform -- this rule.

                The same function exists in kotlin.collections and kotlin.sequences.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "groupBy"
                        and namespace.name matches "kotlin\.(collections|sequences|text)"
                    ]
                    and arguments.length == 3
                    and arguments[0] is [Expression this: ]
                    and arguments[2] is [Expression valueTransform: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(valueTransform, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>810A13A7-1CA6-484A-9BD5-2AAC7C9EF390</RuleID>
                <Notes><![CDATA[
                Calls rule for: 

                inline fun <K, M : MutableMap<in K, MutableList<Char>>> CharSequence.groupByTo(
                    destination: M,
                    keySelector: (Char) -> K
                ): M
                    and
                inline fun <K, V, M : MutableMap<in K, MutableList<V>>> CharSequence.groupByTo(
                    destination: M,
                    keySelector: (Char) -> K,               // only this lambda
                    valueTransform: (Char) -> V
                ): M

                Would be better suited to FMR, but for now will simply use a Calls rule for the
                keySelector (to prevent tainting the entire map) -- this rule,
                and CallsReturns for valueTransform (separate rule)

                The same function exists in kotlin.collections and kotlin.sequences.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "groupByTo"
                        and namespace.name matches "kotlin\.(collections|sequences|text)"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[2] is [Expression keySelector: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(keySelector, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>B95C4995-429C-4FFB-ACB2-8C5C90B2D393</RuleID>
                <Notes><![CDATA[
                inline fun <K, V, M : MutableMap<in K, MutableList<V>>> CharSequence.groupByTo(
                    destination: M,
                    keySelector: (Char) -> K,
                    valueTransform: (Char) -> V             // only this lambda
                ): M

                Would be better suited to FMR, but for now will simply use a Calls rule for the
                keySelector (to prevent tainting the entire map) -- separate rule,
                and CallsReturns for valueTransform -- this rule.

                The same function exists in kotlin.collections and kotlin.sequences.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "groupByTo"
                        and namespace.name matches "kotlin\.(collections|sequences|text)"
                    ]
                    and arguments.length == 4
                    and arguments[0] is [Expression this: ]
                    and arguments[3] is [Expression valueTransform: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(valueTransform, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Text</Group>
                </MetaInfo>
                <RuleID>D08EA131-2C91-4159-AF9F-2D1D56680CAE</RuleID>
                <Notes><![CDATA[
                CallsReturns for kotlin.text.Regex function: 

                fun replace(
                    input: CharSequence,
                    transform: (MatchResult) -> CharSequence
                ): String

                From the regex (this), it matches input, and puts the MatchResult
                into the transform function, and replaces the match with the output
                of that lambda.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "replace"
                        and enclosingClass.name == "kotlin.text.Regex"
                        and parameterTypes[1] is [Type: name == "kotlin.Function1"]
                    ]
                    and arguments[0] is [Expression input: ]
                    and arguments[1] is [Expression transform: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(transform, input)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>D7C2CFB3-BC04-4937-9CD6-1D7EBF1142F9</RuleID>
                <Notes><![CDATA[
                inline fun <T, K, R> Grouping<T, K>.aggregate(
                    operation: (key: K, accumulator: R?, element: T, first: Boolean) -> R
                ): Map<K, R>

                Need to get return of the accumulator into the values of the returned Map.
                Not going to bother passing taint to/from keys, because it would likely
                just result in FPs, and we have commonly not tainted the keys associated with
                a grouping.
                Would be better modeled with FMR.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "aggregate"
                        and namespace.name == "kotlin.collections"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression operation: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(operation, "", "", this, "")
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>F4C74CDD-478C-4BD1-AE95-F0782608C2ED</RuleID>
                <Notes><![CDATA[
                inline fun <T, K, R, M : MutableMap<in K, R>> Grouping<T, K>.aggregateTo(
                    destination: M,
                    operation: (key: K, accumulator: R?, element: T, first: Boolean) -> R
                ): M

                Need to get return of the accumulator into the values of the returned Map.
                Not going to bother passing taint to/from keys, because it would likely
                just result in FPs, and we have commonly not tainted the keys associated with
                a grouping.
                Passthrough for destination -> return handled by separate rule.
                Would be better modeled with FMR.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "aggregateTo"
                        and namespace.name == "kotlin.collections"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[2] is [Expression operation: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(operation, "", "", this, "")
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>E75CEEE0-5A16-4485-B35D-50E71959F48C</RuleID>
                <Notes><![CDATA[
                inline fun <T, K : Comparable<K>> List<T>.binarySearchBy(
                    key: K?,
                    fromIndex: Int = 0,
                    toIndex: Int = size,
                    crossinline selector: (T) -> K?
                ): Int

                Basically calls selector with the instance element,
                that returns a value which is compared to key.
                We just needs a Calls rule for selector.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "binarySearchBy"
                        and namespace.name == "kotlin.collections"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[4] is [Expression selector: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(selector, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin sequences extensions</Group>
                </MetaInfo>
                <RuleID>C8872FC9-9537-4D81-B219-FB4F811F5FAA</RuleID>
                <Notes><![CDATA[
                inline fun <T, K> Iterable<T>.distinctBy(
                    selector: (T) -> K
                ): List<T>

                Calls selector with an element and creates a key.
                Only those with unique keys (the first of them)
                will be returned.
                Don't need to pay attention to the return value, but
                needs a passthrough (separate).
                Similar API exists in kotlin.sequences.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "distinctBy"
                        and namespace.name matches "kotlin\.(collections|sequences)"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression selector: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(selector, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>FBC32D67-7043-42F6-9366-B79F1F4711BD</RuleID>
                <Notes><![CDATA[
                inline fun <K, V> Map<out K, V>.filterKeys(
                    predicate: (K) -> Boolean
                ): Map<K, V>

                Passes each key to predicate and only returns the parts
                of the map where the predicate returns true.
                Since we don't want to cause too many FPs,
                we will choose not to pass taint from the map to predicate.

                Don't need to pay attention to the return value, but
                needs a passthrough (separate).

                This would be better handled with a FMR, where we could specifically say
                that the keys from the Map are being passed to the predicate.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "filterKeys"
                        and namespace.name == "kotlin.collections"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression predicate: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(predicate, "")
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>82F8B84A-C464-4A57-9C91-9C927FF5DF9D</RuleID>
                <Notes><![CDATA[
                inline fun <K, V> MutableMap<K, V>.getOrPut(
                    key: K,
                    defaultValue: () -> V
                ): V

                Needs FMR to be handled properly!

                If key is unknown, returns defaultValue and puts it into the
                original map.
                The last bit we can't do with calls, thus the need for FMR.

                For now we will simply do a CallsReturns on defaultValue,
                and we have the key being used inside a MapRule too.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "getOrPut"
                        and namespace.name == "kotlin.collections"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[2] is [Expression defaultValue: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(defaultValue)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>56CCF960-D784-4814-90DA-340DE9018748</RuleID>
                <Notes><![CDATA[
                Calls rule for: 
                inline fun <T, K, R, M : MutableMap<in K, R>> Grouping<T, K>.foldTo(
                    destination: M,
                    initialValue: R,
                    operation: (accumulator: R, element: T) -> R
                ): M

                This is similar to other fold() functions, but takes a destination as well.
                This variant is specific to kotlin.collections.
                The passthrough from destination -> return is handled elsewhere.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "foldTo"
                        and namespace.name == "kotlin.collections"
                        /* initialValue is not a function */
                        and not parameterTypes[2] is [Type: name == "kotlin.Function2"]
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[2] is [Expression initialValue: ]
                    and arguments[3] is [Expression lambda: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(lambda, initialValue, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>98931E1F-9160-4290-ADCF-5FD966A24B4D</RuleID>
                <Notes><![CDATA[
                inline fun <T, K, R, M : MutableMap<in K, R>> Grouping<T, K>.foldTo(
                    destination: M,
                    initialValueSelector: (key: K, element: T) -> R,
                    operation: (key: K, accumulator: R, element: T) -> R
                ): M
                
                This is similar to Grouping<T, K>.fold(), except you can pass in a
                MutableMap (so you don't have to merge stuff after).
                Realistically, this can be represented by the same thing, plus a
                passthrough rule from destination -> return (in separate rule).

                Like the other fold functions, this would be better represented
                with a FMR.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "foldTo"
                        and namespace.name == "kotlin.collections"
                        /* check the associated parameters are function types */
                        and parameterTypes[2] is [Type: name == "kotlin.Function2"]
                        and parameterTypes[3] is [Type: name == "kotlin.Function3"]
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[2] is [Expression initialValueSelector: not constantValue is [Null: ]]
                    and arguments[3] is [Expression operation: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(initialValueSelector, "", this)
                CallsReturns(operation, "", this, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>9D43AC6C-7693-4DFC-B7AA-F47A3AD5A411</RuleID>
                <Notes><![CDATA[
                inline fun <T> Iterable(
                    crossinline iterator: () -> Iterator<T>
                ): Iterable<T>

                Simply CallsReturns.
                API only available in kotlin.collections.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "Iterable"
                        and namespace.name == "kotlin.collections"
                    ]
                    and arguments[0] is [Expression iterator: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(iterator)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>43FE3813-A4CB-4418-B095-2A14E0D8DF05</RuleID>
                <Notes><![CDATA[
                fun <T, A : Appendable> Iterable<T>.joinTo(
                    buffer: A,
                    separator: CharSequence = ", ",
                    prefix: CharSequence = "",
                    postfix: CharSequence = "",
                    limit: Int = -1,
                    truncated: CharSequence = "...",
                    transform: ((T) -> CharSequence)? = null
                ): A

                Only really concerned about the transform CallsReturns rule here.
                The passthroughs are handled elsewhere.
                available in kotlin.collections and kotlin.sequences.

                This needs FMR support to be properly handled, as the return
                value of transform should be appended into 'buffer',
                which is returned at the end.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "joinTo"
                        and namespace.name matches "kotlin\.(collections|sequences)"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[7] is [Expression transform: 
                        /* default value for transform is null, which we don't want to match */
                        not constantValue is [Null: ]
                    ]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(transform, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>9236B453-2BB5-42F5-8E50-A6B29DB06FA8</RuleID>
                <Notes><![CDATA[
                fun <T> Iterable<T>.joinToString(
                    separator: CharSequence = ", ",
                    prefix: CharSequence = "",
                    postfix: CharSequence = "",
                    limit: Int = -1,
                    truncated: CharSequence = "...",
                    transform: ((T) -> CharSequence)? = null
                ): String

                Only really concerned about the transform CallsReturns rule here.
                The passthroughs are handled elsewhere.
                available in kotlin.collections and kotlin.sequences.
                
                This is similar to joinTo(), but is the common case of appending to a
                String appendable and returning the string at the end.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "joinToString"
                        and namespace.name matches "kotlin\.(collections|sequences)"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[6] is [Expression transform: 
                        /* default value for transform is null, which we don't want to match */
                        not constantValue is [Null: ]
                    ]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(transform, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>DF03E149-2806-4A7B-8E35-44E688BB527D</RuleID>
                <Notes><![CDATA[
                inline fun <T> List(
                    size: Int,
                    init: (index: Int) -> T
                ): List<T>

                    and

                inline fun <T> MutableList(
                    size: Int,
                    init: (index: Int) -> T
                ): MutableList<T>

                Both simple CallsReturns rules, taking an index or each element to
                calculate an initial value for each element.
                In this case, we could perhaps pass the size to init,
                but I don't think there's a great reason to, in terms of
                dataflow analysis.
                These APIs are specific to kotlin.collections.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name matches "(Mutable)?List"
                        and namespace.name == "kotlin.collections"
                    ]
                    and arguments[1] is [Expression init: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(init)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                </MetaInfo>
                <RuleID>2FC27505-6A89-4D00-A7CB-A67032302FB1</RuleID>
                <Notes><![CDATA[
                Calls rule for:
                inline fun <T, R : Comparable<R>> Iterable<T>.sortedBy(
                    crossinline selector: (T) -> R?
                ): List<T>

                This API exists in both kotlin.sequences and kotlin.collections.
                Basically returns a comparable so that the list can be sorted.
                There is an identical sortedByDescending function which
                uses the same thing, but sorts the elements the opposite way.
                The passthrough from arg0 (this) -> return is handled elsewhere.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name matches "sortedBy(Descending)?"
                        and namespace.name matches "kotlin\.(collections|sequences)"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression selector: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(selector, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>3983CB67-1F7A-4502-A253-FC4B37953109</RuleID>
                <Notes><![CDATA[
                Calls rule for:
                inline fun <T, R : Comparable<R>> MutableList<T>.sortBy(
                    crossinline selector: (T) -> R?)

                There is also a "sortByDescending" function that is the same,
                except that it simply reverses the order given the comparable
                return from the selector, which we account for in this rule.

                This is similar to sortedBy (notice the difference in tense).
                The difference being that sortBy mutates the given instance,
                whereas "sortedBy" does not change the original, but returns
                a separate immutable list that is sorted (this provides a more
                functional style).
                kotlin.sequences does not have the "sortBy" or "sortByDescending"
                functions because sequences are supposed to be lazily evaluated,
                and therefore the instance cannot be changed except when
                outputted (otherwise it would not be lazy).
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name matches "sortBy(Descending)?"
                        and namespace.name == "kotlin.collections"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression selector: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(selector, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>35110C4D-CE3C-47BA-BD1A-C37DFEA5E137</RuleID>
                <Notes><![CDATA[
                inline fun <K, V, R> Map<out K, V>.mapKeys(
                    transform: (Entry<K, V>) -> R
                ): Map<R, V>

                This really needs a FMR to work correctly.

                To prevent us from tainting the entire map from
                just tainting the keys (the return of transform is a key),
                we'l just use a Calls and not a CallsReturns rule here.
                That being said, we still need a passthrough from the original
                Map to the return, so it's probably not a big deal either way.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "mapKeys"
                        and namespace.name == "kotlin.collections"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression transform: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(transform, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>D5D035C2-24E4-45E7-A1F5-088359FFD9F8</RuleID>
                <Notes><![CDATA[
                inline fun <K, V, R> Map<out K, V>.mapKeys(
                    transform: (Entry<K, V>) -> R
                ): Map<R, V>

                This really needs a FMR to work correctly.

                This is the passthrough from the original Map to the return.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "mapKeys"
                        and namespace.name == "kotlin.collections"
                    ]
                    and arguments[0] is [Expression this: ]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                TaintTransfer(this, fc)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>4DA665D5-000F-45A5-93E2-3379E31A6EFB</RuleID>
                <Notes><![CDATA[
                inline fun <K, V, R, M : MutableMap<in R, in V>> Map<out K, V>.mapKeysTo(
                    destination: M,
                    transform: (Entry<K, V>) -> R
                ): M

                This really needs a FMR to work correctly.

                To prevent us from tainting the entire map from
                just tainting the keys (the return of transform is a key),
                we'l just use a Calls and not a CallsReturns rule here.
                That being said, we still need a passthrough from the original
                Map to the destination (and destination to return), 
                so it's probably not a big deal either way.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "mapKeysTo"
                        and namespace.name == "kotlin.collections"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[2] is [Expression transform: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(transform, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>2AAAEBE8-AE66-4115-94E6-C25BCBFB9A12</RuleID>
                <Notes><![CDATA[
                inline fun <K, V, R, M : MutableMap<in R, in V>> Map<out K, V>.mapKeysTo(
                    destination: M,
                    transform: (Entry<K, V>) -> R
                ): M

                This really needs a FMR to work correctly.

                This is the passthrough from the original Map -> destination,
                and destination -> return
                Also adding a original Map -> return, just in case.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "mapKeysTo"
                        and namespace.name == "kotlin.collections"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression dest: ]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                TaintTransfer(this, fc)
                TaintTransfer(this, dest)
                TaintTransfer(dest, fc)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>BCCDA1D4-007A-4AEA-8B72-AEF7012707FC</RuleID>
                <Notes><![CDATA[
                inline fun <K, V, R> Map<out K, V>.mapValues(
                    transform: (Entry<K, V>) -> R
                ): Map<K, R>

                This really needs a FMR to work correctly.

                Similar to mapKeys, except we care about the return
                of transform, so use CallsReturns.
                This also means that we do not need a passthrough from arg0 -> return
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "mapValues"
                        and namespace.name == "kotlin.collections"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression transform: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(transform, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>9734DC7C-3E15-45BB-BDDC-84CDF99F26DA</RuleID>
                <Notes><![CDATA[
                inline fun <K, V, R, M : MutableMap<in K, in R>> Map<out K, V>.mapValuesTo(
                    destination: M,
                    transform: (Entry<K, V>) -> R
                ): M

                This really needs a FMR to work correctly.

                Similar to mapKeysTo, but we care about the return value of
                transform, because it's a value in the returned map.
                Also means we do not need a passthrough from arg0 -> return,
                but we still need the rest of the passthrougs.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "mapValuesTo"
                        and namespace.name == "kotlin.collections"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[2] is [Expression transform: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(transform, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>F8201F7B-01D7-46AB-91BC-F0F3DAA9C4D5</RuleID>
                <Notes><![CDATA[
                inline fun <K, V, R, M : MutableMap<in K, in R>> Map<out K, V>.mapValuesTo(
                    destination: M,
                    transform: (Entry<K, V>) -> R
                ): M

                This really needs a FMR to work correctly.

                This is the passthrough from destination -> return
                We don't need a passthrough from arg0 -> return, because it goes through
                transform(), but we will be missing tainting of destination directly.
                This can't particularly be done without a FMR (or faking it by assuming
                everything in transform is pushed into the return value)
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "mapValuesTo"
                        and namespace.name == "kotlin.collections"
                    ]
                    and arguments[1] is [Expression dest: ]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                TaintTransfer(dest, fc)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>DD12E6C8-B435-4C1E-AC3A-CBA77851CAE2</RuleID>
                <Notes><![CDATA[
                inline fun <S, T : S, K, M : MutableMap<in K, S>> Grouping<T, K>.reduceTo(
                    destination: M,
                    operation: (key: K, accumulator: S, element: T) -> S
                ): M

                This really needs a FMR to work correctly.

                Since we care more about the values than the keys in Grouping,
                we'll pass taint from the Grouping to the element,
                and taint the return value into the return of the function.
                We'll also need a passthrough to take from destination -> return.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "reduceTo"
                        and namespace.name == "kotlin.collections"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[2] is [Expression operation: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(operation, "", "", this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>BAFFA576-0D4D-43B1-A398-CCF780A14228</RuleID>
                <Notes><![CDATA[
                inline fun <S, T : S, K, M : MutableMap<in K, S>> Grouping<T, K>.reduceTo(
                    destination: M,
                    operation: (key: K, accumulator: S, element: T) -> S
                ): M

                This really needs a FMR to work correctly.

                The CallsReturns rule is handled elsewhere, but we still need a
                passthrough from destination -> return (this rule).
                We won't necessarily assume that taint is going from
                Grouping -> operation() -> destination,
                so won't have a passthrough from arg0 (this) -> destination
                (again, this really needs a FMR).
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "reduceTo"
                        and namespace.name == "kotlin.collections"
                    ]
                    and arguments[1] is [Expression destination: ]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                TaintTransfer(destination, fc)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                </MetaInfo>
                <RuleID>1631756A-C726-432A-859E-3CEDE5633689</RuleID>
                <Notes><![CDATA[
                fun <K, V> Map<K, V>.withDefault(
                    defaultValue: (key: K) -> V
                ): Map<K, V>

                This really needs a FMR to work correctly.

                This is primarily for use with delegation and such.
                withDefault returns another map where the
                getValue() function is changed to return the result
                of defaultValue() when the key is unknown.

                For us, we can just treat this with a CallsReturn,
                so the passthrough for getValue will return the value
                anyway.

                That being said, there are some chances of FPs here,
                because it will mean the map is also tainted for
                existing values, so calls to get() would also return this
                value (when it can't).
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "withDefault"
                        and namespace.name == "kotlin.collections"
                    ]
                    and arguments[1] is [Expression defaultValue: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(defaultValue, "")
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>4DA08222-824F-4DBF-81C3-FCCAA5E8C4A5</RuleID>
                <Notes><![CDATA[
                fun <T, R> Array<out T>.min|maxOfWith(
                    comparator: Comparator<in R>,
                    selector: (T) -> R
                ): R
                <T, R> Array<out T>.min|maxOfWithOrNull(
                    comparator: Comparator<in R>,
                    selector: (T) -> R
                ): R?
                Returns the largest value according to the provided comparator 
                among all values produced by selector function applied to each 
                element in the array.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name matches "maxOfWith(OrNull)?|minOfWith(OrNull)?"
                        and namespace.name matches "kotlin\.(collections|sequences|text)"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[2] is [Expression selector: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(selector, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>5E157F53-7B59-42F8-8E04-AA22811AE2D6</RuleID>
                <Notes><![CDATA[
                CallsReturns for:

                fun <T, R> Array<out T>.scan(
                    initial: R,
                    operation: (acc: R, T) -> R
                ): List<R>

                Returns a list containing successive accumulation values generated by applying 
                operation from left to right to each element and current accumulator value that starts with initial value.

                Similar to the rule for Array<out T>.fold(...), this could use an FMR, but 
                will try to make do with Calls return on operation(0,1)
                and passthrough from initial -> return
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name == "scan"
                        and namespace.name matches "kotlin\.(collections|sequences|text)"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression initialValue: ]
                    and arguments[2] is [Expression operation: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(operation, initialValue, this)
                TaintTransfer(initialValue, fc)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Collections extensions</Group>
                    <Group name="package">kotlin Sequences extensions</Group>
                    <Group name="package">kotlin Text extensions</Group>
                </MetaInfo>
                <RuleID>57C7FF0C-D70A-446D-9B5F-DD95F81EDB27</RuleID>
                <Notes><![CDATA[
                CallsReturns for:

                fun <T, R> Array<out T>.scanIndexed(
                    initial: R,
                    operation: (index: Int, acc: R, T) -> R
                ): List<R>

                Returns a list containing successive accumulation values generated by applying 
                operation from left to right to each element and current accumulator value that starts with initial value.

                Similar to the rule for Array<out T>.fold(...), this could use an FMR, but 
                will try to make do with Calls return on operation(0,1)
                and passthrough from initial -> return
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name == "scanIndexed"
                        and namespace.name matches "kotlin\.(collections|sequences|text)"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression initialValue: ]
                    and arguments[2] is [Expression operation: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(operation, "", initialValue, this)
                TaintTransfer(initialValue, fc)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Sequences</Group>
                </MetaInfo>
                <RuleID>9C1FABFD-2898-4882-A9E7-275AE4AD2C2E</RuleID>
                <Notes><![CDATA[
                Calls for: 

                fun <T : Any> generateSequence(
                    nextFunction: () -> T?
                ): Sequence<T>

                Each variant of this API requires separate rules,
                so need to check number of parameters and types
                where needed.

                This variant is a simple CallsReturns.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "generateSequence"
                        and namespace.name == "kotlin.sequences"
                        and parameterTypes.length == 1
                    ]
                    and arguments[0] is [Expression nextFunction: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(nextFunction)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Sequences</Group>
                </MetaInfo>
                <RuleID>9261EE84-9669-4DD4-81E7-C8057563FE80</RuleID>
                <Notes><![CDATA[
                Calls for: 

                fun <T : Any> generateSequence(
                    seed: T?,
                    nextFunction: (T) -> T?
                ): Sequence<T>

                Each variant of this API requires separate rules,
                so need to check number of parameters and types
                where needed.

                This variant is a simple CallsReturns where it takes a
                seed as a variable.
                We have to make sure arg0 is not a function in this case though.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "generateSequence"
                        and namespace.name == "kotlin.sequences"
                        and parameterTypes.length == 2
                        and not parameterTypes[0] is [Type: name matches "kotlin\.Function.*"]
                    ]
                    and arguments[0] is [Expression seed: ]
                    and arguments[1] is [Expression nextFunction: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(nextFunction, seed)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Sequences</Group>
                </MetaInfo>
                <RuleID>783A1799-1E25-4356-9020-857C555A6F86</RuleID>
                <Notes><![CDATA[
                Calls for: 

                fun <T : Any> generateSequence(
                    seedFunction: () -> T?,
                    nextFunction: (T) -> T?
                ): Sequence<T>

                Each variant of this API requires separate rules,
                so need to check number of parameters and types
                where needed.

                This variant requires a FMR to be done correctly, because we have no way of
                saying with Calls rules that the output of one lambda is passed to another.

                To simulate (*cough* fake) some of this, we'll instead just do a CallsReturns on both functions.
                It's certainly possible to create FPs with this approach, but there shouldn't
                be any FNs (unless sinking were to be added in a passthrough, which is rare).
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "generateSequence"
                        and namespace.name == "kotlin.sequences"
                        and parameterTypes.length == 2
                        /* arg0 is seedFunction */
                        and parameterTypes[0] is [Type: name matches "kotlin\.Function.*"]
                    ]
                    and arguments[0] is [Expression seedFunction: not constantValue is [Null: ]]
                    and arguments[1] is [Expression nextFunction: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(seedFunction)
                CallsReturns(nextFunction, "")
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Sequences</Group>
                </MetaInfo>
                <RuleID>38A91314-43D9-4678-8F8A-A65A5EFED2D9</RuleID>
                <Notes><![CDATA[
                Calls for: 

                inline fun <T> Sequence(
                    crossinline iterator: () -> Iterator<T>
                ): Sequence<T>

                Simple CallsReturns rule.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "Sequence"
                        and namespace.name == "kotlin.sequences"
                    ]
                    and arguments[0] is [Expression iterator: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(iterator)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin IO</Group>
                </MetaInfo>
                <RuleID>DA0519E6-72F4-44C4-A128-96DFD2CE21ED</RuleID>
                <Notes><![CDATA[
                Calls for: 

                fun onEnter(function: (File) -> Boolean): FileTreeWalk
                fun onLeave(function: (File) -> Unit): FileTreeWalk
                fun onFail(
                    function: (File, IOException) -> Unit
                ): FileTreeWalk

                Each of these are simply Calls rules.
                Sources on File and Exception will create any relevant sources
                within the lambda itself.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name matches "onEnter|onLeave|onFail"
                        and enclosingClass.name == "kotlin.io.FileTreeWalk"
                    ]
                    and arguments[0] is [Expression func: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(func)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines</Group>
                </MetaInfo>
                <RuleID>270A3223-38A9-40D6-980C-B1825D128E8A</RuleID>
                <Notes><![CDATA[
                Calls for:

                abstract fun invokeOnCompletion(
                    handler: CompletionHandler
                ): DisposableHandle

                Registers handler that is synchronously invoked once on completion of this job. 
                NOTE: Returned DisposableHandle does not need to be disposed. It is there in case 
                the completion handler is no longer needed and you want to dispose the registration 
                of the completion handler before it is called.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name == "invokeOnCompletion"
                        and enclosingClass.supers contains [Class:
                            name == "kotlinx.coroutines.Job"
                        ]
                    ]
                    and arguments[0] is [Expression handler: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(handler)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines</Group>
                </MetaInfo>
                <RuleID>E31FECC9-8878-43D0-BBA8-22C3D083E8DF</RuleID>
                <Notes><![CDATA[
                Calls for:

                public fun invokeOnClose(handler: (cause: Throwable?) -> Unit))

                Registers a [handler] which is synchronously invoked once the channel is [closed][close]
                or the receiving side of this channel is [cancelled][ReceiveChannel.cancel].
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name == "invokeOnClose"
                        and enclosingClass.supers contains [Class:
                            name == "kotlinx.coroutines.channels.SendChannel"
                        ]
                    ]
                    and arguments[0] is [Expression handler: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(handler)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>65AF8475-16A4-4B48-97EC-8B4D821CFA19</RuleID>
                <Notes><![CDATA[
                CallsReturns for:

                fun <E, R> ReceiveChannel<E>.consume(block: ReceiveChannel<E>.() -> R): R
                fun <E, R> BroadcastChannel<E>.consume(block: ReceiveChannel<E>.() -> R): R

                Makes sure that the given [block] consumes all elements from the given channel
                by always invoking [cancel] after the execution of the block.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name == "consume"
                        and namespace.name == "kotlinx.coroutines.channels"
                    ]
                    and arguments[0] is [Expression this:]
                    and arguments[1] is [Expression block: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(block,this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>74EAA0EC-C577-4E91-8611-4731A905A9CA</RuleID>
                <Notes><![CDATA[
                Calls for:

                suspend fun <E> ReceiveChannel<E>.consumeEach(action: (E) -> Unit): Unit
                suspend fun <E> BroadcastChannel<E>.consumeEach(action: (E) -> Unit): Unit

                Performs the given [action] for each received element and [cancels]
                the channel after the execution of the block.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name == "consumeEach"
                        and namespace.name == "kotlinx.coroutines.channels"
                    ]
                    and arguments[0] is [Expression this:]
                    and arguments[1] is [Expression action: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(action,this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>721E0C54-7341-4852-AF0B-3865068E122A</RuleID>
                <Notes><![CDATA[
                Calls for:

                fun <E> CoroutineScope.broadcast(
                    context: CoroutineContext = EmptyCoroutineContext,
                    capacity: Int = 1,
                    start: CoroutineStart = CoroutineStart.LAZY,
                    onCompletion: CompletionHandler? = null,
                    block: suspend ProducerScope<E>.() -> Unit         <---- This Rule
                ): BroadcastChannel<E>

                Launches new coroutine to produce a stream of values by sending them to a broadcast channel 
                and returns a reference to the coroutine as a BroadcastChannel. The resulting object can
                be used to subscribe to elements produced by this coroutine.

                There are two separate rules for the two lambdas (onCompletion and block) since onCompletion is nullable.
                This rule is for lambda argument "block".

                Needs an FMR to handle correctly.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name == "broadcast"
                        and namespace.name == "kotlinx.coroutines.channels"
                    ]
                    and arguments[5] is [Expression block: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(block)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>BEDE3061-E2C4-4425-8B4D-271A131D90AC</RuleID>
                <Notes><![CDATA[
                Calls for:

                fun <E> CoroutineScope.produce(
                    context: CoroutineContext = EmptyCoroutineContext,
                    capacity: Int = 0,
                    block: suspend ProducerScope<E>.() -> Unit
                ): ReceiveChannel<E>

                Launches a new coroutine to produce a stream of values by sending them to a channel 
                and returns a reference to the coroutine as a ReceiveChannel. This resulting object 
                can be used to receive elements produced by this coroutine.

                Needs an FMR to handle correctly.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name == "produce"
                        and namespace.name == "kotlinx.coroutines.channels"
                    ]
                    and arguments[3] is [Expression block: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(block)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>84D74674-BAA7-4275-AE4C-0E1171A1D7DF</RuleID>
                <Notes><![CDATA[
                Calls for:

                fun <T> Flow<T>.catch(
                    action: suspend FlowCollector<T>.(cause: Throwable) -> Unit
                ): Flow<T>

                Catches exceptions in the flow completion and calls a specified action with the caught exception. 

                Requires separate passthrough 
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name == "catch"
                        and namespace.name == "kotlinx.coroutines.flow"
                    ]
                    and arguments[0] is [Expression this:]
                    and arguments[1] is [Expression action: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(action, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>C3BF1396-DDDD-44A3-A47E-1B148F53F099</RuleID>
                <Notes><![CDATA[
                Calls for:

                suspend fun <T> Flow<T>.collect(
                    action: suspend (value: T) -> Unit
                ): Unit

                suspend fun <T> Flow<T>.collectIndexed(
                    action: suspend (index: Int, value: T) -> Unit
                ): Unit

                suspend fun <T> Flow<T>.collectLatest(
                    action: suspend (value: T) -> Unit
                ): Unit

                Terminal flow operator that collects the given flow with a provided action. If any exception 
                occurs during collect or in the provided flow, this exception is rethrown from this method.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name matches "collect|collectIndexed|collectLatest"
                        and namespace.name == "kotlinx.coroutines.flow"
                    ]
                    and arguments[1] is [Expression action: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(action)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>96B4ECD4-A696-46E8-8737-E56C52CD5CEA</RuleID>
                <Notes><![CDATA[
                CallsReturns for:

                fun <T1, T2, R> Flow<T1>.combine(
                    flow: Flow<T2>,
                    transform: suspend (a: T1, b: T2) -> R
                ): Flow<R>

                Returns a Flow whose values are generated with transform function by combining 
                the most recently emitted values by each flow.

                This function has separate callsreturn and passthrough rules
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name == "combine"
                        and namespace.name == "kotlinx.coroutines.flow"
                    ]
                    and arguments[2] is [Expression transform: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(transform)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>7C8F6BD9-4F30-4D8D-AB3C-C8255F75CF6A</RuleID>
                <Notes><![CDATA[
                Calls for:

                fun <T1, T2, R> Flow<T1>.combineTransform(
                    flow: Flow<T2>,
                    transform: suspend FlowCollector<R>.(a: T1, b: T2) -> Unit
                ): Flow<R> (source)

                Returns a Flow whose values are generated by transform function that process the most 
                recently emitted values by each flow.

                The receiver of the transform is FlowCollector and thus transform is a generic function that 
                may transform emitted element, skip it or emit it multiple times.

                This function has separate calls and passthrough rules
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name == "combineTransform"
                        and namespace.name == "kotlinx.coroutines.flow"
                    ]
                    and arguments[0] is [Expression this:]
                    and arguments[1] is [Expression other:]
                    and arguments[2] is [Expression transform: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(transform, this, this, other)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>152C8F5F-343E-47F0-A118-C0EBBEA59E20</RuleID>
                <Notes><![CDATA[
                Calls for:

                suspend fun <T> Flow<T>.count(
                    predicate: suspend (T) -> Boolean
                ): Int

                Returns the number of elements matching the given predicate.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name == "count"
                        and namespace.name == "kotlinx.coroutines.flow"
                    ]
                    and arguments[1] is [Expression predicate: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(predicate)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>49872E29-AB4B-450A-9E3E-78EE067C5CB4</RuleID>
                <Notes><![CDATA[
                Calls for:

                fun <T> Flow<T>.distinctUntilChanged(
                    areEquivalent: (old: T, new: T) -> Boolean
                ): Flow<T>

                Returns flow where all subsequent repetitions of the same value are filtered out, 
                when compared with each other via the provided areEquivalent function.

                Passthrough also needed for this function
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name == "distinctUntilChanged"
                        and namespace.name == "kotlinx.coroutines.flow"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression areEquivalent: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(areEquivalent, this, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>3D932E39-DC4E-491E-B51F-D9D596454DF9</RuleID>
                <Notes><![CDATA[
                Calls for:

                fun <T, K> Flow<T>.distinctUntilChangedBy(
                    keySelector: (T) -> K
                ): Flow<T>

                Returns flow where all subsequent repetitions of the same key are filtered out, 
                where key is extracted with keySelector function.

                Passthrough also needed for this function
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name == "distinctUntilChangedBy"
                        and namespace.name == "kotlinx.coroutines.flow"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression keySelector: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(keySelector, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>5AB80374-5BA2-4122-8D13-55DA54950007</RuleID>
                <Notes><![CDATA[
                Calls for:

                fun <T> Flow<T>.dropWhile(
                    predicate: suspend (T) -> Boolean
                ): Flow<T>

                Passthrough also needed for this function
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name == "dropWhile"
                        and namespace.name == "kotlinx.coroutines.flow"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression predicate: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(predicate, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>CB8177B3-57D0-46E8-B321-488EE03F5430</RuleID>
                <Notes><![CDATA[
                Calls for:

                fun <T> Flow<T>.filter(
                    predicate: suspend (T) -> Boolean
                ): Flow<T>

                fun <T> Flow<T>.filterNot(
                    predicate: suspend (T) -> Boolean
                ): Flow<T>

                Passthrough also needed for these functions
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name matches "filter(Not)?"
                        and namespace.name == "kotlinx.coroutines.flow"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression predicate: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(predicate, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>689AEA5F-D4A5-47F3-835C-FF91E5E58CF1</RuleID>
                <Notes><![CDATA[
                Calls for:

                suspend fun <T> Flow<T>.first(
                    predicate: suspend (T) -> Boolean
                ): T

                suspend fun <T : Any> Flow<T>.firstOrNull(
                    predicate: suspend (T) -> Boolean
                ): T?

                The terminal operator that returns the first element emitted by the flow 
                and then cancels flow’s collection.

                Separate passthrough rule exists for this and the no argument signatures
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name matches "first(OrNull)?"
                        and namespace.name == "kotlinx.coroutines.flow"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression predicate: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(predicate, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines</Group>
                </MetaInfo>
                <RuleID>70D34CEC-9C4D-45C8-821E-715AF295859E</RuleID>
                <Notes><![CDATA[
                Calls for:

                fun <T> flow(
                    block: suspend FlowCollector<T>.() -> Unit
                ): Flow<T>

                Creates a flow from the given suspendable block

                Can only do Calls because the lambda does not return a value
                (Unit is effectively void).
                Need an FMR to completely support.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name == "flow"
                        and namespace.name == "kotlinx.coroutines.flow"
                    ]
                    and arguments[0] is [Expression block: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(block)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>07EE87D9-123A-4DD2-914A-B911473C24EA</RuleID>
                <Notes><![CDATA[
                CallsReturns for:

                suspend fun <T, R> Flow<T>.fold(
                    initial: R,
                    operation: suspend (acc: R, value: T) -> R
                ): R

                Accumulates value starting with initial value and applying 
                operation current accumulator value and each element

                Similar to the rule for Array<out T>.fold(...), this could use an FMR, but 
                will try to make do with Calls return on operation(0,1)
                and passthrough from initial -> return
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name == "fold"
                        and namespace.name == "kotlinx.coroutines.flow"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression initialValue: ]
                    and arguments[2] is [Expression operation: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(operation, initialValue, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>51903706-BD3D-4D67-BB46-5DD23C34F624</RuleID>
                <Notes><![CDATA[
                CallsReturns for:

                fun <T, R> Flow<T>.scan(
                    initial: R,
                    operation: suspend (accumulator: R, value: T) -> R
                ): Flow<R>

                Folds the given flow with operation, emitting every intermediate result, 
                including initial value. 

                Similar to the rule for Array<out T>.fold(...), this could use an FMR, but 
                will try to make do with Calls return on operation(0,1)
                and passthrough from initial -> return
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name == "scan"
                        and namespace.name == "kotlinx.coroutines.flow"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression initialValue: ]
                    and arguments[2] is [Expression operation: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(operation, initialValue, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>F0EA3DD3-AF5F-4207-AC00-952F6F4A4189</RuleID>
                <Notes><![CDATA[
                CallsReturns for:

                fun <T, R> Flow<T>.map(
                    transform: suspend (value: T) -> R
                ): Flow<R>

                fun <T, R> Flow<T>.mapLatest(
                    transform: suspend (value: T) -> R
                ): Flow<R>

                fun <T, R : Any> Flow<T>.mapNotNull(
                    transform: suspend (value: T) -> R?
                ): Flow<R>

                These would be better modeled with FMRs.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name matches "map(Latest|NotNull)?"
                        and namespace.name == "kotlinx.coroutines.flow"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression transform: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(transform, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>75B20B90-553D-4F3A-9F90-C6D7C16440CA</RuleID>
                <Notes><![CDATA[
                CallsReturns for:

                fun <T, R> Flow<T>.flatMapConcat(
                    transform: suspend (value: T) -> Flow<R>
                ): Flow<R>

                fun <T, R> Flow<T>.flatMapLatest(
                    transform: suspend (value: T) -> Flow<R>
                ): Flow<R>

                Separate passthrough rule exists for these functions
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name matches "flatMap(Concat|Latest)"
                        and namespace.name == "kotlinx.coroutines.flow"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression transform: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(transform, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>384A3161-738C-4359-BAB2-41982D3C1EB5</RuleID>
                <Notes><![CDATA[
                CallsReturns for:

                fun <T, R> Flow<T>.flatMapMerge(
                    concurrency: Int = DEFAULT_CONCURRENCY,
                    transform: suspend (value: T) -> Flow<R>
                ): Flow<R>

                Separate passthrough rule exists for this function
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name == "flatMapMerge"
                        and namespace.name == "kotlinx.coroutines.flow"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[2] is [Expression transform: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(transform, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>13CEC7A9-52F9-4465-ACEE-B03B96F737B6</RuleID>
                <Notes><![CDATA[
                CallsReturns for:

                suspend fun <S, T : S> Flow<T>.reduce(
                    operation: suspend (accumulator: S, value: T) -> S
                ): S (source)

                fun <T> Flow<T>.runningReduce(
                    operation: suspend (accumulator: T, value: T) -> T
                ): Flow<T>

                Like kotlin.collections.reduce, these would likely be better modeled with FMRs.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name matches "reduce|runningReduce"
                        and namespace.name == "kotlinx.coroutines.flow"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression operation: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(operation, this, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>542470F0-E7C3-4A9E-A627-CD4396BD7641</RuleID>
                <Notes><![CDATA[
                Calls and Passthrough for:

                fun <T> Flow<T>.retry(
                    retries: Long = Long.MAX_VALUE,
                    predicate: suspend (cause: Throwable) -> Boolean = { true }
                ): Flow<T>
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name == "retry"
                        and namespace.name == "kotlinx.coroutines.flow"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[2] is [Expression predicate: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(predicate)
                TaintTransfer(this, fc)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>4FD857C6-C34B-43B3-9A77-DA5BA92C01D3</RuleID>
                <Notes><![CDATA[
                Calls and Passthrough for:

                fun <T> Flow<T>.retryWhen(
                    predicate: suspend FlowCollector<T>.(cause: Throwable, attempt: Long) -> Boolean
                ): Flow<T>
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name == "retryWhen"
                        and namespace.name == "kotlinx.coroutines.flow"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression predicate: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(predicate, this)
                TaintTransfer(this, fc)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>A950047B-C8FC-4D03-B32F-DBAE1E6309E7</RuleID>
                <Notes><![CDATA[
                Calls and Passthrough for:

                fun <T> Flow<T>.onCompletion(
                    action: suspend FlowCollector<T>.(cause: Throwable?) -> Unit
                ): Flow<T>

                fun <T> Flow<T>.onEach(
                    action: suspend (T) -> Unit
                ): Flow<T>

                fun <T> Flow<T>.onEmpty(
                    action: suspend FlowCollector<T>.() -> Unit
                ): Flow<T>

                fun <T> Flow<T>.onStart(
                    action: suspend FlowCollector<T>.() -> Unit
                ): Flow<T>
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name matches "onCompletion|onEach|onEmpty|onStart"
                        and namespace.name == "kotlinx.coroutines.flow"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression action: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(action, this)
                TaintTransfer(this, fc)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>DA4C4739-4DBA-4EE8-B257-56527C052A56</RuleID>
                <Notes><![CDATA[
                Calls for:

                fun <T> Flow<T>.takeWhile(
                    predicate: suspend (T) -> Boolean
                ): Flow<T>

                Separate passthrough exists for this function
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name == "takeWhile"
                        and namespace.name == "kotlinx.coroutines.flow"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression predicate: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(predicate, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>38557D08-53D7-45A1-81C1-2EBEA9701D4C</RuleID>
                <Notes><![CDATA[
                Calls and Passthrough for:

                fun <T, R> Flow<T>.transform(
                    transform: suspend FlowCollector<R>.(value: T) -> Unit
                ): Flow<R>

                fun <T, R> Flow<T>.transformLatest(
                    transform: suspend FlowCollector<R>.(value: T) -> Unit
                ): Flow<R>

                fun <T, R> Flow<T>.transformWhile(
                    transform: suspend FlowCollector<R>.(value: T) -> Boolean
                ): Flow<R>

                Applies transform function values of the given flow
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name matches "transform(Latest|While)?"
                        and namespace.name == "kotlinx.coroutines.flow"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression transform: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(transform, this, this)
                TaintTransfer(this, fc)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>C7C1DA6A-E7BA-4B84-86E8-B2448AE5F3E3</RuleID>
                <Notes><![CDATA[
                CallsReturns for:

                fun <T1, T2, R> Flow<T1>.zip(
                    other: Flow<T2>,
                    transform: suspend (T1, T2) -> R
                ): Flow<R>

                Zips (interleaves) values from the current flow (this) with other flow using 
                provided transform function applied to each pair of values.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name == "zip"
                        and namespace.name == "kotlinx.coroutines.flow"
                    ]
                    and arguments[0] is [Expression this: ]
                    and arguments[1] is [Expression other: ]
                    and arguments[2] is [Expression transform: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(transform, this, other)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>8BFA721A-BEF7-49B8-9596-D47CE532BC31</RuleID>
                <Notes><![CDATA[
                Calls for: 

                fun CoroutineScope.launch(
                    context: CoroutineContext = EmptyCoroutineContext,
                    start: CoroutineStart = CoroutineStart.DEFAULT,
                    block: suspend CoroutineScope.() -> Unit
                ): Job

                Launches a new coroutine without blocking the current thread and
                returns a reference to the coroutine as a [Job]
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name == "launch"
                        and namespace.name == "kotlinx.coroutines"
                    ]
                    and arguments[0] is [Expression this:]
                    and arguments[3] is [Expression block: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(block, this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines</Group>
                </MetaInfo>
                <RuleID>8022F53A-34D4-43A6-8D93-8BBD892E8B81</RuleID>
                <Notes><![CDATA[
                Calls for: 

                fun dispatch(context: CoroutineContext, block: Runnable)

                Dispatches execution of a runnable [block] onto another thread in the given [context].
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name == "dispatch"
                        and enclosingClass.supers contains [Class:
                            name == "kotlinx.coroutines.CoroutineDispatcher"
                        ]
                    ]
                    and arguments[1] is [Expression block: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(block)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>8C8BBC4A-1989-4F18-9C69-62F251305847</RuleID>
                <Notes><![CDATA[
                Calls for: 

                fun <T> CoroutineScope.async(
                    context: CoroutineContext = EmptyCoroutineContext,
                    start: CoroutineStart = CoroutineStart.DEFAULT,
                    block: suspend CoroutineScope.() -> T
                ): Deferred<T>

                Creates a coroutine and returns its future result as an implementation of [Deferred]
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name == "async"
                        and namespace.name == "kotlinx.coroutines"
                    ]
                    and arguments[0] is [Expression this:]
                    and arguments[3] is [Expression block: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(block,this)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines</Group>
                </MetaInfo>
                <RuleID>9FE5E25B-E85C-4B4F-BD77-79DE9EE36F33</RuleID>
                <Notes><![CDATA[
                CallsReturns for: 

                fun <T> runBlocking(
                    context: CoroutineContext = EmptyCoroutineContext, 
                    block: suspend CoroutineScope.() -> T
                ): T

                fun <T> runInterruptible(
                    context: CoroutineContext = EmptyCoroutineContext,
                    block: () -> T
                ): T

                Calls the specified block with a given coroutine context in a interruptible manner
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name matches "run(Blocking|Interruptible)"
                        and namespace.name == "kotlinx.coroutines"
                    ]
                    and arguments[1] is [Expression block: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(block)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines</Group>
                </MetaInfo>
                <RuleID>777DB349-4FF5-4A5E-A67D-BA59EF737B35</RuleID>
                <Notes><![CDATA[
                CallsReturns for: 

                suspend fun <R> supervisorScope(
                    block: suspend CoroutineScope.() -> R
                ): R

                Creates a CoroutineScope with SupervisorJob and calls the specified suspend block with this scope
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name == "supervisorScope"
                        and namespace.name == "kotlinx.coroutines"
                    ]
                    and arguments[0] is [Expression block: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(block)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines</Group>
                </MetaInfo>
                <RuleID>CFED96F4-370E-4585-BDFD-11E5E52F1C7A</RuleID>
                <Notes><![CDATA[
                Calls for: 

                suspend fun <T> suspendCancellableCoroutine(
                    block: (CancellableContinuation<T>) -> Unit
                ): T

                Suspends the coroutine, but providing a CancellableContinuation to the block

                Needs an FMR to work properly
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name == "suspendCancellableCoroutine"
                        and namespace.name == "kotlinx.coroutines"
                    ]
                    and arguments[0] is [Expression block: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(block)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines</Group>
                </MetaInfo>
                <RuleID>D33E3279-6EAA-47F7-BA29-7FB440F2A9B4</RuleID>
                <Notes><![CDATA[
                Calls for: 

                abstract fun invokeOnCancellation(
                    handler: CompletionHandler
                ): Unit (source)

                Registers a handler to be synchronously invoked on cancellation 
                (regular or exceptional) of this continuation
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name == "invokeOnCancellation"
                        and enclosingClass.supers contains [Class:
                            name == "kotlinx.coroutines.CancellableContinuation"
                        ]
                    ]
                    and arguments[0] is [Expression handler: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(handler)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines</Group>
                </MetaInfo>
                <RuleID>AEDE4EC7-9716-4E7C-ACDD-F7BA919D1ECC</RuleID>
                <Notes><![CDATA[
                Calls for: 

                expect fun Runnable(block: () -> Unit): Runnable

                Creates Runnable task instance.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name == "Runnable"
                        and namespace.name == "kotlinx.coroutines"
                    ]
                    and arguments[0] is [Expression block: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(block)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines</Group>
                </MetaInfo>
                <RuleID>273999CD-5FCB-47B7-8918-D4AC9A4A8EB1</RuleID>
                <Notes><![CDATA[
                Calls for: 

                public suspend fun <T> withContext(
                    context: CoroutineContext,
                    block: suspend CoroutineScope.() -> T
                ): T

                Calls the specified suspending block with a given coroutine context, suspends until it completes, and returns the result.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name == "withContext"
                        and namespace.name == "kotlinx.coroutines"
                    ]
                    and arguments[1] is [Expression block: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(block)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines</Group>
                </MetaInfo>
                <RuleID>9264EF2F-F54D-4289-94CD-1FE7BF27A452</RuleID>
                <Notes><![CDATA[
                Calls for: 

                suspend fun <T> withTimeout(timeMillis: Long, block: suspend CoroutineScope.() -> T): T
                suspend fun <T> withTimeoutOrNull(timeMillis: Long, block: suspend CoroutineScope.() -> T): T?

                Runs a given suspending block of code inside a coroutine with a specified timeout
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name matches "withTimeout|withTimeoutOrNull"
                        and namespace.name == "kotlinx.coroutines"
                    ]
                    and arguments[1] is [Expression block: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(block)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines</Group>
                </MetaInfo>
                <RuleID>D4154972-8716-44EB-BEFE-9534FC311FAF</RuleID>
                <Notes><![CDATA[
                CallsReturns for:

                suspend fun <R> coroutineScope(block: suspend CoroutineScope.() -> R): R

                Creates a [CoroutineScope] and calls the specified suspend block with this scope.
                The provided scope inherits its [coroutineContext][CoroutineScope.coroutineContext] 
                from the outer scope, but overrides the context's [Job].
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name == "coroutineScope"
                        and namespace.name == "kotlinx.coroutines"
                    ]
                    and arguments[0] is [Expression block: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(block)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>9954D3B7-5E6D-470F-A8DB-D6803A5A8D0C</RuleID>
                <Notes><![CDATA[
                CallsReturns for:

                suspend inline fun <T> Mutex.withLock(owner: Any? = null, action: () -> T): T

                Executes the given [action] under this mutex's lock.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name == "withLock"
                        and namespace.name == "kotlinx.coroutines.sync"
                    ]
                    and arguments[2] is [Expression action: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(action)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Coroutines extensions</Group>
                </MetaInfo>
                <RuleID>F1051ED8-B2BE-4B0D-94CC-627A15975199</RuleID>
                <Notes><![CDATA[
                CallsReturns for:

                inline suspend fun <T> Semaphore.withPermit(action: () -> T): T

                Executes the given action, acquiring a permit from this semaphore at the beginning and releasing it after the action is completed.
                Returns the return value of the action.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc:
                    function is [Function:
                        name == "withPermit"
                        and namespace.name == "kotlinx.coroutines.sync"
                    ]
                    and arguments[1] is [Expression action: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(action)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Concurrent extensions</Group>
                </MetaInfo>
                <RuleID>1B28B24A-C16B-46C3-BE47-324048C33ED8</RuleID>
                <Notes><![CDATA[
                CallsReturns for:

                fun <T : Any> ThreadLocal<T>.getOrSet(
                    default: () -> T
                ): T

                Gets the value in the current thread's copy of this thread-local variable or replaces
                the value with the result of calling default function in case if that value was null

                Needs FMR for full support since ThreadLocal.initialValue can be called if the variable 
                has no value.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function:
                        name == "getOrSet"
                        and namespace.name == "kotlin.concurrent"
                    ]
                    and arguments[1] is [Expression default: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(default)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Concurrent extensions</Group>
                </MetaInfo>
                <RuleID>1C47AD11-C1B2-4E04-B36F-52A4ACB6E854</RuleID>
                <Notes><![CDATA[
                CallsReturns for:

                fun <T> Lock.withLock(action: () -> T): T

                Executes the given action under this lock and returns the return value of the action.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function:
                        name == "withLock"
                        and namespace.name == "kotlin.concurrent"
                    ]
                    and arguments[1] is [Expression action: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(action)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Concurrent extensions</Group>
                </MetaInfo>
                <RuleID>2D3CE56C-EC9B-4D74-9504-CA197884ACD6</RuleID>
                <Notes><![CDATA[
                CallsReturns for:

                fun <T> ReentrantReadWriteLock.read(
                    action: () -> T
                ): T

                fun <T> ReentrantReadWriteLock.write(
                    action: () -> T
                ): T

                Executes the given action under the lock and returns the return value of the action.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function:
                        name matches "read|write"
                        and namespace.name == "kotlin.concurrent"
                        and parameterTypes[0] is [Type: name == "java.util.concurrent.locks.ReentrantReadWriteLock"]
                    ]
                    and arguments[1] is [Expression action: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                CallsReturns(action)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Concurrent extensions</Group>
                </MetaInfo>
                <RuleID>1EC2F683-160D-416E-B3FB-135508C3E835</RuleID>
                <Notes><![CDATA[
                Calls for:

                fun Timer.schedule(
                    delay: Long,
                    crossinline action: TimerTask.() -> Unit
                ): TimerTask
                fun Timer.schedule(
                    time: Date,
                    crossinline action: TimerTask.() -> Unit
                ): TimerTask

                Executes the action at the specified time.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function:
                        name == "schedule"
                        and namespace.name == "kotlin.concurrent"
                    ]
                    and arguments.length == 3
                    and arguments[2] is [Expression action: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(action)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Concurrent extensions</Group>
                </MetaInfo>
                <RuleID>F0435A98-02AD-40E5-847D-7159080A8B57</RuleID>
                <Notes><![CDATA[
                Calls for:

                fun Timer.schedule(
                    delay: Long,
                    period: Long,
                    crossinline action: TimerTask.() -> Unit
                ): TimerTask
                fun Timer.schedule(
                    time: Date,
                    period: Long,
                    crossinline action: TimerTask.() -> Unit
                ): TimerTask

                Executes the action at the specified time / period interval.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function:
                        name == "schedule"
                        and namespace.name == "kotlin.concurrent"
                    ]
                    and arguments.length == 4
                    and arguments[3] is [Expression action: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(action)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Concurrent extensions</Group>
                </MetaInfo>
                <RuleID>5E0E6703-3C6F-4B4C-A5FD-55A19554C83C</RuleID>
                <Notes><![CDATA[
                Calls for:

                fun Timer.scheduleAtFixedRate(
                    delay: Long,
                    period: Long,
                    crossinline action: TimerTask.() -> Unit
                ): TimerTask
                fun Timer.scheduleAtFixedRate(
                    time: Date,
                    period: Long,
                    crossinline action: TimerTask.() -> Unit
                ): TimerTask

                Schedules an action to be executed periodically.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function:
                        name == "scheduleAtFixedRate"
                        and namespace.name == "kotlin.concurrent"
                    ]
                    and arguments.length == 4
                    and arguments[3] is [Expression action: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(action)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Concurrent extensions</Group>
                </MetaInfo>
                <RuleID>2796033A-4D90-4065-B8E3-BA513799436A</RuleID>
                <Notes><![CDATA[
                Calls for:

                fun fixedRateTimer(
                    name: String? = null,
                    daemon: Boolean = false,
                    initialDelay: Long = 0.toLong(),
                    period: Long,
                    crossinline action: TimerTask.() -> Unit
                ): Timer
                fun fixedRateTimer(
                    name: String? = null,
                    daemon: Boolean = false,
                    startAt: Date,
                    period: Long,
                    crossinline action: TimerTask.() -> Unit
                ): Timer

                Creates a timer that executes the specified action periodically.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function:
                        name == "fixedRateTimer"
                        and namespace.name == "kotlin.concurrent"
                    ]
                    and arguments[4] is [Expression action: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(action)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Concurrent extensions</Group>
                </MetaInfo>
                <RuleID>01080705-396B-4414-9838-C3B32B36C582</RuleID>
                <Notes><![CDATA[
                Calls for:

                fun thread(
                    start: Boolean = true,
                    isDaemon: Boolean = false,
                    contextClassLoader: ClassLoader? = null,
                    name: String? = null,
                    priority: Int = -1,
                    block: () -> Unit
                ): Thread

                Creates a thread that runs the specified block of code.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function:
                        name == "thread"
                        and namespace.name == "kotlin.concurrent"
                    ]
                    and arguments[5] is [Expression action: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(action)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Concurrent extensions</Group>
                </MetaInfo>
                <RuleID>D35D8743-CA90-40D2-805F-2313EEDFBF45</RuleID>
                <Notes><![CDATA[
                Calls for:

                fun timer(
                    name: String? = null,
                    daemon: Boolean = false,
                    initialDelay: Long = 0.toLong(),
                    period: Long,
                    crossinline action: TimerTask.() -> Unit
                ): Timer
                fun timer(
                    name: String? = null,
                    daemon: Boolean = false,
                    startAt: Date,
                    period: Long,
                    crossinline action: TimerTask.() -> Unit
                ): Timer

                Creates a timer that executes the specified action periodically.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function:
                        name == "timer"
                        and namespace.name == "kotlin.concurrent"
                    ]
                    and arguments[4] is [Expression action: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(action)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Concurrent extensions</Group>
                </MetaInfo>
                <RuleID>A804F498-6BB1-4267-8A45-E4BC458A85CD</RuleID>
                <Notes><![CDATA[
                Calls for:

                fun timerTask(
                    crossinline action: TimerTask.() -> Unit
                ): TimerTask

                Wraps the specified action in a TimerTask.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function:
                        name == "timerTask"
                        and namespace.name == "kotlin.concurrent"
                    ]
                    and arguments[0] is [Expression action: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(action)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin System</Group>
                </MetaInfo>
                <RuleID>C2922728-0FEA-4616-B6A0-DE7910A8523A</RuleID>
                <Notes><![CDATA[
                Calls for:

                fun measureNanoTime(block: () -> Unit): Long
                fun measureTimeMillis(block: () -> Unit): Long

                Executes the given block and returns elapsed time.
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function:
                        name matches "measureNanoTime|measureTimeMillis"
                        and namespace.name == "kotlin.system"
                    ]
                    and arguments[0] is [Expression block: not constantValue is [Null: ]]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                Calls(block)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="20.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin JVM</Group>
                </MetaInfo>
                <RuleID>F3B7BD1F-593D-43C3-ABF3-019A0CF98F65</RuleID>
                <Notes><![CDATA[
                Passthrough for:

                public static KClass getOrCreateKotlinClass(Class javaClass)

                This is an internal function and generally should not be used in
                application code. However, we need this passthrough to support 
                the ability to get an object instance from a runtime class instance.

                Here's an example using the KClass<T>.objectInstance property:

                var foo = "tainted"
                val baz = foo::class.objectInstance // should also be tainted

                SCA translates `foo::class` as:

                kotlin.jvm.internal.Reflection.getOrCreateKotlinClass(java.lang.Object.getClass(foo))

                This passthrough transfers taint from the instance of the getClass() function call (arg 0) 
                to the return of getOrCreateKotlinClass().
            ]]></Notes>
                <StructuralMatch><![CDATA[
                FunctionCall fc: fc.function is [Function: 
                        name == "getOrCreateKotlinClass"
                        and enclosingClass.supers contains [Class:
                            name == "kotlin.jvm.internal.Reflection"
                        ]
                    ]
                    /* A passthrough on java.lang.Object.getClass would create false positives. So, the 
                     * condition below exists so that we can transfer taint from the instance of the 
                     * getClass() function call to the return of the getOrCreateKotlinClass() function call. */
                    and fc.arguments[0] is [FunctionCall: 
                        function.name == "getClass" 
                        and function.enclosingClass.name == "java.lang.Object"
                        and instance is [VariableAccess obj: ]
                    ]
            ]]></StructuralMatch>
                <Definition><![CDATA[
                TaintTransfer(obj, fc)
            ]]></Definition>
            </CharacterizationRule>
            <CharacterizationRule formatVersion="21.1" language="kotlin">
                <MetaInfo>
                    <Group name="package">kotlin Script</Group>
                    <Group name="inputsource">Command Line Arguments</Group>
                    <Group name="audience">broad</Group>
                </MetaInfo>
                <RuleID>1104F50A-3F5C-41E8-8568-8FE299CEB87E</RuleID>
                <Notes><![CDATA[
                Generic entrypoint for kotlin script.
                kotlin script files are translated as classes inheriting from kotlin.script.templates.standard.ScriptTemplateWithArgs
            ]]></Notes>
                <StructuralMatch><![CDATA[
                Function f:
                  f.constructor
                  and f.enclosingClass.supers contains [Class c:
                    c.name == "kotlin.script.templates.standard.ScriptTemplateWithArgs"
                  ]
                and f.parameters[0] is [Variable v: ]
              ]]></StructuralMatch>
                <Definition><![CDATA[
                TaintEntrypoint(v, {+ARGS})
              ]]></Definition>
            </CharacterizationRule>
        </RuleDefinitions>
        <LabelDefinitions/>
        <Descriptions>
            <Description
                id="desc.dataflow.kotlin.system_information_leak" formatVersion="3.4">
                <Abstract><![CDATA[<Paragraph>The function <Replace key="EnclosingFunction.name"/> in <Replace key="PrimaryLocation.file"/> reveals system data or debug information by calling <Replace key="PrimaryCall.name"/> on line <Replace key="PrimaryLocation.line"/>. The information revealed by <Replace key="PrimaryCall.name"/> could enable an adversary to plan an attack.<AltParagraph>Revealing system data or debugging information could enable an adversary to use system information to plan an attack.</AltParagraph></Paragraph>]]></Abstract>
                <Explanation><![CDATA[An information leak occurs when system data or debug information leaves the program through an output stream or logging function.

<Paragraph>
In this case, <Replace key="PrimaryCall.name" link="PrimaryLocation"/> is called in <Replace key="PrimaryLocation.file"/> on line <Replace key="PrimaryLocation.line"/>.
</Paragraph>

<b>Example 1:</b> The following code writes an exception to the standard output stream:

<pre>
try {
    ...
} catch (e: Exception) {
    e.printStackTrace()
}
</pre>

Depending upon the system configuration, this information can be dumped to a console, written to a log file, or exposed to a remote user. For example, with scripting mechanisms it is trivial to redirect output information from &quot;Standard error&quot; or &quot;Standard output&quot; into a file or another program. Alternatively, the system that the program runs on could have a remote logging mechanism such as a &quot;syslog&quot; server that sends the logs to a remote device. During development, you have no way of knowing where this information might end up being displayed.

In some cases, the error message provides the attacker with the precise type of attack to which the system is vulnerable. For example, a database error message can reveal that the application is vulnerable to a SQL injection attack. Other error messages can reveal more oblique clues about the system. In <code>Example 1</code>, the leaked information could imply information about the type of operating system, the applications installed on the system, and the amount of care that the administrators have put into configuring the program.

Information leaks are also a concern in a mobile computing environment. With mobile platforms, applications are downloaded from various sources and are run alongside each other on the same device. The likelihood of running a piece of malware next to a banking application is high, which is why developers must be careful about the information included in messages addressed to other applications running on the device.

<b>Example 2:</b> The following code broadcasts the stack trace of a caught exception to all the registered Android receivers.
<pre>
...
try {
  ...
} catch (e: Exception) {
    val exception = Log.getStackTraceString(e)
    val intent = Intent()
    intent.action = "SEND_EXCEPTION"
    intent.putExtra("exception", exception)
    view.context.sendBroadcast(intent)
}
...
</pre>

This is another scenario specific to the mobile environment. Most mobile devices now implement a Near-Field Communication (NFC) protocol for quickly sharing information between devices using radio communication. It works by bringing devices in close proximity or having the devices touch each other. Even though the communication range of NFC is limited to just a few centimeters, eavesdropping, data modification and various other types of attacks are possible, because NFC alone does not ensure secure communication.

<b>Example 3:</b> The Android platform provides support for NFC. The following code creates a message that gets pushed to the other device within range.
<pre>
...
companion object { 
    const val TAG = "NfcActivity"
    private const val DATA_SPLITTER = "__:DATA:__"
    private const val MIME_TYPE = "application/my.applications.mimetype"
}
...
val tm = Context.getSystemService(Context.TELEPHONY_SERVICE) as TelephonyManager
val VERSION = tm.getDeviceSoftwareVersion();
...
val nfcAdapter = NfcAdapter.getDefaultAdapter(this)

val text: String = "$TAG$DATA_SPLITTER$VERSION"
val record = NdefRecord(NdefRecord.TNF_MIME_MEDIA, MIME_TYPE.getBytes(), ByteArray(0), text.toByteArray())
val records = arrayOf(record)
val msg = NdefMessage(records)
nfcAdapter.setNdefPushMessage(msg, this)
...
</pre>

An NFC Data Exchange Format (NDEF) message contains typed data, a URI, or a custom application payload. If the message contains information about the application, such as its name, MIME type, or device software version, this information could be leaked to an eavesdropper.]]></Explanation>
                <Recommendations><![CDATA[Write error messages with security in mind. In production environments, turn off detailed error information in favor of brief messages. Restrict the generation and storage of detailed output that can help administrators and programmers diagnose problems. Debug traces can sometimes appear in non-obvious places (embedded in comments in the HTML for an error page, for example).

Even brief error messages that do not reveal stack traces or database dumps can potentially aid an attacker. For example, an "Access Denied" message can reveal that a file or user exists on the system. Because of this, never send information to a resource directly outside the program.

<b>Example 4:</b> The following code broadcasts the stack trace of a caught exception within your application only, so that it cannot be leaked to other apps on the system. Additionally, this technique is more efficient than globally broadcasting through the system.

<pre>
...
try {
  ...
} catch (e: Exception) {
    val exception = Log.getStackTraceString(e);
    Inl intent = Intent()
    intent.action = "SEND_EXCEPTION"
    intent.putExtra("exception", exception)
    LocalBroadcastManager.getInstance(view.context).sendBroadcast(intent)
}
...
</pre>

If you are concerned about leaking system data via NFC on an Android device, you could do one of the following three things. Either do not include system data in the messages pushed to other devices in range, or encrypt the payload of the message, or establish secure communication channel at a higher layer.]]></Recommendations>
                <Tips>
                    <Tip><![CDATA[Do not rely on wrapper scripts, corporate IT policy, or quick-thinking system administrators to prevent system information leaks. Write software that is secure on its own.]]></Tip>
                    <Tip><![CDATA[This category of vulnerability does not apply to all types of programs. For example, if your application executes on a client machine where system information is already available to an attacker, or if you print system information only to a trusted log file, you can use Audit Guide to filter out this category from your scan results.]]></Tip>
                </Tips>
                <References>
                    <Reference>
                        <Title><![CDATA[Security in Near Field Communication (NFC): Strengths and Weaknesses]]></Title>
                        <Author><![CDATA[Ernst Haselsteiner and Klemens Breitfuss]]></Author>
                        <Source><![CDATA[http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.475.3812&rep=rep1&type=pdf]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[ERR01-J. Do not allow exceptions to expose sensitive information]]></Title>
                        <Publisher><![CDATA[CERT]]></Publisher>
                        <Source><![CDATA[https://www.securecoding.cert.org/confluence/display/java/ERR01-J.+Do+not+allow+exceptions+to+expose+sensitive+information]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[ENV02-J. Do not trust the values of environment variables]]></Title>
                        <Publisher><![CDATA[CERT]]></Publisher>
                        <Source><![CDATA[https://www.securecoding.cert.org/confluence/display/java/ENV02-J.+Do+not+trust+the+values+of+environment+variables]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[FUNDAMENTALS-4: Establish trust boundaries]]></Title>
                        <Publisher><![CDATA[Oracle]]></Publisher>
                        <Source><![CDATA[http://www.oracle.com/technetwork/java/seccodeguide-139067.html#0]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CONFIDENTIAL-1: Purge sensitive information from exceptions]]></Title>
                        <Publisher><![CDATA[Oracle]]></Publisher>
                        <Source><![CDATA[http://www.oracle.com/technetwork/java/seccodeguide-139067.html#2]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CWE ID 497]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[4] CWE ID 200]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2019]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[7] CWE ID 200]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2020]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[20] CWE ID 200]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CCI-001312, CCI-001314, CCI-002420]]></Title>
                        <Author><![CDATA[Standards Mapping - DISA Control Correlation Identifier Version 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Indirect Access to Sensitive Data]]></Title>
                        <Author><![CDATA[Standards Mapping - General Data Protection Regulation]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[AC-4 Information Flow Enforcement (P1)]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[AC-4 Information Flow Enforcement]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[5.3.4 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.5 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 8.3.2 Sensitive Private Data (L1 L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 14.3.1 Unintended Security Disclosure Requirements (L1 L2 L3), 14.3.2 Unintended Security Disclosure Requirements (L1 L2 L3), 14.3.3 Unintended Security Disclosure Requirements (L1 L2 L3), 14.2.2 Dependency (L1 L2 L3)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Application Security Verification Standard 4.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[M2 Insecure Data Storage]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Mobile Top 10 Risks 2014]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A6 Information Leakage and Improper Error Handling]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2007]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.6]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.5]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 2.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.5]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.5]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.5]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.5]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 3.6 - Sensitive Data Retention]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 3.6 - Sensitive Data Retention]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3620 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3620 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3620 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3620 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3620 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3620 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3620 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.11]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.3]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.8]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 5.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Information Leakage]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium 24 + 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Information Leakage (WASC-13)]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium Version 2.00]]></Author>
                    </Reference>
                </References>
            </Description>
            <Description
                id="desc.dataflow.kotlin.system_information_leak_external" formatVersion="3.4">
                <Abstract><![CDATA[<Paragraph>The function <Replace key="EnclosingFunction.name"/> in <Replace key="PrimaryLocation.file"/> might reveal system data or debug information by calling <Replace key="PrimaryCall.name"/> on line <Replace key="PrimaryLocation.line"/>. The information revealed by <Replace key="PrimaryCall.name"/> could enable an adversary to plan an attack.<AltParagraph>Revealing system data or debugging information could enable an adversary to use system information to plan an attack.</AltParagraph></Paragraph>]]></Abstract>
                <Explanation><![CDATA[An external information leak occurs when system data or debug information leaves the program to a remote machine via a socket or network connection. External leaks can help an attacker by revealing specific data about operating systems, full pathnames, the existence of usernames, or locations of configuration files, and are more serious than internal information leaks, which are more difficult for an attacker to access.

<Paragraph>
In this case, <Replace key="PrimaryCall.name" link="PrimaryLocation"/> is called in <Replace key="PrimaryLocation.file"/> on line <Replace key="PrimaryLocation.line"/>.
</Paragraph>

<b>Example 1:</b> The following code leaks Exception information in the HTTP response:

<pre>
protected fun doPost(req: HttpServletRequest, res: HttpServletResponse) {
    ...
    val out: PrintWriter = res.getWriter()
    try {
        ...
    } catch (e: Exception) {
        out.println(e.message)
    }
}
</pre>

This information can be exposed to a remote user. In some cases, the error message provides the attacker with the precise type of attack to which the system is vulnerable. For example, a database error message can reveal that the application is vulnerable to a SQL injection attack. Other error messages can reveal more oblique clues about the system. In <code>Example 1</code>, the leaked information could imply information about the type of operating system, the applications installed on the system, and the amount of care that the administrators have put into configuring the program.

Information leaks are also a concern in a mobile computing environment. With mobile platforms, applications are downloaded from various sources and are run alongside each other on the same device. The likelihood of running a piece of malware next to a banking application is high, which is why developers must be careful about the information included in messages addressed to other applications running on the device.

<b>Example 2:</b> The following code broadcasts the stack trace of a caught exception to all the registered Android receivers.
<pre>
...
try {
  ...
} catch (e: Exception) {
    val exception = Log.getStackTraceString(e)
    val intent = Intent()
    intent.action = "SEND_EXCEPTION"
    intent.putExtra("exception", exception)
    view.context.sendBroadcast(intent)
}
...
</pre>

This is another scenario specific to the mobile environment. Most mobile devices now implement a Near-Field Communication (NFC) protocol for quickly sharing information between devices using radio communication. It works by bringing devices in close proximity or having the devices touch each other. Even though the communication range of NFC is limited to just a few centimeters, eavesdropping, data modification and various other types of attacks are possible, because NFC alone does not ensure secure communication.

<b>Example 3:</b> The Android platform provides support for NFC. The following code creates a message that gets pushed to the other device within range.
<pre>
...
companion object { 
    const val TAG = "NfcActivity"
    private const val DATA_SPLITTER = "__:DATA:__"
    private const val MIME_TYPE = "application/my.applications.mimetype"
}
...
val tm = Context.getSystemService(Context.TELEPHONY_SERVICE) as TelephonyManager
val VERSION = tm.getDeviceSoftwareVersion();
...
val nfcAdapter = NfcAdapter.getDefaultAdapter(this)

val text: String = "$TAG$DATA_SPLITTER$VERSION"
val record = NdefRecord(NdefRecord.TNF_MIME_MEDIA, MIME_TYPE.getBytes(), ByteArray(0), text.toByteArray())
val records = arrayOf(record)
val msg = NdefMessage(records)
nfcAdapter.setNdefPushMessage(msg, this)
...
</pre>

An NFC Data Exchange Format (NDEF) message contains typed data, a URI, or a custom application payload. If the message contains information about the application, such as its name, MIME type, or device software version, this information could be leaked to an eavesdropper.]]></Explanation>
                <Recommendations><![CDATA[Write error messages with security in mind. In production environments, turn off detailed error information in favor of brief messages. Restrict the generation and storage of detailed output that can help administrators and programmers diagnose problems. Debug traces can sometimes appear in non-obvious places (embedded in comments in the HTML for an error page, for example).

Even brief error messages that do not reveal stack traces or database dumps can potentially aid an attacker. For example, an "Access Denied" message can reveal that a file or user exists on the system. Because of this, never send information to a resource directly outside the program.

<b>Example 4:</b> The following code broadcasts the stack trace of a caught exception within your application only, so that it cannot be leaked to other apps on the system. Additionally, this technique is more efficient than globally broadcasting through the system.

<pre>
...
try {
  ...
} catch (e: Exception) {
    val exception = Log.getStackTraceString(e);
    Inl intent = Intent()
    intent.action = "SEND_EXCEPTION"
    intent.putExtra("exception", exception)
    LocalBroadcastManager.getInstance(view.context).sendBroadcast(intent)
}
...
</pre>

If you are concerned about leaking system data via NFC on an Android device, you could do one of the following three things. Do not include system data in the messages pushed to other devices in range, encrypt the payload of the message, or establish a secure communication channel at a higher layer.]]></Recommendations>
                <Tips>
                    <Tip><![CDATA[Do not rely on wrapper scripts, corporate IT policy, or quick-thinking system administrators to prevent system information leaks. Write software that is secure on its own.]]></Tip>
                    <Tip><![CDATA[This category of vulnerability does not apply to all types of programs. For example, if your application executes on a client machine where system information is already available to an attacker, or if you print system information only to a trusted log file, you can use Audit Guide to filter out this category from your scan results.]]></Tip>
                </Tips>
                <References>
                    <Reference>
                        <Title><![CDATA[Security in Near Field Communication (NFC): Strengths and Weaknesses]]></Title>
                        <Author><![CDATA[Ernst Haselsteiner and Klemens Breitfuss]]></Author>
                        <Source><![CDATA[http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.475.3812&rep=rep1&type=pdf]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[ERR01-J. Do not allow exceptions to expose sensitive information]]></Title>
                        <Publisher><![CDATA[CERT]]></Publisher>
                        <Source><![CDATA[https://www.securecoding.cert.org/confluence/display/java/ERR01-J.+Do+not+allow+exceptions+to+expose+sensitive+information]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[ENV02-J. Do not trust the values of environment variables]]></Title>
                        <Publisher><![CDATA[CERT]]></Publisher>
                        <Source><![CDATA[https://www.securecoding.cert.org/confluence/display/java/ENV02-J.+Do+not+trust+the+values+of+environment+variables]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[FUNDAMENTALS-4: Establish trust boundaries]]></Title>
                        <Publisher><![CDATA[Oracle]]></Publisher>
                        <Source><![CDATA[http://www.oracle.com/technetwork/java/seccodeguide-139067.html#0]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CONFIDENTIAL-1: Purge sensitive information from exceptions]]></Title>
                        <Publisher><![CDATA[Oracle]]></Publisher>
                        <Source><![CDATA[http://www.oracle.com/technetwork/java/seccodeguide-139067.html#2]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CWE ID 215, CWE ID 489, CWE ID 497]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[4] CWE ID 200]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2019]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[7] CWE ID 200]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2020]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[20] CWE ID 200]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CCI-001312, CCI-001314, CCI-002420]]></Title>
                        <Author><![CDATA[Standards Mapping - DISA Control Correlation Identifier Version 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Indirect Access to Sensitive Data]]></Title>
                        <Author><![CDATA[Standards Mapping - General Data Protection Regulation]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[AC-4 Information Flow Enforcement (P1)]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[AC-4 Information Flow Enforcement]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[8.3.4 Sensitive Private Data (L1 L2 L3), 14.3.2 Unintended Security Disclosure Requirements (L1 L2 L3), 14.3.3 Unintended Security Disclosure Requirements (L1 L2 L3), 14.2.2 Dependency (L1 L2 L3)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Application Security Verification Standard 4.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[M2 Insecure Data Storage]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Mobile Top 10 Risks 2014]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A6 Information Leakage and Improper Error Handling]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2007]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A05 Security Misconfiguration]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.6]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.5]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 2.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.5]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.5]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.5]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.5]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 3.6 - Sensitive Data Retention]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 3.6 - Sensitive Data Retention]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3620 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3620 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3620 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3620 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3620 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3620 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3620 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.11]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.3]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.8]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002480 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 5.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Information Leakage]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium 24 + 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Information Leakage (WASC-13)]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium Version 2.00]]></Author>
                    </Reference>
                </References>
            </Description>
            <Description id="desc.dataflow.kotlin.privacy_violation" formatVersion="3.4">
                <Abstract><![CDATA[<Paragraph>The method <Replace key="EnclosingFunction.name"/> in <Replace key="PrimaryLocation.file"/> mishandles confidential information, which can compromise user privacy and is often illegal.<AltParagraph>Mishandling private information, such as customer passwords or social security numbers, can compromise user privacy and is often illegal. </AltParagraph></Paragraph>]]></Abstract>
                <Explanation><![CDATA[Privacy violations occur when:

1. Private user information enters the program.
<Paragraph>
In this case, the data comes from <Replace key="SourceFunction" link="SourceLocation"/> in <Replace key="SourceLocation.file"/> on line <Replace key="SourceLocation.line"/>.
</Paragraph>
2. The data is written to an external location, such as the console, file system, or network.
<Paragraph>
In this case, the data is passed to <Replace key="SinkFunction" link="SinkLocation"/> in <Replace key="SinkLocation.file"/> on line <Replace key="SinkLocation.line"/>.
</Paragraph>

<b>Example 1:</b> The following code contains a logging statement that tracks the records added to a database by storing the contents in a log file.

<pre>
pass = getPassword()
...
dbmsLog.println("$id:$pass:$type:$tstamp")
</pre>

The code in <code>Example 1</code> logs a plain text password to the file system. Although many developers trust the file system as a safe storage location for data, it should not be trusted implicitly, particularly when privacy is a concern.

Privacy is one of the biggest concerns in the mobile environment for a couple of reasons. One of them is a much higher chance of device loss. The other has to do with inter-process communication between mobile applications. With mobile platforms, applications are downloaded from various sources and are run alongside each other on the same device. The likelihood of running a piece of malware next to a banking application is high, which is why developers must be careful about the information included in messages addressed to other applications running on the device. Never include sensitive information in inter-process communication between mobile applications.

<b>Example 2:</b> The following code reads username and password for a given site from an Android WebView store and broadcasts them to all the registered receivers.
<pre>
...
webview.webViewClient = object : WebViewClient() {
    override fun onReceivedHttpAuthRequest(view: WebView,
        handler: HttpAuthHandler, host: String, realm: String
    ) {
        val credentials = view.getHttpAuthUsernamePassword(host, realm)
        val username = credentials!![0]
        val password = credentials[1]
        val i = Intent()
        i.action = "SEND_CREDENTIALS"
        i.putExtra("username", username)
        i.putExtra("password", password)
        view.context.sendBroadcast(i)
    }
}
...
</pre>

This example demonstrates several problems. First of all, by default, WebView credentials are stored in plain text and are not hashed. If a user has a rooted device (or uses an emulator), they can read stored passwords for given sites. Second, plain text credentials are broadcast to all the registered receivers, which means that any receiver registered to listen to intents with the <code>SEND_CREDENTIALS</code> action will receive the message. The broadcast is not even protected with a permission to limit the number of recipients, although in this case we do not recommend using permissions as a fix.

Private data can enter a program in a variety of ways:

- Directly from the user in the form of a password or personal information

- Accessed from a database or other data store by the application

- Indirectly from a partner or other third party

Typically, in the context of the mobile environment, this private information includes (along with passwords, SSNs, and other general personal information):

- Location

- Cell phone number

- Serial numbers and device IDs

- Network Operator information

- Voicemail information


Sometimes data that is not labeled as private can have a privacy implication in a different context. For example, student identification numbers are usually not considered private because there is no explicit and publicly-available mapping to an individual student's personal information. However, if a school generates identification numbers based on student social security numbers, then the identification numbers should be considered private.

Security and privacy concerns often seem to compete with each other. From a security perspective, you should record all important operations so that any anomalous activity can later be identified. However, when private data is involved, this practice can create risk.

Although there are many ways in which private data can be handled unsafely, a common risk stems from misplaced trust. Programmers often trust the operating environment in which a program runs, and therefore believe that it is acceptable to store private information on the file system, in the registry, or in other locally-controlled resources. However, even if access to certain resources is restricted, this does not guarantee that the individuals who do have access can be trusted. For example, in 2004, an unscrupulous employee at AOL sold approximately 92 million private customer email addresses to a spammer marketing an offshore gambling web site [1].

In response to such high-profile exploits, the collection and management of private data is becoming increasingly regulated. Depending on its location, the type of business it conducts, and the nature of any private data it handles, an organization may be required to comply with one or more of the following federal and state regulations:

- Safe Harbor Privacy Framework [3]

- Gramm-Leach Bliley Act (GLBA) [4]

- Health Insurance Portability and Accountability Act (HIPAA) [5]

- California SB-1386 [6]

Despite these regulations, privacy violations continue to occur with alarming frequency.]]></Explanation>
                <Recommendations><![CDATA[When security and privacy demands clash, privacy should usually be given the higher priority. To accomplish this and still maintain required security information, cleanse any private information before it exits the program.

To enforce good privacy management, develop and strictly adhere to internal privacy guidelines. The guidelines should specifically describe how an application should handle private data. If your organization is regulated by federal or state law, ensure that your privacy guidelines are sufficiently strenuous to meet the legal requirements. Even if your organization is not regulated, you must protect private information or risk losing customer confidence.

The best policy with respect to private data is to minimize its exposure. Applications, processes, and employees should not be granted access to any private data unless the access is required for the tasks that they are to perform. Just as the principle of least privilege dictates that no operation should be performed with more than the necessary privileges, access to private data should be restricted to the smallest possible group.

For mobile applications, make sure they never communicate any sensitive data to other applications running on the device. When private data needs to be stored, it should always be encrypted. For Android, as well as any other platform that uses SQLite database, SQLCipher is a good alternative. SQLCipher is an extension to the SQLite database that provides transparent 256-bit AES encryption of database files. Thus, credentials can be stored in an encrypted database.

<b>Example 3:</b> The following code demonstrates how to integrate SQLCipher into an Android application after downloading the necessary binaries, and store credentials into the database file.
<pre>
import net.sqlcipher.database.SQLiteDatabase
...
    SQLiteDatabase.loadLibs(this)
    val dbFile: File = getDatabasePath("credentials.db")
    dbFile.mkdirs()
    dbFile.delete()
    val db = SQLiteDatabase.openOrCreateDatabase(dbFile, "credentials", null)
    db.execSQL("create table credentials(u, p)")
    db.execSQL(
        "insert into credentials(u, p) values(?, ?)",
        arrayOf&lt;Any&gt;(username, password)
    )
...
</pre>

Note that references to <code>android.database.sqlite.SQLiteDatabase</code> are substituted with those of <code>net.sqlcipher.database.SQLiteDatabase</code>.

To enable encryption on the WebView store, you must recompile WebKit with the <code>sqlcipher.so</code> library.

<b>Example 4:</b> The following code reads username and password for a given site from an Android WebView store and instead of broadcasting them to all the registered receivers, it only broadcasts internally so that the broadcast is only seen by other parts of the same application.
<pre>
...
webview.webViewClient = object : WebViewClient() {
    override fun onReceivedHttpAuthRequest(view: WebView,
        handler: HttpAuthHandler, host: String, realm: String
    ) {
        val credentials = view.getHttpAuthUsernamePassword(host, realm)
        val username = credentials!![0]
        val password = credentials[1]
        val i = Intent()
        i.action = "SEND_CREDENTIALS"
        i.putExtra("username", username)
        i.putExtra("password", password)
        LocalBroadcastManager.getInstance(view.context).sendBroadcast(i)
    }
}
...
</pre>]]></Recommendations>
                <Tips>
                    <Tip><![CDATA[As part of any thorough audit for privacy violations, ensure that custom rules are written to identify all sources of private or otherwise sensitive information entering the program. Most sources of private data cannot be identified automatically. Without custom rules, your check for privacy violations is likely to be substantially incomplete.]]></Tip>
                    <Tip><![CDATA[A number of modern web frameworks provide mechanisms to perform user input validation (including Struts and Spring MVC). To highlight the unvalidated sources of input, Fortify Secure Coding Rulepacks dynamically re-prioritize the issues Fortify Static Code Analyzer reports by lowering their probability of exploit and providing pointers to the supporting evidence whenever the framework validation mechanism is in use. We refer to this feature as Context-Sensitive Ranking. To further assist the Fortify user with the auditing process, the Fortify Software Security Research group makes available the Data Validation project template that groups the issues into folders based on the validation mechanism applied to their source of input.]]></Tip>
                </Tips>
                <References>
                    <Reference>
                        <Title><![CDATA[AOL man pleads guilty to selling 92m email addies]]></Title>
                        <Author><![CDATA[J. Oates]]></Author>
                        <Publisher><![CDATA[The Register]]></Publisher>
                        <PublishedDate>2005</PublishedDate>
                        <Source><![CDATA[https://www.theregister.co.uk/2005/02/07/aol_email_theft/]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Privacy Initiatives]]></Title>
                        <Publisher><![CDATA[U.S. Federal Trade Commission]]></Publisher>
                        <Source><![CDATA[http://www.ftc.gov/privacy/]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Safe Harbor Privacy Framework]]></Title>
                        <Publisher><![CDATA[U.S. Department of Commerce]]></Publisher>
                        <Source><![CDATA[http://www.export.gov/safeharbor/]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Financial Privacy: The Gramm-Leach Bliley Act (GLBA)]]></Title>
                        <Publisher><![CDATA[Federal Trade Commission]]></Publisher>
                        <Source><![CDATA[http://www.ftc.gov/privacy/glbact/index.html]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Health Insurance Portability and Accountability Act (HIPAA)]]></Title>
                        <Publisher><![CDATA[U.S. Department of Human Services]]></Publisher>
                        <Source><![CDATA[http://www.hhs.gov/ocr/hipaa/]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[California SB-1386]]></Title>
                        <Publisher><![CDATA[Government of the State of California]]></Publisher>
                        <PublishedDate>2002</PublishedDate>
                        <Source><![CDATA[https://leginfo.legislature.ca.gov/faces/billTextClient.xhtml?bill_id=200120020SB1386]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Writing Secure Code, Second Edition]]></Title>
                        <Author><![CDATA[M. Howard, D. LeBlanc]]></Author>
                        <Publisher><![CDATA[Microsoft Press]]></Publisher>
                        <PublishedDate>2003</PublishedDate>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SQLCipher.]]></Title>
                        <Source><![CDATA[http://sqlcipher.net/]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[FUNDAMENTALS-4: Establish trust boundaries]]></Title>
                        <Publisher><![CDATA[Oracle]]></Publisher>
                        <Source><![CDATA[http://www.oracle.com/technetwork/java/seccodeguide-139067.html#0]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CONFIDENTIAL-2: Do not log highly sensitive information]]></Title>
                        <Publisher><![CDATA[Oracle]]></Publisher>
                        <Source><![CDATA[http://www.oracle.com/technetwork/java/seccodeguide-139067.html#2]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CWE ID 359]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[4] CWE ID 200]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2019]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[7] CWE ID 200]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2020]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[20] CWE ID 200]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CCI-000169, CCI-000196, CCI-000197, CCI-001199, CCI-001312, CCI-001314]]></Title>
                        <Author><![CDATA[Standards Mapping - DISA Control Correlation Identifier Version 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Privacy Violation]]></Title>
                        <Author><![CDATA[Standards Mapping - General Data Protection Regulation]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[AC-4 Information Flow Enforcement (P1)]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[AC-4 Information Flow Enforcement]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[2.2.1 General Authenticator Requirements (L1 L2 L3), 2.6.3 Look-up Secret Verifier Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.10.2 Service Authentication Requirements (L2 L3), 2.10.3 Service Authentication Requirements (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 6.2.1 Algorithms (L1 L2 L3), 8.2.1 Client-side Data Protection (L1 L2 L3), 8.2.2 Client-side Data Protection (L1 L2 L3), 8.3.6 Sensitive Private Data (L2 L3), 8.1.1 General Data Protection (L2 L3), 8.1.2 General Data Protection (L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.1 Malicious Code Search (L2 L3), 14.3.3 Unintended Security Disclosure Requirements (L1 L2 L3)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Application Security Verification Standard 4.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[M2 Insecure Data Storage]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Mobile Top 10 Risks 2014]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A6 Information Leakage and Improper Error Handling]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2007]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A6 Sensitive Data Exposure]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2013]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A3 Sensitive Data Exposure]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2017]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A02 Cryptographic Failures]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.4]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 6.5.6, Requirement 8.4]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 6.5.5, Requirement 8.4]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 2.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 3.2, Requirement 3.4, Requirement 4.2, Requirement 8.2.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 3.3 - Sensitive Data Retention, Control Objective 6.1 - Sensitive Data Protection, Control Objective 7 - Use of Cryptography, Control Objective A.2.3 - Cardholder Data Protection]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 3.3 - Sensitive Data Retention, Control Objective 6.1 - Sensitive Data Protection, Control Objective 7 - Use of Cryptography, Control Objective A.2.3 - Cardholder Data Protection, Control Objective B.2.5 - Terminal Software Design]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Porous Defenses - CWE ID 311]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Porous Defenses - CWE ID 311]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2011]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3210.1 CAT II, APP3310 CAT I, APP3340 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3210.1 CAT II, APP3340 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3210.1 CAT II, APP3340 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3210.1 CAT II, APP3340 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3210.1 CAT II, APP3340 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3210.1 CAT II, APP3340 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3210.1 CAT II, APP3340 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.11]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.3]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.8]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-000650 CAT II, APSC-DV-001740 CAT I, APSC-DV-001750 CAT I, APSC-DV-002330 CAT II, APSC-DV-002570 CAT II, APSC-DV-002580 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 5.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Information Leakage]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium 24 + 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Information Leakage (WASC-13)]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium Version 2.00]]></Author>
                    </Reference>
                </References>
            </Description>
            <Description
                id="desc.dataflow.kotlin.denial_of_service_regular_expression" formatVersion="3.4">
                <Abstract><![CDATA[Untrusted data is passed to the application and used as a regular expression. This can cause the thread to overconsume CPU resources.]]></Abstract>
                <Explanation><![CDATA[There is a vulnerability in implementations of regular expression evaluators and related methods that can cause the thread to hang when evaluating regular expressions that contain a grouping expression that is itself repeated. Additionally, any regular expression that contains alternate subexpressions that overlap one another can also be exploited. Attackers can use this defect to execute a Denial of Service (DoS) attack.
<b>Example:</b>
<pre>
  (e+)+
  ([a-zA-Z]+)*
  (e|ee)+
</pre>
There are no known regular expression implementations that are immune to this vulnerability. All platforms and languages are vulnerable to this attack.]]></Explanation>
                <Recommendations><![CDATA[Do not allow untrusted data to be used as regular expression patterns.]]></Recommendations>
                <References>
                    <Reference>
                        <Title><![CDATA[Regular Expression Denial of Service Attacks and Defenses]]></Title>
                        <Author><![CDATA[Bryan Sullivan]]></Author>
                        <Source><![CDATA[http://msdn.microsoft.com/en-us/magazine/ff646973.aspx]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[IDS08-J. Sanitize untrusted data included in a regular expression]]></Title>
                        <Publisher><![CDATA[CERT]]></Publisher>
                        <Source><![CDATA[https://www.securecoding.cert.org/confluence/display/java/IDS08-J.+Sanitize+untrusted+data+included+in+a+regular+expression]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[DOS-1: Beware of activities that may use disproportionate resources]]></Title>
                        <Publisher><![CDATA[Oracle]]></Publisher>
                        <Source><![CDATA[http://www.oracle.com/technetwork/java/seccodeguide-139067.html#1]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CWE ID 185, CWE ID 730]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CCI-001094]]></Title>
                        <Author><![CDATA[Standards Mapping - DISA Control Correlation Identifier Version 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SC-5 Denial of Service Protection (P1)]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SC-5 Denial of Service Protection]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A9 Application Denial of Service]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2004]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.9]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.6]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.6]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.6]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.6]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 4.2 - Critical Asset Protection]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP6080 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP6080 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP6080 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP6080 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP6080 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP6080 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP6080 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002400 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002400 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002400 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.11]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002400 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002400 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.3]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002400 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002400 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002400 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002400 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002400 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.8]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002400 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002400 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 5.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Denial of Service]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium 24 + 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Denial of Service (WASC-10)]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium Version 2.00]]></Author>
                    </Reference>
                </References>
            </Description>
            <Description
                id="desc.semantic.kotlin.password_management_hardcoded_password" formatVersion="3.4">
                <Abstract><![CDATA[Hardcoded passwords can compromise system security in a way that is not easy to remedy.]]></Abstract>
                <Explanation><![CDATA[It is never a good idea to hardcode a password. Not only does hardcoding a password allow all of the project's developers to view the password, it also makes fixing the problem extremely difficult. After the code is in production, the password cannot be changed without patching the software. If the account protected by the password is compromised, the owners of the system must choose between security and availability.
<Paragraph>
In this case, a hardcoded password was found in the call to <Replace key="PrimaryCall.name" link="PrimaryLocation"/> in <Replace key="PrimaryLocation.file"/> on line <Replace key="PrimaryLocation.line"/>.
</Paragraph>

<b>Example 1:</b> The following code uses a hardcoded password to connect to a database:

<pre>
...
DriverManager.getConnection(url, "scott", "tiger")
...
</pre>

This code will run successfully, but anyone who has access to it will have access to the password. After the program ships, there is likely no way to change the database user "scott" with a password of "tiger" unless the program is patched. An employee with access to this information can use it to break into the system. Even worse, if attackers have access to the bytecode for the application they can use the <code>javap -c</code> command to access the disassembled code, which will contain the values of the passwords used. The result of this operation might look something like the following for <code>Example 1</code>:

<pre>
javap -c ConnMngr.class

22: ldc   #36; //String jdbc:mysql://ixne.com/rxsql
24: ldc   #38; //String scott
26: ldc   #17; //String tiger
</pre>

In the mobile environment, password management is especially important given that there is such a high chance of device loss.
<b>Example 2:</b> The following code uses hardcoded username and password to setup authentication for viewing protected pages with Android's WebView.
<pre>
...
webview.webViewClient = object : WebViewClient() {
    override fun onReceivedHttpAuthRequest( view: WebView,
        handler: HttpAuthHandler, host: String, realm: String
    ) {
        handler.proceed("guest", "allow")
    }
}
...
</pre>

Similar to <code>Example 1</code>, this code will run successfully, but anyone who has access to it will have access to the password.]]></Explanation>
                <Recommendations><![CDATA[Passwords should never be hardcoded and should generally be obfuscated and managed in an external source. Storing passwords in plain text anywhere on the system allows anyone with sufficient permissions to read and potentially misuse the password. At the very least, hash passwords before storing them.

Some third-party products claim the ability to securely manage passwords. For example, WebSphere Application Server 4.x uses a simple XOR encryption algorithm for obfuscating values, but be skeptical about such facilities. WebSphere and other application servers offer outdated and relatively weak encryption mechanisms that are insufficient for security-sensitive environments. Today, the best option for a secure generic solution is to create a proprietary mechanism yourself.

For Android, as well as any other platform that uses SQLite database, SQLCipher is a good alternative. SQLCipher is an extension to the SQLite database that provides transparent 256-bit AES encryption of database files. Thus, credentials can be stored in an encrypted database.

<b>Example 3:</b> The following code demonstrates how to integrate SQLCipher into an Android application after downloading the necessary binaries, and store credentials into the database file.
<pre>
import net.sqlcipher.database.SQLiteDatabase
...
    SQLiteDatabase.loadLibs(this)
    val dbFile: File = getDatabasePath("credentials.db")
    dbFile.mkdirs()
    dbFile.delete()
    val db = SQLiteDatabase.openOrCreateDatabase(dbFile, "credentials", null)
    db.execSQL("create table credentials(u, p)")
    db.execSQL(
        "insert into credentials(u, p) values(?, ?)",
        arrayOf&lt;Any&gt;(username, password)
    )
...
</pre>

Note that references to <code>android.database.sqlite.SQLiteDatabase</code> are substituted with those of <code>net.sqlcipher.database.SQLiteDatabase</code>.

To enable encryption on the WebView store, you must recompile WebKit with the <code>sqlcipher.so</code> library.]]></Recommendations>
                <Tips>
                    <Tip><![CDATA[To identify <code>null</code>, empty, or hardcoded passwords, default rules only consider fields and variables that contain the word <code>password</code>. However, the Fortify Custom Rules Editor provides the Password Management wizard that makes it easy to create rules for detecting password management issues on custom-named fields and variables.]]></Tip>
                </Tips>
                <References>
                    <Reference>
                        <Title><![CDATA[SQLCipher.]]></Title>
                        <Source><![CDATA[http://sqlcipher.net/]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[MSC03-J. Never hard code sensitive information]]></Title>
                        <Publisher><![CDATA[CERT]]></Publisher>
                        <Source><![CDATA[https://www.securecoding.cert.org/confluence/display/java/MSC03-J.+Never+hard+code+sensitive+information]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CWE ID 259, CWE ID 798]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[13] CWE ID 287, [19] CWE ID 798]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2019]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[14] CWE ID 287, [20] CWE ID 798]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2020]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[14] CWE ID 287, [16] CWE ID 798]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[14] CWE ID 287, [15] CWE ID 798]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2022]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CCI-000196, CCI-001199, CCI-002367, CCI-003109]]></Title>
                        <Author><![CDATA[Standards Mapping - DISA Control Correlation Identifier Version 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[IA]]></Title>
                        <Author><![CDATA[Standards Mapping - FIPS200]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insufficient Data Protection]]></Title>
                        <Author><![CDATA[Standards Mapping - General Data Protection Regulation]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SC-28 Protection of Information at Rest (P1)]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SC-28 Protection of Information at Rest]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[2.3.1 Authenticator Lifecycle Requirements (L1 L2 L3), 2.6.2 Look-up Secret Verifier Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.10.1 Service Authentication Requirements (L2 L3), 2.10.2 Service Authentication Requirements (L2 L3), 2.10.4 Service Authentication Requirements (L2 L3), 3.5.2 Token-based Session Management (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 6.4.1 Secret Management (L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3), 10.2.3 Malicious Code Search (L3)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Application Security Verification Standard 4.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[M2 Insecure Data Storage]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Mobile Top 10 Risks 2014]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A8 Insecure Storage]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2004]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A8 Insecure Cryptographic Storage]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2007]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A7 Insecure Cryptographic Storage]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A6 Sensitive Data Exposure]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2013]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A3 Sensitive Data Exposure]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2017]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A07 Identification and Authentication Failures]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8, Requirement 8.4]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.3.1.3, Requirement 6.5.8, Requirement 8.4]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.3.1, Requirement 6.5.3, Requirement 8.4]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 2.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.3.1, Requirement 6.5.3, Requirement 8.2.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.3.1, Requirement 6.5.3, Requirement 8.2.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.3.1, Requirement 6.5.3, Requirement 8.2.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.3.1, Requirement 6.5.3, Requirement 8.2.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 5.3 - Authentication and Access Control, Control Objective 6.3 - Sensitive Data Protection, Control Objective 7 - Use of Cryptography]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 5.3 - Authentication and Access Control, Control Objective 6.3 - Sensitive Data Protection, Control Objective 7 - Use of Cryptography]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Porous Defenses - CWE ID 259]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2009]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Porous Defenses - CWE ID 798]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Porous Defenses - CWE ID 798]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2011]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3210.1 CAT II, APP3340 CAT I, APP3350 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.11]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.3]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.8]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-001740 CAT I, APSC-DV-002330 CAT II, APSC-DV-003110 CAT I, APSC-DV-003270 CAT II, APSC-DV-003280 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 5.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insufficient Authentication]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium 24 + 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insufficient Authentication (WASC-01)]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium Version 2.00]]></Author>
                    </Reference>
                </References>
            </Description>
            <Description
                id="desc.semantic.kotlin.key_management_hardcoded_encryption_key" formatVersion="3.4">
                <Abstract><![CDATA[Hardcoded encryption keys can compromise security in a way that is not easy to remedy.]]></Abstract>
                <Explanation><![CDATA[It is never a good idea to hardcode an encryption key because it allows all of the project's developers to view the encryption key, and makes fixing the problem extremely difficult. After the code is in production, a software patch is required to change the encryption key. If the account that is protected by the encryption key is compromised, the owners of the system must choose between security and availability.

<Paragraph>
In this case, the encryption key is located at <Replace key="PrimaryCall.name" link="PrimaryLocation"/> in <Replace key="PrimaryLocation.file"/> on line <Replace key="PrimaryLocation.line"/>.
</Paragraph>
<b>Example 1:</b> The following code uses a hardcoded encryption key:

<pre>
...
val encryptionKey = "lakdsljkalkjlksdfkl"
val keyBytes = encryptionKey.toByteArray()
val key = SecretKeySpec(keyBytes, "AES")
val encryptCipher: Cipher = Cipher.getInstance("AES")
encryptCipher.init(Cipher.ENCRYPT_MODE, key)
...
</pre>

Anyone with access to the code has access to the encryption key. After the application has shipped, there is no way to change the encryption key unless the program is patched. An employee with access to this information can use it to break into the system. If attackers had access to the executable for the application, they could extract the encryption key value.]]></Explanation>
                <Recommendations><![CDATA[Encryption keys should never be hardcoded and should be obfuscated and managed in an external source. Storing encryption keys in plain text anywhere on the system allows anyone with sufficient permissions to read and potentially misuse the encryption key.]]></Recommendations>
                <References>
                    <Reference>
                        <Title><![CDATA[MSC03-J. Never hard code sensitive information]]></Title>
                        <Publisher><![CDATA[CERT]]></Publisher>
                        <Source><![CDATA[https://www.securecoding.cert.org/confluence/display/java/MSC03-J.+Never+hard+code+sensitive+information]]></Source>
                    </Reference>
                </References>
            </Description>
            <Description
                id="desc.dataflow.kotlin.denial_of_service_stringbuilder" formatVersion="3.4">
                <Abstract><![CDATA[<Paragraph>The call to <Replace key="PrimaryCall.name"/> in <Replace key="PrimaryLocation.file"/> on line <Replace key="PrimaryLocation.line"/> appends untrusted data to a <code>StringBuilder</code> or <code>StringBuffer</code> instance initialized with the default backing array size (16). This can cause the JVM to overconsume heap memory space.<AltParagraph>Appending untrusted data to a <code>StringBuilder</code> or <code>StringBuffer</code> instance initialized with the default backing array size can cause the JVM to overconsume heap memory space.</AltParagraph></Paragraph>]]></Abstract>
                <Explanation><![CDATA[Appending user-controlled data to a <code>StringBuilder</code> or <code>StringBuffer</code> instance initialized with the default backing character array size (16) can cause the application to consume large amounts of heap memory while resizing the underlying array to fit the user's data. When data is appended to a <code>StringBuilder</code> or <code>StringBuffer</code> instance, the instance will determine if the backing character array has enough free space to store the data. If the data does not fit, the <code>StringBuilder</code>  or <code>StringBuffer</code> instance will create a new array with a capacity of at least double the previous array size, and the old array will remain in the heap until it is garbage collected. Attackers can use this implementation detail to execute a Denial of Service (DoS) attack.

<b>Example 1: </b>User-controlled data is appended to a <code>StringBuilder</code> instance initialized with the default constructor.
<pre>
    ...
    val sb = StringBuilder()
    val labels = request.getParameterValues("label")
    for (label in labels) {
        sb.appendln(label)
    }
    ...
</pre>]]></Explanation>
                <Recommendations><![CDATA[Initialize the <code>StringBuilder</code> or <code>StringBuffer</code> with an initial capacity of the expected appended data size to reduce the number of times the backing array is resized. Check the size of the data before appending it to a <code>StringBuilder</code> or <code>StringBuffer</code> instance.

<b>Example 2: </b>User-controlled data is appended to a <code>StringBuilder</code> instance initialized with the initial capacity constructor, and the data length is checked before appending to ensure that the initial <code>StringBuilder</code> capacity is not exceeded to prevent resizing of the backing array.
<pre>
    ...
    private val BUFFER_CAPACITY = 5200
    var sb = StringBuilder(BUFFER_CAPACITY)
    ...
    val lineSeparator = System.lineSeparator()
    val labels: Array&lt;String&gt; = request.getParameterValues("label")
    for (label in labels) {
        if (label.length + lineSeparator.length + sb.length &lt;= sb.capacity()) {
            sb.appendln(label)
        } else {
            // Handle error
        }
    }
    ...
</pre>

<b>Example 3: </b>User-controlled data is appended to a <code>StringBuffer</code> instance initialized with the initial capacity constructor, and the string length and number of data items are checked to limit the amount of data that can be appended to the <code>StringBuffer</code>.
<pre>
    ...
    private val MAX_LABEL_LEN = 50
    private val MAX_LABEL_ITEMS = 100
    private val BUFFER_CAPACITY = 5200
    val sb = StringBuffer(BUFFER_CAPACITY)
    ...
    val labels: Array&lt;String&gt; = request.getParameterValues("label")
    if (labels.size &lt;= MAX_LABEL_ITEMS) {
        for (label in labels) {
            if (label.length &lt;= MAX_LABEL_LEN) {
                sb.appendln(label)
            } else {
                // Handle error
            }
        }
    } else {
        // Handle error
    }
    ...
</pre>]]></Recommendations>
                <Tips>
                    <Tip><![CDATA[The recommended fix for this weakness might not be detectable, and therefore you might need to perform additional auditing after remediation to confirm the fix. After you confirm the weakness is removed, you can safely suppress the issue.]]></Tip>
                </Tips>
                <References>
                    <Reference>
                        <Title><![CDATA[DOS-1: Beware of activities that may use disproportionate resources]]></Title>
                        <Publisher><![CDATA[Oracle]]></Publisher>
                        <Source><![CDATA[http://www.oracle.com/technetwork/java/seccodeguide-139067.html#1]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[MSC05-J. Do not exhaust heap space]]></Title>
                        <Publisher><![CDATA[CERT]]></Publisher>
                        <Source><![CDATA[https://www.securecoding.cert.org/confluence/display/java/MSC05-J.+Do+not+exhaust+heap+space]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CCI-001094]]></Title>
                        <Author><![CDATA[Standards Mapping - DISA Control Correlation Identifier Version 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SC-5 Denial of Service Protection (P1)]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SC-5 Denial of Service Protection]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A9 Application Denial of Service]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2004]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 2.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.6]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.6]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.6]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 4.2 - Critical Asset Protection]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Risky Resource Management - CWE ID 754]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP6080 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP6080 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002400 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002400 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002400 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.11]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002400 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002400 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.3]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002400 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002400 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002400 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002400 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002400 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.8]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002400 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002400 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 5.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Denial of Service (WASC-10)]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium Version 2.00]]></Author>
                    </Reference>
                </References>
            </Description>
            <Description id="desc.dataflow.kotlin.formula_injection" formatVersion="3.4">
                <Abstract><![CDATA[<Paragraph>Attackers might control data written to a spreadsheet when calling <Replace key="PrimaryCall.name"/> at <Replace key="PrimaryLocation.file"/> line <Replace key="PrimaryLocation.line"/>, which could enable them to target users who open the file on certain spreadsheet processors.<AltParagraph>Attackers might control data written to a spreadsheet, which could enable them to target users who open the file on certain spreadsheet processors.</AltParagraph></Paragraph>]]></Abstract>
                <Explanation><![CDATA[Popular spreadsheet processors such as Apache OpenOffice Calc and Microsoft Office Excel support powerful formula operations that might enable attackers in control of the spreadsheet to run arbitrary commands on the underlying system or leak sensitive information on the spreadsheet.

As an example, the attacker may inject the following payload as part of a CSV field: <code>=cmd|'/C calc.exe'!Z0</code>. If the user who opens the spreadsheet trusts the origin of the document, they might accept all the security prompts presented by the spreadsheet processor and let the payload (in this example, opening the Windows calculator) run on their system.

<b>Example: </b>The following example shows a Spring Controller that generates a CSV response with non-sanitized user-controlled data:

<pre>
    @RequestMapping(value = "/api/service.csv")
    fun service(@RequestParam("name") name: String): ResponseEntity&lt;String&gt; {
        val responseHeaders = HttpHeaders()
        responseHeaders.add("Content-Type", "application/csv; charset=utf-8")
        responseHeaders.add("Content-Disposition", "attachment;filename=file.csv")
        val data: String = generateCSVFor(name)
        return ResponseEntity(data, responseHeaders, HttpStatus.OK)
    }
</pre>]]></Explanation>
                <Recommendations><![CDATA[The best way to prevent injection attacks is with a level of indirection: create a list of legitimate values from which the user must select. With this approach, the user-provided input is never used directly to specify the resource name.

In some situations, this approach is impractical because the set of legitimate resource names is too large or too hard to maintain. Programmers often resort to implementing a deny list in these situations. A deny list is used to selectively reject or escape potentially dangerous characters before using the input. However, any such list of unsafe characters is likely to be incomplete and will almost certainly become out of date. A better approach is to create a list of characters that are permitted to appear in the resource name and accept input composed exclusively of characters in the approved set.

In the case of formula injection, it would be ideal to use an allow list to verify only alphanumeric characters are included. If this approach is not feasible, at least check a deny list to prevent the following characters: <code>=</code>, <code>+</code>, <code>-</code> and <code>@</code>.]]></Recommendations>
                <References>
                    <Reference>
                        <Title><![CDATA[Formula Injection]]></Title>
                        <Publisher><![CDATA[Pentest Magazine]]></Publisher>
                        <Source><![CDATA[https://pentestmag.com/formula-injection/]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Comma Separated Vulnerabilities]]></Title>
                        <Publisher><![CDATA[Context]]></Publisher>
                        <Source><![CDATA[https://www.contextis.com/resources/blog/comma-separated-vulnerabilities/]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CWE ID 1236]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CCI-002754]]></Title>
                        <Author><![CDATA[Standards Mapping - DISA Control Correlation Identifier Version 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI]]></Title>
                        <Author><![CDATA[Standards Mapping - FIPS200]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Indirect Access to Sensitive Data]]></Title>
                        <Author><![CDATA[Standards Mapping - General Data Protection Regulation]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI-10 Information Input Validation (P1)]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI-10 Information Input Validation]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A6 Injection Flaws]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2004]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A2 Injection Flaws]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2007]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A1 Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A1 Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2013]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A1 Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2017]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A03 Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.3.1.1, Requirement 6.5.4]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 2.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 4.2 - Critical Asset Protection, Control Objective 5.4 - Authentication and Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 4.2 - Critical Asset Protection, Control Objective 5.4 - Authentication and Access Control, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3600 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3600 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3600 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3600 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3600 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3600 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3600 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.11]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.3]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.8]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 5.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Improper Input Handling (WASC-20)]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium Version 2.00]]></Author>
                    </Reference>
                </References>
            </Description>
            <Description
                id="desc.dataflow.kotlin.system_information_leak_internal" formatVersion="3.4">
                <Abstract><![CDATA[<Paragraph>The function <Replace key="EnclosingFunction.name"/> in <Replace key="PrimaryLocation.file"/> might reveal system data or debug information by calling <Replace key="PrimaryCall.name"/> on line <Replace key="PrimaryLocation.line"/>. The information revealed by <Replace key="PrimaryCall.name"/> could enable an adversary to plan an attack.<AltParagraph>Revealing system data or debugging information could enable an adversary to use system information to plan an attack.</AltParagraph></Paragraph>]]></Abstract>
                <Explanation><![CDATA[An internal information leak occurs when system data or debug information is sent to a local file, console, or screen via printing or logging.

<Paragraph>
In this case, <Replace key="PrimaryCall.name" link="PrimaryLocation"/> is called in <Replace key="PrimaryLocation.file"/> on line <Replace key="PrimaryLocation.line"/>.
</Paragraph>

<b>Example 1:</b> The following code writes an exception to the standard error stream:

<pre>
try {
    ...
} catch (e: Exception) {
    e.printStackTrace()
}
</pre>

Depending upon the system configuration, this information can be dumped to a console, written to a log file, or exposed to a user. In some cases, the error message provides the attacker with the precise type of attack to which the system is vulnerable. For example, a database error message can reveal that the application is vulnerable to a SQL injection attack. Other error messages can reveal more oblique clues about the system. In <code>Example 1</code>, the leaked information could imply information about the type of operating system, the applications installed on the system, and the amount of care that the administrators have put into configuring the program.

Information leaks are also a concern in a mobile computing environment.

<b>Example 2:</b> The following code logs the stack trace of a caught exception on the Android platform.
<pre>
...
try {
  ...
} catch (e: Exception) {
    Log.e(TAG, Log.getStackTraceString(e))
}
...
</pre>]]></Explanation>
                <Recommendations><![CDATA[Write error messages with security in mind. In production environments, turn off detailed error information in favor of brief messages. Restrict the generation and storage of detailed output that can help administrators and programmers diagnose problems. Debug traces can sometimes appear in non-obvious places (embedded in comments in the HTML for an error page, for example).

Even brief error messages that do not reveal stack traces or database dumps can potentially aid an attacker. For example, an "Access Denied" message can reveal that a file or user exists on the system. ]]></Recommendations>
                <Tips>
                    <Tip><![CDATA[Do not rely on wrapper scripts, corporate IT policy, or quick-thinking system administrators to prevent system information leaks. Write software that is secure on its own.]]></Tip>
                    <Tip><![CDATA[This category of vulnerability does not apply to all types of programs. For example, if your application executes on a client machine where system information is already available to an attacker, or if you print system information only to a trusted log file, you can use Audit Guide to filter out this category from your scan results.]]></Tip>
                </Tips>
                <References>
                    <Reference>
                        <Title><![CDATA[Security in Near Field Communication (NFC): Strengths and Weaknesses]]></Title>
                        <Author><![CDATA[Ernst Haselsteiner and Klemens Breitfuss]]></Author>
                        <Source><![CDATA[http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.475.3812&rep=rep1&type=pdf]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[ERR01-J. Do not allow exceptions to expose sensitive information]]></Title>
                        <Publisher><![CDATA[CERT]]></Publisher>
                        <Source><![CDATA[https://www.securecoding.cert.org/confluence/display/java/ERR01-J.+Do+not+allow+exceptions+to+expose+sensitive+information]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[ENV02-J. Do not trust the values of environment variables]]></Title>
                        <Publisher><![CDATA[CERT]]></Publisher>
                        <Source><![CDATA[https://www.securecoding.cert.org/confluence/display/java/ENV02-J.+Do+not+trust+the+values+of+environment+variables]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[FUNDAMENTALS-4: Establish trust boundaries]]></Title>
                        <Publisher><![CDATA[Oracle]]></Publisher>
                        <Source><![CDATA[http://www.oracle.com/technetwork/java/seccodeguide-139067.html#0]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CONFIDENTIAL-1: Purge sensitive information from exceptions]]></Title>
                        <Publisher><![CDATA[Oracle]]></Publisher>
                        <Source><![CDATA[http://www.oracle.com/technetwork/java/seccodeguide-139067.html#2]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CWE ID 497]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[4] CWE ID 200]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2019]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[7] CWE ID 200]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2020]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[20] CWE ID 200]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CCI-001312, CCI-002420]]></Title>
                        <Author><![CDATA[Standards Mapping - DISA Control Correlation Identifier Version 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Indirect Access to Sensitive Data]]></Title>
                        <Author><![CDATA[Standards Mapping - General Data Protection Regulation]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[AC-4 Information Flow Enforcement (P1)]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[AC-4 Information Flow Enforcement]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[8.3.2 Sensitive Private Data (L1 L2 L3), 8.3.4 Sensitive Private Data (L1 L2 L3), 14.3.3 Unintended Security Disclosure Requirements (L1 L2 L3)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Application Security Verification Standard 4.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[M2 Insecure Data Storage]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Mobile Top 10 Risks 2014]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A6 Information Leakage and Improper Error Handling]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2007]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A05 Security Misconfiguration]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.6]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.5]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 2.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.5]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.5]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.5]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.5]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 3.6 - Sensitive Data Retention]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 3.6 - Sensitive Data Retention]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3620 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3620 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3620 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3620 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3620 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3620 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3620 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002480 CAT II, APSC-DV-002570 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002480 CAT II, APSC-DV-002570 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002480 CAT II, APSC-DV-002570 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.11]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002480 CAT II, APSC-DV-002570 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002480 CAT II, APSC-DV-002570 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.3]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002480 CAT II, APSC-DV-002570 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002480 CAT II, APSC-DV-002570 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002480 CAT II, APSC-DV-002570 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002480 CAT II, APSC-DV-002570 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002480 CAT II, APSC-DV-002570 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.8]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002480 CAT II, APSC-DV-002570 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002480 CAT II, APSC-DV-002570 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 5.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Information Leakage]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium 24 + 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Information Leakage (WASC-13)]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium Version 2.00]]></Author>
                    </Reference>
                </References>
            </Description>
            <Description id="desc.dataflow.kotlin.path_manipulation" formatVersion="3.12">
                <Abstract><![CDATA[<Paragraph>Attackers can control the file system path argument to <Replace key="PrimaryCall.name"/> at <Replace key="PrimaryLocation.file"/> line <Replace key="PrimaryLocation.line"/>, which allows them to access or modify otherwise protected files.<AltParagraph>Allowing user input to control paths used in file system operations could enable an attacker to access or modify otherwise protected system resources.</AltParagraph></Paragraph>]]></Abstract>
                <Explanation><![CDATA[Path manipulation errors occur when the following two conditions are met:

1. An attacker can specify a path used in an operation on the file system.

2. By specifying the resource, the attacker gains a capability that would not otherwise be permitted.

For example, the program might give the attacker the ability to overwrite the specified file or run with a configuration controlled by the attacker.
<Paragraph>
In this case, the attacker can specify the value that enters the program at <Replace key="SourceFunction" link="SourceLocation"/> in <Replace key="SourceLocation.file"/> on line <Replace key="SourceLocation.line"/>, and this value is used to access a file system resource at <Replace key="SinkFunction" link="SinkLocation"/> in <Replace key="SinkLocation.file"/> on line <Replace key="SinkLocation.line"/>.
</Paragraph>
<IfDef var="ConditionalDescriptions">
 <Paragraph>
  <ConditionalText condition="taint:number">
Even though the data in this case is a number, it is unvalidated and thus still considered malicious, hence the vulnerability is still reported but with reduced priority values.
  </ConditionalText>
 </Paragraph>
</IfDef>

<b>Example 1:</b> The following code uses input from an HTTP request to create a file name. The programmer has not considered the possibility that an attacker could provide a file name such as "<code>../../tomcat/conf/server.xml</code>", which causes the application to delete one of its own configuration files.

<pre>
val rName: String = request.getParameter("reportName")
val rFile = File("/usr/local/apfr/reports/$rName")
...
rFile.delete()
</pre>

<b>Example 2:</b> The following code uses input from a configuration file to determine which file to open and echo back to the user. If the program runs with adequate privileges and malicious users can change the configuration file, they can use the program to read any file on the system that ends with the extension <code>.txt</code>.

<pre>
fis = FileInputStream(cfg.getProperty("sub").toString() + ".txt")
amt = fis.read(arr)
out.println(arr)
</pre>

Some think that in the mobile environment, classic vulnerabilities, such as path manipulation, do not make sense -- why would the user attack themself? However, keep in mind that the essence of mobile platforms is applications that are downloaded from various sources and run alongside each other on the same device. The likelihood of running a piece of malware next to a banking application is high, which necessitates expanding the attack surface of mobile applications to include inter-process communication.

<b>Example 3:</b> The following code adapts <code>Example 1</code> to the Android platform.

<pre>
...
        val rName: String = getIntent().getExtras().getString("reportName")
        val rFile: File = getBaseContext().getFileStreamPath(rName)
...
        rFile.delete()
...
</pre>]]></Explanation>
                <Recommendations><![CDATA[The best way to prevent path manipulation is with a level of indirection: create a list of legitimate values from which the user must select. With this approach, the user-provided input is never used directly to specify the resource name.

In some situations this approach is impractical because the set of legitimate resource names is too large or too hard to maintain. Programmers often resort to implementing a deny list in these situations. A deny list is used to selectively reject or escape potentially dangerous characters before using the input. However, any such list of unsafe characters is likely to be incomplete and will almost certainly become out of date. A better approach is to create a list of characters that are permitted to appear in the resource name and accept input composed exclusively of characters in the approved set.]]></Recommendations>
                <Tips>
                    <Tip><![CDATA[If the program performs custom input validation to your satisfaction, use the Fortify Custom Rules Editor to create a cleanse rule for the validation routine.]]></Tip>
                    <Tip><![CDATA[Implementation of an effective deny list is notoriously difficult. One should be skeptical if validation logic requires implementing a deny list. Consider different types of input encoding and different sets of metacharacters that might have special meaning when interpreted by different operating systems, databases, or other resources. Determine whether or not the deny list can be updated easily, correctly, and completely if these requirements ever change.]]></Tip>
                    <Tip><![CDATA[A number of modern web frameworks provide mechanisms to perform user input validation (including Struts and Spring MVC). To highlight the unvalidated sources of input, Fortify Secure Coding Rulepacks dynamically re-prioritize the issues Fortify Static Code Analyzer reports by lowering their probability of exploit and providing pointers to the supporting evidence whenever the framework validation mechanism is in use. We refer to this feature as Context-Sensitive Ranking. To further assist the Fortify user with the auditing process, the Fortify Software Security Research group makes available the Data Validation project template that groups the issues into folders based on the validation mechanism applied to their source of input.]]></Tip>
                </Tips>
                <References>
                    <Reference>
                        <Title><![CDATA[Exploiting Software]]></Title>
                        <Author><![CDATA[G. Hoglund, G. McGraw]]></Author>
                        <Publisher><![CDATA[Addison-Wesley]]></Publisher>
                        <PublishedDate>2004</PublishedDate>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[FIO00-J. Do not operate on files in shared directories]]></Title>
                        <Publisher><![CDATA[CERT]]></Publisher>
                        <Source><![CDATA[https://www.securecoding.cert.org/confluence/display/java/FIO00-J.+Do+not+operate+on+files+in+shared+directories]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CWE ID 22, CWE ID 73]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[10] CWE ID 022]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2019]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[12] CWE ID 022]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2020]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[8] CWE ID 022]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[8] CWE ID 022]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2022]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CCI-002754]]></Title>
                        <Author><![CDATA[Standards Mapping - DISA Control Correlation Identifier Version 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI]]></Title>
                        <Author><![CDATA[Standards Mapping - FIPS200]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Access Violation]]></Title>
                        <Author><![CDATA[Standards Mapping - General Data Protection Regulation]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Rule 1.3]]></Title>
                        <Author><![CDATA[Standards Mapping - MISRA C 2012]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Rule 0-3-1]]></Title>
                        <Author><![CDATA[Standards Mapping - MISRA C++ 2008]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI-10 Information Input Validation (P1)]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI-10 Information Input Validation]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[5.2.2 Sanitization and Sandboxing Requirements (L1 L2 L3), 12.3.1 File Execution Requirements (L1 L2 L3), 12.3.2 File Execution Requirements (L1 L2 L3)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Application Security Verification Standard 4.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[M8 Security Decisions Via Untrusted Inputs]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Mobile Top 10 Risks 2014]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A1 Unvalidated Input]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2004]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Insecure Direct Object Reference]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2007]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Insecure Direct Object References]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Insecure Direct Object References]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2013]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A5 Broken Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2017]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A01 Broken Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.3.1.1, Requirement 6.5.4]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 2.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 4.2 - Critical Asset Protection, Control Objective 5.4 - Authentication and Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 4.2 - Critical Asset Protection, Control Objective 5.4 - Authentication and Access Control, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Risky Resource Management - CWE ID 426]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2009]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Risky Resource Management - CWE ID 022]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Risky Resource Management - CWE ID 022]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2011]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3600 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3600 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3600 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3600 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3600 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3600 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3600 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.11]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.3]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.8]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 5.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Path Traversal]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium 24 + 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Path Traversal (WASC-33)]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium Version 2.00]]></Author>
                    </Reference>
                </References>
            </Description>
            <Description
                id="desc.dataflow.kotlin.server_side_request_forgery" formatVersion="3.4">
                <Abstract><![CDATA[<Paragraph>The function <Replace key="PrimaryCall.name"/> on line <Replace key="PrimaryLocation.line"/> initiates a network connection to a third-party system using user-controlled data for resource URI. An attacker might leverage this vulnerability to send a request on behalf of the application server since the request will originate from the application server's internal IP address.<AltParagraph>The application initiates a network connection to a third-party system using user-controlled data to craft the resource URI.</AltParagraph></Paragraph>]]></Abstract>
                <Explanation><![CDATA[A Server-Side Request Forgery occurs when an attacker can influence a network connection made by the application server. The network connection will originate from the application server's internal IP and an attacker can use this connection to bypass network controls and scan or attack internal resources that are not otherwise exposed.

<Paragraph>
In this case, <Replace key="PrimaryCall.name" link="PrimaryLocation"/> is called in <Replace key="PrimaryLocation.file"/> on line <Replace key="PrimaryLocation.line"/>.
</Paragraph>

<b>Example:</b> In the following example, an attacker can control the URL to which the server is connecting.

<pre>
val url: String = request.getParameter("url")
val httpclient: CloseableHttpClient = HttpClients.createDefault()
val httpGet = HttpGet(url)
val response1: CloseableHttpResponse = httpclient.execute(httpGet)
</pre>

The attacker's ability to hijack the network connection depends on the specific part of the URI that can be controlled, and on the libraries used to establish the connection. For example, controlling the URI scheme lets the attacker use protocols different from <code>http</code> or <code>https</code> like:

- up://
- ldap://
- jar://
- gopher://
- mailto://
- ssh2://
- telnet://
- expect://

An attacker can leverage this hijacked network connection to perform the following attacks:

- Port Scanning of intranet resources.
- Bypass firewalls.
- Attack vulnerable programs running on the application server or on the intranet.
- Attack internal/external web applications using Injection attacks or CSRF.
- Access local files using file:// scheme.
- On Windows systems, file:// scheme and UNC paths can allow an attacker to scan and access internal shares.
- Perform a DNS cache poisoning attack.
]]></Explanation>
                <Recommendations><![CDATA[Do not establish network connections based on user-controlled data and ensure that the request is being sent to the expected destination. If user data is necessary to build the destination URI, use a level of indirection: create a list of legitimate resource names from which the user must select. With this approach, the user-provided input is never used directly to specify the resource name.

In some situations this approach is impractical because the set of legitimate resource names is too large or too hard to maintain. Programmers often resort to implementing a deny list in these situations. A deny list is used to selectively reject or escape potentially dangerous characters before using the input. However, any such list of unsafe characters is likely to be incomplete and will almost certainly become out of date. A better approach is to create a list of characters that are permitted to appear in the resource name and accept input composed exclusively of characters in the approved set.

Also, if required, make sure that the user input is only used to specify a resource on the target system but that the URI scheme, host, and port is controlled by the application. This way the damage that an attacker is able to do will be significantly reduced.]]></Recommendations>
                <References>
                    <Reference>
                        <Title><![CDATA[SSRF vs. Business critical applications]]></Title>
                        <Author><![CDATA[Alexander Polyakov]]></Author>
                        <Publisher><![CDATA[BlackHat 2012]]></Publisher>
                        <Source><![CDATA[http://media.blackhat.com/bh-us-12/Briefings/Polyakov/BH_US_12_Polyakov_SSRF_Business_Slides.pdf]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SSRF bible. Cheatsheet]]></Title>
                        <Publisher><![CDATA[ONSec Labs]]></Publisher>
                        <Source><![CDATA[https://docs.google.com/document/d/1v1TkWZtrhzRLy0bYXBcdLUedXGb9njTNIJXa3u9akHM/edit]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CWE ID 918]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[24] CWE ID 918]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[21] CWE ID 918]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2022]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CCI-002754]]></Title>
                        <Author><![CDATA[Standards Mapping - DISA Control Correlation Identifier Version 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI]]></Title>
                        <Author><![CDATA[Standards Mapping - FIPS200]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Access Violation]]></Title>
                        <Author><![CDATA[Standards Mapping - General Data Protection Regulation]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI-10 Information Input Validation (P1)]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI-10 Information Input Validation]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[5.2.6 Sanitization and Sandboxing Requirements (L1 L2 L3), 12.6.1 SSRF Protection Requirements (L1 L2 L3)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Application Security Verification Standard 4.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[M5 Poor Authorization and Authentication]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Mobile Top 10 Risks 2014]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A1 Unvalidated Input]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2004]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Insecure Direct Object Reference]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2007]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Insecure Direct Object References]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Insecure Direct Object References]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2013]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A5 Broken Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2017]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A10 Server-Side Request Forgery]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.3.1.1, Requirement 6.5.4]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 2.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 4.2 - Critical Asset Protection, Control Objective 5.4 - Authentication and Access Control]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 4.2 - Critical Asset Protection, Control Objective 5.4 - Authentication and Access Control, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3600 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3600 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3600 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3600 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3600 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3600 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3600 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.11]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.3]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.8]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 5.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Abuse of Functionality (WASC-42)]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium Version 2.00]]></Author>
                    </Reference>
                </References>
            </Description>
            <Description
                id="desc.dataflow.kotlin.trust_boundary_violation" formatVersion="3.4">
                <Abstract><![CDATA[<Paragraph>The method <Replace key="EnclosingFunction.name"/> in <Replace key="PrimaryLocation.file"/> commingles trusted and untrusted data in the same data structure, which encourages programmers to mistakenly trust unvalidated data.<AltParagraph>Commingling trusted and untrusted data in the same data structure encourages programmers to mistakenly trust unvalidated data.</AltParagraph></Paragraph>]]></Abstract>
                <Explanation><![CDATA[A trust boundary can be thought of as line drawn through a program. On one side of the line, data is untrusted. On the other side of the line, data is assumed to be trustworthy. The purpose of validation logic is to allow data to safely cross the trust boundary--to move from untrusted to trusted.

A trust boundary violation occurs when a program blurs the line between what is trusted and what is untrusted. The most common way to make this mistake is to allow trusted and untrusted data to commingle in the same data structure.

<Paragraph>
In this case, the untrusted data enters at <Replace key="SourceFunction" link="SourceLocation"/> in <Replace key="SourceLocation.file"/> on line <Replace key="SourceLocation.line"/>. The data is added to what is generally used as a trusted data structure at the call to <Replace key="SinkFunction" link="SinkLocation"/> in <Replace key="SinkLocation.file"/> on line <Replace key="SinkLocation.line"/>.
</Paragraph>

<b>Example:</b> The following Kotlin code accepts an HTTP request and stores the <code>usrname</code> parameter in the HTTP session object before checking to ensure that the user has been authenticated.

<pre>
val usrname: String = request.getParameter("usrname")
if (session.getAttribute(ATTR_USR) != null) {
    session.setAttribute(ATTR_USR, usrname)
}
</pre>

Without well-established and maintained trust boundaries, programmers will inevitably lose track of which pieces of data have been validated and which have not. This confusion eventually allows some data to be used without first being validated.]]></Explanation>
                <Recommendations><![CDATA[Define clear trust boundaries in the application. Do not use the same data structure to hold trusted data in some contexts and untrusted data in other contexts. Minimize the number of ways that data can move across a trust boundary.

Trust boundary violations sometimes occur when input needs to be built up over a series of user interactions before being processed. It may not be possible to do complete input validation until all of the data has arrived. In these situations, it is still important to maintain a trust boundary. The untrusted data should be built up in a single untrusted data structure, validated, and then moved into a trusted location.]]></Recommendations>
                <Tips>
                    <Tip><![CDATA[Do not feel that you need to find a "smoking gun" situation in which data that has not been validated is assumed to be trusted. If trust boundaries are not clearly delineated and respected, validation errors are inevitable. Instead of spending time searching for an exploitable scenario, concentrate on teaching programmers to create good trust boundaries.]]></Tip>
                    <Tip><![CDATA[Most programs have trust boundaries that are defined by the semantics of the application. Consider writing custom rules to check for other places where user input crosses a trust boundary.]]></Tip>
                    <Tip><![CDATA[A number of modern web frameworks provide mechanisms to perform user input validation (including Struts and Spring MVC). To highlight the unvalidated sources of input, Fortify Secure Coding Rulepacks dynamically re-prioritize the issues Fortify Static Code Analyzer reports by lowering their probability of exploit and providing pointers to the supporting evidence whenever the framework validation mechanism is in use. We refer to this feature as Context-Sensitive Ranking. To further assist the Fortify user with the auditing process, the Fortify Software Security Research group makes available the Data Validation project template that groups the issues into folders based on the validation mechanism applied to their source of input.]]></Tip>
                </Tips>
                <References>
                    <Reference>
                        <Title><![CDATA[Writing Secure Code, Second Edition]]></Title>
                        <Author><![CDATA[M. Howard, D. LeBlanc]]></Author>
                        <Publisher><![CDATA[Microsoft Press]]></Publisher>
                        <PublishedDate>2003</PublishedDate>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[FUNDAMENTALS-4: Establish trust boundaries]]></Title>
                        <Publisher><![CDATA[Oracle]]></Publisher>
                        <Source><![CDATA[http://www.oracle.com/technetwork/java/seccodeguide-139067.html#0]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CWE ID 501]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CCI-001084, CCI-002754]]></Title>
                        <Author><![CDATA[Standards Mapping - DISA Control Correlation Identifier Version 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI]]></Title>
                        <Author><![CDATA[Standards Mapping - FIPS200]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Indirect Access to Sensitive Data]]></Title>
                        <Author><![CDATA[Standards Mapping - General Data Protection Regulation]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI-10 Information Input Validation (P1)]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI-10 Information Input Validation]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[M8 Security Decisions Via Untrusted Inputs]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Mobile Top 10 Risks 2014]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A1 Unvalidated Input]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2004]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A04 Insecure Design]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.3.1.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002360 CAT II, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002360 CAT II, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002360 CAT II, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.11]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002360 CAT II, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002360 CAT II, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.3]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002360 CAT II, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002360 CAT II, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002360 CAT II, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002360 CAT II, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002360 CAT II, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.8]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002360 CAT II, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002360 CAT II, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 5.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Improper Input Handling (WASC-20)]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium Version 2.00]]></Author>
                    </Reference>
                </References>
            </Description>
            <Description
                id="desc.dataflow.kotlin.cross_site_scripting_poor_validation" formatVersion="3.12">
                <Abstract><![CDATA[<Paragraph>The method <Replace key="EnclosingFunction.name"/> in <Replace key="PrimaryLocation.file"/> uses HTML, XML, or other types of encoding that is not always enough to prevent malicious code from reaching the web browser.<AltParagraph>Relying on HTML, XML, and other types of encoding to validate user input can result in the browser executing malicious code.</AltParagraph></Paragraph>]]></Abstract>
                <Explanation><![CDATA[The use of certain encoding constructs, such as the <code>&lt;c:out/&gt;</code> tag with the <code>escapeXml="true"</code> attribute (the default behavior), prevents some, but not all cross-site scripting attacks. Depending on the context in which the data appear, characters beyond the basic &lt;, &gt;, &amp;, and " that are HTML-encoded and those beyond &lt;, &gt;, &amp;, ", and ' that are XML-encoded might take on meta-meaning. Relying on such encoding constructs is equivalent to using a weak deny list to prevent cross-site scripting and might allow an attacker to inject malicious code that will be executed in the browser. Because accurately identifying the context in which the data appear statically is not always possible, Fortify Static Code Analyzer reports cross-site scripting findings even when encoding is applied and presents them as Cross-Site Scripting: Poor Validation issues.

Cross-site scripting (XSS) vulnerabilities occur when:

1. Data enters a web application through an untrusted source. In the case of reflected XSS, an untrusted source is most frequently a web request, and in the case of persistent (also known as stored) XSS -- it is the results of a database query.

<Paragraph>
In this case, the data enters at <Replace key="SourceFunction" link="SourceLocation"/> in <Replace key="SourceLocation.file"/> on line <Replace key="SourceLocation.line"/>.
</Paragraph>
2. The data is included in dynamic content that is sent to a web user without validation.
<Paragraph>
In this case, the data is weakly encoded at <Replace key="SinkFunction" link="SinkLocation"/> in <Replace key="SinkLocation.file"/> on line <Replace key="SinkLocation.line"/>.
</Paragraph>
The malicious content sent to the web browser often takes the form of a JavaScript segment, but can also include HTML, Flash or any other type of code that the browser executes. The variety of attacks based on XSS is almost limitless, but they commonly include transmitting private data such as cookies or other session information to the attacker, redirecting the victim to web content controlled by the attacker, or performing other malicious operations on the user's machine under the guise of the vulnerable site.

<Paragraph>
<b>Example 1:</b> The following code reads an employee ID, <code>eid</code>, from an HTTP servlet request, escapes any HTML characters from the input, then displays the value back to the user.

<pre>
val eid = request.getParameter("eid")
eid = StringEscapeUtils.escapeHtml(eid);    // insufficient validation
...
Employee ID: &lt;%= eid %&gt;
</pre>
</Paragraph>

The code in this example operates correctly if <code>eid</code> contains only standard alphanumeric text. If <code>eid</code> has a value that includes metacharacters or source code, then the code is executed by the web browser as it displays the HTTP response.

Initially this might not appear to be much of a vulnerability. After all, why would someone enter a URL that causes malicious code to run on their own computer? The real danger is that an attacker will create the malicious URL, then use email or social engineering tricks to lure victims into visiting a link to the URL. When victims click the link, they unwittingly reflect the malicious content through the vulnerable web application back to their own computers. This mechanism of exploiting vulnerable web applications is known as Reflected XSS.

<Paragraph>
<b>Example 2:</b> The following code segment queries a database for an employee with a given ID for their name, escapes any HTML characters therein, and prints the name in the servlet response.

<pre>
...
val stmt: Statement = conn.createStatement()
val rs: ResultSet = stmt.executeQuery("select * from emp where id=$eid")
rs.next()
val name = StringEscapeUtils.escapeHtml(rs.getString("name")) // insufficient validation
...
val out: ServletOutputStream = response.getOutputStream()
out.print("Employee Name: $name")
...
out.close()
...
</pre>
</Paragraph>

As in <code>Example 1</code>, this code functions correctly when the values of <code>name</code> are well-behaved, but it does nothing to prevent exploits if they are not. Again, this code can appear less dangerous because the value of <code>name</code> is read from a database, whose contents are apparently managed by the application. However, if the value of <code>name</code> originates from user-supplied data, then the database can be a conduit for malicious content. Without proper input validation on all data stored in the database, an attacker may execute malicious commands in the user's web browser. This type of exploit, known as Persistent (or Stored) XSS, is particularly insidious because the indirection caused by the data store makes it difficult to identify the threat and increases the possibility that the attack might affect multiple users. XSS got its start in this form with web sites that offered a "guestbook" to visitors. Attackers would include JavaScript in their guestbook entries, and all subsequent visitors to the guestbook page would execute the malicious code.

Some think that in the mobile environment, classic web application vulnerabilities, such as cross-site scripting, do not make sense -- why would the user attack themself? However, keep in mind that the essence of mobile platforms is applications that are downloaded from various sources and run alongside each other on the same device. The likelihood of running a piece of malware next to a banking application is high, which necessitates expanding the attack surface of mobile applications to include inter-process communication.

<b>Example 3:</b> The following code enables JavaScript in Android's WebView (by default, JavaScript is disabled) and loads a page based on the value received from an Android intent.

<pre>
...
        val webview = findViewById&lt;View&gt;(R.id.webview) as WebView
        webview.settings.javaScriptEnabled = true
        val url = this.intent.extras!!.getString("url")
        webview.loadUrl(URLEncoder.encode(url))
...
</pre>

If the value of <code>url</code> starts with <code>javascript:</code>, JavaScript code that follows executes within the context of the web page inside WebView.

As the examples demonstrate, XSS vulnerabilities are caused by code that includes unvalidated data in an HTTP response. There are three vectors by which an XSS attack can reach a victim:

- As in <code>Example 1</code>, data is read directly from the HTTP request and reflected back in the HTTP response. Reflected XSS exploits occur when an attacker causes a user to supply dangerous content to a vulnerable web application, which is then reflected back to the user and executed by the web browser. The most common mechanism for delivering malicious content is to include it as a parameter in a URL that is posted publicly or emailed directly to victims. URLs constructed in this manner constitute the core of many phishing schemes, whereby an attacker convinces victims to visit a URL that refers to a vulnerable site. After the site reflects the attacker's content back to the user, the content is executed and proceeds to transfer private information, such as cookies that might include session information, from the user's machine to the attacker or perform other nefarious activities.

- As in <code>Example 2</code>, the application stores dangerous data in a database or other trusted data store. The dangerous data is subsequently read back into the application and included in dynamic content. Persistent XSS exploits occur when an attacker injects dangerous content into a data store that is later read and included in dynamic content. From an attacker's perspective, the optimal place to inject malicious content is in an area that is displayed to either many users or particularly interesting users. Interesting users typically have elevated privileges in the application or interact with sensitive data that is valuable to the attacker. If one of these users executes malicious content, the attacker may be able to perform privileged operations on behalf of the user or gain access to sensitive data belonging to the user.

- As in <code>Example 3</code>, a source outside the application stores dangerous data in a database or other data store, and the dangerous data is subsequently read back into the application as trusted data and included in dynamic content.

<IfDef var="ConditionalDescriptions"><Paragraph>
<ConditionalText condition="tracenode:form field validator tracenode:action form declaration tracenode:action declaration tracenode:action field validator tracenode:command class validator">A number of modern web frameworks provide mechanisms to perform user input validation (including Struts and Spring MVC). To highlight the unvalidated sources of input, Fortify Secure Coding Rulepacks dynamically re-prioritize the issues Fortify Static Code Analyzer reports by lowering their probability of exploit and providing pointers to the supporting evidence whenever the framework validation mechanism is in use. We refer to this feature as Context-Sensitive Ranking. To further assist the Fortify user with the auditing process, the Fortify Software Security Research group makes available the Data Validation project template that groups the issues into folders based on the validation mechanism applied to their source of input.</ConditionalText>
</Paragraph></IfDef>
<IfNotDef var="ConditionalDescriptions">
A number of modern web frameworks provide mechanisms to perform user input validation (including Struts and Spring MVC). To highlight the unvalidated sources of input, Fortify Secure Coding Rulepacks dynamically re-prioritize the issues Fortify Static Code Analyzer reports by lowering their probability of exploit and providing pointers to the supporting evidence whenever the framework validation mechanism is in use. We refer to this feature as Context-Sensitive Ranking. To further assist the Fortify user with the auditing process, the Fortify Software Security Research group makes available the Data Validation project template that groups the issues into folders based on the validation mechanism applied to their source of input.
</IfNotDef>]]></Explanation>
                <Recommendations><![CDATA[The solution to prevent XSS is to ensure that validation occurs in the required places and that relevant properties are set to prevent vulnerabilities.

Because XSS vulnerabilities occur when an application includes malicious data in its output, one logical approach is to validate data immediately before it leaves the application. However, because web applications often have complex and intricate code for generating dynamic content, this method is prone to errors of omission (missing validation). An effective way to mitigate this risk is to also perform input validation for XSS.

Web applications must validate all input to prevent other vulnerabilities, such as SQL injection, so augmenting an application's existing input validation mechanism to include checks for XSS is generally relatively easy. Despite its value, input validation for XSS does not take the place of rigorous output validation. An application might accept input through a shared data store or other trusted source, and that data store might accept input from a source that does not perform adequate input validation. Therefore, the application cannot implicitly rely on the safety of this or any other data. This means that the best way to prevent XSS vulnerabilities is to validate everything that enters the application and leaves the application destined for the user.

The most secure approach to validation for XSS is to create an allow list of safe characters that can appear in HTTP content and accept input composed exclusively of characters in the approved set. For example, a valid username might only include alphanumeric characters or a phone number might only include digits 0-9. However, this solution is often infeasible in web applications because many characters that have special meaning to the browser must be considered valid input after they are encoded, such as a web design bulletin board that must accept HTML fragments from its users.

A more flexible, but less secure approach is to implement a deny list, which selectively rejects or escapes potentially dangerous characters before using the input. To form such a list, you first need to understand the set of characters that hold special meaning for web browsers. Although the HTML standard defines which characters have special meaning, many web browsers try to correct common mistakes in HTML and might treat other characters as special in certain contexts. This is why we do not recommend the use of deny lists as a means to prevent XSS. The CERT(R) Coordination Center at the Software Engineering Institute at Carnegie Mellon University provides the following details about special characters in various contexts [1]:

In the content of a block-level element (in the middle of a paragraph of text):

- "&lt;" is special because it introduces a tag.

- "&amp;" is special because it introduces a character entity.

- "&gt;" is special because some browsers treat it as special, on the assumption that the author of the page intended to include an opening "&lt;", but omitted it in error.

The following principles apply to attribute values:

- In attribute values enclosed in double quotes, the double quotes are special because they mark the end of the attribute value.

- In attribute values enclosed in single quotes, the single quotes are special because they mark the end of the attribute value.

- In attribute values without any quotes, white-space characters, such as space and tab, are special.

- "&amp;" is special when used with certain attributes, because it introduces a character entity.

In URLs, for example, a search engine might provide a link within the results page that the user can click to re-run the search. This can be implemented by encoding the search query inside the URL, which introduces additional special characters:

- Space, tab, and new line are special because they mark the end of the URL.

- "&amp;" is special because it either introduces a character entity or separates CGI parameters.

- Non-ASCII characters (that is, everything greater than 127 in the ISO-8859-1 encoding) are not allowed in URLs, so they are considered to be special in this context.

- The "%" symbol must be filtered from input anywhere parameters encoded with HTTP escape sequences are decoded by server-side code. For example, "%" must be filtered if input such as "%68%65%6C%6C%6F" becomes "hello" when it appears on the web page.


Within the body of a &lt;SCRIPT&gt; &lt;/SCRIPT&gt;:

- Semicolons, parentheses, curly braces, and new line characters must be filtered out in situations where text could be inserted directly into a pre-existing script tag.

Server-side scripts:

- Server-side scripts that convert any exclamation characters (!) in input to double-quote characters (") on output might require additional filtering.

Other possibilities:

- If an attacker submits a request in UTF-7, the special character '&lt;' appears as '+ADw-' and might bypass filtering. If the output is included in a page that does not explicitly specify an encoding format, then some browsers try to intelligently identify the encoding based on the content (in this case, UTF-7).

After you identify the correct points in an application to perform validation for XSS attacks and what special characters the validation should consider, the next challenge is to identify how your validation handles special characters. If special characters are not considered valid input to the application, then you can reject any input that contains special characters as invalid. A second option is to remove special characters with filtering. However, filtering has the side effect of changing any visual representation of the filtered content and might be unacceptable in circumstances where the integrity of the input must be preserved for display.

If input containing special characters must be accepted and displayed accurately, validation must encode any special characters to remove their significance. A complete list of ISO 8859-1 encoded values for special characters is provided as part of the official HTML specification [2].

Many application servers attempt to limit an application's exposure to cross-site scripting vulnerabilities by providing implementations for the functions responsible for setting certain specific HTTP response content that perform validation for the characters essential to a cross-site scripting attack. Do not rely on the server running your application to make it secure. For any developed application, there are no guarantees about which application servers it will run on during its lifetime. As standards and known exploits evolve, there are no guarantees that application servers will continue to stay in sync.]]></Recommendations>
                <Tips>
                    <Tip><![CDATA[The Fortify Secure Coding Rulepacks warn about SQL Injection and Access Control: Database issues when untrusted data is written to a database and also treat the database as a source of untrusted data, which can lead to XSS vulnerabilities. If the database is a trusted resource in your environment, use custom filters to filter out dataflow issues that include the DATABASE taint flag or originate from database sources. Nonetheless, it is often still a good idea to validate everything read from the database.]]></Tip>
                    <Tip><![CDATA[Even though URL encoding untrusted data protects against many XSS attacks, some browsers (specifically, Internet Explorer 6 and 7 and possibly others) automatically decode content at certain locations within the Document Object Model (DOM) prior to passing it to the JavaScript interpreter. To reflect this danger, the Rulepacks no longer treat URL encoding routines as sufficient to protect against cross-site scripting. Data values that are URL encoded and subsequently output will cause Fortify to report Cross-Site Scripting: Poor Validation vulnerabilities.]]></Tip>
                    <Tip><![CDATA[To differentiate between the data that are encoded and those that are not, use the Data Validation project template that groups the issues into folders based on the type of encoding applied to their source of input.]]></Tip>
                </Tips>
                <References>
                    <Reference>
                        <Title><![CDATA[Understanding Malicious Content Mitigation for Web Developers]]></Title>
                        <Publisher><![CDATA[CERT]]></Publisher>
                        <Source><![CDATA[https://resources.sei.cmu.edu/library/asset-view.cfm?assetid=496719#9]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[HTML 4.01 Specification]]></Title>
                        <Publisher><![CDATA[W3]]></Publisher>
                        <Source><![CDATA[https://www.w3.org/TR/html401/sgml/entities.html#h-24.2]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Attacks on WebView in the Android System]]></Title>
                        <Author><![CDATA[Tongbo Luo, Hao Hao, Wenliang Du, Yifei Wang, and Heng Yin]]></Author>
                        <Source><![CDATA[http://www.cis.syr.edu/~wedu/Research/paper/webview_acsac2011.pdf]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Bifocals: Analyzing WebView Vulnerabilities in Android Applications]]></Title>
                        <Author><![CDATA[Erika Chin and David Wagner]]></Author>
                        <Source><![CDATA[https://people.eecs.berkeley.edu/~daw/papers/bifocals-wisa13.pdf]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[INJECT-3: XML and HTML generation requires care]]></Title>
                        <Publisher><![CDATA[Oracle]]></Publisher>
                        <Source><![CDATA[http://www.oracle.com/technetwork/java/seccodeguide-139067.html#3]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CWE ID 82, CWE ID 83, CWE ID 87, CWE ID 692]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[2] CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2019]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[1] CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2020]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[2] CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[2] CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2022]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CCI-001310, CCI-002754]]></Title>
                        <Author><![CDATA[Standards Mapping - DISA Control Correlation Identifier Version 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI]]></Title>
                        <Author><![CDATA[Standards Mapping - FIPS200]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Indirect Access to Sensitive Data]]></Title>
                        <Author><![CDATA[Standards Mapping - General Data Protection Regulation]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI-10 Information Input Validation (P1)]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI-10 Information Input Validation]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Application Security Verification Standard 4.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[M7 Client Side Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Mobile Top 10 Risks 2014]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Cross Site Scripting]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2004]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A1 Cross Site Scripting (XSS)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2007]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A2 Cross-Site Scripting (XSS)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A3 Cross-Site Scripting (XSS)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2013]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A7 Cross-Site Scripting (XSS)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2017]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A03 Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.4]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.3.1.1, Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.7]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 2.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.7]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.7]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.7]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.7]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 4.2 - Critical Asset Protection]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insecure Interaction - CWE ID 116]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2009]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.11]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.3]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.8]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 5.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Cross-Site Scripting]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium 24 + 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Cross-Site Scripting (WASC-08)]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium Version 2.00]]></Author>
                    </Reference>
                </References>
            </Description>
            <Description
                id="desc.dataflow.kotlin.cross_site_scripting_inter_component_communication" formatVersion="3.12">
                <Abstract><![CDATA[<Paragraph>The method <Replace key="EnclosingFunction.name"/> in <Replace key="PrimaryLocation.file"/> sends unvalidated data to a web browser on line <Replace key="PrimaryLocation.line"/>, which can result in the browser executing malicious code.<AltParagraph>Sending unvalidated data to a web browser can result in the browser executing malicious code.</AltParagraph></Paragraph>]]></Abstract>
                <Explanation><![CDATA[Cross-site scripting (XSS) vulnerabilities occur when:

1. Data enters a web application through an untrusted source. In the case of Inter-Component Communication XSS, the untrusted source is data received from other components that reside on the same system. In the mobile environment, these are applications running on the same device. In the case of reflected XSS, the untrusted source is typically a web request, while in the case of persisted (also known as stored) XSS it is typically a database or other back-end data store.

<Paragraph>
In this case, the data enters at <Replace key="SourceFunction" link="SourceLocation"/> in <Replace key="SourceLocation.file"/> on line <Replace key="SourceLocation.line"/>.
</Paragraph>
2. The data is included in dynamic content that is sent to a web user without validation.
<Paragraph>
In this case, the data is sent at <Replace key="SinkFunction" link="SinkLocation"/> in <Replace key="SinkLocation.file"/> on line <Replace key="SinkLocation.line"/>.
</Paragraph>
The malicious content sent to the web browser often takes the form of a JavaScript segment, but can also include HTML, Flash or any other type of code that the browser executes. The variety of attacks based on XSS is almost limitless, but they commonly include transmitting private data such as cookies or other session information to the attacker, redirecting the victim to web content controlled by the attacker, or performing other malicious operations on the user's machine under the guise of the vulnerable site.

Some think that in the mobile environment, classic web application vulnerabilities, such as cross-site scripting, do not make sense -- why would the user attack themself? However, keep in mind that the essence of mobile platforms is applications that are downloaded from various sources and run alongside each other on the same device. The likelihood of running a piece of malware next to a banking application is high, which necessitates expanding the attack surface of mobile applications to include inter-process communication.

<b>Example 1:</b> The following code enables JavaScript in Android's WebView (by default, JavaScript is disabled) and loads a page based on the value received from an Android intent.

<pre>
...
        val webview = findViewById&lt;View&gt;(R.id.webview) as WebView
        webview.settings.javaScriptEnabled = true
        val url = this.intent.extras!!.getString("url")
        webview.loadUrl(url)
...
</pre>

If the value of <code>url</code> starts with <code>javascript:</code>, JavaScript code that follows executes within the context of the web page inside WebView.

<b>Example 2:</b> The following code reads an employee ID, <code>eid</code>, from an HTTP servlet request, then displays the value back to the user in the servlet's response.

<pre>
val eid: String = request.getParameter("eid")
...
val out: ServletOutputStream = response.getOutputStream()
out.print("Employee ID: $eid")
...
out.close()
...
</pre>

The code in this example operates correctly if <code>eid</code> contains only standard alphanumeric text. If <code>eid</code> has a value that includes metacharacters or source code, then the code is executed by the web browser as it displays the HTTP response.

Initially this might not appear to be much of a vulnerability. After all, why would someone enter a URL that causes malicious code to run on their own computer? The real danger is that an attacker will create the malicious URL, then use email or social engineering tricks to lure victims into visiting a link to the URL. When victims click the link, they unwittingly reflect the malicious content through the vulnerable web application back to their own computers. This mechanism of exploiting vulnerable web applications is known as Reflected XSS.

<b>Example 3:</b> The following code segment queries a database for an employee with a given ID and prints the corresponding employee's name in the servlet's response.

<pre>
val stmt: Statement = conn.createStatement()
val rs: ResultSet = stmt.executeQuery("select * from emp where id=$eid")
rs.next()
val name: String = rs.getString("name")
...
val out: ServletOutputStream = response.getOutputStream()
out.print("Employee Name: $name")
...
out.close()
...
</pre>

As in <code>Example 2</code>, this code functions correctly when the values of <code>name</code> are well-behaved, but it does nothing to prevent exploits if they are not. Again, this code can appear less dangerous because the value of <code>name</code> is read from a database, whose contents are apparently managed by the application. However, if the value of <code>name</code> originates from user-supplied data, then the database can be a conduit for malicious content. Without proper input validation on all data stored in the database, an attacker may execute malicious commands in the user's web browser. This type of exploit, known as Persistent (or Stored) XSS, is particularly insidious because the indirection caused by the data store makes it difficult to identify the threat and increases the possibility that the attack might affect multiple users. XSS got its start in this form with web sites that offered a "guestbook" to visitors. Attackers would include JavaScript in their guestbook entries, and all subsequent visitors to the guestbook page would execute the malicious code.

As the examples demonstrate, XSS vulnerabilities are caused by code that includes unvalidated data in an HTTP response. There are three vectors by which an XSS attack can reach a victim:

- As in <code>Example 1</code>, a source outside the application stores dangerous data in a database or other data store, and the dangerous data is subsequently read back into the application as trusted data and included in dynamic content.

- As in <code>Example 2</code>, data is read directly from the HTTP request and reflected back in the HTTP response. Reflected XSS exploits occur when an attacker causes a user to supply dangerous content to a vulnerable web application, which is then reflected back to the user and executed by the web browser. The most common mechanism for delivering malicious content is to include it as a parameter in a URL that is posted publicly or emailed directly to victims. URLs constructed in this manner constitute the core of many phishing schemes, whereby an attacker convinces victims to visit a URL that refers to a vulnerable site. After the site reflects the attacker's content back to the user, the content is executed and proceeds to transfer private information, such as cookies that might include session information, from the user's machine to the attacker or perform other nefarious activities.

- As in <code>Example 3</code>, the application stores dangerous data in a database or other trusted data store. The dangerous data is subsequently read back into the application and included in dynamic content. Persistent XSS exploits occur when an attacker injects dangerous content into a data store that is later read and included in dynamic content. From an attacker's perspective, the optimal place to inject malicious content is in an area that is displayed to either many users or particularly interesting users. Interesting users typically have elevated privileges in the application or interact with sensitive data that is valuable to the attacker. If one of these users executes malicious content, the attacker may be able to perform privileged operations on behalf of the user or gain access to sensitive data belonging to the user.

<IfDef var="ConditionalDescriptions"><Paragraph>
<ConditionalText condition="tracenode:form field validator tracenode:action form declaration tracenode:action declaration tracenode:action field validator tracenode:command class validator">A number of modern web frameworks provide mechanisms to perform user input validation (including Struts and Spring MVC). To highlight the unvalidated sources of input, Fortify Secure Coding Rulepacks dynamically re-prioritize the issues Fortify Static Code Analyzer reports by lowering their probability of exploit and providing pointers to the supporting evidence whenever the framework validation mechanism is in use. We refer to this feature as Context-Sensitive Ranking. To further assist the Fortify user with the auditing process, the Fortify Software Security Research group makes available the Data Validation project template that groups the issues into folders based on the validation mechanism applied to their source of input.</ConditionalText>
</Paragraph></IfDef>
<IfNotDef var="ConditionalDescriptions">
A number of modern web frameworks provide mechanisms to perform user input validation (including Struts and Spring MVC). To highlight the unvalidated sources of input, Fortify Secure Coding Rulepacks dynamically re-prioritize the issues Fortify Static Code Analyzer reports by lowering their probability of exploit and providing pointers to the supporting evidence whenever the framework validation mechanism is in use. We refer to this feature as Context-Sensitive Ranking. To further assist the Fortify user with the auditing process, the Fortify Software Security Research group makes available the Data Validation project template that groups the issues into folders based on the validation mechanism applied to their source of input.
</IfNotDef>]]></Explanation>
                <Recommendations><![CDATA[The solution to prevent XSS is to ensure that validation occurs in the required places and that relevant properties are set to prevent vulnerabilities.

Since XSS vulnerabilities occur when an application includes malicious data in its output, one logical approach is to validate data immediately before it leaves the application. However, because web applications often have complex and intricate code for generating dynamic content, this method is prone to errors of omission (missing validation). An effective way to mitigate this risk is to also perform input validation for XSS.

Web applications must validate all input to prevent other vulnerabilities, such as SQL injection, so augmenting an application's existing input validation mechanism to include checks for XSS is generally relatively easy. Despite its value, input validation for XSS does not take the place of rigorous output validation. An application might accept input through a shared data store or other trusted source, and that data store might accept input from a source that does not perform adequate input validation. Therefore, the application cannot implicitly rely on the safety of this or any other data. This means that the best way to prevent XSS vulnerabilities is to validate everything that enters the application and leaves the application destined for the user.

The most secure approach to validation for XSS is to create an allow list of safe characters that can appear in HTTP content and accept input composed exclusively of characters in the approved set. For example, a valid username might only include alphanumeric characters or a phone number might only include digits 0-9. However, this solution is often infeasible in web applications because many characters that have special meaning to the browser must be considered valid input after they are encoded, such as a web design bulletin board that must accept HTML fragments from its users.

A more flexible, but less secure approach is to implement a deny list, which selectively rejects or escapes potentially dangerous characters before using the input. To form such a list, you first need to understand the set of characters that hold special meaning for web browsers. Although the HTML standard defines which characters have special meaning, many web browsers try to correct common mistakes in HTML and might treat other characters as special in certain contexts. This is why we do not recommend the use of deny lists as a means to prevent XSS. The CERT(R) Coordination Center at the Software Engineering Institute at Carnegie Mellon University provides the following details about special characters in various contexts [1]:

In the content of a block-level element (in the middle of a paragraph of text):

- "&lt;" is special because it introduces a tag.

- "&amp;" is special because it introduces a character entity.

- "&gt;" is special because some browsers treat it as special, on the assumption that the author of the page intended to include an opening "&lt;", but omitted it in error.

The following principles apply to attribute values:

- In attribute values enclosed in double quotes, the double quotes are special because they mark the end of the attribute value.

- In attribute values enclosed in single quotes, the single quotes are special because they mark the end of the attribute value.

- In attribute values without any quotes, white-space characters, such as space and tab, are special.

- "&amp;" is special when used with certain attributes, because it introduces a character entity.

In URLs, for example, a search engine might provide a link within the results page that the user can click to re-run the search. This can be implemented by encoding the search query inside the URL, which introduces additional special characters:

- Space, tab, and new line are special because they mark the end of the URL.

- "&amp;" is special because it either introduces a character entity or separates CGI parameters.
In URLs, for example, a search engine might provide a link within the results page that the user can click to re-run the search. This can be implemented by encoding the search query inside the URL, which introduces additional special characters:

- Space, tab, and new line are special because they mark the end of the URL.

- "&amp;" is special because it either introduces a character entity or separates CGI parameters.

- Non-ASCII characters (that is, everything greater than 127 in the ISO-8859-1 encoding) are not allowed in URLs, so they are considered to be special in this context.

- The "%" symbol must be filtered from input anywhere parameters encoded with HTTP escape sequences are decoded by server-side code. For example, "%" must be filtered if input such as "%68%65%6C%6C%6F" becomes "hello" when it appears on the web page.


Within the body of a &lt;SCRIPT&gt; &lt;/SCRIPT&gt;:

- Semicolons, parentheses, curly braces, and new line characters must be filtered out in situations where text could be inserted directly into a pre-existing script tag.

Server-side scripts:

- Server-side scripts that convert any exclamation characters (!) in input to double-quote characters (") on output might require additional filtering.

Other possibilities:

- If an attacker submits a request in UTF-7, the special character '&lt;' appears as '+ADw-' and might bypass filtering. If the output is included in a page that does not explicitly specify an encoding format, then some browsers try to intelligently identify the encoding based on the content (in this case, UTF-7).

After you identify the correct points in an application to perform validation for XSS attacks and what special characters the validation should consider, the next challenge is to identify how your validation handles special characters. If special characters are not considered valid input to the application, then you can reject any input that contains special characters as invalid. A second option is to remove special characters with filtering. However, filtering has the side effect of changing any visual representation of the filtered content and might be unacceptable in circumstances where the integrity of the input must be preserved for display.

If input containing special characters must be accepted and displayed accurately, validation must encode any special characters to remove their significance. A complete list of ISO 8859-1 encoded values for special characters is provided as part of the official HTML specification [2].

Many application servers attempt to limit an application's exposure to cross-site scripting vulnerabilities by providing implementations for the functions responsible for setting certain specific HTTP response content that perform validation for the characters essential to a cross-site scripting attack. Do not rely on the server running your application to make it secure. For any developed application, there are no guarantees about which application servers it will run on during its lifetime. As standards and known exploits evolve, there are no guarantees that application servers will continue to stay in sync.]]></Recommendations>
                <Tips>
                    <Tip><![CDATA[The Fortify Secure Coding Rulepacks warn about SQL Injection and Access Control: Database issues when untrusted data is written to a database and also treat the database as a source of untrusted data, which can lead to XSS vulnerabilities. If the database is a trusted resource in your environment, use custom filters to filter out dataflow issues that include the DATABASE taint flag or originate from database sources. Nonetheless, it is often still a good idea to validate everything read from the database.]]></Tip>
                    <Tip><![CDATA[Even though URL encoding untrusted data protects against many XSS attacks, some browsers (specifically, Internet Explorer 6 and 7 and possibly others) automatically decode content at certain locations within the Document Object Model (DOM) prior to passing it to the JavaScript interpreter. To reflect this danger, the Rulepacks no longer treat URL encoding routines as sufficient to protect against cross-site scripting. Data values that are URL encoded and subsequently output will cause Fortify to report Cross-Site Scripting: Poor Validation vulnerabilities.]]></Tip>
                </Tips>
                <References>
                    <Reference>
                        <Title><![CDATA[Understanding Malicious Content Mitigation for Web Developers]]></Title>
                        <Publisher><![CDATA[CERT]]></Publisher>
                        <Source><![CDATA[https://resources.sei.cmu.edu/library/asset-view.cfm?assetid=496719#9]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[HTML 4.01 Specification]]></Title>
                        <Publisher><![CDATA[W3]]></Publisher>
                        <Source><![CDATA[https://www.w3.org/TR/html401/sgml/entities.html#h-24.2]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Attacks on WebView in the Android System]]></Title>
                        <Author><![CDATA[Tongbo Luo, Hao Hao, Wenliang Du, Yifei Wang, and Heng Yin]]></Author>
                        <Source><![CDATA[http://www.cis.syr.edu/~wedu/Research/paper/webview_acsac2011.pdf]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Bifocals: Analyzing WebView Vulnerabilities in Android Applications]]></Title>
                        <Author><![CDATA[Erika Chin and David Wagner]]></Author>
                        <Source><![CDATA[https://people.eecs.berkeley.edu/~daw/papers/bifocals-wisa13.pdf]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[INJECT-3: XML and HTML generation requires care]]></Title>
                        <Publisher><![CDATA[Oracle]]></Publisher>
                        <Source><![CDATA[http://www.oracle.com/technetwork/java/seccodeguide-139067.html#3]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CWE ID 79, CWE ID 80]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[2] CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2019]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[1] CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2020]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[2] CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[2] CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2022]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CCI-001310, CCI-002754]]></Title>
                        <Author><![CDATA[Standards Mapping - DISA Control Correlation Identifier Version 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI]]></Title>
                        <Author><![CDATA[Standards Mapping - FIPS200]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Indirect Access to Sensitive Data]]></Title>
                        <Author><![CDATA[Standards Mapping - General Data Protection Regulation]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI-10 Information Input Validation (P1)]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI-10 Information Input Validation]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Application Security Verification Standard 4.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[M7 Client Side Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Mobile Top 10 Risks 2014]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Cross Site Scripting]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2004]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A1 Cross Site Scripting (XSS)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2007]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A2 Cross-Site Scripting (XSS)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A3 Cross-Site Scripting (XSS)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2013]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A7 Cross-Site Scripting (XSS)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2017]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A03 Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.4]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.3.1.1, Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.7]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 2.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.7]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.7]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.7]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.7]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 4.2 - Critical Asset Protection]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insecure Interaction - CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2009]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insecure Interaction - CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insecure Interaction - CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2011]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.11]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.3]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.8]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 5.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Cross-Site Scripting]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium 24 + 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Cross-Site Scripting (WASC-08)]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium Version 2.00]]></Author>
                    </Reference>
                </References>
            </Description>
            <Description
                id="desc.dataflow.kotlin.cross_site_scripting_reflected" formatVersion="3.12">
                <Abstract><![CDATA[<Paragraph>The method <Replace key="EnclosingFunction.name"/> in <Replace key="PrimaryLocation.file"/> sends unvalidated data to a web browser on line <Replace key="PrimaryLocation.line"/>, which can result in the browser executing malicious code.<AltParagraph>Sending unvalidated data to a web browser can result in the browser executing malicious code.</AltParagraph></Paragraph>]]></Abstract>
                <Explanation><![CDATA[Cross-site scripting (XSS) vulnerabilities occur when:

1. Data enters a web application through an untrusted source. In the case of reflected XSS, the untrusted source is typically a web request, while in the case of persisted (also known as stored) XSS it is typically a database or other back-end data store.

<Paragraph>
In this case, the data enters at <Replace key="SourceFunction" link="SourceLocation"/> in <Replace key="SourceLocation.file"/> on line <Replace key="SourceLocation.line"/>.
</Paragraph>
2. The data is included in dynamic content that is sent to a web user without validation.
<Paragraph>
In this case, the data is sent at <Replace key="SinkFunction" link="SinkLocation"/> in <Replace key="SinkLocation.file"/> on line <Replace key="SinkLocation.line"/>.
</Paragraph>
The malicious content sent to the web browser often takes the form of a JavaScript segment, but can also include HTML, Flash or any other type of code that the browser executes. The variety of attacks based on XSS is almost limitless, but they commonly include transmitting private data such as cookies or other session information to the attacker, redirecting the victim to web content controlled by the attacker, or performing other malicious operations on the user's machine under the guise of the vulnerable site.

<b>Example 1:</b> The following code reads an employee ID, <code>eid</code>, from an HTTP servlet request, then displays the value back to the user in the servlet's response.

<pre>
val eid: String = request.getParameter("eid")
...
val out: ServletOutputStream = response.getOutputStream()
out.print("Employee ID: $eid")
...
out.close()
...
</pre>

The code in this example operates correctly if <code>eid</code> contains only standard alphanumeric text. If <code>eid</code> has a value that includes metacharacters or source code, then the code is executed by the web browser as it displays the HTTP response.

Initially this might not appear to be much of a vulnerability. After all, why would someone enter a URL that causes malicious code to run on their own computer? The real danger is that an attacker will create the malicious URL, then use email or social engineering tricks to lure victims into visiting a link to the URL. When victims click the link, they unwittingly reflect the malicious content through the vulnerable web application back to their own computers. This mechanism of exploiting vulnerable web applications is known as Reflected XSS.

<b>Example 2:</b> The following code segment queries a database for an employee with a given ID and prints the corresponding employee's name in the servlet's response.

<pre>
val stmt: Statement = conn.createStatement()
val rs: ResultSet = stmt.executeQuery("select * from emp where id=$eid")
rs.next()
val name: String = rs.getString("name")
...
val out: ServletOutputStream = response.getOutputStream()
out.print("Employee Name: $name")
...
out.close()
...
</pre>

As in <code>Example 1</code>, this code functions correctly when the values of <code>name</code> are well-behaved, but it does nothing to prevent exploits if they are not. Again, this code can appear less dangerous because the value of <code>name</code> is read from a database, whose contents are apparently managed by the application. However, if the value of <code>name</code> originates from user-supplied data, then the database can be a conduit for malicious content. Without proper input validation on all data stored in the database, an attacker may execute malicious commands in the user's web browser. This type of exploit, known as Persistent (or Stored) XSS, is particularly insidious because the indirection caused by the data store makes it difficult to identify the threat and increases the possibility that the attack might affect multiple users. XSS got its start in this form with web sites that offered a "guestbook" to visitors. Attackers would include JavaScript in their guestbook entries, and all subsequent visitors to the guestbook page would execute the malicious code.

Some think that in the mobile environment, classic web application vulnerabilities, such as cross-site scripting, do not make sense -- why would the user attack themself? However, keep in mind that the essence of mobile platforms is applications that are downloaded from various sources and run alongside each other on the same device. The likelihood of running a piece of malware next to a banking application is high, which necessitates expanding the attack surface of mobile applications to include inter-process communication.

<b>Example 3:</b> The following code enables JavaScript in Android's WebView (by default, JavaScript is disabled) and loads a page based on the value received from an Android intent.

<pre>
...
        val webview = findViewById&lt;View&gt;(R.id.webview) as WebView
        webview.settings.javaScriptEnabled = true
        val url = this.intent.extras!!.getString("url")
        webview.loadUrl(url)
...
</pre>

If the value of <code>url</code> starts with <code>javascript:</code>, JavaScript code that follows executes within the context of the web page inside WebView.

As the examples demonstrate, XSS vulnerabilities are caused by code that includes unvalidated data in an HTTP response. There are three vectors by which an XSS attack can reach a victim:

- As in <code>Example 1</code>, data is read directly from the HTTP request and reflected back in the HTTP response. Reflected XSS exploits occur when an attacker causes a user to supply dangerous content to a vulnerable web application, which is then reflected back to the user and executed by the web browser. The most common mechanism for delivering malicious content is to include it as a parameter in a URL that is posted publicly or emailed directly to victims. URLs constructed in this manner constitute the core of many phishing schemes, whereby an attacker convinces victims to visit a URL that refers to a vulnerable site. After the site reflects the attacker's content back to the user, the content is executed and proceeds to transfer private information, such as cookies that might include session information, from the user's machine to the attacker or perform other nefarious activities.

- As in <code>Example 2</code>, the application stores dangerous data in a database or other trusted data store. The dangerous data is subsequently read back into the application and included in dynamic content. Persistent XSS exploits occur when an attacker injects dangerous content into a data store that is later read and included in dynamic content. From an attacker's perspective, the optimal place to inject malicious content is in an area that is displayed to either many users or particularly interesting users. Interesting users typically have elevated privileges in the application or interact with sensitive data that is valuable to the attacker. If one of these users executes malicious content, the attacker may be able to perform privileged operations on behalf of the user or gain access to sensitive data belonging to the user.

- As in <code>Example 3</code>, a source outside the application stores dangerous data in a database or other data store, and the dangerous data is subsequently read back into the application as trusted data and included in dynamic content.

<IfDef var="ConditionalDescriptions"><Paragraph>
<ConditionalText condition="tracenode:form field validator tracenode:action form declaration tracenode:action declaration tracenode:action field validator tracenode:command class validator">A number of modern web frameworks provide mechanisms to perform user input validation (including Struts and Spring MVC). To highlight the unvalidated sources of input, Fortify Secure Coding Rulepacks dynamically re-prioritize the issues Fortify Static Code Analyzer reports by lowering their probability of exploit and providing pointers to the supporting evidence whenever the framework validation mechanism is in use. We refer to this feature as Context-Sensitive Ranking. To further assist the Fortify user with the auditing process, the Fortify Software Security Research group makes available the Data Validation project template that groups the issues into folders based on the validation mechanism applied to their source of input.</ConditionalText>
</Paragraph></IfDef>
<IfNotDef var="ConditionalDescriptions">
A number of modern web frameworks provide mechanisms to perform user input validation (including Struts and Spring MVC). To highlight the unvalidated sources of input, Fortify Secure Coding Rulepacks dynamically re-prioritize the issues Fortify Static Code Analyzer reports by lowering their probability of exploit and providing pointers to the supporting evidence whenever the framework validation mechanism is in use. We refer to this feature as Context-Sensitive Ranking. To further assist the Fortify user with the auditing process, the Fortify Software Security Research group makes available the Data Validation project template that groups the issues into folders based on the validation mechanism applied to their source of input.
</IfNotDef>]]></Explanation>
                <Recommendations><![CDATA[The solution to prevent XSS is to ensure that validation occurs in the required places and that relevant properties are set to prevent vulnerabilities.

Since XSS vulnerabilities occur when an application includes malicious data in its output, one logical approach is to validate data immediately before it leaves the application. However, because web applications often have complex and intricate code for generating dynamic content, this method is prone to errors of omission (missing validation). An effective way to mitigate this risk is to also perform input validation for XSS.

Web applications must validate all input to prevent other vulnerabilities, such as SQL injection, so augmenting an application's existing input validation mechanism to include checks for XSS is generally relatively easy. Despite its value, input validation for XSS does not take the place of rigorous output validation. An application might accept input through a shared data store or other trusted source, and that data store might accept input from a source that does not perform adequate input validation. Therefore, the application cannot implicitly rely on the safety of this or any other data. This means that the best way to prevent XSS vulnerabilities is to validate everything that enters the application and leaves the application destined for the user.

The most secure approach to validation for XSS is to create an allow list of safe characters that can appear in HTTP content and accept input composed exclusively of characters in the approved set. For example, a valid username might only include alphanumeric characters or a phone number might only include digits 0-9. However, this solution is often infeasible in web applications because many characters that have special meaning to the browser must be considered valid input after they are encoded, such as a web design bulletin board that must accept HTML fragments from its users.

A more flexible, but less secure approach is to implement a deny list, which selectively rejects or escapes potentially dangerous characters before using the input. To form such a list, you first need to understand the set of characters that hold special meaning for web browsers. Although the HTML standard defines which characters have special meaning, many web browsers try to correct common mistakes in HTML and might treat other characters as special in certain contexts. This is why we do not recommend the use of deny lists as a means to prevent XSS. The CERT(R) Coordination Center at the Software Engineering Institute at Carnegie Mellon University provides the following details about special characters in various contexts [1]:

In the content of a block-level element (in the middle of a paragraph of text):

- "&lt;" is special because it introduces a tag.

- "&amp;" is special because it introduces a character entity.

- "&gt;" is special because some browsers treat it as special, on the assumption that the author of the page intended to include an opening "&lt;", but omitted it in error.

The following principles apply to attribute values:

- In attribute values enclosed in double quotes, the double quotes are special because they mark the end of the attribute value.

- In attribute values enclosed in single quotes, the single quotes are special because they mark the end of the attribute value.

- In attribute values without any quotes, white-space characters, such as space and tab, are special.

- "&amp;" is special when used with certain attributes, because it introduces a character entity.

In URLs, for example, a search engine might provide a link within the results page that the user can click to re-run the search. This can be implemented by encoding the search query inside the URL, which introduces additional special characters:

- Space, tab, and new line are special because they mark the end of the URL.

- "&amp;" is special because it either introduces a character entity or separates CGI parameters.

- Non-ASCII characters (that is, everything greater than 127 in the ISO-8859-1 encoding) are not allowed in URLs, so they are considered to be special in this context.

- The "%" symbol must be filtered from input anywhere parameters encoded with HTTP escape sequences are decoded by server-side code. For example, "%" must be filtered if input such as "%68%65%6C%6C%6F" becomes "hello" when it appears on the web page.


Within the body of a &lt;SCRIPT&gt; &lt;/SCRIPT&gt;:

- Semicolons, parentheses, curly braces, and new line characters must be filtered out in situations where text could be inserted directly into a pre-existing script tag.

Server-side scripts:

- Server-side scripts that convert any exclamation characters (!) in input to double-quote characters (") on output might require additional filtering.

Other possibilities:

- If an attacker submits a request in UTF-7, the special character '&lt;' appears as '+ADw-' and might bypass filtering. If the output is included in a page that does not explicitly specify an encoding format, then some browsers try to intelligently identify the encoding based on the content (in this case, UTF-7).

After you identify the correct points in an application to perform validation for XSS attacks and what special characters the validation should consider, the next challenge is to identify how your validation handles special characters. If special characters are not considered valid input to the application, then you can reject any input that contains special characters as invalid. A second option is to remove special characters with filtering. However, filtering has the side effect of changing any visual representation of the filtered content and might be unacceptable in circumstances where the integrity of the input must be preserved for display.

If input containing special characters must be accepted and displayed accurately, validation must encode any special characters to remove their significance. A complete list of ISO 8859-1 encoded values for special characters is provided as part of the official HTML specification [2].

Many application servers attempt to limit an application's exposure to cross-site scripting vulnerabilities by providing implementations for the functions responsible for setting certain specific HTTP response content that perform validation for the characters essential to a cross-site scripting attack. Do not rely on the server running your application to make it secure. For any developed application, there are no guarantees about which application servers it will run on during its lifetime. As standards and known exploits evolve, there are no guarantees that application servers will continue to stay in sync.]]></Recommendations>
                <Tips>
                    <Tip><![CDATA[The Fortify Secure Coding Rulepacks warn about SQL Injection and Access Control: Database issues when untrusted data is written to a database and also treat the database as a source of untrusted data, which can lead to XSS vulnerabilities. If the database is a trusted resource in your environment, use custom filters to filter out dataflow issues that include the DATABASE taint flag or originate from database sources. Nonetheless, it is often still a good idea to validate everything read from the database.]]></Tip>
                    <Tip><![CDATA[Even though URL encoding untrusted data protects against many XSS attacks, some browsers (specifically, Internet Explorer 6 and 7 and possibly others) automatically decode content at certain locations within the Document Object Model (DOM) prior to passing it to the JavaScript interpreter. To reflect this danger, the Rulepacks no longer treat URL encoding routines as sufficient to protect against cross-site scripting. Data values that are URL encoded and subsequently output will cause Fortify to report Cross-Site Scripting: Poor Validation vulnerabilities.]]></Tip>
                </Tips>
                <References>
                    <Reference>
                        <Title><![CDATA[Understanding Malicious Content Mitigation for Web Developers]]></Title>
                        <Publisher><![CDATA[CERT]]></Publisher>
                        <Source><![CDATA[https://resources.sei.cmu.edu/library/asset-view.cfm?assetid=496719#9]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[HTML 4.01 Specification]]></Title>
                        <Publisher><![CDATA[W3]]></Publisher>
                        <Source><![CDATA[https://www.w3.org/TR/html401/sgml/entities.html#h-24.2]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Attacks on WebView in the Android System]]></Title>
                        <Author><![CDATA[Tongbo Luo, Hao Hao, Wenliang Du, Yifei Wang, and Heng Yin]]></Author>
                        <Source><![CDATA[http://www.cis.syr.edu/~wedu/Research/paper/webview_acsac2011.pdf]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Bifocals: Analyzing WebView Vulnerabilities in Android Applications]]></Title>
                        <Author><![CDATA[Erika Chin and David Wagner]]></Author>
                        <Source><![CDATA[https://people.eecs.berkeley.edu/~daw/papers/bifocals-wisa13.pdf]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[INJECT-3: XML and HTML generation requires care]]></Title>
                        <Publisher><![CDATA[Oracle]]></Publisher>
                        <Source><![CDATA[http://www.oracle.com/technetwork/java/seccodeguide-139067.html#3]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CWE ID 79, CWE ID 80]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[2] CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2019]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[1] CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2020]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[2] CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[2] CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2022]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CCI-001310, CCI-002754]]></Title>
                        <Author><![CDATA[Standards Mapping - DISA Control Correlation Identifier Version 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI]]></Title>
                        <Author><![CDATA[Standards Mapping - FIPS200]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Indirect Access to Sensitive Data]]></Title>
                        <Author><![CDATA[Standards Mapping - General Data Protection Regulation]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI-10 Information Input Validation (P1)]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI-10 Information Input Validation]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Application Security Verification Standard 4.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[M7 Client Side Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Mobile Top 10 Risks 2014]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Cross Site Scripting]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2004]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A1 Cross Site Scripting (XSS)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2007]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A2 Cross-Site Scripting (XSS)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A3 Cross-Site Scripting (XSS)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2013]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A7 Cross-Site Scripting (XSS)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2017]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A03 Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.4]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.3.1.1, Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.7]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 2.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.7]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.7]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.7]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.7]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 4.2 - Critical Asset Protection]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insecure Interaction - CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2009]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insecure Interaction - CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insecure Interaction - CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2011]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.11]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.3]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.8]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 5.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Cross-Site Scripting]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium 24 + 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Cross-Site Scripting (WASC-08)]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium Version 2.00]]></Author>
                    </Reference>
                </References>
            </Description>
            <Description
                id="desc.dataflow.kotlin.cross_site_scripting_persistent" formatVersion="3.12">
                <Abstract><![CDATA[<Paragraph>The method <Replace key="EnclosingFunction.name"/> in <Replace key="PrimaryLocation.file"/> sends unvalidated data to a web browser on line <Replace key="PrimaryLocation.line"/>, which can result in the browser executing malicious code.<AltParagraph>Sending unvalidated data to a web browser can result in the browser executing malicious code.</AltParagraph></Paragraph>]]></Abstract>
                <Explanation><![CDATA[Cross-site scripting (XSS) vulnerabilities occur when:

1. Data enters a web application through an untrusted source. In the case of persistent (also known as stored) XSS, the untrusted source is typically a database or other back-end data store, while in the case of reflected XSS it is typically a web request.

<Paragraph>
In this case, the data enters at <Replace key="SourceFunction" link="SourceLocation"/> in <Replace key="SourceLocation.file"/> on line <Replace key="SourceLocation.line"/>.
</Paragraph>
2. The data is included in dynamic content that is sent to a web user without validation.
<Paragraph>
In this case, the data is sent at <Replace key="SinkFunction" link="SinkLocation"/> in <Replace key="SinkLocation.file"/> on line <Replace key="SinkLocation.line"/>.
</Paragraph>
The malicious content sent to the web browser often takes the form of a JavaScript segment, but can also include HTML, Flash or any other type of code that the browser executes. The variety of attacks based on XSS is almost limitless, but they commonly include transmitting private data such as cookies or other session information to the attacker, redirecting the victim to web content controlled by the attacker, or performing other malicious operations on the user's machine under the guise of the vulnerable site.

<b>Example 1:</b> The following code segment queries a database for an employee with a given ID and prints the corresponding employee's name in the servlet response.

<pre>
...
val stmt: Statement = conn.createStatement()
val rs: ResultSet = stmt.executeQuery("select * from emp where id=$eid")
rs.next()
val name: String = rs.getString("name")
...
val out: ServletOutputStream = response.getOutputStream()
out.print("Employee Name: $name")
...
out.close()
...
</pre>

This code functions correctly when the values of <code>name</code> are well-behaved, but it does nothing to prevent exploits if they are not. This code can appear less dangerous because the value of <code>name</code> is read from a database, whose contents are apparently managed by the application. However, if the value of <code>name</code> originates from user-supplied data, then the database can be a conduit for malicious content. Without proper input validation on all data stored in the database, an attacker may execute malicious commands in the user's web browser. This type of exploit, known as Persistent (or Stored) XSS, is particularly insidious because the indirection caused by the data store makes it difficult to identify the threat and increases the possibility that the attack might affect multiple users. XSS got its start in this form with web sites that offered a "guestbook" to visitors. Attackers would include JavaScript in their guestbook entries, and all subsequent visitors to the guestbook page would execute the malicious code.

<b>Example 2:</b> The following code reads an employee ID, <code>eid</code>, from an HTTP servlet request, then displays the value back to the user in the servlet's response.

<pre>
val eid: String = request.getParameter("eid")
...
val out: ServletOutputStream = response.getOutputStream()
out.print("Employee ID: $eid")
...
out.close()
...
</pre>

As in <code>Example 1</code>, this code operates correctly if <code>eid</code> contains only standard alphanumeric text. If <code>eid</code> has a value that includes metacharacters or source code, then the code is executed by the web browser as it displays the HTTP response.

Initially this might not appear to be much of a vulnerability. After all, why would someone enter a URL that causes malicious code to run on their own computer? The real danger is that an attacker will create the malicious URL, then use email or social engineering tricks to lure victims into visiting a link to the URL. When victims click the link, they unwittingly reflect the malicious content through the vulnerable web application back to their own computers. This mechanism of exploiting vulnerable web applications is known as Reflected XSS.

Some think that in the mobile environment, classic web application vulnerabilities, such as cross-site scripting, do not make sense -- why would the user attack themself? However, keep in mind that the essence of mobile platforms is applications that are downloaded from various sources and run alongside each other on the same device. The likelihood of running a piece of malware next to a banking application is high, which necessitates expanding the attack surface of mobile applications to include inter-process communication.

<b>Example 3:</b> The following code enables JavaScript in Android's WebView (by default, JavaScript is disabled) and loads a page based on the value received from an Android intent.

<pre>
...
        val webview = findViewById&lt;View&gt;(R.id.webview) as WebView
        webview.settings.javaScriptEnabled = true
        val url = this.intent.extras!!.getString("url")
        webview.loadUrl(url)
...
</pre>

If the value of <code>url</code> starts with <code>javascript:</code>, JavaScript code that follows executes within the context of the web page inside WebView.

As the examples demonstrate, XSS vulnerabilities are caused by code that includes unvalidated data in an HTTP response. There are three vectors by which an XSS attack can reach a victim:

- As in <code>Example 1</code>, the application stores dangerous data in a database or other trusted data store. The dangerous data is subsequently read back into the application and included in dynamic content. Persistent XSS exploits occur when an attacker injects dangerous content into a data store that is later read and included in dynamic content. From an attacker's perspective, the optimal place to inject malicious content is in an area that is displayed to either many users or particularly interesting users. Interesting users typically have elevated privileges in the application or interact with sensitive data that is valuable to the attacker. If one of these users executes malicious content, the attacker may be able to perform privileged operations on behalf of the user or gain access to sensitive data belonging to the user.

- As in <code>Example 2</code>, data is read directly from the HTTP request and reflected back in the HTTP response. Reflected XSS exploits occur when an attacker causes a user to supply dangerous content to a vulnerable web application, which is then reflected back to the user and executed by the web browser. The most common mechanism for delivering malicious content is to include it as a parameter in a URL that is posted publicly or emailed directly to victims. URLs constructed in this manner constitute the core of many phishing schemes, whereby an attacker convinces victims to visit a URL that refers to a vulnerable site. After the site reflects the attacker's content back to the user, the content is executed and proceeds to transfer private information, such as cookies that might include session information, from the user's machine to the attacker or perform other nefarious activities.

- As in <code>Example 3</code>, a source outside the application stores dangerous data in a database or other data store, and the dangerous data is subsequently read back into the application as trusted data and included in dynamic content.

<IfDef var="ConditionalDescriptions"><Paragraph>
<ConditionalText condition="tracenode:form field validator tracenode:action form declaration tracenode:action declaration tracenode:action field validator tracenode:command class validator">A number of modern web frameworks provide mechanisms to perform user input validation (including Struts and Spring MVC). To highlight the unvalidated sources of input, Fortify Secure Coding Rulepacks dynamically re-prioritize the issues Fortify Static Code Analyzer reports by lowering their probability of exploit and providing pointers to the supporting evidence whenever the framework validation mechanism is in use. We refer to this feature as Context-Sensitive Ranking. To further assist the Fortify user with the auditing process, the Fortify Software Security Research group makes available the Data Validation project template that groups the issues into folders based on the validation mechanism applied to their source of input.</ConditionalText>
</Paragraph></IfDef>
<IfNotDef var="ConditionalDescriptions">
A number of modern web frameworks provide mechanisms to perform user input validation (including Struts and Spring MVC). To highlight the unvalidated sources of input, Fortify Secure Coding Rulepacks dynamically re-prioritize the issues Fortify Static Code Analyzer reports by lowering their probability of exploit and providing pointers to the supporting evidence whenever the framework validation mechanism is in use. We refer to this feature as Context-Sensitive Ranking. To further assist the Fortify user with the auditing process, the Fortify Software Security Research group makes available the Data Validation project template that groups the issues into folders based on the validation mechanism applied to their source of input.
</IfNotDef>]]></Explanation>
                <Recommendations><![CDATA[The solution to prevent XSS is to ensure that validation occurs in the required places and that relevant properties are set to prevent vulnerabilities.

Since XSS vulnerabilities occur when an application includes malicious data in its output, one logical approach is to validate data immediately before it leaves the application. However, because web applications often have complex and intricate code for generating dynamic content, this method is prone to errors of omission (missing validation). An effective way to mitigate this risk is to also perform input validation for XSS.

Web applications must validate all input to prevent other vulnerabilities, such as SQL injection, so augmenting an application's existing input validation mechanism to include checks for XSS is generally relatively easy. Despite its value, input validation for XSS does not take the place of rigorous output validation. An application might accept input through a shared data store or other trusted source, and that data store might accept input from a source that does not perform adequate input validation. Therefore, the application cannot implicitly rely on the safety of this or any other data. This means that the best way to prevent XSS vulnerabilities is to validate everything that enters the application and leaves the application destined for the user.

The most secure approach to validation for XSS is to create an allow list of safe characters that can appear in HTTP content and accept input composed exclusively of characters in the approved set. For example, a valid username might only include alphanumeric characters or a phone number might only include digits 0-9. However, this solution is often infeasible in web applications because many characters that have special meaning to the browser must be considered valid input after they are encoded, such as a web design bulletin board that must accept HTML fragments from its users.

A more flexible, but less secure approach is to implement a deny list, which selectively rejects or escapes potentially dangerous characters before using the input. To form such a list, you first need to understand the set of characters that hold special meaning for web browsers. Although the HTML standard defines which characters have special meaning, many web browsers try to correct common mistakes in HTML and might treat other characters as special in certain contexts. This is why we do not recommend the use of deny lists as a means to prevent XSS. The CERT(R) Coordination Center at the Software Engineering Institute at Carnegie Mellon University provides the following details about special characters in various contexts [1]:

In the content of a block-level element (in the middle of a paragraph of text):

- "&lt;" is special because it introduces a tag.

- "&amp;" is special because it introduces a character entity.

- "&gt;" is special because some browsers treat it as special, on the assumption that the author of the page intended to include an opening "&lt;", but omitted it in error.

The following principles apply to attribute values:

- In attribute values enclosed in double quotes, the double quotes are special because they mark the end of the attribute value.

- In attribute values enclosed in single quotes, the single quotes are special because they mark the end of the attribute value.

- In attribute values without any quotes, white-space characters, such as space and tab, are special.

- "&amp;" is special when used with certain attributes, because it introduces a character entity.

In URLs, for example, a search engine might provide a link within the results page that the user can click to re-run the search. This can be implemented by encoding the search query inside the URL, which introduces additional special characters:

- Space, tab, and new line are special because they mark the end of the URL.

- "&amp;" is special because it either introduces a character entity or separates CGI parameters.

- Non-ASCII characters (that is, everything greater than 127 in the ISO-8859-1 encoding) are not allowed in URLs, so they are considered to be special in this context.

- The "%" symbol must be filtered from input anywhere parameters encoded with HTTP escape sequences are decoded by server-side code. For example, "%" must be filtered if input such as "%68%65%6C%6C%6F" becomes "hello" when it appears on the web page.


Within the body of a &lt;SCRIPT&gt; &lt;/SCRIPT&gt;:

- Semicolons, parentheses, curly braces, and new line characters must be filtered out in situations where text could be inserted directly into a pre-existing script tag.

Server-side scripts:

- Server-side scripts that convert any exclamation characters (!) in input to double-quote characters (") on output might require additional filtering.

Other possibilities:

- If an attacker submits a request in UTF-7, the special character '&lt;' appears as '+ADw-' and might bypass filtering. If the output is included in a page that does not explicitly specify an encoding format, then some browsers try to intelligently identify the encoding based on the content (in this case, UTF-7).

After you identify the correct points in an application to perform validation for XSS attacks and what special characters the validation should consider, the next challenge is to identify how your validation handles special characters. If special characters are not considered valid input to the application, then you can reject any input that contains special characters as invalid. A second option is to remove special characters with filtering. However, filtering has the side effect of changing any visual representation of the filtered content and might be unacceptable in circumstances where the integrity of the input must be preserved for display.

If input containing special characters must be accepted and displayed accurately, validation must encode any special characters to remove their significance. A complete list of ISO 8859-1 encoded values for special characters is provided as part of the official HTML specification [2].

Many application servers attempt to limit an application's exposure to cross-site scripting vulnerabilities by providing implementations for the functions responsible for setting certain specific HTTP response content that perform validation for the characters essential to a cross-site scripting attack. Do not rely on the server running your application to make it secure. For any developed application, there are no guarantees about which application servers it will run on during its lifetime. As standards and known exploits evolve, there are no guarantees that application servers will continue to stay in sync.]]></Recommendations>
                <Tips>
                    <Tip><![CDATA[The Fortify Secure Coding Rulepacks warn about SQL Injection and Access Control: Database issues when untrusted data is written to a database and also treat the database as a source of untrusted data, which can lead to XSS vulnerabilities. If the database is a trusted resource in your environment, use custom filters to filter out dataflow issues that include the DATABASE taint flag or originate from database sources. Nonetheless, it is often still a good idea to validate everything read from the database.]]></Tip>
                    <Tip><![CDATA[Even though URL encoding untrusted data protects against many XSS attacks, some browsers (specifically, Internet Explorer 6 and 7 and possibly others) automatically decode content at certain locations within the Document Object Model (DOM) prior to passing it to the JavaScript interpreter. To reflect this danger, the Rulepacks no longer treat URL encoding routines as sufficient to protect against cross-site scripting. Data values that are URL encoded and subsequently output will cause Fortify to report Cross-Site Scripting: Poor Validation vulnerabilities.]]></Tip>
                </Tips>
                <References>
                    <Reference>
                        <Title><![CDATA[Understanding Malicious Content Mitigation for Web Developers]]></Title>
                        <Publisher><![CDATA[CERT]]></Publisher>
                        <Source><![CDATA[https://resources.sei.cmu.edu/library/asset-view.cfm?assetid=496719#9]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[HTML 4.01 Specification]]></Title>
                        <Publisher><![CDATA[W3]]></Publisher>
                        <Source><![CDATA[https://www.w3.org/TR/html401/sgml/entities.html#h-24.2]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Attacks on WebView in the Android System]]></Title>
                        <Author><![CDATA[Tongbo Luo, Hao Hao, Wenliang Du, Yifei Wang, and Heng Yin]]></Author>
                        <Source><![CDATA[http://www.cis.syr.edu/~wedu/Research/paper/webview_acsac2011.pdf]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Bifocals: Analyzing WebView Vulnerabilities in Android Applications]]></Title>
                        <Author><![CDATA[Erika Chin and David Wagner]]></Author>
                        <Source><![CDATA[https://people.eecs.berkeley.edu/~daw/papers/bifocals-wisa13.pdf]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[INJECT-3: XML and HTML generation requires care]]></Title>
                        <Publisher><![CDATA[Oracle]]></Publisher>
                        <Source><![CDATA[http://www.oracle.com/technetwork/java/seccodeguide-139067.html#3]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CWE ID 79, CWE ID 80]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[2] CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2019]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[1] CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2020]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[2] CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[2] CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2022]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CCI-001310, CCI-002754]]></Title>
                        <Author><![CDATA[Standards Mapping - DISA Control Correlation Identifier Version 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI]]></Title>
                        <Author><![CDATA[Standards Mapping - FIPS200]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Indirect Access to Sensitive Data]]></Title>
                        <Author><![CDATA[Standards Mapping - General Data Protection Regulation]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI-10 Information Input Validation (P1)]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI-10 Information Input Validation]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[5.3.3 Output Encoding and Injection Prevention Requirements (L1 L2 L3), 5.3.6 Output Encoding and Injection Prevention Requirements (L1 L2 L3)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Application Security Verification Standard 4.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[M7 Client Side Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Mobile Top 10 Risks 2014]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A4 Cross Site Scripting]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2004]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A1 Cross Site Scripting (XSS)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2007]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A2 Cross-Site Scripting (XSS)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A3 Cross-Site Scripting (XSS)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2013]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A7 Cross-Site Scripting (XSS)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2017]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A03 Injection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.4]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.3.1.1, Requirement 6.5.1]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.7]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 2.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.7]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.7]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.7]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.7]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 4.2 - Critical Asset Protection]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insecure Interaction - CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2009]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insecure Interaction - CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insecure Interaction - CWE ID 079]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2011]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3510 CAT I, APP3580 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.11]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.3]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.8]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002490 CAT I, APSC-DV-002560 CAT I]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 5.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Cross-Site Scripting]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium 24 + 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Cross-Site Scripting (WASC-08)]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium Version 2.00]]></Author>
                    </Reference>
                </References>
            </Description>
            <Description
                id="desc.dataflow.kotlin.insecure_ssl_overly_broad_certificate_trust" formatVersion="3.4">
                <Abstract><![CDATA[<Paragraph>The call to <Replace key="PrimaryCall.name"/> in <Replace key="PrimaryLocation.file"/> on line <Replace key="PrimaryLocation.line"/> initiates an SSL/TLS connection using the default pre-loaded system Certificate Authorities (CAs) that might enable attackers to intercept encrypted communications by performing man-in-the-middle (MiTM) attacks using certificates signed with compromised root CAs.<AltParagraph>An SSL/TLS connection is created using the default pre-loaded system Certificate Authorities (CAs), that might enable attackers to intercept encrypted communications by performing man-in-the-middle (MiTM) attacks using certificates signed with compromised root CAs.</AltParagraph></Paragraph>]]></Abstract>
                <Explanation><![CDATA[The public key infrastructure (PKI) is based on trusted Ceritficate Authorities (CAs), however the increasing number of compromised Certificate Authorities means their root certificates can no longer be trusted and therefore no certificates that are signed by this CA can either. Attackers in possession of these compromised certificates will be able to intercept all the SSL/TLS traffic trusting these CAs.

Certificate Authorities signatures are necessary for general purpose network communication tools such as browsers that connect to arbitrary network endpoints and have no advance knowledge of which CAs sign the SSL/TLS certificates for those endpoints. Mobile applications that connect to a limited number of backend servers can benefit from knowing a shortlist of trusted CAs that these servers may use in signing their certificates and &quot;pin&quot; these certificates/public keys in the applications so that trust is reduced to the certificates the application expects.

<b>Example 1: </b>The following example establishes an SSL/TLS connection using the default pre-loaded system CAs.
<pre>
val url = URL("https://myserver.org")
val data = url.readBytes()
</pre>

Since the underlying <code>SSLSocketFactory</code> used by the <code>URLConnection</code> has not been changed, it will use the default one that will trust all the CAs present in the Android default keystore.]]></Explanation>
                <Recommendations><![CDATA[There are several possible solutions to reduce the level of trust on pre-loaded system certificates including:

- Custom trust anchors: Use a custom keystore that only contains the certificates you want to trust.
- Certificate pinning: Trust the default certificates but verify and enforce that the one used by your backend server is present in the certificate chain. As an alternative, public keys can be verified (pinned) instead.

<b>Example 2: </b>The following example establishes an SSL/TLS connection using a custom keystore containing only the expected certificates.
<pre>
...
// Load CAs from an InputStream
val cf = CertificateFactory.getInstance("X.509")
val caInput: InputStream = FileInputStream("custom-keystore.crt").buffered()
val ca: Certificate = cf.generateCertificate(caInput)

// Create a KeyStore containing our trusted CAs
val keyStoreType = KeyStore.getDefaultType()
val keyStore = KeyStore.getInstance(keyStoreType)
keyStore.load(null, null)
keyStore.setCertificateEntry("ca", ca)

// Create a TrustManager that trusts the CAs in our KeyStore
val tmfAlgorithm: String = TrustManagerFactory.getDefaultAlgorithm()
val tmf: TrustManagerFactory = TrustManagerFactory.getInstance(tmfAlgorithm)
tmf.init(keyStore)

// Create an SSLContext that uses our TrustManager
val context: SSLContext = SSLContext.getInstance("TLS")
context.init(null, tmf.getTrustManagers(), null)

// Tell the URLConnection to use a SocketFactory from our SSLContext
val url = URL("https://myserver.org")
val urlConnection: HttpsURLConnection = url.openConnection() as HttpsURLConnection
urlConnection.setSSLSocketFactory(context.getSocketFactory())
val inputStream: InputStream = urlConnection.getInputStream()
...
</pre>]]></Recommendations>
                <References>
                    <Reference>
                        <Title><![CDATA[Your app shouldn't suffer SSL's problems]]></Title>
                        <Publisher><![CDATA[Moxie Marlinspike]]></Publisher>
                        <Source><![CDATA[https://moxie.org/blog/authenticity-is-broken-in-ssl-but-your-app-ha/]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Certificate and Public Key Pinning]]></Title>
                        <Publisher><![CDATA[OWASP]]></Publisher>
                        <Source><![CDATA[https://www.owasp.org/index.php/Certificate_and_Public_Key_Pinning]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CWE ID 297]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[13] CWE ID 287, [25] CWE ID 295]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2019]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[14] CWE ID 287]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2020]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[14] CWE ID 287]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[[14] CWE ID 287]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration Top 25 2022]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CCI-000185, CCI-001941, CCI-001942, CCI-002418, CCI-002420, CCI-002421, CCI-002422]]></Title>
                        <Author><![CDATA[Standards Mapping - DISA Control Correlation Identifier Version 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CM, SC]]></Title>
                        <Author><![CDATA[Standards Mapping - FIPS200]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insufficient Data Protection]]></Title>
                        <Author><![CDATA[Standards Mapping - General Data Protection Regulation]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SC-8 Transmission Confidentiality and Integrity (P1)]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SC-8 Transmission Confidentiality and Integrity]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[2.6.3 Look-up Secret Verifier Requirements (L2 L3), 2.7.1 Out of Band Verifier Requirements (L1 L2 L3), 2.7.2 Out of Band Verifier Requirements (L1 L2 L3), 2.7.3 Out of Band Verifier Requirements (L1 L2 L3), 2.8.4 Single or Multi Factor One Time Verifier Requirements (L2 L3), 2.8.5 Single or Multi Factor One Time Verifier Requirements (L2 L3), 3.7.1 Defenses Against Session Management Exploits (L1 L2 L3), 6.2.1 Algorithms (L1 L2 L3), 9.2.1 Server Communications Security Requirements (L2 L3), 9.2.3 Server Communications Security Requirements (L2 L3)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Application Security Verification Standard 4.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[M3 Insufficient Transport Layer Protection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Mobile Top 10 Risks 2014]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A3 Broken Authentication and Session Management]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2004]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A9 Insecure Communications]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2007]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A9 Insufficient Transport Layer Protection]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A6 Sensitive Data Exposure]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2013]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A3 Sensitive Data Exposure]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2017]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A07 Identification and Authentication Failures]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 4.1, Requirement 6.5.10]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 4.1, Requirement 6.3.1.4, Requirement 6.5.9]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 4.1, Requirement 6.5.4]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 2.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 4.1, Requirement 6.5.4]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 4.1, Requirement 6.5.4]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 4.1, Requirement 6.5.4]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 4.1, Requirement 6.5.4]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 3.3 - Sensitive Data Retention, Control Objective 6.2 - Sensitive Data Protection, Control Objective 7.1 - Use of Cryptography]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 3.3 - Sensitive Data Retention, Control Objective 6.2 - Sensitive Data Protection, Control Objective 7.1 - Use of Cryptography, Control Objective B.2.3 - Terminal Software Design]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3250.1 CAT I, APP3250.2 CAT I, APP3250.3 CAT II, APP3250.4 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3250.1 CAT I, APP3250.2 CAT I, APP3250.3 CAT II, APP3250.4 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3250.1 CAT I, APP3250.2 CAT I, APP3250.3 CAT II, APP3250.4 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3250.1 CAT I, APP3250.2 CAT I, APP3250.3 CAT II, APP3250.4 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3250.1 CAT I, APP3250.2 CAT I, APP3250.3 CAT II, APP3250.4 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3250.1 CAT I, APP3250.2 CAT I, APP3250.3 CAT II, APP3250.4 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3250.1 CAT I, APP3250.2 CAT I, APP3250.3 CAT II, APP3250.4 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-001620 CAT II, APSC-DV-001630 CAT II, APSC-DV-001810 CAT I, APSC-DV-002440 CAT I, APSC-DV-002450 CAT II, APSC-DV-002460 CAT II, APSC-DV-002470 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-001620 CAT II, APSC-DV-001630 CAT II, APSC-DV-001810 CAT I, APSC-DV-002440 CAT I, APSC-DV-002450 CAT II, APSC-DV-002460 CAT II, APSC-DV-002470 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-001620 CAT II, APSC-DV-001630 CAT II, APSC-DV-001810 CAT I, APSC-DV-002440 CAT I, APSC-DV-002450 CAT II, APSC-DV-002460 CAT II, APSC-DV-002470 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.11]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-001620 CAT II, APSC-DV-001630 CAT II, APSC-DV-001810 CAT I, APSC-DV-002440 CAT I, APSC-DV-002450 CAT II, APSC-DV-002460 CAT II, APSC-DV-002470 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-001620 CAT II, APSC-DV-001630 CAT II, APSC-DV-001810 CAT I, APSC-DV-002440 CAT I, APSC-DV-002450 CAT II, APSC-DV-002460 CAT II, APSC-DV-002470 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.3]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-001620 CAT II, APSC-DV-001630 CAT II, APSC-DV-001810 CAT I, APSC-DV-002440 CAT I, APSC-DV-002450 CAT II, APSC-DV-002460 CAT II, APSC-DV-002470 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-001620 CAT II, APSC-DV-001630 CAT II, APSC-DV-001810 CAT I, APSC-DV-002440 CAT I, APSC-DV-002450 CAT II, APSC-DV-002460 CAT II, APSC-DV-002470 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-001620 CAT II, APSC-DV-001630 CAT II, APSC-DV-001810 CAT I, APSC-DV-002440 CAT I, APSC-DV-002450 CAT II, APSC-DV-002460 CAT II, APSC-DV-002470 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-001620 CAT II, APSC-DV-001630 CAT II, APSC-DV-001810 CAT I, APSC-DV-002440 CAT I, APSC-DV-002450 CAT II, APSC-DV-002460 CAT II, APSC-DV-002470 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-001620 CAT II, APSC-DV-001630 CAT II, APSC-DV-001810 CAT I, APSC-DV-002440 CAT I, APSC-DV-002450 CAT II, APSC-DV-002460 CAT II, APSC-DV-002470 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.8]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-001620 CAT II, APSC-DV-001630 CAT II, APSC-DV-001810 CAT I, APSC-DV-002440 CAT I, APSC-DV-002450 CAT II, APSC-DV-002460 CAT II, APSC-DV-002470 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-001620 CAT II, APSC-DV-001630 CAT II, APSC-DV-001810 CAT I, APSC-DV-002440 CAT I, APSC-DV-002450 CAT II, APSC-DV-002460 CAT II, APSC-DV-002470 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 5.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Information Leakage]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium 24 + 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insufficient Transport Layer Protection (WASC-04)]]></Title>
                        <Author><![CDATA[Standards Mapping - Web Application Security Consortium Version 2.00]]></Author>
                    </Reference>
                </References>
            </Description>
            <Description
                id="desc.semantic.kotlin.unchecked_return_value" formatVersion="3.4">
                <Abstract><![CDATA[<Paragraph>The method <Replace key="EnclosingFunction.name"/> in <Replace key="PrimaryLocation.file"/> ignores the value returned by <Replace key="PrimaryCall.name"/> on line <Replace key="PrimaryLocation.line"/>, which could cause the program to overlook unexpected states and conditions.<AltParagraph>Ignoring a method's return value can cause the program to overlook unexpected states and conditions.</AltParagraph></Paragraph>]]></Abstract>
                <Explanation><![CDATA[
It is important for programmers to examine return values to ensure that the expected state is returned from the method call.

<Paragraph>
In this case, the value of <Replace key="PrimaryCall.name" link="PrimaryLocation"/> is unchecked in <Replace key="PrimaryLocation.file"/> on line <Replace key="PrimaryLocation.line"/>.
</Paragraph>

<b>Example:</b> The following code loops through a set of users, reading a private data file for each user. The programmer assumes that the files are always exactly 1 kilobyte in size and therefore ignores the return value from <code>read()</code>. If an attacker can create a smaller file, the program will recycle the remainder of the data from the previous user and handle it as though it belongs to the attacker.

<pre>
var fis: FileInputStream
val byteArray = ByteArray(1023)
val i: Iterator&lt;*&gt; = users.iterator()
while (i.hasNext()) {
    val userName = i.next() as String
    val pFileName: String = PFILE_ROOT.toString() + "/" + userName
    val fis = FileInputStream(pFileName)
    fis.read(byteArray) // the file is always 0k bytes
    fis.close()
    processPFile(userName, byteArray)
}
</pre>]]></Explanation>
                <Recommendations><![CDATA[<pre>
    var fis: FileInputStream
    val byteArray = ByteArray(1024)
    val i: Iterator&lt;*&gt; = users.iterator()
    while (i.hasNext()) {
        val pFileName: String = PFILE_ROOT.toString() + "/" + i.next()
        fis = FileInputStream(pFileName)
        var bRead = 0
        while (bRead &lt; 1024) {
            val rd = fis.read(byteArray, bRead, 1024 - bRead)
            if (rd == -1) {
                throw IOException("file is unusually small")
            }
            bRead += rd
        }
        // could add check to see if file is too large here
        fis.close();
        processPFile(userName, byteArray)
    }
  }
</pre>

Note: Because the fix for this problem is relatively complicated, you might be tempted to use a simpler approach, such as checking the size of the file before you begin reading. Such an approach would render the application vulnerable to a file system race condition, whereby an attacker could replace a well-formed file with a malicious file between the file size check and the call to read data from the file.]]></Recommendations>
                <Tips>
                    <Tip><![CDATA[Watch out for programmers who want to explain away this type of issue by saying "that can never happen because ...". Chances are good that they have developed their intuition about the way the system works by using their development workstation. If your software will eventually run under different operating systems, operating system versions, hardware configurations, or runtime environments, their intuition might not apply.]]></Tip>
                </Tips>
                <References>
                    <Reference>
                        <Title><![CDATA[EXP00-J. Do not ignore values returned by methods]]></Title>
                        <Publisher><![CDATA[CERT]]></Publisher>
                        <Source><![CDATA[https://www.securecoding.cert.org/confluence/display/java/EXP00-J.+Do+not+ignore+values+returned+by+methods]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[FIO02-J. Detect and handle file-related errors]]></Title>
                        <Publisher><![CDATA[CERT]]></Publisher>
                        <Source><![CDATA[https://www.securecoding.cert.org/confluence/display/java/FIO02-J.+Detect+and+handle+file-related+errors]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CWE ID 252, CWE ID 754]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CCI-001314, CCI-003272]]></Title>
                        <Author><![CDATA[Standards Mapping - DISA Control Correlation Identifier Version 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Rule 17.7]]></Title>
                        <Author><![CDATA[Standards Mapping - MISRA C 2012]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Rule 0-1-7]]></Title>
                        <Author><![CDATA[Standards Mapping - MISRA C++ 2008]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI-11 Error Handling (P2)]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI-11 Error Handling]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[11.1.7 Business Logic Security Requirements (L2 L3)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Application Security Verification Standard 4.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A7 Improper Error Handling]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2004]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A6 Information Leakage and Improper Error Handling]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2007]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.7]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.3.1.2, Requirement 6.5.6]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.5]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 2.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.5]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.5]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.5]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.5]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 3.6 - Sensitive Data Retention]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 3.6 - Sensitive Data Retention, Control Objective B.3.2 - Terminal Software Attack Mitigation]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Risky Resource Management - CWE ID 754]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3120 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3120 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3120 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3120 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3120 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3120 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3120 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002580 CAT II, APSC-DV-003235 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002580 CAT II, APSC-DV-003235 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002580 CAT II, APSC-DV-003235 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.11]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002580 CAT II, APSC-DV-003235 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002580 CAT II, APSC-DV-003235 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.3]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002580 CAT II, APSC-DV-003235 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002580 CAT II, APSC-DV-003235 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002580 CAT II, APSC-DV-003235 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002580 CAT II, APSC-DV-003235 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002580 CAT II, APSC-DV-003235 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.8]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002580 CAT II, APSC-DV-003235 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002580 CAT II, APSC-DV-003235 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 5.1]]></Author>
                    </Reference>
                </References>
            </Description>
            <Description
                id="desc.structural.kotlin.poor_logging_practice_use_of_a_system_output_stream" formatVersion="3.4">
                <Abstract><![CDATA[<Paragraph>Using <Replace key="PrimaryCall.name"/> rather than a dedicated logging facility makes it difficult to monitor the program behavior.<AltParagraph>Using <code>print</code> or <code>println</code> rather than a dedicated logging facility makes it difficult to monitor the program behavior.</AltParagraph></Paragraph>]]></Abstract>
                <Explanation><![CDATA[<b>Example 1:</b> The first Kotlin program that a developer learns to write is the following:

<pre>
class MyClass {
    ...
        println("hello world")
    ...
    }
}
</pre>

While most programmers go on to learn many nuances and subtleties about Kotlin, a surprising number hang on to this first lesson and never give up on writing messages to standard output using <code>print</code> or <code>println</code>.

The problem is that writing directly to standard output or standard error is often used as an unstructured form of logging. Structured logging facilities provide features like logging levels, uniform formatting, a logger identifier, timestamps, and, perhaps most critically, the ability to direct the log messages to the right place. When the use of system output streams is jumbled together with the code that uses loggers properly, the result is often a well-kept log that is missing critical information.

Developers widely accept the need for structured logging, but many continue to use system output streams in their "pre-production" development. If the code you are reviewing is past the initial phases of development, use of the standard ouput or error stream may indicate an oversight in the move to a structured logging system.]]></Explanation>
                <Recommendations><![CDATA[Use a Kotlin/Java logging facility rather than <code>print</code> or <code>println</code>.

<b>Example 2:</b> For example, you can rewrite the "hello world" program in <code>Example 1</code> using log4j as follows:

<pre>
import org.apache.log4j.Logger
import org.apache.log4j.BasicConfigurator

class MyClass {
    private val logger = Logger.getLogger(MyClass::class.java)
    ... 
        BasicConfigurator.configure()
        logger.info("hello world")
    ...
}

</pre>]]></Recommendations>
                <Tips>
                    <Tip><![CDATA[Fortify Static Code Analyzer makes an exception for using <code>print</code> or <code>println</code> in <code>main()</code> and functions in the call hierarchy of <code>main()</code> and does not report such occurrences as Poor Logging Practice: Use of a System Output Stream issues.]]></Tip>
                </Tips>
                <References>
                    <Reference>
                        <Title><![CDATA[CWE ID 398]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[AU]]></Title>
                        <Author><![CDATA[Standards Mapping - FIPS200]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI-11 Error Handling (P2)]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SI-11 Error Handling]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A7 Improper Error Handling]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2004]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A6 Information Leakage and Improper Error Handling]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2007]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.7]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.3.1.2, Requirement 6.5.6]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.5]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 2.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.5]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.5]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.5]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.5]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 3.6 - Sensitive Data Retention]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 3.6 - Sensitive Data Retention]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3620 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3620 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3620 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3620 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3620 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3620 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3620 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.9]]></Author>
                    </Reference>
                </References>
            </Description>
            <Description
                id="desc.semantic.kotlin.insecure_randomness_hardcoded_seed" formatVersion="3.4">
                <Abstract><![CDATA[<Paragraph>The function <Replace key="EnclosingFunction.name"/> in <Replace key="PrimaryLocation.file"/> is passed a constant value for the seed. Functions that generate random or pseudorandom values, which are passed a seed, should not be called with a constant argument.<AltParagraph>Functions that generate random or pseudorandom values, which are passed a seed, should not be called with a constant argument.</AltParagraph></Paragraph>]]></Abstract>
                <Explanation><![CDATA[Functions that generate random or pseudorandom values, which are passed a seed, should not be called with a constant argument. If a pseudorandom number generator (such as <code>Random</code>) is seeded with a specific value (using function such as <code>Random(Int)</code>), the values returned by <code>Random.nextInt()</code> and similar methods which return or assign values are predictable for an attacker that can collect a number of PRNG outputs.

<b>Example 1:</b> The values produced by the <code>Random</code> object <code>s</code> are predictable from the <code>Random</code> object <code>r</code>.

<pre>
        val r = Random(12345)
        val i = r.nextInt()
        val b = ByteArray(4)
        r.nextBytes(b)

        val s = Random(12345)
        val j = s.nextInt()
        val c = ByteArray(4)
        s.nextBytes(c)
</pre>

In this example, pseudorandom number generators: <code>r</code> and <code>s</code> were identically seeded, so <code>i == j</code>, and corresponding values of arrays <code>b[]</code> and <code>c[]</code> are equal.]]></Explanation>
                <Recommendations><![CDATA[Use a cryptographic PRNG seeded with hardware-based sources of randomness, such as ring oscillators, disk drive timing, thermal noise, or radioactive decay. Doing so makes the sequence of data produced by <code>Random.nextInt()</code> and similar methods much harder to predict than setting the seed to a constant.]]></Recommendations>
                <References>
                    <Reference>
                        <Title><![CDATA[Java Cryptography Architecture]]></Title>
                        <Publisher><![CDATA[Oracle]]></Publisher>
                        <Source><![CDATA[https://docs.oracle.com/javase/10/security/java-cryptography-architecture-jca-reference-guide.htm#JSSEC-GUID-2BCFDD85-D533-4E6C-8CE9-29990DEB0190]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Building Secure Software]]></Title>
                        <Author><![CDATA[J. Viega, G. McGraw]]></Author>
                        <Publisher><![CDATA[Addison-Wesley]]></Publisher>
                        <PublishedDate>2002</PublishedDate>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[MSC02-J. Generate strong random numbers]]></Title>
                        <Publisher><![CDATA[CERT]]></Publisher>
                        <Source><![CDATA[https://www.securecoding.cert.org/confluence/display/java/MSC02-J.+Generate+strong+random+numbers]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[MSC03-J. Never hard code sensitive information]]></Title>
                        <Publisher><![CDATA[CERT]]></Publisher>
                        <Source><![CDATA[https://www.securecoding.cert.org/confluence/display/java/MSC03-J.+Never+hard+code+sensitive+information]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CWE ID 336]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CCI-002450]]></Title>
                        <Author><![CDATA[Standards Mapping - DISA Control Correlation Identifier Version 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[MP]]></Title>
                        <Author><![CDATA[Standards Mapping - FIPS200]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insufficient Data Protection]]></Title>
                        <Author><![CDATA[Standards Mapping - General Data Protection Regulation]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SC-13 Cryptographic Protection (P1)]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SC-13 Cryptographic Protection]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[2.3.1 Authenticator Lifecycle Requirements (L1 L2 L3), 2.6.2 Look-up Secret Verifier Requirements (L2 L3), 6.3.3 Random Values (L3)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Application Security Verification Standard 4.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[M6 Broken Cryptography]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Mobile Top 10 Risks 2014]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A8 Insecure Storage]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2004]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A8 Insecure Cryptographic Storage]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2007]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A7 Insecure Cryptographic Storage]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A02 Cryptographic Failures]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.3.1.3, Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.3]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 2.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.3]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.3]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.3]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.3]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 7.3 - Use of Cryptography]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 7.3 - Use of Cryptography, Control Objective B.2.4 - Terminal Software Design]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Porous Defenses - CWE ID 330]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2009]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3150.2 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3150.2 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3150.2 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3150.2 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3150.2 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3150.2 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3150.2 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002010 CAT II, APSC-DV-002050 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002010 CAT II, APSC-DV-002050 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002010 CAT II, APSC-DV-002050 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.11]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002010 CAT II, APSC-DV-002050 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002010 CAT II, APSC-DV-002050 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.3]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002010 CAT II, APSC-DV-002050 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002010 CAT II, APSC-DV-002050 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002010 CAT II, APSC-DV-002050 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002010 CAT II, APSC-DV-002050 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002010 CAT II, APSC-DV-002050 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.8]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002010 CAT II, APSC-DV-002050 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002010 CAT II, APSC-DV-002050 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 5.1]]></Author>
                    </Reference>
                </References>
            </Description>
            <Description
                id="desc.dataflow.kotlin.insecure_randomness_user_controlled_seed" formatVersion="3.4">
                <Abstract><![CDATA[<Paragraph>The function <Replace key="EnclosingFunction.name"/> in <Replace key="PrimaryLocation.file"/> is passed a tainted value for the seed. Functions that generate random or pseudorandom values, which are passed a seed, should not be called with a tainted integer argument.<AltParagraph>Functions that generate random or pseudorandom values, which are passed a seed, should not be called with a tainted integer argument.</AltParagraph></Paragraph>]]></Abstract>
                <Explanation><![CDATA[<code>Random.setSeed()</code> should not be called with a tainted integer argument. Doing so allows an attacker to control the value used to seed the pseudorandom number generator, and therefore predict the sequence of values (usually integers) produced by calls to <code>Random.nextInt()</code>, <code>Random.nextLong()</code>, <code>Random.nextDouble()</code>, or returned by <code>Random.nextBoolean()</code>, or set in <code>Random.nextBytes(ByteArray)</code>.]]></Explanation>
                <Recommendations><![CDATA[Use a cryptographic PRNG such as <code>java.security.SecureRandom</code> seeded with hardware-based sources of randomness, such as ring oscillators, disk drive timing, thermal noise, or radioactive decay.]]></Recommendations>
                <References>
                    <Reference>
                        <Title><![CDATA[Java Cryptography Architecture]]></Title>
                        <Publisher><![CDATA[Oracle]]></Publisher>
                        <Source><![CDATA[https://docs.oracle.com/javase/10/security/java-cryptography-architecture-jca-reference-guide.htm#JSSEC-GUID-2BCFDD85-D533-4E6C-8CE9-29990DEB0190]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Building Secure Software]]></Title>
                        <Author><![CDATA[J. Viega, G. McGraw]]></Author>
                        <Publisher><![CDATA[Addison-Wesley]]></Publisher>
                        <PublishedDate>2002</PublishedDate>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[NIST Special Publication 800-90A: Recommendation for Random Number Generation Using Deterministic Random Bit Generators]]></Title>
                        <Author><![CDATA[Elaine Barker and John Kelsey]]></Author>
                        <Publisher><![CDATA[NIST]]></Publisher>
                        <PublishedDate>2012</PublishedDate>
                        <Source><![CDATA[http://csrc.nist.gov/publications/nistpubs/800-90A/SP800-90A.pdf]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[NIST DRAFT Special Publication 800-90B: Recommendation for the Entropy Sources Used for Random Bit Generation]]></Title>
                        <Author><![CDATA[Elaine Barker and John Kelsey]]></Author>
                        <Publisher><![CDATA[NIST]]></Publisher>
                        <PublishedDate>2012</PublishedDate>
                        <Source><![CDATA[http://csrc.nist.gov/publications/drafts/800-90/draft-sp800-90b.pdf]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[DRAFT NIST Special Publication 800-90C: Recommendation for Random Bit Generator (RBG) Constructions]]></Title>
                        <Author><![CDATA[Elaine Barker and John Kelsey]]></Author>
                        <Publisher><![CDATA[NIST]]></Publisher>
                        <PublishedDate>2012</PublishedDate>
                        <Source><![CDATA[http://csrc.nist.gov/publications/drafts/800-90/draft-sp800-90c.pdf]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[MSC02-J. Generate strong random numbers]]></Title>
                        <Publisher><![CDATA[CERT]]></Publisher>
                        <Source><![CDATA[https://www.securecoding.cert.org/confluence/display/java/MSC02-J.+Generate+strong+random+numbers]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CWE ID 335]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CCI-002450]]></Title>
                        <Author><![CDATA[Standards Mapping - DISA Control Correlation Identifier Version 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[MP]]></Title>
                        <Author><![CDATA[Standards Mapping - FIPS200]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insufficient Data Protection]]></Title>
                        <Author><![CDATA[Standards Mapping - General Data Protection Regulation]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SC-13 Cryptographic Protection (P1)]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SC-13 Cryptographic Protection]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[2.3.1 Authenticator Lifecycle Requirements (L1 L2 L3), 2.6.2 Look-up Secret Verifier Requirements (L2 L3), 6.3.3 Random Values (L3)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Application Security Verification Standard 4.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[M6 Broken Cryptography]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Mobile Top 10 Risks 2014]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A8 Insecure Storage]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2004]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A8 Insecure Cryptographic Storage]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2007]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A7 Insecure Cryptographic Storage]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A02 Cryptographic Failures]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.3.1.3, Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.3]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 2.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.3]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.3]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.3]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.3]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 7.3 - Use of Cryptography]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 7.3 - Use of Cryptography, Control Objective B.2.4 - Terminal Software Design]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Porous Defenses - CWE ID 330]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2009]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3150.2 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3150.2 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3150.2 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3150.2 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3150.2 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3150.2 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3150.2 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002010 CAT II, APSC-DV-002050 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002010 CAT II, APSC-DV-002050 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002010 CAT II, APSC-DV-002050 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.11]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002010 CAT II, APSC-DV-002050 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002010 CAT II, APSC-DV-002050 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.3]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002010 CAT II, APSC-DV-002050 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002010 CAT II, APSC-DV-002050 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002010 CAT II, APSC-DV-002050 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002010 CAT II, APSC-DV-002050 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002010 CAT II, APSC-DV-002050 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.8]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002010 CAT II, APSC-DV-002050 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002010 CAT II, APSC-DV-002050 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 5.1]]></Author>
                    </Reference>
                </References>
            </Description>
            <Description id="desc.semantic.kotlin.insecure_randomness" formatVersion="3.4">
                <Abstract><![CDATA[<Paragraph>The random number generator implemented by <Replace key="PrimaryCall.name"/> cannot withstand a cryptographic attack.<AltParagraph>Standard pseudorandom number generators cannot withstand cryptographic attacks.</AltParagraph></Paragraph>]]></Abstract>
                <Explanation><![CDATA[Insecure randomness errors occur when a function that can produce predictable values is used as a source of randomness in a security-sensitive context.
<Paragraph>
In this case, the function that generates weak random numbers is <Replace key="PrimaryCall.name" link="PrimaryLocation"/> in <Replace key="PrimaryLocation.file"/> on line <Replace key="PrimaryLocation.line"/>.
</Paragraph>
Computers are deterministic machines, and as such are unable to produce true randomness. Pseudorandom Number Generators (PRNGs) approximate randomness algorithmically, starting with a seed from which subsequent values are calculated.

There are two types of PRNGs: statistical and cryptographic. Statistical PRNGs provide useful statistical properties, but their output is highly predictable and form an easy to reproduce numeric stream that is unsuitable for use in cases where security depends on generated values being unpredictable. Cryptographic PRNGs address this problem by generating output that is more difficult to predict. For a value to be cryptographically secure, it must be impossible or highly improbable for an attacker to distinguish between the generated random value and a truly random value. In general, if a PRNG algorithm is not advertised as being cryptographically secure, then it is probably a statistical PRNG and should not be used in security-sensitive contexts, where its use can lead to serious vulnerabilities such as easy-to-guess temporary passwords, predictable cryptographic keys, session hijacking, and DNS spoofing.

<b>Example:</b> The following code uses a statistical PRNG to create a URL for a receipt that remains active for some period of time after a purchase.

<pre>
fun GenerateReceiptURL(baseUrl: String): String {
    val ranGen = Random(Date().getTime())
    return baseUrl + ranGen.nextInt(400000000).toString() + ".html"
}
</pre>

This code uses the <code>Random.nextInt()</code> function to generate "unique" identifiers for the receipt pages it generates. Since <code>Random.nextInt()</code> is a statistical PRNG, it is easy for an attacker to guess the strings it generates. Although the underlying design of the receipt system is also faulty, it would be more secure if it used a random number generator that did not produce predictable receipt identifiers, such as a cryptographic PRNG.]]></Explanation>
                <Recommendations><![CDATA[When unpredictability is critical, as is the case with most security-sensitive uses of randomness, use a cryptographic PRNG. Regardless of the PRNG you choose, always use a value with sufficient entropy to seed the algorithm. (Do not use values such as the current time because it offers only negligible entropy.)

The Java language provides a cryptographic PRNG in <code>java.security.SecureRandom</code>. As is the case with other algorithm-based classes in <code>java.security</code>, <code>SecureRandom</code> provides an implementation-independent wrapper around a particular set of algorithms. When you request an instance of a <code>SecureRandom</code> object using <code>SecureRandom.getInstance()</code>, you can request a specific implementation of the algorithm. If the algorithm is available, then it is given as a <code>SecureRandom</code> object. If it is unavailable or if you do not specify a particular implementation, then you are given a <code>SecureRandom</code> implementation selected by the system.
]]></Recommendations>
                <References>
                    <Reference>
                        <Title><![CDATA[Java Cryptography Architecture]]></Title>
                        <Publisher><![CDATA[Oracle]]></Publisher>
                        <Source><![CDATA[https://docs.oracle.com/javase/10/security/java-cryptography-architecture-jca-reference-guide.htm#JSSEC-GUID-2BCFDD85-D533-4E6C-8CE9-29990DEB0190]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Building Secure Software]]></Title>
                        <Author><![CDATA[J. Viega, G. McGraw]]></Author>
                        <Publisher><![CDATA[Addison-Wesley]]></Publisher>
                        <PublishedDate>2002</PublishedDate>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[MSC02-J. Generate strong random numbers]]></Title>
                        <Publisher><![CDATA[CERT]]></Publisher>
                        <Source><![CDATA[https://www.securecoding.cert.org/confluence/display/java/MSC02-J.+Generate+strong+random+numbers]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CWE ID 338]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CCI-002450]]></Title>
                        <Author><![CDATA[Standards Mapping - DISA Control Correlation Identifier Version 2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[MP]]></Title>
                        <Author><![CDATA[Standards Mapping - FIPS200]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Insufficient Data Protection]]></Title>
                        <Author><![CDATA[Standards Mapping - General Data Protection Regulation]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SC-13 Cryptographic Protection (P1)]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[SC-13 Cryptographic Protection]]></Title>
                        <Author><![CDATA[Standards Mapping - NIST Special Publication 800-53 Revision 5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[2.3.1 Authenticator Lifecycle Requirements (L1 L2 L3), 2.6.2 Look-up Secret Verifier Requirements (L2 L3), 3.2.2 Session Binding Requirements (L1 L2 L3), 3.2.4 Session Binding Requirements (L2 L3), 6.3.1 Random Values (L2 L3), 6.3.2 Random Values (L2 L3), 6.3.3 Random Values (L3)]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Application Security Verification Standard 4.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[M6 Broken Cryptography]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Mobile Top 10 Risks 2014]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A8 Insecure Storage]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2004]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A8 Insecure Cryptographic Storage]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2007]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A7 Insecure Cryptographic Storage]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2010]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[A02 Cryptographic Failures]]></Title>
                        <Author><![CDATA[Standards Mapping - OWASP Top 10 2021]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.3.1.3, Requirement 6.5.8]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 1.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.3]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 2.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.3]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.3]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.3]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Requirement 6.5.3]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Data Security Standard Version 3.2.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 7.3 - Use of Cryptography]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.0]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Control Objective 7.3 - Use of Cryptography, Control Objective B.2.4 - Terminal Software Design]]></Title>
                        <Author><![CDATA[Standards Mapping - Payment Card Industry Software Security Framework 1.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[Porous Defenses - CWE ID 330]]></Title>
                        <Author><![CDATA[Standards Mapping - SANS Top 25 2009]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3150.2 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3150.2 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3150.2 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3150.2 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3150.2 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3150.2 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APP3150.2 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 3.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002010 CAT II, APSC-DV-002050 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.1]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002010 CAT II, APSC-DV-002050 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.10]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002010 CAT II, APSC-DV-002050 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.11]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002010 CAT II, APSC-DV-002050 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.2]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002010 CAT II, APSC-DV-002050 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.3]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002010 CAT II, APSC-DV-002050 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.4]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002010 CAT II, APSC-DV-002050 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.5]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002010 CAT II, APSC-DV-002050 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.6]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002010 CAT II, APSC-DV-002050 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.7]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002010 CAT II, APSC-DV-002050 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.8]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002010 CAT II, APSC-DV-002050 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 4.9]]></Author>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[APSC-DV-002010 CAT II, APSC-DV-002050 CAT II]]></Title>
                        <Author><![CDATA[Standards Mapping - Security Technical Implementation Guide Version 5.1]]></Author>
                    </Reference>
                </References>
            </Description>
            <Description
                id="desc.dataflow.kotlin.code_correctness_erroneous_class_compare" formatVersion="3.4">
                <Abstract><![CDATA[<Paragraph>The method <Replace key="EnclosingFunction.name"/>  in <Replace key="PrimaryLocation.file"/> determines an object's type based its class name on line <Replace key="PrimaryLocation.line"/>. This practice can lead to unexpected behavior or allow an attacker to inject a malicious class.<AltParagraph>Determining an object's type based on its class name can lead to unexpected behavior or allow an attacker to inject a malicious class.</AltParagraph></Paragraph>]]></Abstract>
                <Explanation><![CDATA[Attackers can deliberately duplicate class names in order to cause a program to execute malicious code. For this reason, class names are not good type identifiers and should not be used as the basis for granting trust to a given object.

<b>Example 1: </b> The following code determines whether to trust input from an <code>inputReader</code> object based on its class name. If an attacker can supply an implementation of <code>inputReader</code> that executes malicious commands, this code cannot differentiate the benign and malicious versions of the object.

<pre>
if (inputReader::class.qualifiedName == "com.example.TrustedClass") {
   input = inputReader.getInput()
   ...
}
</pre>]]></Explanation>
                <Recommendations><![CDATA[Always use a class-equivalence comparison to identify the type of an object. Do not rely on class names to convey type information.

<b>Example 2: </b> The following code from <code>Example 1</code> has been rewritten to use a class-equivalency comparison to determine whether the <code>inputReader</code> object has the expected type.

<pre>
if (inputReader is TrustedClass) {
   input = inputReader.getInput()
   ...
}
</pre>]]></Recommendations>
                <Tips>
                    <Tip><![CDATA[A number of modern web frameworks provide mechanisms to perform user input validation (including Struts and Spring MVC). To highlight the unvalidated sources of input, Fortify Secure Coding Rulepacks dynamically re-prioritize the issues Fortify Static Code Analyzer reports by lowering their probability of exploit and providing pointers to the supporting evidence whenever the framework validation mechanism is in use. We refer to this feature as Context-Sensitive Ranking. To further assist the Fortify user with the auditing process, the Fortify Software Security Research group makes available the Data Validation project template that groups the issues into folders based on the validation mechanism applied to their source of input.]]></Tip>
                </Tips>
                <References>
                    <Reference>
                        <Title><![CDATA[OBJ09-J. Compare classes and not class names]]></Title>
                        <Publisher><![CDATA[CERT]]></Publisher>
                        <Source><![CDATA[https://www.securecoding.cert.org/confluence/display/java/OBJ09-J.+Compare+classes+and+not+class+names]]></Source>
                    </Reference>
                    <Reference>
                        <Title><![CDATA[CWE ID 486]]></Title>
                        <Author><![CDATA[Standards Mapping - Common Weakness Enumeration]]></Author>
                    </Reference>
                </References>
            </Description>
        </Descriptions>
        <ControlflowStateStrings/>
        <TaintFlagDeclarations>
            <Flag name="NUMBER" type="neutral"/>
            <Flag name="XSS" type="general"/>
            <Flag name="NO_NEW_LINE" type="neutral"/>
            <Flag name="VALIDATED_PATH_MANIPULATION" type="neutral"/>
            <Flag name="SYSTEMINFO" type="specific"/>
            <Flag name="REGISTRY" type="general"/>
            <Flag name="ENVIRONMENT" type="general"/>
            <Flag name="EXCEPTIONINFO" type="neutral"/>
            <Flag name="VALIDATED_SYSTEM_INFORMATION_LEAK" type="neutral"/>
            <Flag name="PRIVATE" type="specific"/>
            <Flag name="VALIDATED_PRIVACY_VIOLATION" type="neutral"/>
            <Flag name="XSSSTREAM" type="specific"/>
            <Flag name="VALIDATED_SYSTEM_INFORMATION_LEAK_EXTERNAL" type="neutral"/>
            <Flag name="VALIDATED_DENIAL_OF_SERVICE_STRINGBUILDER" type="neutral"/>
            <Flag name="DATABASE" type="general"/>
            <Flag name="FILE_SYSTEM" type="general"/>
            <Flag name="UNINITIALIZED_STRINGBUILDER" type="specific"/>
            <Flag name="VALIDATED_DENIAL_OF_SERVICE_REGULAR_EXPRESSION" type="neutral"/>
            <Flag name="VALIDATED_SYSTEM_INFORMATION_LEAK_INTERNAL" type="neutral"/>
            <Flag name="VALIDATED_FORMULA_INJECTION" type="neutral"/>
            <Flag name="CSVSTREAM" type="specific"/>
            <Flag name="WEB" type="general"/>
            <Flag name="GUI_FORM" type="general"/>
            <Flag name="FORM" type="general"/>
            <Flag name="NETWORK" type="general"/>
            <Flag name="WEBSERVICE" type="general"/>
            <Flag name="VALIDATED_SERVER_SIDE_REQUEST_FORGERY" type="neutral"/>
            <Flag name="NETWORKSTREAM" type="specific"/>
            <Flag name="VALIDATED_TRUST_BOUNDARY_VIOLATION" type="neutral"/>
            <Flag name="WEBSOCKET_STREAM" type="specific"/>
            <Flag name="TAINTED_PATH" type="neutral"/>
            <Flag name="POORVALIDATION" type="specific"/>
            <Flag name="VALIDATED_CROSS_SITE_SCRIPTING_POOR_VALIDATION" type="neutral"/>
            <Flag name="ICC" type="general"/>
            <Flag
                name="VALIDATED_CROSS_SITE_SCRIPTING_INTER_COMPONENT_COMMUNICATION" type="neutral"/>
            <Flag name="VALIDATED_CROSS_SITE_SCRIPTING_REFLECTED" type="neutral"/>
            <Flag name="LDAP" type="general"/>
            <Flag name="NAMING" type="general"/>
            <Flag name="XML" type="general"/>
            <Flag name="OPEN_XML" type="general"/>
            <Flag name="JSON" type="general"/>
            <Flag name="VALIDATED_CROSS_SITE_SCRIPTING_PERSISTENT" type="neutral"/>
            <Flag name="SSL_URL" type="specific"/>
            <Flag
                name="VALIDATED_INSECURE_SSL_OVERLY_BROAD_CERTIFICATE_TRUST" type="neutral"/>
            <Flag
                name="VALIDATED_INSECURE_RANDOMNESS_USER_CONTROLLED_SEED" type="neutral"/>
            <Flag name="CLASS_NAME" type="specific"/>
            <Flag
                name="VALIDATED_CODE_CORRECTNESS_ERRONEOUS_CLASS_COMPARE" type="neutral"/>
            <Flag name="STREAM" type="general"/>
            <Flag name="STDIN" type="general"/>
            <Flag name="ARGS" type="general"/>
        </TaintFlagDeclarations>
        <TaintFlagDescriptions>
            <FlagDescription name="SYSTEMINFO">System Information</FlagDescription>
            <FlagDescription name="REGISTRY">Windows Registry</FlagDescription>
            <FlagDescription name="ENVIRONMENT">Environment Variables</FlagDescription>
            <FlagDescription name="PRIVATE">Private Information</FlagDescription>
            <FlagDescription name="DATABASE">Database</FlagDescription>
            <FlagDescription name="FILE_SYSTEM">File System</FlagDescription>
            <FlagDescription name="UNINITIALIZED_STRINGBUILDER">Uninitialized StringBuilder</FlagDescription>
            <FlagDescription name="CSVSTREAM">CSV Stream</FlagDescription>
            <FlagDescription name="WEB">Web</FlagDescription>
            <FlagDescription name="GUI_FORM">GUI Form</FlagDescription>
            <FlagDescription name="FORM">Web Form</FlagDescription>
            <FlagDescription name="NETWORK">Network</FlagDescription>
            <FlagDescription name="WEBSERVICE">Web Service</FlagDescription>
            <FlagDescription name="NETWORKSTREAM">Network</FlagDescription>
            <FlagDescription name="ICC">Device Inter-Component Communication</FlagDescription>
            <FlagDescription name="LDAP">LDAP Service</FlagDescription>
            <FlagDescription name="NAMING">Naming Service</FlagDescription>
            <FlagDescription name="XML">XML Document</FlagDescription>
            <FlagDescription name="OPEN_XML">Open XML Document</FlagDescription>
            <FlagDescription name="JSON">JSON Document</FlagDescription>
            <FlagDescription name="SSL_URL">SSL URL</FlagDescription>
            <FlagDescription name="STREAM">Stream</FlagDescription>
            <FlagDescription name="STDIN">Standard Input Stream</FlagDescription>
            <FlagDescription name="ARGS">Command Line Arguments</FlagDescription>
        </TaintFlagDescriptions>
        <Coverage>
            <FunctionIdentifier formatVersion="20.1">
                <MatchExpression>kotlin / also()</MatchExpression>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <MatchExpression>kotlin / apply()</MatchExpression>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Pattern>Mutable(Collection|Map)</Pattern>
                </ClassName>
                <FunctionName>
                    <Value>clear</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>clear</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>to</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <ClassName>
                    <Pattern>Pair|Triple</Pattern>
                </ClassName>
                <FunctionName>
                    <Value>init^</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Triple</Value>
                </ClassName>
                <FunctionName>
                    <Value>init^</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <ClassName>
                    <Pattern>Pair|Triple</Pattern>
                </ClassName>
                <FunctionName>
                    <Pattern>getFirst|component1</Pattern>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <ClassName>
                    <Pattern>Pair|Triple</Pattern>
                </ClassName>
                <FunctionName>
                    <Pattern>getSecond|component2</Pattern>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Triple</Value>
                </ClassName>
                <FunctionName>
                    <Pattern>getThird|component3</Pattern>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Byte</Value>
                </ClassName>
                <FunctionName>
                    <Pattern>dec|inc|unaryMinus|unaryPlus</Pattern>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Char</Value>
                </ClassName>
                <FunctionName>
                    <Pattern>dec|inc|unaryMinus|unaryPlus</Pattern>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Byte</Value>
                </ClassName>
                <FunctionName>
                    <Pattern>div|mod|plus|rangeTo|rem|times|minus</Pattern>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Char</Value>
                </ClassName>
                <FunctionName>
                    <Pattern>plus|minus</Pattern>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.Int</ParamType>
                </Parameters>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Char</Value>
                </ClassName>
                <FunctionName>
                    <Value>minus</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.Char</ParamType>
                </Parameters>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Char</Value>
                </ClassName>
                <FunctionName>
                    <Value>rangeTo</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Byte</Value>
                </ClassName>
                <FunctionName>
                    <Pattern>toByte|toChar</Pattern>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Char</Value>
                </ClassName>
                <FunctionName>
                    <Pattern>toByte|toChar</Pattern>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <ClassName>
                    <Pattern>Byte|Char</Pattern>
                </ClassName>
                <FunctionName>
                    <Pattern>toDouble|toFloat|toInt|toLong|toShort</Pattern>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Byte</Value>
                </ClassName>
                <FunctionName>
                    <Value>countLeading</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <ClassName>
                    <Value>CharSequence</Value>
                </ClassName>
                <FunctionName>
                    <Value>get</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <ClassName>
                    <Value>CharSequence</Value>
                </ClassName>
                <FunctionName>
                    <Value>subSequence</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Number</Value>
                </ClassName>
                <FunctionName>
                    <Pattern>toByte|toChar</Pattern>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Number</Value>
                </ClassName>
                <FunctionName>
                    <Pattern>to(Double|Float|Int|Long|Short)</Pattern>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <ClassName>
                    <Pattern>Double|Float|Int|Long|Short</Pattern>
                </ClassName>
                <FunctionName>
                    <Pattern>dec|inc|unaryMinus|unaryPlus</Pattern>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <ClassName>
                    <Pattern>Double|Float|Int|Long|Short</Pattern>
                </ClassName>
                <FunctionName>
                    <Pattern>div|minus|mod|plus|rem|times</Pattern>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <ClassName>
                    <Pattern>Int|Long</Pattern>
                </ClassName>
                <FunctionName>
                    <Pattern>and|inv|or|shl|shr|ushr|xor</Pattern>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Lazy</Value>
                </ClassName>
                <FunctionName>
                    <Value>getValue</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>getValue</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.Lazy</ParamType>
                    <ParamType>kotlin.Any</ParamType>
                    <ParamType>kotlin.reflect.KProperty</ParamType>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Result.Companion</Value>
                </ClassName>
                <FunctionName>
                    <Value>success</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Result</Value>
                </ClassName>
                <FunctionName>
                    <Value>getOrNull</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <ClassName>
                    <Value>String</Value>
                </ClassName>
                <FunctionName>
                    <Value>plus</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>dec|inc|unaryMinus</Pattern>
                </FunctionName>
                <Parameters>
                    <ParamType>java.math.BigDecimal</ParamType>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>div|minus|mod|plus|rem|times</Pattern>
                </FunctionName>
                <Parameters>
                    <ParamType>java.math.BigDecimal</ParamType>
                    <ParamType>java.math.BigDecimal</ParamType>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>dec|inc|inv|unaryMinus</Pattern>
                </FunctionName>
                <Parameters>
                    <ParamType>java.math.BigInteger</ParamType>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>and|div|minus|or|plus|rem|shr|shl|times|xor</Pattern>
                </FunctionName>
                <Parameters>
                    <ParamType>java.math.BigInteger</ParamType>
                    <WildCard min="1" max="1"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>toBigDecimal|toBigInteger</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>arrayOf</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>(byte|char)ArrayOf</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>(double|float|int|long|short)ArrayOf</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>getOrDefault</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.Result</ParamType>
                    <WildCard min="1" max="1"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>getOrElse</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.Result</ParamType>
                    <WildCard min="1" max="1"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>getOrThrow</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.Result</ParamType>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>onFailure</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.Result</ParamType>
                    <WildCard min="1" max="1"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>onSuccess</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.Result</ParamType>
                    <WildCard min="1" max="1"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>recover(Catching)?</Pattern>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.Result</ParamType>
                    <WildCard min="1" max="1"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>takeIf|takeUnless</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>toList</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.Pair</ParamType>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>toList</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.Triple</ParamType>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>MutableCollection</Value>
                </ClassName>
                <FunctionName>
                    <Pattern>add(All)?</Pattern>
                </FunctionName>
                <Parameters>
                    <WildCard min="1" max="1"/>
                </Parameters>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>MutableList</Value>
                </ClassName>
                <FunctionName>
                    <Pattern>add(All)?</Pattern>
                </FunctionName>
                <Parameters>
                    <WildCard min="2" max="2"/>
                </Parameters>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>List</Value>
                </ClassName>
                <FunctionName>
                    <Value>subList</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>List</Value>
                </ClassName>
                <FunctionName>
                    <Value>listIterator</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>AbstractCollection</Value>
                </ClassName>
                <FunctionName>
                    <Value>toArray</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>AbstractCollection</Value>
                </ClassName>
                <FunctionName>
                    <Value>toArray</Value>
                </FunctionName>
                <Parameters>
                    <WildCard min="1" max="1"/>
                </Parameters>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Pattern>Array(List|Deque)</Pattern>
                </ClassName>
                <FunctionName>
                    <Value>init^</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.collections.Collection</ParamType>
                </Parameters>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Pattern>(Linked)?HashSet</Pattern>
                </ClassName>
                <FunctionName>
                    <Value>init^</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.collections.Collection</ParamType>
                </Parameters>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Pattern>(Linked)?HashMap</Pattern>
                </ClassName>
                <FunctionName>
                    <Value>init^</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.collections.Map</ParamType>
                </Parameters>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>ArrayDeque</Value>
                </ClassName>
                <FunctionName>
                    <Pattern>add(First|Last)</Pattern>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>ArrayDeque</Value>
                </ClassName>
                <FunctionName>
                    <Pattern>first|firstOrNull|last|lastOrNull|removeFirst|removeFirstOrNull|removeLast|removeLastOrNull</Pattern>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>addAll</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.collections.MutableCollection</ParamType>
                    <WildCard min="1" max="1"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>asList|asReversed|reversed|reversedArray</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>filter(Indexed|IsInstance|Keys|Not|NotNull|Values)?</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.sequences</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>filter(Indexed|IsInstance|Not|NotNull)?</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>filter(Indexed|Not)?</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                </NamespaceName>
                <FunctionName>
                    <Pattern>find(Last)?</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>findAnyOf|findLastAnyOf</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                </NamespaceName>
                <FunctionName>
                    <Pattern>first(OrNull)?|last(OrNull)?</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Pattern>kotlin\.(collections|sequences)</Pattern>
                </NamespaceName>
                <FunctionName>
                    <Value>flatten</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>getOr(Null|Put)</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                </NamespaceName>
                <FunctionName>
                    <Pattern>group(ing)?By</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                </NamespaceName>
                <FunctionName>
                    <Value>groupByTo</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                </NamespaceName>
                <FunctionName>
                    <Value>ifEmpty</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                </NamespaceName>
                <FunctionName>
                    <Value>orEmpty</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>iterator</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.collections.MutableMap</ParamType>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>iterator</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.collections.Map</ParamType>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>iterator</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.collections.Iterator</ParamType>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Iterator</Value>
                </ClassName>
                <FunctionName>
                    <Value>next</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>ByteIterator</Value>
                </ClassName>
                <FunctionName>
                    <Value>nextByte</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>CharIterator</Value>
                </ClassName>
                <FunctionName>
                    <Value>nextChar</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>DoubleIterator</Value>
                </ClassName>
                <FunctionName>
                    <Value>nextDouble</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>FloatIterator</Value>
                </ClassName>
                <FunctionName>
                    <Value>nextFloat</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>IntIterator</Value>
                </ClassName>
                <FunctionName>
                    <Value>nextInt</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>LongIterator</Value>
                </ClassName>
                <FunctionName>
                    <Value>nextLong</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>ShortIterator</Value>
                </ClassName>
                <FunctionName>
                    <Value>nextShort</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>UByteIterator</Value>
                </ClassName>
                <FunctionName>
                    <Value>nextUByte</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>UShortIterator</Value>
                </ClassName>
                <FunctionName>
                    <Value>nextUShort</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>UIntIterator</Value>
                </ClassName>
                <FunctionName>
                    <Value>nextUInt</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>ULongIterator</Value>
                </ClassName>
                <FunctionName>
                    <Value>nextULong</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>ListIterator</Value>
                </ClassName>
                <FunctionName>
                    <Value>previous</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>MutableListIterator</Value>
                </ClassName>
                <FunctionName>
                    <Pattern>add|set</Pattern>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Map</Value>
                </ClassName>
                <FunctionName>
                    <Value>getEntries</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Map</Value>
                </ClassName>
                <FunctionName>
                    <Value>getOrDefault</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Map.Entry</Value>
                </ClassName>
                <FunctionName>
                    <Value>getValue</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>MutableMap.MutableEntry</Value>
                </ClassName>
                <FunctionName>
                    <Value>setValue</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>MutableMap</Value>
                </ClassName>
                <FunctionName>
                    <Value>putAll</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>listOf|listOfNotNull|mapOf|setOf|setOfNotNull|hashMapOf|hashSetOf|linkedMapOf|linkedSetOf|mutableMapOf|mutableListOf|mutableSetOf|sortedMapOf|sortedSetOf|arrayOf|arrayListOf</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>component(1|2|3|4|5)</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                </NamespaceName>
                <FunctionName>
                    <Pattern>asIterable|asSequence</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.sequences</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>sequenceOf</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.sequences</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>constrainOnce</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                </NamespaceName>
                <FunctionName>
                    <Value>chunked</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>content(Deep)?ToString</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>copyInto</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>copyOf(Range)?</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Pattern>kotlin\.(collections|sequences)</Pattern>
                </NamespaceName>
                <FunctionName>
                    <Pattern>distinct(By)?</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Pattern>kotlin\.(collections|text)</Pattern>
                </NamespaceName>
                <FunctionName>
                    <Pattern>drop|dropLast|dropLastWhile|dropWhile</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.sequences</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>drop(While)?</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                </NamespaceName>
                <FunctionName>
                    <Pattern>elementAt(OrElse|OrNull)?</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>fill</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>setValue</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.collections.MutableMap</ParamType>
                    <WildCard min="3" max="3"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>intersect</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Pattern>kotlin\.(collections|sequences)</Pattern>
                </NamespaceName>
                <FunctionName>
                    <Value>joinTo</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Pattern>kotlin\.(collections|sequences)</Pattern>
                </NamespaceName>
                <FunctionName>
                    <Value>joinToString</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                </NamespaceName>
                <FunctionName>
                    <Pattern>max(OrNull|By|ByOrNull|Of|OfOrNull|With|WithOrNull)?</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                </NamespaceName>
                <FunctionName>
                    <Pattern>min(OrNull|By|ByOrNull|Of|OfOrNull|With|WithOrNull)?</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Pattern>kotlin\.(collections|sequences)</Pattern>
                </NamespaceName>
                <FunctionName>
                    <Pattern>minus(Element)?</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Pattern>kotlin\.(collections|sequences)</Pattern>
                </NamespaceName>
                <FunctionName>
                    <Pattern>plus(Element)?</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>plusAssign</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>putAll</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>remove</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.collections.MutableMap</ParamType>
                    <WildCard min="1" max="1"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>remove(First|Last)(OrNull)?</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Pattern>kotlin\.(collections|sequences)</Pattern>
                </NamespaceName>
                <FunctionName>
                    <Value>requireNoNulls</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>shuffled</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                </NamespaceName>
                <FunctionName>
                    <Pattern>single(OrNull)?</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>slice(Array)?</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>sorted|sortedArray|sortedArrayDescending|sortedArrayWith|sortedBy|sortedByDescending|sortedDescending|sortedWith</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.sequences</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>sorted|sortedBy|sortedByDescending|sortedDescending|sortedWith</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>subtract</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Pattern>kotlin\.(collections|sequences)</Pattern>
                </NamespaceName>
                <FunctionName>
                    <Pattern>sum|sumBy|sumByDouble|sumOf</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>take|takeLast|takeLastWhile|takeWhile</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.sequences</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>take|takeWhile</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>to(Double|Float|UInt|Int|ULong|Long|UShort|Short)Array</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>to(Byte|UByte|Char|Typed)Array</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>toList|toHashSet|toMutableList|toMutableSet|toMutableMap|toPair|toProperties|toSet|toSortedMap|toSortedSet</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.sequences</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>toHashSet|toList|toMutableList|toMutableSet|toSet|toSortedSet</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Pattern>kotlin\.(collections|sequences)</Pattern>
                </NamespaceName>
                <FunctionName>
                    <Value>toCollection</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>toMap</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.collections.MutableMap</ParamType>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>toString</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>toMap</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.collections.MutableMap</ParamType>
                    <WildCard min="1" max="1"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                </NamespaceName>
                <FunctionName>
                    <Pattern>onEach(Indexed)?</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                </NamespaceName>
                <FunctionName>
                    <Value>partition</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>union</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Pattern>kotlin\.(collections|sequences)</Pattern>
                </NamespaceName>
                <FunctionName>
                    <Value>unzip</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                </NamespaceName>
                <FunctionName>
                    <Value>zip</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                </NamespaceName>
                <FunctionName>
                    <Value>zipWithNext</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                </NamespaceName>
                <FunctionName>
                    <Value>windowed</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>withDefault|withIndex</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.sequences</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>withIndex</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>aggregateTo</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                </NamespaceName>
                <FunctionName>
                    <Value>associateByTo</Value>
                </FunctionName>
                <Parameters>
                    <WildCard min="3" max="3"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Pattern>kotlin\.(collections|sequences|text)</Pattern>
                </NamespaceName>
                <FunctionName>
                    <Value>associateByTo</Value>
                </FunctionName>
                <Parameters>
                    <WildCard min="4" max="4"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Pattern>kotlin\.(collections|sequences)</Pattern>
                </NamespaceName>
                <FunctionName>
                    <Pattern>filterIndexedTo|filterIsInstanceTo|filterNotNullTo|filterNotTo|filterTo</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>filterIndexedTo|filterNotTo|filterTo</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Pattern>kotlin\.(collections|sequences)</Pattern>
                </NamespaceName>
                <FunctionName>
                    <Pattern>flatMapTo|foldTo</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>flatMapTo</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>eachCountTo</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Grouping</Value>
                </ClassName>
                <FunctionName>
                    <Value>keyOf</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Grouping</Value>
                </ClassName>
                <FunctionName>
                    <Value>sourceIterator</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>IndexedValue</Value>
                </ClassName>
                <FunctionName>
                    <Value>init^</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>IndexedValue</Value>
                </ClassName>
                <FunctionName>
                    <Pattern>getValue|component2</Pattern>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>getOrElse|getOrNull</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>plus</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.Char</ParamType>
                    <ParamType>kotlin.String</ParamType>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>random(OrNull)?</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>reversed</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>slice</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>sumBy|sumByDouble|sumOf</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>take|takeLast|takeLastWhile|takeWhile</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>withIndex</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>append</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>appendRange</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>(de)?capitalize|lowercase|uppercase</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>concatToString</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>decodeToString|encodeToByteArray</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>delete(At|Range)</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>insertRange</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>intern</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>format</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>ifBlank</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>iterator</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>lines|lineSequence</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>pad(End|Start)</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>prependIndent</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>remove(Prefix|Range|Suffix|Surrounding)</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>repeat</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>replace</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.CharSequence</ParamType>
                    <ParamType>kotlin.text.Regex</ParamType>
                    <ParamType>kotlin.String</ParamType>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>replace</Value>
                </FunctionName>
                <Parameters>
                    <WildCard min="4" max="4"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>replaceAfter|replaceAfterLast|replaceBefore|replaceBeforeLast</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>substring</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>substringAfter|substringAfterLast|substringBefore|substringBeforeLast</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>replaceFirst</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>replaceIndent(ByMargin)?</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>replaceRange</Value>
                </FunctionName>
                <Parameters>
                    <WildCard min="4" max="4"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>replaceRange</Value>
                </FunctionName>
                <Parameters>
                    <WildCard min="3" max="3"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>trim(End|Start|Margin|Indent)?</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>to(Byte|ByteArray|HashSet|List|LowerCase|MutableList|Pattern|Regex|Set|SortedSet|String|TitleCase|UpperCase)</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>to(ByteOrNull|Double|DoubleOrNull|Float|FloatOrNull|Int|IntOrNull|Long|LongOrNull|Short|ShortOrNull|BigDecimal|BigDecimalOrNull|BigInteger|BigIntegerOrNull|UByte|UByteOrNull|UInt|UIntOrNull|ULong|ULongOrNull|UShort|UShortOrNull)</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>toCharArray</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.String</ParamType>
                    <ParamType>kotlin.CharArray</ParamType>
                    <WildCard min="3" max="3"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>toCharArray</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.text.StringBuilder</ParamType>
                    <ParamType>kotlin.CharArray</ParamType>
                    <WildCard min="3" max="3"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>toCharArray</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.String</ParamType>
                    <WildCard min="0" max="2"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>toCollection</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>subSequence</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>set</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>setRange</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>split(ToSequence)?</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>String</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>windowedSequence</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>appendln</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>chunkedSequence</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Regex</Value>
                </ClassName>
                <FunctionName>
                    <Value>init^</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Regex</Value>
                </ClassName>
                <FunctionName>
                    <Value>getPattern</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Regex</Value>
                </ClassName>
                <FunctionName>
                    <Pattern>find(All)?|matchEntire</Pattern>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Regex</Value>
                </ClassName>
                <FunctionName>
                    <Value>replace</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Regex</Value>
                </ClassName>
                <FunctionName>
                    <Value>replace</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.CharSequence</ParamType>
                    <ParamType>kotlin.String</ParamType>
                </Parameters>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Regex</Value>
                </ClassName>
                <FunctionName>
                    <Value>replaceFirst</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.CharSequence</ParamType>
                    <ParamType>kotlin.String</ParamType>
                </Parameters>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Regex</Value>
                </ClassName>
                <FunctionName>
                    <Value>split</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Regex</Value>
                </ClassName>
                <FunctionName>
                    <Value>toPattern</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Regex.Companion</Value>
                </ClassName>
                <FunctionName>
                    <Pattern>escape(Replacement)?|fromLiteral</Pattern>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <ClassName>
                    <Value>MatchGroup</Value>
                </ClassName>
                <FunctionName>
                    <Value>init^</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <ClassName>
                    <Value>MatchGroup</Value>
                </ClassName>
                <FunctionName>
                    <Value>getValue</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <ClassName>
                    <Value>MatchGroupCollection</Value>
                </ClassName>
                <FunctionName>
                    <Value>get</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <ClassName>
                    <Value>MatchResult</Value>
                </ClassName>
                <FunctionName>
                    <Pattern>getGroups|getGroupValues|getDestructured|getValue|next</Pattern>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <ClassName>
                    <Value>MatchResult.Destructured</Value>
                </ClassName>
                <FunctionName>
                    <Pattern>getMatch|component.*|toList</Pattern>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.ranges</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>coerce(AtLeast|AtMost)</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.ranges</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>coerceIn</Value>
                </FunctionName>
                <Parameters>
                    <WildCard min="2" max="2"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.ranges</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>coerceIn</Value>
                </FunctionName>
                <Parameters>
                    <WildCard min="1" max="1"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.properties</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Delegates</Value>
                </ClassName>
                <FunctionName>
                    <Pattern>observable|vetoable</Pattern>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.properties</Value>
                </NamespaceName>
                <ClassName>
                    <Pattern>ReadWriteProperty|ReadOnlyProperty</Pattern>
                </ClassName>
                <FunctionName>
                    <Value>getValue</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.properties</Value>
                </NamespaceName>
                <ClassName>
                    <Value>ReadWriteProperty</Value>
                </ClassName>
                <FunctionName>
                    <Value>setValue</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.properties</Value>
                </NamespaceName>
                <ClassName>
                    <Value>ObservableProperty</Value>
                </ClassName>
                <FunctionName>
                    <Value>init^</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.streams</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>asStream|asSequence|toList</Pattern>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>byteInputStream</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.String</ParamType>
                    <WildCard min="1" max="1"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>inputStream</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>java.io.File</ParamType>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>inputStream</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.ByteArray</ParamType>
                    <WildCard min="0" max="2"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>bufferedReader</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>java.io.File</ParamType>
                    <WildCard min="2" max="2"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>bufferedReader</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>java.io.InputStream</ParamType>
                    <WildCard min="1" max="1"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>bufferedWriter</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>java.io.File</ParamType>
                    <WildCard min="2" max="2"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>bufferedWriter</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>java.io.OutputStream</ParamType>
                    <WildCard min="1" max="1"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>outputStream</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>java.io.File</ParamType>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>printWriter</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>java.io.File</ParamType>
                    <WildCard min="1" max="1"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>reader</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>java.io.File</ParamType>
                    <WildCard min="1" max="1"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>reader</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>java.io.InputStream</ParamType>
                    <WildCard min="1" max="1"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>reader</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.String</ParamType>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>writer</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>java.io.File</ParamType>
                    <WildCard min="1" max="1"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>writer</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>java.io.OutputStream</ParamType>
                    <WildCard min="1" max="1"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>buffered</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>java.io.InputStream</ParamType>
                    <WildCard min="1" max="1"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>buffered</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>java.io.OutputStream</ParamType>
                    <WildCard min="1" max="1"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>buffered</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>java.io.Reader</ParamType>
                    <WildCard min="1" max="1"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>buffered</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>java.io.Writer</ParamType>
                    <WildCard min="1" max="1"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>readBytes</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>java.io.InputStream</ParamType>
                    <WildCard min="0" max="1"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>readText</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>java.io.Reader</ParamType>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>readLines</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>java.io.Reader</ParamType>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>lineSequence</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>java.io.BufferedReader</ParamType>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>normalize</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>java.io.File</ParamType>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>toRelativeString</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>java.io.File</ParamType>
                    <ParamType>java.io.File</ParamType>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>getExtension</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>java.io.File</ParamType>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>getInvariantSeparatorsPath</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>java.io.File</ParamType>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>getNameWithoutExtension</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>java.io.File</ParamType>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>relativeTo(OrNull|OrSelf)?</Pattern>
                </FunctionName>
                <Parameters>
                    <ParamType>java.io.File</ParamType>
                    <ParamType>java.io.File</ParamType>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>resolve(Sibling)?</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>copyTo</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>java.io.InputStream</ParamType>
                    <ParamType>java.io.OutputStream</ParamType>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>copyTo</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>java.io.Reader</ParamType>
                    <ParamType>java.io.Writer</ParamType>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>iterator</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>java.io.BufferedInputStream</ParamType>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <ClassName>
                    <Value>FileTreeWalk</Value>
                </ClassName>
                <FunctionName>
                    <Value>maxDepth</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <ClassName>
                    <Value>FileTreeWalk</Value>
                </ClassName>
                <FunctionName>
                    <Value>onEnter</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <ClassName>
                    <Value>FileTreeWalk</Value>
                </ClassName>
                <FunctionName>
                    <Value>onFail</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <ClassName>
                    <Value>FileTreeWalk</Value>
                </ClassName>
                <FunctionName>
                    <Value>onLeave</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>read(Bytes|Text)</Pattern>
                </FunctionName>
                <Parameters>
                    <ParamType>java.net.URL</ParamType>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.random</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>nextUBytes</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.random.Random</ParamType>
                    <ParamType>kotlin.UByteArray</ParamType>
                    <WildCard min="0" max="2"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.random</Value>
                </NamespaceName>
                <ClassName>
                    <Pattern>Random(\.Default)?</Pattern>
                </ClassName>
                <FunctionName>
                    <Value>nextBytes</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.ByteArray</ParamType>
                    <WildCard min="0" max="2"/>
                </Parameters>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.random</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>(asJavaRandom|asKotlinRandom)</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Pattern>kotlin\.(text|collections|sequences)</Pattern>
                </NamespaceName>
                <FunctionName>
                    <Value>associateBy</Value>
                </FunctionName>
                <Parameters>
                    <WildCard min="2" max="2"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Pattern>kotlin\.(text|collections|sequences)</Pattern>
                </NamespaceName>
                <FunctionName>
                    <Pattern>associate(With)?To</Pattern>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines.channels</Value>
                </NamespaceName>
                <ClassName>
                    <Value>SendChannel</Value>
                </ClassName>
                <FunctionName>
                    <Pattern>offer|send</Pattern>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines.flow</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>consumeAsFlow|receiveAsFlow</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>awaitAll</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>awaitAll</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.collections.Collection</ParamType>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines.channels</Value>
                </NamespaceName>
                <ClassName>
                    <Value>ReceiveChannel</Value>
                </ClassName>
                <FunctionName>
                    <Pattern>poll|receive</Pattern>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines.channels</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>receiveOrNull</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines.channels</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>sendBlocking</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines.channels</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>toList</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlinx.coroutines.channels.ReceiveChannel</ParamType>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines.channels</Value>
                </NamespaceName>
                <ClassName>
                    <Value>ChannelIterator</Value>
                </ClassName>
                <FunctionName>
                    <Value>next</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines.channels</Value>
                </NamespaceName>
                <ClassName>
                    <Value>BroadcastChannel</Value>
                </ClassName>
                <FunctionName>
                    <Value>openSubscription</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Pattern>kotlinx\.coroutines\.(channels|flow)</Pattern>
                </NamespaceName>
                <FunctionName>
                    <Value>asFlow</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines.channels</Value>
                </NamespaceName>
                <ClassName>
                    <Value>ConflatedBroadcastChannel</Value>
                </ClassName>
                <FunctionName>
                    <Pattern>getValue|getValueOrNull</Pattern>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines.flow</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>combine(Transform)?</Pattern>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlinx.coroutines.flow.Flow</ParamType>
                    <ParamType>kotlinx.coroutines.flow.Flow</ParamType>
                    <WildCard min="1" max="1"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines.flow</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>conflate</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlinx.coroutines.flow.Flow</ParamType>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines.flow</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>debounce</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlinx.coroutines.flow.Flow</ParamType>
                    <WildCard min="1" max="1"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines.flow</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>distinctUntilChanged(By)?</Pattern>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlinx.coroutines.flow.Flow</ParamType>
                    <WildCard min="0" max="1"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines.flow</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>drop(While)?</Pattern>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlinx.coroutines.flow.Flow</ParamType>
                    <WildCard min="1" max="1"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines.flow</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>filter|filterIsInstance|filterNot|filterNotNull</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines.flow</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>first(OrNull)?</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines.flow</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>flatMap(Concat|Latest|Merge)</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines.flow</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>flatten(Concat|Merge)</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines.flow</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>flowOf</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines.flow</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>flowOn</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines.flow</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>fold</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines.flow</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>scan</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines.flow</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>single(OrNull)?</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines.flow</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>take(While)?</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines.flow</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>launchIn</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines.flow</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>merge</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines.flow</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>sample</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines.channels</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>broadcast</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlinx.coroutines.channels.ReceiveChannel</ParamType>
                    <WildCard min="2" max="2"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Deferred</Value>
                </ClassName>
                <FunctionName>
                    <Value>await</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Deferred</Value>
                </ClassName>
                <FunctionName>
                    <Value>getCompleted</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>CompletableDeferred</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>completeWith</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>(Supervisor)?Job</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines</Value>
                </NamespaceName>
                <ClassName>
                    <Value>CompletableDeferred</Value>
                </ClassName>
                <FunctionName>
                    <Value>complete</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines</Value>
                </NamespaceName>
                <ClassName>
                    <Value>CompletableDeferred</Value>
                </ClassName>
                <FunctionName>
                    <Value>completeWith</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines.flow</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>broadcastIn</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlinx.coroutines.flow.Flow</ParamType>
                    <WildCard min="2" max="2"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines.flow</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>buffer</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlinx.coroutines.flow.Flow</ParamType>
                    <WildCard min="1" max="1"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines.flow</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>cancellable</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlinx.coroutines.flow.Flow</ParamType>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines.flow</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>catch</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlinx.coroutines.flow.Flow</ParamType>
                    <WildCard min="1" max="1"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines.flow</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>produceIn</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines.flow</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>to(Collection|List|Set)</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines.flow</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>withIndex</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.coroutines</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>resume(WithException)?</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines</Value>
                </NamespaceName>
                <ClassName>
                    <Value>CancellableContinuation</Value>
                </ClassName>
                <FunctionName>
                    <Value>resume</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>asContextElement</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.concurrent</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>getOrSet</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Pattern>kotlin.reflect|kotlin.reflect.full</Pattern>
                </NamespaceName>
                <FunctionName>
                    <Pattern>cast|safeCast</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.reflect</Value>
                </NamespaceName>
                <ClassName>
                    <Value>KClass</Value>
                </ClassName>
                <FunctionName>
                    <Value>getObjectInstance</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.jvm</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>getKotlin|getJava|getJavaClass|getJavaObjectType|getJavaPrimitiveType|getAnnotationClass</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>error</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>printStackTrace</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.Throwable</ParamType>
                    <WildCard min="1" max="1"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>print(ln)?</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.text</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>replace|appendln</Pattern>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>appendBytes|appendText|writeBytes|writeText</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>resolve(Sibling)?</Pattern>
                </FunctionName>
                <Parameters>
                    <ParamType>java.io.File</ParamType>
                    <ParamType>kotlin.String</ParamType>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>createTemp(Dir|File)</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.random</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>Random</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <ClassName>
                    <Value>String</Value>
                </ClassName>
                <FunctionName>
                    <Value>equals</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Throwable</Value>
                </ClassName>
                <FunctionName>
                    <Value>getMessage</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>stackTraceToString</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.Throwable</ParamType>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>getStackTrace|getSuppressedExceptions</Pattern>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.Throwable</ParamType>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>lineSequence</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>readLines</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>java.io.File</ParamType>
                    <WildCard min="1" max="1"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>readBytes</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>java.io.File</ParamType>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>readText</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>java.io.File</ParamType>
                    <WildCard min="1" max="1"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>readLine</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.reflect</Value>
                </NamespaceName>
                <ClassName>
                    <Value>KClass</Value>
                </ClassName>
                <FunctionName>
                    <Pattern>getQualifiedName|getSimpleName</Pattern>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>printStackTrace</Value>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.io</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>endsWith|startsWith|copyRecursively|deleteRecursively|isRooted</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.random</Value>
                </NamespaceName>
                <ClassName>
                    <Pattern>Random(\.Default)?</Pattern>
                </ClassName>
                <FunctionName>
                    <Pattern>next.*</Pattern>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.random</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>next.*</Pattern>
                </FunctionName>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines.sync</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Mutex</Value>
                </ClassName>
                <FunctionName>
                    <Value>tryLock</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlinx.coroutines.sync</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Semaphore</Value>
                </ClassName>
                <FunctionName>
                    <Value>tryAcquire</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <ClassName>
                    <Pattern>(Boolean|Byte|Char|Double|Float|Int|Long|Short)?Array</Pattern>
                </ClassName>
                <FunctionName>
                    <Value>set</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="false"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin</Value>
                </NamespaceName>
                <ClassName>
                    <Pattern>(Boolean|Byte|Char|Double|Float|Int|Long|Short)?Array</Pattern>
                </ClassName>
                <FunctionName>
                    <Value>get</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="false"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>MutableList</Value>
                </ClassName>
                <FunctionName>
                    <Value>set</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="false"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>List</Value>
                </ClassName>
                <FunctionName>
                    <Value>get</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="false"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>MutableList</Value>
                </ClassName>
                <FunctionName>
                    <Value>removeAt</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="false"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>getOrElse</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.collections.List</ParamType>
                    <WildCard min="2" max="2"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>MutableMap</Value>
                </ClassName>
                <FunctionName>
                    <Value>put</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="false"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>set</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.collections.MutableMap</ParamType>
                    <WildCard min="2" max="2"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Map</Value>
                </ClassName>
                <FunctionName>
                    <Pattern>get(OrDefault)?</Pattern>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="false"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>MutableMap</Value>
                </ClassName>
                <FunctionName>
                    <Value>remove</Value>
                </FunctionName>
                <Parameters>
                    <WildCard min="1" max="1"/>
                </Parameters>
                <ApplyTo implements="true" overrides="true" extends="false"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>getValue</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.collections.Map</ParamType>
                    <WildCard min="1" max="1"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Pattern>getOr(Else|Default)</Pattern>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.collections.Map</ParamType>
                    <WildCard min="2" max="2"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>get</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.collections.Map</ParamType>
                    <WildCard min="2" max="2"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>getOrPut</Value>
                </FunctionName>
                <Parameters>
                    <ParamType>kotlin.collections.MutableMap</ParamType>
                    <WildCard min="2" max="2"/>
                </Parameters>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Map</Value>
                </ClassName>
                <FunctionName>
                    <Value>getValues</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.collections</Value>
                </NamespaceName>
                <ClassName>
                    <Value>Map</Value>
                </ClassName>
                <FunctionName>
                    <Value>getKeys</Value>
                </FunctionName>
                <ApplyTo implements="true" overrides="true" extends="true"/>
            </FunctionIdentifier>
            <FunctionIdentifier formatVersion="20.1">
                <NamespaceName>
                    <Value>kotlin.system</Value>
                </NamespaceName>
                <FunctionName>
                    <Value>exitProcess</Value>
                </FunctionName>
            </FunctionIdentifier>
        </Coverage>
        <ScriptDefinitions/>
    </Rules>
    <Masks revision="0">
        <mask:Mask builtin="true" name="Targeted">
            <mask:Exclusion>
                <mask:Attribute name="inputsource" value="Command Line Arguments"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="inputsource" value="Windows Registry"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="inputsource" value="Environment Variables"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="inputsource" value="Stream"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="inputsource" value="File System"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="inputsource" value="Standard Input Stream"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="System Information Leak"/>
                <mask:Attribute name="analyzer" value="dataflow"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="Password Management"/>
                <mask:Attribute name="subcategory" value="Hardcoded Password"/>
                <mask:Attribute name="analyzer" value="structural"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="Poor Logging Practice"/>
                <mask:Attribute name="subcategory" value="Use of a System Output Stream"/>
                <mask:Attribute name="analyzer" value="structural"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="System Information Leak"/>
                <mask:Attribute name="subcategory" value="External"/>
                <mask:Attribute name="analyzer" value="dataflow"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="Denial of Service"/>
                <mask:Attribute name="subcategory" value="StringBuilder"/>
                <mask:Attribute name="analyzer" value="dataflow"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="Denial of Service"/>
                <mask:Attribute name="subcategory" value="Regular Expression"/>
                <mask:Attribute name="analyzer" value="dataflow"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="System Information Leak"/>
                <mask:Attribute name="subcategory" value="Internal"/>
                <mask:Attribute name="analyzer" value="dataflow"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="Path Manipulation"/>
                <mask:Attribute name="analyzer" value="dataflow"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="Server-Side Request Forgery"/>
                <mask:Attribute name="analyzer" value="dataflow"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="Trust Boundary Violation"/>
                <mask:Attribute name="analyzer" value="dataflow"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="Cross-Site Scripting"/>
                <mask:Attribute name="subcategory" value="Poor Validation"/>
                <mask:Attribute name="analyzer" value="dataflow"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="Insecure SSL"/>
                <mask:Attribute name="subcategory" value="Overly Broad Certificate Trust"/>
                <mask:Attribute name="analyzer" value="dataflow"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="Insecure Randomness"/>
                <mask:Attribute name="subcategory" value="User-Controlled Seed"/>
                <mask:Attribute name="analyzer" value="dataflow"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="Code Correctness"/>
                <mask:Attribute name="subcategory" value="Erroneous Class Compare"/>
                <mask:Attribute name="analyzer" value="dataflow"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="System Information Leak"/>
                <mask:Attribute name="analyzer" value="semantic"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="Unchecked Return Value"/>
                <mask:Attribute name="analyzer" value="semantic"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="Insecure Randomness"/>
                <mask:Attribute name="subcategory" value="Hardcoded Seed"/>
                <mask:Attribute name="analyzer" value="semantic"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="Insecure Randomness"/>
                <mask:Attribute name="analyzer" value="semantic"/>
            </mask:Exclusion>
            <mask:Description><![CDATA[This setting provides the source code analyzer with rules within categories that have been proven to be high priority issues across multiple industries and within a variety of environments.  They should be used to discover a limited set of well-known, critical security issues.]]></mask:Description>
        </mask:Mask>
        <mask:Mask builtin="true" default="true" name="Broad">
            <mask:Description><![CDATA[This setting provides the source code analyzer with the most comprehensive set of rules.  It should be used to discover a broad set of security issues to be audited.]]></mask:Description>
        </mask:Mask>
        <mask:Mask builtin="true" name="Medium">
            <mask:Exclusion>
                <mask:Attribute name="inputsource" value="Command Line Arguments"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="inputsource" value="Windows Registry"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="inputsource" value="Environment Variables"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="inputsource" value="Stream"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="inputsource" value="File System"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="inputsource" value="Standard Input Stream"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="System Information Leak"/>
                <mask:Attribute name="analyzer" value="dataflow"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="Password Management"/>
                <mask:Attribute name="subcategory" value="Hardcoded Password"/>
                <mask:Attribute name="analyzer" value="structural"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="Poor Logging Practice"/>
                <mask:Attribute name="subcategory" value="Use of a System Output Stream"/>
                <mask:Attribute name="analyzer" value="structural"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="System Information Leak"/>
                <mask:Attribute name="subcategory" value="External"/>
                <mask:Attribute name="analyzer" value="dataflow"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="Denial of Service"/>
                <mask:Attribute name="subcategory" value="StringBuilder"/>
                <mask:Attribute name="analyzer" value="dataflow"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="System Information Leak"/>
                <mask:Attribute name="subcategory" value="Internal"/>
                <mask:Attribute name="analyzer" value="dataflow"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="Path Manipulation"/>
                <mask:Attribute name="analyzer" value="dataflow"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="Trust Boundary Violation"/>
                <mask:Attribute name="analyzer" value="dataflow"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="Cross-Site Scripting"/>
                <mask:Attribute name="subcategory" value="Poor Validation"/>
                <mask:Attribute name="analyzer" value="dataflow"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="Insecure Randomness"/>
                <mask:Attribute name="subcategory" value="User-Controlled Seed"/>
                <mask:Attribute name="analyzer" value="dataflow"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="Code Correctness"/>
                <mask:Attribute name="subcategory" value="Erroneous Class Compare"/>
                <mask:Attribute name="analyzer" value="dataflow"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="System Information Leak"/>
                <mask:Attribute name="analyzer" value="semantic"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="Unchecked Return Value"/>
                <mask:Attribute name="analyzer" value="semantic"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="Insecure Randomness"/>
                <mask:Attribute name="subcategory" value="Hardcoded Seed"/>
                <mask:Attribute name="analyzer" value="semantic"/>
            </mask:Exclusion>
            <mask:Exclusion>
                <mask:Attribute name="category" value="Insecure Randomness"/>
                <mask:Attribute name="analyzer" value="semantic"/>
            </mask:Exclusion>
            <mask:Description><![CDATA[This setting provides the source code analyzer with rules that strike a balance between producing results that detail all potential issues and a targeted set of possible vulnerabilities.]]></mask:Description>
        </mask:Mask>
    </Masks>
    <Localization>
        <Mapping>
            <KeyString>System Information Leak</KeyString>
            <LocalString>System Information Leak</LocalString>
        </Mapping>
        <Mapping>
            <KeyString>Privacy Violation</KeyString>
            <LocalString>Privacy Violation</LocalString>
        </Mapping>
        <Mapping>
            <KeyString>Password Management</KeyString>
            <LocalString>Password Management</LocalString>
        </Mapping>
        <Mapping>
            <KeyString>Hardcoded Password</KeyString>
            <LocalString>Hardcoded Password</LocalString>
        </Mapping>
        <Mapping>
            <KeyString>Poor Logging Practice</KeyString>
            <LocalString>Poor Logging Practice</LocalString>
        </Mapping>
        <Mapping>
            <KeyString>Use of a System Output Stream</KeyString>
            <LocalString>Use of a System Output Stream</LocalString>
        </Mapping>
        <Mapping>
            <KeyString>External</KeyString>
            <LocalString>External</LocalString>
        </Mapping>
        <Mapping>
            <KeyString>Denial of Service</KeyString>
            <LocalString>Denial of Service</LocalString>
        </Mapping>
        <Mapping>
            <KeyString>StringBuilder</KeyString>
            <LocalString>StringBuilder</LocalString>
        </Mapping>
        <Mapping>
            <KeyString>Regular Expression</KeyString>
            <LocalString>Regular Expression</LocalString>
        </Mapping>
        <Mapping>
            <KeyString>Internal</KeyString>
            <LocalString>Internal</LocalString>
        </Mapping>
        <Mapping>
            <KeyString>Formula Injection</KeyString>
            <LocalString>Formula Injection</LocalString>
        </Mapping>
        <Mapping>
            <KeyString>Path Manipulation</KeyString>
            <LocalString>Path Manipulation</LocalString>
        </Mapping>
        <Mapping>
            <KeyString>Server-Side Request Forgery</KeyString>
            <LocalString>Server-Side Request Forgery</LocalString>
        </Mapping>
        <Mapping>
            <KeyString>Trust Boundary Violation</KeyString>
            <LocalString>Trust Boundary Violation</LocalString>
        </Mapping>
        <Mapping>
            <KeyString>Cross-Site Scripting</KeyString>
            <LocalString>Cross-Site Scripting</LocalString>
        </Mapping>
        <Mapping>
            <KeyString>Poor Validation</KeyString>
            <LocalString>Poor Validation</LocalString>
        </Mapping>
        <Mapping>
            <KeyString>Inter-Component Communication</KeyString>
            <LocalString>Inter-Component Communication</LocalString>
        </Mapping>
        <Mapping>
            <KeyString>Reflected</KeyString>
            <LocalString>Reflected</LocalString>
        </Mapping>
        <Mapping>
            <KeyString>Persistent</KeyString>
            <LocalString>Persistent</LocalString>
        </Mapping>
        <Mapping>
            <KeyString>Insecure SSL</KeyString>
            <LocalString>Insecure SSL</LocalString>
        </Mapping>
        <Mapping>
            <KeyString>Overly Broad Certificate Trust</KeyString>
            <LocalString>Overly Broad Certificate Trust</LocalString>
        </Mapping>
        <Mapping>
            <KeyString>Insecure Randomness</KeyString>
            <LocalString>Insecure Randomness</LocalString>
        </Mapping>
        <Mapping>
            <KeyString>User-Controlled Seed</KeyString>
            <LocalString>User-Controlled Seed</LocalString>
        </Mapping>
        <Mapping>
            <KeyString>Code Correctness</KeyString>
            <LocalString>Code Correctness</LocalString>
        </Mapping>
        <Mapping>
            <KeyString>Erroneous Class Compare</KeyString>
            <LocalString>Erroneous Class Compare</LocalString>
        </Mapping>
        <Mapping>
            <KeyString>Unchecked Return Value</KeyString>
            <LocalString>Unchecked Return Value</LocalString>
        </Mapping>
        <Mapping>
            <KeyString>Hardcoded Seed</KeyString>
            <LocalString>Hardcoded Seed</LocalString>
        </Mapping>
    </Localization>
</RulePack>
         <LocalString>Overly Broad Certificate Trust</LocalString>
        </Mapping>
        <Mapping>
            <KeyString>Insecure Randomness</KeyString>
            <LocalString>Insecure Randomness</LocalString>
        </Mapping>
        <Mapping>
            <KeyString>User-Controlled Seed</KeyString>
            <LocalString>User-Controlled Seed</LocalString>
        </Mapping>
      